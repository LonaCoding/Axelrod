>>> Output of Elitist Selection (Modified) Moran Process <<<
------------------------------------------------------------
Experiment parameters:
1. Player Agents: 23
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
2. newFileNameNumber for plot:           83
3. (Number of) turns:                    200
4. Starting seed (firstSeed):            12901
5. iterations:                           20
6. splitThresholdPercentile:             25%
7. ConvergeScoreGenLimit:                100
8. displayOutput:                        True
9. createPlot:                           2
10.PlotFileType:                         PNG
11.(use) csv (as output's file format):  False
12.testing (mode):                       False
------------------------------------------------------------
######################################
~~~ Scores: ~~~
[61.475,
 56.67,
 59.309999999999995,
 54.7,
 52.10999999999999,
 54.230000000000004,
 53.81999999999998,
 37.3,
 44.535000000000004,
 29.720000000000002,
 47.945,
 50.73499999999999,
 45.60499999999999,
 52.394999999999996,
 56.74999999999999,
 37.14,
 51.894999999999996,
 47.0,
 45.59,
 44.07000000000001,
 35.315000000000005,
 55.64,
 53.47]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.0625
Upper: 54.465
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.345,
 65.215,
 61.83,
 57.795,
 57.34,
 59.399999999999984,
 65.6,
 63.22,
 65.215,
 54.9,
 54.78999999999999,
 53.169999999999995,
 59.485,
 58.04,
 61.83,
 56.56999999999999,
 52.225,
 50.62000000000001,
 57.82,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.525
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.99,
 65.69500000000001,
 58.714999999999996,
 61.95,
 61.545,
 58.45499999999998,
 65.605,
 64.93,
 65.695,
 65.605,
 64.97999999999999,
 65.69500000000001,
 62.595,
 58.67999999999999,
 58.715,
 61.635000000000005,
 65.605,
 65.205,
 58.74,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 17]
upper:           [2, 9, 12, 22, 7, 10]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 66.15,
 65.92,
 65.91999999999999,
 64.855,
 64.80000000000001,
 65.91999999999999,
 65.84,
 66.22,
 65.91999999999999,
 65.84,
 66.16999999999999,
 65.92,
 64.13999999999999,
 65.91999999999999,
 65.91999999999999,
 64.13999999999999,
 65.84,
 66.25,
 65.84,
 64.13999999999999,
 64.14,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.3475
Upper: 65.92
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [22]
upper:           [1, 8, 11, 18, 2, 12]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 2
killed = 20
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.03999999999999,
 65.83999999999999,
 65.83999999999997,
 65.03999999999999,
 65.03999999999999,
 65.84,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.04,
 65.83999999999997,
 65.83999999999999,
 65.03999999999999,
 65.68,
 65.03999999999999,
 65.68,
 65.83999999999997,
 65.83999999999999,
 65.83999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.03999999999999
Upper: 65.83999999999999
====================================
lower list size: 0
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 4, 11, 16]
lower threshold: [5, 18]
....................................
upper threshold: [15, 22]
upper:           [6, 12, 21, 2, 9]
====================================
cloned = 6
killed = 8
cloned = 12
killed = 1
cloned = 21
killed = 4
cloned = 2
killed = 11
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.94,
 65.33999999999997,
 65.94,
 65.88,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.94,
 65.88,
 65.33999999999997,
 65.88,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 13, 18, 17, 7]
lower threshold: [0, 10, 19]
....................................
upper threshold: [1, 2, 4, 6, 11, 16, 20, 21, 22]
upper:           [3, 12, 8, 15, 9, 14]
====================================
cloned = 3
killed = 5
cloned = 12
killed = 13
cloned = 8
killed = 18
cloned = 15
killed = 17
cloned = 9
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 8, 11, 10]
lower threshold: [1, 3, 4, 7, 9, 15, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 5, 6, 14, 13, 12]
====================================
cloned = 17
killed = 0
cloned = 5
killed = 2
cloned = 6
killed = 8
cloned = 14
killed = 11
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 12, 5, 20, 19]
lower threshold: [0, 1, 2, 3, 6, 9, 11, 14, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 8, 7, 4, 18, 10]
====================================
cloned = 13
killed = 21
cloned = 8
killed = 12
cloned = 7
killed = 5
cloned = 4
killed = 20
cloned = 18
killed = 19
Trial run 1/seed 12901:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.475,
  56.67,
  59.309999999999995,
  54.7,
  52.10999999999999,
  54.230000000000004,
  53.81999999999998,
  37.3,
  44.535000000000004,
  29.720000000000002,
  47.945,
  50.73499999999999,
  45.60499999999999,
  52.394999999999996,
  56.74999999999999,
  37.14,
  51.894999999999996,
  47.0,
  45.59,
  44.07000000000001,
  35.315000000000005,
  55.64,
  53.47],
 [65.60000000000001,
  63.345,
  65.215,
  61.83,
  57.795,
  57.34,
  59.399999999999984,
  65.6,
  63.22,
  65.215,
  54.9,
  54.78999999999999,
  53.169999999999995,
  59.485,
  58.04,
  61.83,
  56.56999999999999,
  52.225,
  50.62000000000001,
  57.82,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.99,
  65.69500000000001,
  58.714999999999996,
  61.95,
  61.545,
  58.45499999999998,
  65.605,
  64.93,
  65.695,
  65.605,
  64.97999999999999,
  65.69500000000001,
  62.595,
  58.67999999999999,
  58.715,
  61.635000000000005,
  65.605,
  65.205,
  58.74,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.84,
  66.15,
  65.92,
  65.91999999999999,
  64.855,
  64.80000000000001,
  65.91999999999999,
  65.84,
  66.22,
  65.91999999999999,
  65.84,
  66.16999999999999,
  65.92,
  64.13999999999999,
  65.91999999999999,
  65.91999999999999,
  64.13999999999999,
  65.84,
  66.25,
  65.84,
  64.13999999999999,
  64.14,
  65.92],
 [65.68,
  65.03999999999999,
  65.83999999999999,
  65.83999999999997,
  65.03999999999999,
  65.03999999999999,
  65.84,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.04,
  65.83999999999997,
  65.83999999999999,
  65.03999999999999,
  65.68,
  65.03999999999999,
  65.68,
  65.83999999999997,
  65.83999999999999,
  65.83999999999999],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.94,
  65.33999999999997,
  65.94,
  65.88,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.94,
  65.88,
  65.33999999999997,
  65.88,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.345000000000006,
 55.68,
 59.339999999999996,
 54.935,
 52.06500000000001,
 54.27,
 52.91499999999999,
 36.78,
 44.835,
 28.29500000000001,
 48.06,
 50.78499999999999,
 45.64,
 52.379999999999995,
 55.97999999999999,
 36.78,
 51.480000000000004,
 48.945,
 46.474999999999994,
 41.940000000000005,
 34.80500000000001,
 55.419999999999995,
 53.44499999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.2375
Upper: 54.602500000000006
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.24000000000001,
 65.215,
 61.83,
 57.614999999999995,
 57.34,
 59.07499999999998,
 65.6,
 63.02000000000001,
 65.215,
 54.9,
 54.78999999999999,
 53.029999999999994,
 59.485,
 58.01,
 61.83,
 56.56999999999999,
 52.265,
 50.94000000000001,
 58.029999999999994,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.425000000000004
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.08,
 65.69500000000001,
 58.714999999999996,
 61.60000000000001,
 61.545,
 58.87499999999998,
 65.605,
 64.615,
 65.695,
 65.605,
 65.01999999999998,
 65.69500000000001,
 62.595,
 58.71999999999999,
 58.715,
 61.635000000000005,
 65.605,
 65.16,
 58.75,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [7, 17]
upper:           [2, 9, 12, 22, 0, 10]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 66.185,
 65.92,
 65.91999999999999,
 64.71,
 64.80000000000001,
 65.91999999999999,
 65.84,
 66.175,
 65.91999999999999,
 65.84,
 66.35,
 65.92,
 64.13999999999999,
 65.91999999999999,
 65.91999999999999,
 64.13999999999999,
 65.84,
 66.25999999999999,
 65.84,
 64.13999999999999,
 64.14,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.32000000000001
Upper: 65.92
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [22]
upper:           [1, 8, 11, 18, 12, 2]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 12
killed = 20
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.03999999999999,
 65.83999999999999,
 65.83999999999997,
 65.03999999999999,
 65.03999999999999,
 65.84,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.04,
 65.83999999999997,
 65.83999999999999,
 65.03999999999999,
 65.68,
 65.03999999999999,
 65.68,
 65.83999999999997,
 65.83999999999999,
 65.83999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.03999999999999
Upper: 65.83999999999999
====================================
lower list size: 0
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 4, 11, 5]
lower threshold: [16, 18]
....................................
upper threshold: [21, 22]
upper:           [6, 12, 9, 15, 2]
====================================
cloned = 6
killed = 8
cloned = 12
killed = 1
cloned = 9
killed = 4
cloned = 15
killed = 11
cloned = 2
killed = 5
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.94,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.33999999999997,
 65.88,
 65.33999999999999,
 65.88,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 18, 7, 0]
lower threshold: [10, 17, 19]
....................................
upper threshold: [2, 3, 4, 8, 11, 12, 14, 20, 22]
upper:           [15, 6, 21, 9, 5, 1]
====================================
cloned = 15
killed = 13
cloned = 6
killed = 16
cloned = 21
killed = 18
cloned = 9
killed = 7
cloned = 5
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 9, 4, 21]
lower threshold: [0, 1, 5, 6, 7, 8, 10, 12, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 15, 18, 11, 2, 13]
====================================
cloned = 16
killed = 3
cloned = 15
killed = 14
cloned = 18
killed = 9
cloned = 11
killed = 4
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 5, 10, 16, 0]
lower threshold: [1, 3, 4, 7, 8, 11, 13, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 18, 6, 12, 14, 20]
====================================
cloned = 2
killed = 9
cloned = 18
killed = 5
cloned = 6
killed = 10
cloned = 12
killed = 16
cloned = 14
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 2, 6, 7, 9]
lower threshold: [1, 4, 5, 8, 10, 11, 13, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 16, 0, 12, 14, 3]
====================================
cloned = 18
killed = 15
cloned = 16
killed = 2
cloned = 0
killed = 6
cloned = 12
killed = 7
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 11, 18, 12]
lower threshold: [1, 2, 4, 7, 10, 13, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 3, 8, 15, 14, 5]
====================================
cloned = 6
killed = 0
cloned = 3
killed = 9
cloned = 8
killed = 11
cloned = 15
killed = 18
cloned = 14
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 5, 21, 13]
lower threshold: [0, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 3, 1, 7, 2, 6]
====================================
cloned = 19
killed = 10
cloned = 3
killed = 4
cloned = 1
killed = 5
cloned = 7
killed = 21
cloned = 2
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 15, 17, 21]
lower threshold: [0, 1, 2, 4, 5, 7, 8, 12, 14, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 19, 3, 6, 20, 13]
====================================
cloned = 9
killed = 11
cloned = 19
killed = 10
cloned = 3
killed = 15
cloned = 6
killed = 17
cloned = 20
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 8, 6, 1]
lower threshold: [0, 3, 4, 9, 10, 11, 12, 14, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 17, 5, 13, 16, 19]
====================================
cloned = 2
killed = 21
cloned = 17
killed = 7
cloned = 5
killed = 8
cloned = 13
killed = 6
cloned = 16
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 11, 14, 21, 10]
lower threshold: [1, 2, 3, 4, 6, 7, 12, 13, 15, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 5, 8, 9, 19, 20]
====================================
cloned = 0
killed = 16
cloned = 5
killed = 11
cloned = 8
killed = 14
cloned = 9
killed = 21
cloned = 19
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 8, 17, 16, 9]
lower threshold: [1, 2, 4, 5, 7, 12, 13, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 10, 3, 15, 6, 11]
====================================
cloned = 0
killed = 14
cloned = 10
killed = 8
cloned = 3
killed = 17
cloned = 15
killed = 16
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 2, 4, 15, 6]
lower threshold: [0, 1, 9, 11, 12, 13, 14, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 18, 3, 8, 7, 10]
====================================
cloned = 5
killed = 20
cloned = 18
killed = 2
cloned = 3
killed = 4
cloned = 8
killed = 15
cloned = 7
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 6, 4, 1]
lower threshold: [0, 2, 7, 8, 9, 10, 12, 13, 14, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 18, 3, 21, 17, 5]
====================================
cloned = 16
killed = 15
cloned = 18
killed = 11
cloned = 3
killed = 6
cloned = 21
killed = 4
cloned = 17
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 11, 10, 9]
lower threshold: [0, 2, 6, 7, 12, 13, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 5, 18, 19, 14, 3]
====================================
cloned = 4
killed = 8
cloned = 5
killed = 1
cloned = 18
killed = 11
cloned = 19
killed = 10
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 0, 18, 12, 11]
lower threshold: [1, 2, 3, 5, 7, 8, 14, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 6, 10, 19, 4, 13]
====================================
cloned = 9
killed = 15
cloned = 6
killed = 0
cloned = 10
killed = 18
cloned = 19
killed = 12
cloned = 4
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 1, 17, 21, 9]
lower threshold: [0, 2, 5, 6, 7, 8, 10, 12, 13, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 20, 3, 19, 14, 4]
====================================
cloned = 11
killed = 15
cloned = 20
killed = 1
cloned = 3
killed = 17
cloned = 19
killed = 21
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 20, 14, 17]
lower threshold: [1, 2, 3, 4, 5, 6, 7, 10, 12, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 9, 8, 19, 16, 0]
====================================
cloned = 15
killed = 11
cloned = 9
killed = 13
cloned = 8
killed = 20
cloned = 19
killed = 14
cloned = 16
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 16, 20, 13]
lower threshold: [1, 3, 4, 5, 7, 8, 15, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 10, 6, 9, 11, 12]
====================================
cloned = 14
killed = 0
cloned = 10
killed = 2
cloned = 6
killed = 16
cloned = 9
killed = 20
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 19, 21, 4, 14]
lower threshold: [0, 1, 2, 3, 6, 7, 9, 12, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 8, 17, 10, 11, 13]
====================================
cloned = 5
killed = 15
cloned = 8
killed = 19
cloned = 17
killed = 21
cloned = 10
killed = 4
cloned = 11
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 17, 19, 15, 9]
lower threshold: [0, 1, 2, 3, 6, 7, 10, 11, 13, 14, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 8, 5, 18, 21, 4]
====================================
cloned = 12
killed = 16
cloned = 8
killed = 17
cloned = 5
killed = 19
cloned = 18
killed = 15
cloned = 21
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 8, 12, 20, 5]
lower threshold: [0, 2, 3, 6, 7, 9, 11, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 13, 10, 17, 14, 4]
====================================
cloned = 1
killed = 19
cloned = 13
killed = 8
cloned = 10
killed = 12
cloned = 17
killed = 20
cloned = 14
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 19, 18, 16, 7]
lower threshold: [3, 4, 5, 6, 9, 10, 11, 12, 15, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 14, 2, 21, 13, 8]
====================================
cloned = 1
killed = 0
cloned = 14
killed = 19
cloned = 2
killed = 18
cloned = 21
killed = 16
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 7, 1, 11]
lower threshold: [2, 3, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 5, 0, 9, 12, 8]
====================================
cloned = 4
killed = 6
cloned = 5
killed = 13
cloned = 0
killed = 7
cloned = 9
killed = 1
cloned = 12
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 17, 21, 5]
lower threshold: [0, 1, 2, 4, 6, 7, 9, 10, 13, 15, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 19, 3, 8, 12, 16]
====================================
cloned = 14
killed = 11
cloned = 19
killed = 20
cloned = 3
killed = 17
cloned = 8
killed = 21
cloned = 12
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 21, 5, 14]
lower threshold: [0, 1, 3, 4, 8, 9, 11, 12, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 18, 6, 2, 17, 15]
====================================
cloned = 13
killed = 10
cloned = 18
killed = 7
cloned = 6
killed = 21
cloned = 2
killed = 5
cloned = 17
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 10, 8, 6]
lower threshold: [0, 1, 4, 5, 7, 9, 13, 14, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 11, 3, 19, 18, 16]
====================================
cloned = 20
killed = 2
cloned = 11
killed = 12
cloned = 3
killed = 10
cloned = 19
killed = 8
cloned = 18
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 12, 2, 18, 16]
lower threshold: [1, 3, 5, 6, 7, 11, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 0, 9, 10, 8]
====================================
cloned = 13
killed = 20
cloned = 4
killed = 12
cloned = 0
killed = 2
cloned = 9
killed = 18
cloned = 10
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 18, 0, 14]
lower threshold: [3, 4, 5, 6, 7, 9, 11, 13, 15, 16, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 20, 12, 8, 17, 21]
====================================
cloned = 2
killed = 10
cloned = 20
killed = 1
cloned = 12
killed = 18
cloned = 8
killed = 0
cloned = 17
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 7, 2, 0, 5]
lower threshold: [1, 4, 6, 8, 10, 11, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 9, 12, 3, 20, 17]
====================================
cloned = 21
killed = 13
cloned = 9
killed = 7
cloned = 12
killed = 2
cloned = 3
killed = 0
cloned = 20
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 17, 4, 21, 18]
lower threshold: [0, 2, 3, 5, 6, 9, 10, 11, 12, 14, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 19, 7, 8, 1, 13]
====================================
cloned = 16
killed = 15
cloned = 19
killed = 17
cloned = 7
killed = 4
cloned = 8
killed = 21
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 15, 8, 12]
lower threshold: [0, 2, 4, 5, 9, 11, 13, 14, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 10, 6, 7, 1, 18]
====================================
cloned = 3
killed = 20
cloned = 10
killed = 21
cloned = 6
killed = 15
cloned = 7
killed = 8
cloned = 1
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 15, 20, 5]
lower threshold: [2, 3, 4, 8, 10, 11, 12, 13, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 18, 0, 7, 14, 9]
====================================
cloned = 16
killed = 6
cloned = 18
killed = 1
cloned = 0
killed = 15
cloned = 7
killed = 20
cloned = 14
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 3, 9, 6]
lower threshold: [0, 1, 5, 7, 8, 10, 13, 14, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 2, 18, 15, 12, 11]
====================================
cloned = 21
killed = 4
cloned = 2
killed = 16
cloned = 18
killed = 3
cloned = 15
killed = 9
cloned = 12
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 15, 16, 11]
lower threshold: [0, 1, 3, 4, 6, 7, 9, 12, 13, 14, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 2, 18, 19, 5, 21]
====================================
cloned = 8
killed = 10
cloned = 2
killed = 20
cloned = 18
killed = 15
cloned = 19
killed = 16
cloned = 5
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 16, 4, 3, 8]
lower threshold: [1, 2, 5, 6, 7, 9, 12, 13, 14, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 18, 0, 10, 20, 21]
====================================
cloned = 17
killed = 11
cloned = 18
killed = 16
cloned = 0
killed = 4
cloned = 10
killed = 3
cloned = 20
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 6, 16, 15]
lower threshold: [3, 4, 5, 9, 12, 14, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 11, 1, 13, 0, 10]
====================================
cloned = 7
killed = 2
cloned = 11
killed = 8
cloned = 1
killed = 6
cloned = 13
killed = 16
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 13, 6, 17, 18]
lower threshold: [1, 3, 4, 7, 8, 9, 10, 12, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 0, 14, 16, 5, 2]
====================================
cloned = 11
killed = 15
cloned = 0
killed = 13
cloned = 14
killed = 6
cloned = 16
killed = 17
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 18, 16, 19]
lower threshold: [0, 4, 5, 6, 8, 9, 11, 14, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 7, 13, 1, 12, 2]
====================================
cloned = 15
killed = 3
cloned = 7
killed = 10
cloned = 13
killed = 18
cloned = 1
killed = 16
cloned = 12
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 21, 0, 19, 12]
lower threshold: [3, 5, 6, 9, 10, 11, 13, 14, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 4, 17, 8, 7, 1]
====================================
cloned = 18
killed = 2
cloned = 4
killed = 21
cloned = 17
killed = 0
cloned = 8
killed = 19
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 2, 3, 9, 5]
lower threshold: [0, 1, 4, 6, 7, 8, 13, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 10, 11, 15, 17, 21]
====================================
cloned = 12
killed = 14
cloned = 10
killed = 2
cloned = 11
killed = 3
cloned = 15
killed = 9
cloned = 17
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 21, 11, 2]
lower threshold: [3, 4, 7, 8, 9, 10, 12, 15, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 5, 19, 0, 1]
====================================
cloned = 6
killed = 13
cloned = 14
killed = 16
cloned = 5
killed = 21
cloned = 19
killed = 11
cloned = 0
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 15, 12, 19, 5]
lower threshold: [0, 2, 3, 4, 7, 11, 14, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 1, 16, 10, 9, 13]
====================================
cloned = 6
killed = 8
cloned = 1
killed = 15
cloned = 16
killed = 12
cloned = 10
killed = 19
cloned = 9
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 21, 7, 10]
lower threshold: [4, 6, 8, 9, 11, 12, 15, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 5, 1, 19, 13, 2]
====================================
cloned = 14
killed = 0
cloned = 5
killed = 3
cloned = 1
killed = 21
cloned = 19
killed = 7
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 8, 2, 18]
lower threshold: [1, 3, 4, 7, 11, 14, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 0, 13, 15, 10, 12]
====================================
cloned = 6
killed = 5
cloned = 0
killed = 9
cloned = 13
killed = 8
cloned = 15
killed = 2
cloned = 10
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 8, 14, 3, 15]
lower threshold: [2, 5, 6, 7, 9, 10, 11, 12, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 0, 4, 16, 17, 13]
====================================
cloned = 1
killed = 18
cloned = 0
killed = 8
cloned = 4
killed = 14
cloned = 16
killed = 3
cloned = 17
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 5, 12, 6, 9]
lower threshold: [1, 4, 7, 8, 11, 14, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 10, 15, 3, 13, 2]
====================================
cloned = 0
killed = 18
cloned = 10
killed = 5
cloned = 15
killed = 12
cloned = 3
killed = 6
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 20, 17, 14, 10]
lower threshold: [1, 3, 4, 7, 9, 11, 12, 13, 15, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 2, 18, 0, 16, 8]
====================================
cloned = 5
killed = 6
cloned = 2
killed = 20
cloned = 18
killed = 17
cloned = 0
killed = 14
cloned = 16
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 18, 16, 4]
lower threshold: [2, 3, 5, 6, 7, 8, 11, 15, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 0, 9, 13, 19, 14]
====================================
cloned = 1
killed = 12
cloned = 0
killed = 10
cloned = 9
killed = 18
cloned = 13
killed = 16
cloned = 19
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 16, 15, 19]
lower threshold: [1, 3, 4, 5, 6, 11, 12, 14, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 13, 0, 10, 21, 2]
====================================
cloned = 9
killed = 8
cloned = 13
killed = 7
cloned = 0
killed = 16
cloned = 10
killed = 15
cloned = 21
killed = 19
Trial run 2/seed 12902:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.345000000000006,
  55.68,
  59.339999999999996,
  54.935,
  52.06500000000001,
  54.27,
  52.91499999999999,
  36.78,
  44.835,
  28.29500000000001,
  48.06,
  50.78499999999999,
  45.64,
  52.379999999999995,
  55.97999999999999,
  36.78,
  51.480000000000004,
  48.945,
  46.474999999999994,
  41.940000000000005,
  34.80500000000001,
  55.419999999999995,
  53.44499999999999],
 [65.60000000000001,
  63.24000000000001,
  65.215,
  61.83,
  57.614999999999995,
  57.34,
  59.07499999999998,
  65.6,
  63.02000000000001,
  65.215,
  54.9,
  54.78999999999999,
  53.029999999999994,
  59.485,
  58.01,
  61.83,
  56.56999999999999,
  52.265,
  50.94000000000001,
  58.029999999999994,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.08,
  65.69500000000001,
  58.714999999999996,
  61.60000000000001,
  61.545,
  58.87499999999998,
  65.605,
  64.615,
  65.695,
  65.605,
  65.01999999999998,
  65.69500000000001,
  62.595,
  58.71999999999999,
  58.715,
  61.635000000000005,
  65.605,
  65.16,
  58.75,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.84,
  66.185,
  65.92,
  65.91999999999999,
  64.71,
  64.80000000000001,
  65.91999999999999,
  65.84,
  66.175,
  65.91999999999999,
  65.84,
  66.35,
  65.92,
  64.13999999999999,
  65.91999999999999,
  65.91999999999999,
  64.13999999999999,
  65.84,
  66.25999999999999,
  65.84,
  64.13999999999999,
  64.14,
  65.92],
 [65.68,
  65.03999999999999,
  65.83999999999999,
  65.83999999999997,
  65.03999999999999,
  65.03999999999999,
  65.84,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.04,
  65.83999999999997,
  65.83999999999999,
  65.03999999999999,
  65.68,
  65.03999999999999,
  65.68,
  65.83999999999997,
  65.83999999999999,
  65.83999999999999],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.94,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.33999999999997,
  65.88,
  65.33999999999999,
  65.88,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.445,
 58.02,
 59.269999999999996,
 54.660000000000004,
 52.01499999999999,
 54.315000000000005,
 56.24499999999999,
 36.7,
 44.835,
 30.860000000000007,
 47.85,
 51.01499999999999,
 47.74499999999999,
 52.495,
 56.52499999999999,
 36.78,
 51.620000000000005,
 47.120000000000005,
 45.49999999999999,
 44.1,
 34.675000000000004,
 55.199999999999996,
 53.489999999999995]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.1675
Upper: 54.93
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 61.300000000000004,
 65.2,
 61.815,
 57.60999999999999,
 57.325,
 56.999999999999986,
 65.585,
 61.05000000000001,
 65.2,
 54.885,
 54.77499999999999,
 51.705,
 59.47,
 56.76499999999999,
 55.58499999999999,
 56.55499999999999,
 48.675,
 48.830000000000005,
 56.875,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.067499999999995
Upper: 61.17500000000001
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 15, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 3
killed = 15
cloned = 7
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.64500000000001,
 67.22999999999999,
 65.715,
 60.785,
 62.120000000000005,
 61.845,
 62.144999999999975,
 65.645,
 66.005,
 65.71499999999999,
 65.64500000000001,
 65.425,
 65.715,
 63.05999999999999,
 59.815000000000005,
 60.785000000000004,
 62.10000000000001,
 65.64500000000001,
 65.715,
 59.794999999999995,
 61.989999999999995,
 61.989999999999995,
 62.099999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.989999999999995
Upper: 65.68
====================================
lower list size: 5
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: []
upper:           [1, 2, 8, 9, 12, 18]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 5
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 12
killed = 19
######################################
~~~ Scores: ~~~
[65.785,
 65.07499999999999,
 65.88499999999999,
 64.56,
 64.315,
 65.88499999999999,
 61.73499999999998,
 65.785,
 64.86999999999999,
 65.88499999999999,
 65.785,
 66.625,
 65.88499999999999,
 63.66,
 65.565,
 65.88499999999999,
 63.65999999999998,
 65.785,
 65.88499999999999,
 65.88499999999999,
 63.65999999999998,
 63.66,
 63.66]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 63.9875
Upper: 65.88499999999999
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 16, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [2, 15, 19]
upper:           [11, 12, 9, 18, 5]
====================================
cloned = 11
killed = 6
cloned = 12
killed = 13
cloned = 9
killed = 16
cloned = 18
killed = 20
cloned = 5
killed = 21
######################################
~~~ Scores: ~~~
[65.76,
 65.17499999999998,
 65.88,
 65.33999999999999,
 63.714999999999996,
 65.88,
 65.19999999999999,
 65.76,
 65.09999999999998,
 65.88,
 65.76,
 65.095,
 65.88,
 65.88,
 65.11,
 65.88,
 65.88,
 65.76,
 65.88,
 65.88,
 65.88,
 65.88,
 63.209999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.18749999999999
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 8, 11, 14, 22]
lower threshold: []
....................................
upper threshold: [2, 5, 9, 18, 21]
upper:           [15, 12, 19, 13, 16, 20]
====================================
cloned = 15
killed = 1
cloned = 12
killed = 4
cloned = 19
killed = 8
cloned = 13
killed = 11
cloned = 16
killed = 14
cloned = 20
killed = 22
######################################
~~~ Scores: ~~~
[65.92,
 65.96000000000001,
 65.96000000000001,
 65.41999999999997,
 65.96000000000001,
 65.96,
 65.41999999999999,
 65.92,
 65.96000000000001,
 65.96,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.96,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.94
Upper: 65.96000000000001
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 6, 7, 10, 17]
lower threshold: []
....................................
upper threshold: [8, 11, 12, 13, 15, 20, 22]
upper:           [19, 4, 1, 21, 2, 18]
====================================
cloned = 19
killed = 0
cloned = 4
killed = 3
cloned = 1
killed = 6
cloned = 21
killed = 7
cloned = 2
killed = 10
cloned = 18
killed = 17
Trial run 3/seed 12903:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 7,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 11,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4,
          'Evolved HMM 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 17,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.445,
  58.02,
  59.269999999999996,
  54.660000000000004,
  52.01499999999999,
  54.315000000000005,
  56.24499999999999,
  36.7,
  44.835,
  30.860000000000007,
  47.85,
  51.01499999999999,
  47.74499999999999,
  52.495,
  56.52499999999999,
  36.78,
  51.620000000000005,
  47.120000000000005,
  45.49999999999999,
  44.1,
  34.675000000000004,
  55.199999999999996,
  53.489999999999995],
 [65.58500000000001,
  61.300000000000004,
  65.2,
  61.815,
  57.60999999999999,
  57.325,
  56.999999999999986,
  65.585,
  61.05000000000001,
  65.2,
  54.885,
  54.77499999999999,
  51.705,
  59.47,
  56.76499999999999,
  55.58499999999999,
  56.55499999999999,
  48.675,
  48.830000000000005,
  56.875,
  60.425,
  60.425,
  56.55],
 [65.64500000000001,
  67.22999999999999,
  65.715,
  60.785,
  62.120000000000005,
  61.845,
  62.144999999999975,
  65.645,
  66.005,
  65.71499999999999,
  65.64500000000001,
  65.425,
  65.715,
  63.05999999999999,
  59.815000000000005,
  60.785000000000004,
  62.10000000000001,
  65.64500000000001,
  65.715,
  59.794999999999995,
  61.989999999999995,
  61.989999999999995,
  62.099999999999994],
 [65.785,
  65.07499999999999,
  65.88499999999999,
  64.56,
  64.315,
  65.88499999999999,
  61.73499999999998,
  65.785,
  64.86999999999999,
  65.88499999999999,
  65.785,
  66.625,
  65.88499999999999,
  63.66,
  65.565,
  65.88499999999999,
  63.65999999999998,
  65.785,
  65.88499999999999,
  65.88499999999999,
  63.65999999999998,
  63.66,
  63.66],
 [65.76,
  65.17499999999998,
  65.88,
  65.33999999999999,
  63.714999999999996,
  65.88,
  65.19999999999999,
  65.76,
  65.09999999999998,
  65.88,
  65.76,
  65.095,
  65.88,
  65.88,
  65.11,
  65.88,
  65.88,
  65.76,
  65.88,
  65.88,
  65.88,
  65.88,
  63.209999999999994],
 [65.92,
  65.96000000000001,
  65.96000000000001,
  65.41999999999997,
  65.96000000000001,
  65.96,
  65.41999999999999,
  65.92,
  65.96000000000001,
  65.96,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.96,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.59000000000001,
 55.875,
 59.33,
 54.815,
 51.96,
 54.53,
 54.85499999999999,
 36.959999999999994,
 44.895,
 30.290000000000003,
 47.87,
 50.724999999999994,
 47.8,
 52.355,
 56.385,
 37.26,
 51.605000000000004,
 49.055,
 45.55499999999999,
 42.145,
 34.85500000000001,
 55.515,
 53.295]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.224999999999994
Upper: 54.834999999999994
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 60.885,
 65.2,
 61.815,
 57.599999999999994,
 57.325,
 54.93499999999998,
 65.585,
 60.85000000000001,
 65.2,
 54.885,
 54.77499999999999,
 51.785,
 59.47,
 56.875,
 58.89499999999998,
 56.55499999999999,
 50.614999999999995,
 48.980000000000004,
 56.894999999999996,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 55.74249999999999
Upper: 60.86750000000001
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 11, 12, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 3
killed = 12
cloned = 7
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.64500000000001,
 65.52499999999999,
 65.715,
 60.785,
 61.94,
 61.845,
 65.64500000000001,
 65.645,
 65.11,
 65.715,
 66.49499999999999,
 65.715,
 60.785000000000004,
 63.05999999999999,
 59.88999999999999,
 61.299999999999976,
 62.099999999999994,
 65.64500000000001,
 65.715,
 59.62499999999999,
 61.989999999999995,
 61.989999999999995,
 62.099999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.8925
Upper: 65.64500000000001
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 12, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [0, 6, 17]
upper:           [2, 9, 10, 11, 18]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 12
cloned = 11
killed = 14
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[65.73,
 66.59499999999998,
 65.815,
 65.815,
 62.97500000000001,
 65.815,
 65.73,
 65.72999999999999,
 66.555,
 65.815,
 66.66,
 65.815,
 66.60000000000001,
 63.375,
 65.81499999999998,
 65.815,
 62.89499999999998,
 65.73,
 65.815,
 62.995,
 62.84,
 62.83999999999999,
 62.894999999999996]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 63.185
Upper: 65.815
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [3, 5, 11, 15, 18]
upper:           [1, 8, 10, 12, 9, 2]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 16
cloned = 10
killed = 19
cloned = 12
killed = 20
cloned = 9
killed = 21
cloned = 2
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.39,
 65.83999999999999,
 65.84,
 65.39,
 65.83999999999999,
 65.68,
 65.67999999999999,
 65.39,
 65.84,
 65.38999999999999,
 65.83999999999999,
 65.39,
 62.27999999999999,
 65.83999999999999,
 65.83999999999999,
 65.38999999999999,
 65.68,
 65.83999999999999,
 65.39,
 65.38999999999999,
 65.83999999999997,
 65.84]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.39
Upper: 65.83999999999999
====================================
lower list size: 4
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [10, 13, 16, 20, 1]
lower threshold: [4, 8, 12, 19]
....................................
upper threshold: [2, 5, 15, 18]
upper:           [3, 9, 22, 11, 14]
====================================
cloned = 3
killed = 10
cloned = 9
killed = 13
cloned = 22
killed = 16
cloned = 11
killed = 20
cloned = 14
killed = 1
######################################
~~~ Scores: ~~~
[65.84,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.29999999999998,
 65.91999999999999,
 65.84,
 65.84,
 65.29999999999998,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.3,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.92,
 65.84,
 65.92,
 65.3,
 65.92,
 65.91999999999999,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.84
Upper: 65.91999999999999
====================================
lower list size: 4
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 12, 19, 7]
lower threshold: [0, 6, 17]
....................................
upper threshold: [1, 2, 3, 5, 10, 11, 14, 15, 21]
upper:           [9, 13, 16, 18, 20, 22]
====================================
cloned = 9
killed = 4
cloned = 13
killed = 8
cloned = 16
killed = 12
cloned = 18
killed = 19
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 10, 16, 2]
lower threshold: [0, 8, 9, 11, 12, 15, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 13, 7, 1, 3]
====================================
cloned = 6
killed = 5
cloned = 14
killed = 4
cloned = 13
killed = 10
cloned = 7
killed = 16
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 17, 4, 21, 8]
lower threshold: [1, 2, 6, 10, 12, 13, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 0, 9, 5, 3, 7]
====================================
cloned = 11
killed = 20
cloned = 0
killed = 17
cloned = 9
killed = 4
cloned = 5
killed = 21
cloned = 3
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 9, 5, 7, 12]
lower threshold: [1, 6, 8, 10, 11, 14, 15, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 0, 13, 4, 21, 2]
====================================
cloned = 17
killed = 3
cloned = 0
killed = 9
cloned = 13
killed = 5
cloned = 4
killed = 7
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 10, 11, 6]
lower threshold: [2, 4, 5, 7, 9, 13, 14, 15, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 18, 0, 12, 8, 19]
====================================
cloned = 1
killed = 16
cloned = 18
killed = 3
cloned = 0
killed = 10
cloned = 12
killed = 11
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 2, 5, 20]
lower threshold: [0, 1, 7, 10, 11, 12, 14, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 15, 6, 9, 21]
====================================
cloned = 13
killed = 8
cloned = 4
killed = 3
cloned = 15
killed = 2
cloned = 6
killed = 5
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 7, 19, 2, 1]
lower threshold: [3, 4, 6, 9, 10, 11, 12, 14, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 15, 18, 0, 5, 8]
====================================
cloned = 13
killed = 16
cloned = 15
killed = 7
cloned = 18
killed = 19
cloned = 0
killed = 2
cloned = 5
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 17, 19, 18, 16]
lower threshold: [2, 3, 6, 7, 9, 10, 12, 13, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 5, 11, 14, 8, 1]
====================================
cloned = 4
killed = 0
cloned = 5
killed = 17
cloned = 11
killed = 19
cloned = 14
killed = 18
cloned = 8
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 9, 11, 14, 21]
lower threshold: [0, 2, 3, 5, 6, 8, 10, 12, 15, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 1, 18, 7, 17]
====================================
cloned = 4
killed = 13
cloned = 16
killed = 9
cloned = 1
killed = 11
cloned = 18
killed = 14
cloned = 7
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 2, 4, 5, 17]
lower threshold: [0, 1, 3, 6, 8, 9, 11, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 20, 15, 13, 7, 19]
====================================
cloned = 10
killed = 12
cloned = 20
killed = 2
cloned = 15
killed = 4
cloned = 13
killed = 5
cloned = 7
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 6, 4, 12, 1]
lower threshold: [3, 7, 9, 10, 13, 15, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 0, 5, 11, 14, 2]
====================================
cloned = 8
killed = 18
cloned = 0
killed = 6
cloned = 5
killed = 4
cloned = 11
killed = 12
cloned = 14
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 7, 10, 12]
lower threshold: [0, 1, 3, 4, 5, 6, 14, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 13, 19, 18, 17, 11]
====================================
cloned = 9
killed = 8
cloned = 13
killed = 2
cloned = 19
killed = 7
cloned = 18
killed = 10
cloned = 17
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 13, 9, 19, 12]
lower threshold: [0, 1, 2, 3, 5, 6, 7, 11, 14, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 8, 18, 17, 10, 4]
====================================
cloned = 21
killed = 15
cloned = 8
killed = 13
cloned = 18
killed = 9
cloned = 17
killed = 19
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 14, 1, 21, 4]
lower threshold: [0, 2, 5, 6, 7, 9, 10, 11, 12, 13, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 8, 15, 3, 18, 17]
====================================
cloned = 16
killed = 20
cloned = 8
killed = 14
cloned = 15
killed = 1
cloned = 3
killed = 21
cloned = 18
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 8, 17, 5]
lower threshold: [0, 1, 2, 4, 6, 9, 13, 14, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 21, 10, 7, 11, 3]
====================================
cloned = 15
killed = 16
cloned = 21
killed = 12
cloned = 10
killed = 8
cloned = 7
killed = 17
cloned = 11
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 15, 21, 3, 0]
lower threshold: [2, 4, 6, 7, 9, 10, 11, 12, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 1, 5, 14, 20]
====================================
cloned = 8
killed = 19
cloned = 13
killed = 15
cloned = 1
killed = 21
cloned = 5
killed = 3
cloned = 14
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 7, 16, 18]
lower threshold: [0, 1, 2, 6, 8, 10, 11, 12, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 9, 4, 21, 15]
====================================
cloned = 14
killed = 3
cloned = 13
killed = 5
cloned = 9
killed = 7
cloned = 4
killed = 16
cloned = 21
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 4, 20, 17, 15]
lower threshold: [0, 1, 6, 7, 9, 10, 11, 13, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 8, 3, 5, 12, 16]
====================================
cloned = 2
killed = 14
cloned = 8
killed = 4
cloned = 3
killed = 20
cloned = 5
killed = 17
cloned = 12
killed = 15
Trial run 4/seed 12904:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Michaelos: (D,)': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Evolved ANN 5 Noise 05': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 4,
          'Tit For 2 Tats': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.59000000000001,
  55.875,
  59.33,
  54.815,
  51.96,
  54.53,
  54.85499999999999,
  36.959999999999994,
  44.895,
  30.290000000000003,
  47.87,
  50.724999999999994,
  47.8,
  52.355,
  56.385,
  37.26,
  51.605000000000004,
  49.055,
  45.55499999999999,
  42.145,
  34.85500000000001,
  55.515,
  53.295],
 [65.58500000000001,
  60.885,
  65.2,
  61.815,
  57.599999999999994,
  57.325,
  54.93499999999998,
  65.585,
  60.85000000000001,
  65.2,
  54.885,
  54.77499999999999,
  51.785,
  59.47,
  56.875,
  58.89499999999998,
  56.55499999999999,
  50.614999999999995,
  48.980000000000004,
  56.894999999999996,
  60.425,
  60.425,
  56.55],
 [65.64500000000001,
  65.52499999999999,
  65.715,
  60.785,
  61.94,
  61.845,
  65.64500000000001,
  65.645,
  65.11,
  65.715,
  66.49499999999999,
  65.715,
  60.785000000000004,
  63.05999999999999,
  59.88999999999999,
  61.299999999999976,
  62.099999999999994,
  65.64500000000001,
  65.715,
  59.62499999999999,
  61.989999999999995,
  61.989999999999995,
  62.099999999999994],
 [65.73,
  66.59499999999998,
  65.815,
  65.815,
  62.97500000000001,
  65.815,
  65.73,
  65.72999999999999,
  66.555,
  65.815,
  66.66,
  65.815,
  66.60000000000001,
  63.375,
  65.81499999999998,
  65.815,
  62.89499999999998,
  65.73,
  65.815,
  62.995,
  62.84,
  62.83999999999999,
  62.894999999999996],
 [65.68,
  65.39,
  65.83999999999999,
  65.84,
  65.39,
  65.83999999999999,
  65.68,
  65.67999999999999,
  65.39,
  65.84,
  65.38999999999999,
  65.83999999999999,
  65.39,
  62.27999999999999,
  65.83999999999999,
  65.83999999999999,
  65.38999999999999,
  65.68,
  65.83999999999999,
  65.39,
  65.38999999999999,
  65.83999999999997,
  65.84],
 [65.84,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.29999999999998,
  65.91999999999999,
  65.84,
  65.84,
  65.29999999999998,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.3,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.92,
  65.84,
  65.92,
  65.3,
  65.92,
  65.91999999999999,
  65.92],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.43500000000001,
 55.985,
 59.39,
 54.885,
 52.455000000000005,
 54.15,
 52.84499999999998,
 36.900000000000006,
 44.7,
 27.44,
 47.845000000000006,
 51.044999999999995,
 46.31999999999999,
 52.42,
 56.29,
 37.059999999999995,
 51.735,
 46.99,
 46.095,
 44.175000000000004,
 34.53000000000001,
 55.66,
 53.084999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.3975
Upper: 54.5175
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.445,
 65.215,
 61.83,
 57.74999999999999,
 57.34,
 55.65999999999998,
 65.6,
 63.045,
 65.215,
 54.9,
 54.78999999999999,
 51.099999999999994,
 59.485,
 57.9,
 61.83,
 56.56999999999999,
 50.305,
 50.85500000000001,
 57.905,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.11249999999999
Upper: 62.4375
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 11, 12, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.62,
 67.05,
 65.71000000000001,
 58.73,
 61.415,
 61.56,
 65.62,
 65.62,
 66.92,
 65.71000000000001,
 67.11999999999999,
 65.71,
 65.62,
 62.61,
 61.19,
 58.730000000000004,
 61.650000000000006,
 67.17000000000002,
 65.71,
 61.32999999999999,
 61.53999999999999,
 61.53999999999999,
 61.64999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.53999999999999
Upper: 65.71000000000001
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: []
upper:           [1, 8, 10, 17, 2, 9]
====================================
cloned = 1
killed = 3
cloned = 8
killed = 4
cloned = 10
killed = 14
cloned = 17
killed = 15
cloned = 2
killed = 19
######################################
~~~ Scores: ~~~
[65.68,
 66.63,
 65.83999999999999,
 66.63,
 66.63000000000001,
 63.600000000000016,
 65.68,
 65.68,
 66.63,
 65.84,
 66.63,
 65.83999999999997,
 65.68,
 62.27999999999999,
 66.63000000000001,
 66.63,
 62.27999999999999,
 66.63,
 65.83999999999997,
 65.83999999999999,
 62.27999999999999,
 62.27999999999999,
 62.27999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 64.64000000000001
Upper: 66.63
====================================
lower list size: 6
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [5, 13, 16, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [10, 17]
upper:           [4, 14, 15, 1, 8, 3]
====================================
cloned = 4
killed = 5
cloned = 14
killed = 13
cloned = 15
killed = 16
cloned = 1
killed = 20
cloned = 8
killed = 21
cloned = 3
killed = 22
######################################
~~~ Scores: ~~~
[65.44,
 64.7,
 65.71999999999998,
 64.7,
 64.70000000000002,
 64.7,
 65.44000000000001,
 65.44,
 64.7,
 65.71999999999998,
 64.7,
 65.71999999999998,
 65.44000000000001,
 64.7,
 64.7,
 64.7,
 64.7,
 64.7,
 65.71999999999997,
 65.71999999999998,
 64.7,
 64.70000000000002,
 64.7]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 64.7
Upper: 65.44000000000001
====================================
lower list size: 0
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [14, 17, 5, 20, 15]
lower threshold: [1, 3, 8, 10, 13, 16, 22]
....................................
upper threshold: [6, 12]
upper:           [2, 9, 11, 18, 19]
====================================
cloned = 2
killed = 14
cloned = 9
killed = 17
cloned = 11
killed = 5
cloned = 18
killed = 20
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[65.64,
 65.0,
 65.82,
 64.99999999999999,
 65.0,
 65.82,
 65.64000000000001,
 65.64,
 65.0,
 65.82,
 65.0,
 65.81999999999998,
 65.64000000000001,
 64.99999999999999,
 65.81999999999998,
 65.82,
 65.0,
 65.82,
 65.82,
 65.82,
 65.82,
 65.0,
 64.99999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.0
Upper: 65.82
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 22, 1, 10]
lower threshold: [4, 8, 16, 21]
....................................
upper threshold: [17, 20]
upper:           [5, 19, 9, 2, 15, 18]
====================================
cloned = 5
killed = 3
cloned = 19
killed = 13
cloned = 9
killed = 22
cloned = 2
killed = 1
cloned = 15
killed = 10
######################################
~~~ Scores: ~~~
[65.84,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.29999999999998,
 65.91999999999999,
 65.84,
 65.84,
 65.29999999999998,
 65.92,
 65.91999999999999,
 65.92,
 65.84,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.29999999999998,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.92,
 65.3,
 65.91999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.84
Upper: 65.91999999999999
====================================
lower list size: 4
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 16, 21, 7]
lower threshold: [0, 6, 12]
....................................
upper threshold: [1, 3, 5, 10, 14, 17, 18, 19, 22]
upper:           [9, 11, 13, 20, 15, 2]
====================================
cloned = 9
killed = 4
cloned = 11
killed = 8
cloned = 13
killed = 16
cloned = 20
killed = 21
cloned = 15
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 12, 5, 0, 2]
lower threshold: [1, 4, 6, 7, 8, 10, 14, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 9, 17, 19, 11, 18]
====================================
cloned = 3
killed = 13
cloned = 9
killed = 12
cloned = 17
killed = 5
cloned = 19
killed = 0
cloned = 11
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 20, 12, 7, 13]
lower threshold: [1, 3, 4, 5, 6, 8, 9, 10, 11, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 0, 17, 18, 2, 15]
====================================
cloned = 14
killed = 16
cloned = 0
killed = 20
cloned = 17
killed = 12
cloned = 18
killed = 7
cloned = 2
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 7, 11, 13, 21]
lower threshold: [1, 2, 3, 4, 6, 8, 10, 14, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 15, 12, 17, 0]
====================================
cloned = 9
killed = 16
cloned = 5
killed = 7
cloned = 15
killed = 11
cloned = 12
killed = 13
cloned = 17
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 15, 17, 14, 16]
lower threshold: [0, 2, 3, 6, 9, 11, 12, 13, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 7, 5, 8, 10]
====================================
cloned = 1
killed = 21
cloned = 4
killed = 15
cloned = 7
killed = 17
cloned = 5
killed = 14
cloned = 8
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 4, 20, 18, 14]
lower threshold: [1, 2, 3, 5, 7, 8, 11, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 0, 10, 9, 6, 12]
====================================
cloned = 21
killed = 13
cloned = 0
killed = 4
cloned = 10
killed = 20
cloned = 9
killed = 18
cloned = 6
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 19, 2, 11, 20]
lower threshold: [0, 4, 5, 6, 8, 9, 12, 14, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 7, 1, 3, 10, 13]
====================================
cloned = 21
killed = 18
cloned = 7
killed = 19
cloned = 1
killed = 2
cloned = 3
killed = 11
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 12, 1, 3, 4]
lower threshold: [0, 2, 5, 9, 13, 14, 15, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 7, 20, 6, 10, 11]
====================================
cloned = 8
killed = 21
cloned = 7
killed = 12
cloned = 20
killed = 1
cloned = 6
killed = 3
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 0, 11, 4, 15]
lower threshold: [3, 5, 6, 7, 9, 10, 14, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 17, 18, 8, 12, 13]
====================================
cloned = 1
killed = 2
cloned = 17
killed = 0
cloned = 18
killed = 11
cloned = 8
killed = 4
cloned = 12
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 15, 12, 6]
lower threshold: [0, 5, 7, 9, 11, 13, 14, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 2, 17, 10, 8, 1]
====================================
cloned = 4
killed = 16
cloned = 2
killed = 3
cloned = 17
killed = 15
cloned = 10
killed = 12
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 20, 0, 2, 9]
lower threshold: [1, 3, 4, 5, 7, 8, 10, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 6, 11, 14, 13, 12]
====================================
cloned = 19
killed = 16
cloned = 6
killed = 20
cloned = 11
killed = 0
cloned = 14
killed = 2
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 20, 12, 8, 10]
lower threshold: [0, 1, 2, 4, 5, 7, 11, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 17, 18, 6, 3, 14]
====================================
cloned = 13
killed = 9
cloned = 17
killed = 20
cloned = 18
killed = 12
cloned = 6
killed = 8
cloned = 3
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 10, 12, 14]
lower threshold: [1, 2, 4, 6, 7, 8, 13, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 16, 18, 11, 3, 21]
====================================
cloned = 9
killed = 0
cloned = 16
killed = 5
cloned = 18
killed = 10
cloned = 11
killed = 12
cloned = 3
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 12, 20, 19, 11]
lower threshold: [0, 1, 3, 5, 6, 8, 9, 10, 13, 15, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 7, 18, 14, 4, 2]
====================================
cloned = 21
killed = 17
cloned = 7
killed = 12
cloned = 18
killed = 20
cloned = 14
killed = 19
cloned = 4
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 6, 14, 13, 1]
lower threshold: [3, 4, 7, 8, 9, 10, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 12, 2, 5, 11, 0]
====================================
cloned = 18
killed = 21
cloned = 12
killed = 6
cloned = 2
killed = 14
cloned = 5
killed = 13
cloned = 11
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 15, 18, 12, 10]
lower threshold: [0, 1, 2, 3, 7, 8, 9, 11, 13, 14, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 6, 16, 4, 20, 19]
====================================
cloned = 17
killed = 5
cloned = 6
killed = 15
cloned = 16
killed = 18
cloned = 4
killed = 12
cloned = 20
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 18, 15, 3, 13]
lower threshold: [1, 4, 5, 6, 7, 8, 10, 12, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 11, 20, 2, 17]
====================================
cloned = 9
killed = 14
cloned = 0
killed = 18
cloned = 11
killed = 15
cloned = 20
killed = 3
cloned = 2
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 18, 13, 6]
lower threshold: [0, 4, 8, 9, 10, 14, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 15, 12, 11, 7, 2]
====================================
cloned = 5
killed = 1
cloned = 15
killed = 3
cloned = 12
killed = 18
cloned = 11
killed = 13
cloned = 7
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 15, 9, 10, 16]
lower threshold: [2, 3, 5, 8, 11, 12, 13, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 4, 1, 7, 6, 20]
====================================
cloned = 0
killed = 14
cloned = 4
killed = 15
cloned = 1
killed = 9
cloned = 7
killed = 10
cloned = 6
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 17, 0, 8, 4]
lower threshold: [3, 5, 7, 9, 12, 13, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 20, 10, 6, 2, 14]
====================================
cloned = 11
killed = 1
cloned = 20
killed = 17
cloned = 10
killed = 0
cloned = 6
killed = 8
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 17, 12, 4, 10]
lower threshold: [0, 2, 6, 8, 11, 14, 15, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 16, 3, 7, 1]
====================================
cloned = 5
killed = 9
cloned = 13
killed = 17
cloned = 16
killed = 12
cloned = 3
killed = 4
cloned = 7
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 10, 20, 4, 2]
lower threshold: [0, 1, 6, 9, 11, 13, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 14, 3, 12, 17, 7]
====================================
cloned = 5
killed = 8
cloned = 14
killed = 10
cloned = 3
killed = 20
cloned = 12
killed = 4
cloned = 17
killed = 2
Trial run 5/seed 12905:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8,
          'Tit For Tat': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 14,
          'Tit For Tat': 5,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 9,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.43500000000001,
  55.985,
  59.39,
  54.885,
  52.455000000000005,
  54.15,
  52.84499999999998,
  36.900000000000006,
  44.7,
  27.44,
  47.845000000000006,
  51.044999999999995,
  46.31999999999999,
  52.42,
  56.29,
  37.059999999999995,
  51.735,
  46.99,
  46.095,
  44.175000000000004,
  34.53000000000001,
  55.66,
  53.084999999999994],
 [65.60000000000001,
  63.445,
  65.215,
  61.83,
  57.74999999999999,
  57.34,
  55.65999999999998,
  65.6,
  63.045,
  65.215,
  54.9,
  54.78999999999999,
  51.099999999999994,
  59.485,
  57.9,
  61.83,
  56.56999999999999,
  50.305,
  50.85500000000001,
  57.905,
  60.44,
  60.44,
  56.565],
 [65.62,
  67.05,
  65.71000000000001,
  58.73,
  61.415,
  61.56,
  65.62,
  65.62,
  66.92,
  65.71000000000001,
  67.11999999999999,
  65.71,
  65.62,
  62.61,
  61.19,
  58.730000000000004,
  61.650000000000006,
  67.17000000000002,
  65.71,
  61.32999999999999,
  61.53999999999999,
  61.53999999999999,
  61.64999999999999],
 [65.68,
  66.63,
  65.83999999999999,
  66.63,
  66.63000000000001,
  63.600000000000016,
  65.68,
  65.68,
  66.63,
  65.84,
  66.63,
  65.83999999999997,
  65.68,
  62.27999999999999,
  66.63000000000001,
  66.63,
  62.27999999999999,
  66.63,
  65.83999999999997,
  65.83999999999999,
  62.27999999999999,
  62.27999999999999,
  62.27999999999999],
 [65.44,
  64.7,
  65.71999999999998,
  64.7,
  64.70000000000002,
  64.7,
  65.44000000000001,
  65.44,
  64.7,
  65.71999999999998,
  64.7,
  65.71999999999998,
  65.44000000000001,
  64.7,
  64.7,
  64.7,
  64.7,
  64.7,
  65.71999999999997,
  65.71999999999998,
  64.7,
  64.70000000000002,
  64.7],
 [65.64,
  65.0,
  65.82,
  64.99999999999999,
  65.0,
  65.82,
  65.64000000000001,
  65.64,
  65.0,
  65.82,
  65.0,
  65.81999999999998,
  65.64000000000001,
  64.99999999999999,
  65.81999999999998,
  65.82,
  65.0,
  65.82,
  65.82,
  65.82,
  65.82,
  65.0,
  64.99999999999999],
 [65.84,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.29999999999998,
  65.91999999999999,
  65.84,
  65.84,
  65.29999999999998,
  65.92,
  65.91999999999999,
  65.92,
  65.84,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.29999999999998,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.92,
  65.3,
  65.91999999999999],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.21,
 56.405,
 59.405,
 54.595,
 52.205000000000005,
 53.53,
 53.03499999999999,
 36.7,
 44.760000000000005,
 35.349999999999994,
 47.800000000000004,
 51.10499999999999,
 47.644999999999996,
 52.379999999999995,
 56.21999999999999,
 37.22,
 50.375,
 47.265,
 45.47,
 42.39,
 34.720000000000006,
 55.529999999999994,
 53.44999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.115
Upper: 54.0625
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.465,
 65.215,
 61.83,
 57.585,
 57.34,
 57.66499999999998,
 65.6,
 63.14500000000001,
 65.215,
 54.9,
 54.78999999999999,
 51.339999999999996,
 59.485,
 57.94,
 61.83,
 56.56999999999999,
 52.255,
 50.70500000000001,
 57.919999999999995,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.487500000000004
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.67,
 65.69500000000001,
 58.714999999999996,
 61.65,
 61.545,
 59.629999999999974,
 65.605,
 65.505,
 65.695,
 65.605,
 64.96999999999998,
 65.69500000000001,
 62.595,
 58.8,
 58.715,
 61.635000000000005,
 65.605,
 64.97,
 58.86,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [1, 2, 9, 12, 22]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 6
cloned = 9
killed = 14
cloned = 12
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.16499999999999,
 65.89999999999999,
 66.3,
 64.315,
 64.5,
 65.9,
 65.8,
 66.1,
 65.89999999999999,
 65.80000000000001,
 66.13,
 65.89999999999999,
 63.675,
 65.89999999999999,
 65.89999999999999,
 63.67499999999998,
 65.80000000000001,
 66.22,
 65.89999999999999,
 63.67499999999998,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.15
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [6]
upper:           [1, 3, 8, 11, 18]
====================================
cloned = 1
killed = 4
cloned = 3
killed = 5
cloned = 8
killed = 13
cloned = 11
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27,
 65.8,
 65.27,
 65.27,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.79999999999998,
 65.27,
 65.60000000000001,
 65.27000000000001,
 65.79999999999998,
 65.27000000000001,
 61.349999999999994,
 65.8]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 11, 1, 3, 4]
lower threshold: [5, 8, 16]
....................................
upper threshold: [6, 9, 19]
upper:           [2, 12, 22, 14, 15]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 11
cloned = 22
killed = 1
cloned = 14
killed = 3
cloned = 15
killed = 4
######################################
~~~ Scores: ~~~
[65.76,
 65.88,
 65.88,
 65.88,
 65.88,
 65.17999999999998,
 65.88,
 65.76,
 65.17999999999999,
 65.88,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.17999999999998,
 65.76,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 13, 16, 18, 20]
lower threshold: []
....................................
upper threshold: [1, 2, 4, 9, 11, 12, 22]
upper:           [14, 19, 6, 21, 3, 15]
====================================
cloned = 14
killed = 5
cloned = 19
killed = 8
cloned = 6
killed = 13
cloned = 21
killed = 16
cloned = 3
killed = 18
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 20, 0, 10, 9]
lower threshold: [1, 3, 4, 5, 6, 7, 11, 13, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 21, 8, 18, 12, 16]
====================================
cloned = 2
killed = 14
cloned = 21
killed = 20
cloned = 8
killed = 0
cloned = 18
killed = 10
cloned = 12
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 20, 13, 11, 8]
lower threshold: [2, 3, 6, 7, 9, 15, 16, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 1, 12, 10, 0, 5]
====================================
cloned = 14
killed = 4
cloned = 1
killed = 20
cloned = 12
killed = 13
cloned = 10
killed = 11
cloned = 0
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 14, 16, 10, 11]
lower threshold: [0, 2, 3, 7, 8, 12, 15, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 4, 5, 1, 13, 19]
====================================
cloned = 6
killed = 9
cloned = 4
killed = 14
cloned = 5
killed = 16
cloned = 1
killed = 10
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 15, 5, 20]
lower threshold: [0, 1, 2, 6, 8, 11, 12, 13, 14, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 17, 9, 4, 3, 19]
====================================
cloned = 7
killed = 16
cloned = 17
killed = 10
cloned = 9
killed = 15
cloned = 4
killed = 5
cloned = 3
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 13, 10, 12]
lower threshold: [1, 2, 3, 4, 6, 7, 9, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 0, 11, 19, 8, 17]
====================================
cloned = 20
killed = 5
cloned = 0
killed = 14
cloned = 11
killed = 13
cloned = 19
killed = 10
cloned = 8
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 4, 18, 3]
lower threshold: [1, 5, 7, 8, 10, 11, 12, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 13, 6, 15, 2, 14]
====================================
cloned = 9
killed = 20
cloned = 13
killed = 0
cloned = 6
killed = 4
cloned = 15
killed = 18
cloned = 2
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 16, 17, 2, 3]
lower threshold: [0, 1, 6, 7, 10, 12, 13, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 8, 11, 21, 4, 9]
====================================
cloned = 14
killed = 5
cloned = 8
killed = 16
cloned = 11
killed = 17
cloned = 21
killed = 2
cloned = 4
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 15, 17, 21]
lower threshold: [0, 2, 3, 4, 5, 7, 8, 9, 13, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 11, 10, 6, 20, 16]
====================================
cloned = 14
killed = 1
cloned = 11
killed = 12
cloned = 10
killed = 15
cloned = 6
killed = 17
cloned = 20
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 14, 7, 2, 4]
lower threshold: [0, 1, 3, 5, 8, 9, 11, 12, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 10, 17, 13, 18, 6]
====================================
cloned = 19
killed = 21
cloned = 10
killed = 14
cloned = 17
killed = 7
cloned = 13
killed = 2
cloned = 18
killed = 4
Trial run 6/seed 12906:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.21,
  56.405,
  59.405,
  54.595,
  52.205000000000005,
  53.53,
  53.03499999999999,
  36.7,
  44.760000000000005,
  35.349999999999994,
  47.800000000000004,
  51.10499999999999,
  47.644999999999996,
  52.379999999999995,
  56.21999999999999,
  37.22,
  50.375,
  47.265,
  45.47,
  42.39,
  34.720000000000006,
  55.529999999999994,
  53.44999999999999],
 [65.60000000000001,
  63.465,
  65.215,
  61.83,
  57.585,
  57.34,
  57.66499999999998,
  65.6,
  63.14500000000001,
  65.215,
  54.9,
  54.78999999999999,
  51.339999999999996,
  59.485,
  57.94,
  61.83,
  56.56999999999999,
  52.255,
  50.70500000000001,
  57.919999999999995,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.67,
  65.69500000000001,
  58.714999999999996,
  61.65,
  61.545,
  59.629999999999974,
  65.605,
  65.505,
  65.695,
  65.605,
  64.96999999999998,
  65.69500000000001,
  62.595,
  58.8,
  58.715,
  61.635000000000005,
  65.605,
  64.97,
  58.86,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.16499999999999,
  65.89999999999999,
  66.3,
  64.315,
  64.5,
  65.9,
  65.8,
  66.1,
  65.89999999999999,
  65.80000000000001,
  66.13,
  65.89999999999999,
  63.675,
  65.89999999999999,
  65.89999999999999,
  63.67499999999998,
  65.80000000000001,
  66.22,
  65.89999999999999,
  63.67499999999998,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27,
  65.8,
  65.27,
  65.27,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.79999999999998,
  65.27,
  65.60000000000001,
  65.27000000000001,
  65.79999999999998,
  65.27000000000001,
  61.349999999999994,
  65.8],
 [65.76,
  65.88,
  65.88,
  65.88,
  65.88,
  65.17999999999998,
  65.88,
  65.76,
  65.17999999999999,
  65.88,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.17999999999998,
  65.76,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.88,
  65.88],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.425000000000004,
 56.144999999999996,
 59.205,
 54.875,
 52.0,
 54.11000000000001,
 57.17999999999999,
 37.54,
 44.7,
 30.145,
 47.915,
 50.98499999999999,
 47.50999999999999,
 52.339999999999996,
 56.529999999999994,
 36.88,
 51.585,
 49.265,
 45.525,
 44.440000000000005,
 35.025000000000006,
 55.614999999999995,
 53.724999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.1125
Upper: 55.245
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 61.685,
 65.2,
 61.815,
 57.6,
 57.325,
 59.16999999999999,
 65.585,
 60.870000000000005,
 65.2,
 54.885,
 54.77499999999999,
 53.595,
 59.47,
 57.24,
 59.994999999999976,
 56.55499999999999,
 52.595,
 49.03000000000001,
 57.055,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 61.2775
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 3
killed = 17
cloned = 7
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.63,
 63.04,
 65.7,
 60.769999999999996,
 61.905,
 61.83,
 59.589999999999975,
 65.63,
 62.980000000000004,
 65.69999999999999,
 65.63,
 63.36499999999999,
 65.7,
 63.04499999999999,
 57.114999999999995,
 59.81999999999998,
 62.08500000000001,
 60.769999999999996,
 65.63,
 57.16499999999999,
 61.974999999999994,
 61.974999999999994,
 65.7]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.3
Upper: 65.63
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 17, 19]
lower threshold: []
....................................
upper threshold: [0, 18]
upper:           [2, 9, 12, 22, 7, 10]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 7
killed = 17
cloned = 10
killed = 19
######################################
~~~ Scores: ~~~
[65.88,
 66.18,
 65.94,
 65.94,
 64.845,
 65.10000000000001,
 65.94,
 65.88,
 66.32,
 65.94,
 65.88,
 66.21,
 65.94,
 64.60499999999999,
 65.94,
 65.94,
 64.60499999999999,
 65.88,
 65.88,
 65.88,
 64.60499999999999,
 64.60499999999999,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.49000000000001
Upper: 65.94
====================================
lower list size: 6
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 3, 9, 12, 14, 22]
upper:           [1, 8, 11, 6, 15]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 6
killed = 16
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[65.76,
 65.46999999999998,
 65.88,
 65.88,
 65.47,
 65.46999999999998,
 65.88,
 65.76,
 65.47,
 65.88,
 65.76,
 65.46999999999998,
 65.88,
 65.47,
 65.88,
 65.88,
 65.88,
 65.76,
 65.76,
 65.76,
 65.88,
 63.209999999999994,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 4
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 11, 21, 8]
lower threshold: [4, 13]
....................................
upper threshold: [9, 12, 20, 22]
upper:           [16, 6, 14, 3, 2, 15]
====================================
cloned = 16
killed = 1
cloned = 6
killed = 5
cloned = 14
killed = 11
cloned = 3
killed = 21
cloned = 2
killed = 8
######################################
~~~ Scores: ~~~
[65.92,
 65.96,
 65.96000000000001,
 65.96000000000001,
 65.37999999999998,
 65.96,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.37999999999998,
 65.96000000000001,
 65.96,
 65.96,
 65.92,
 65.92,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.92
Upper: 65.96000000000001
====================================
lower list size: 2
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 0, 10, 17]
lower threshold: [7, 18, 19]
....................................
upper threshold: [8, 9, 20, 21, 22]
upper:           [12, 11, 2, 3, 6, 14]
====================================
cloned = 12
killed = 4
cloned = 11
killed = 13
cloned = 2
killed = 0
cloned = 3
killed = 10
cloned = 6
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 5, 15, 13]
lower threshold: [1, 2, 3, 4, 6, 7, 8, 11, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 14, 12, 10, 19]
====================================
cloned = 9
killed = 20
cloned = 0
killed = 16
cloned = 14
killed = 5
cloned = 12
killed = 15
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 15, 3, 16, 0]
lower threshold: [2, 4, 5, 9, 12, 13, 14, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 1, 21, 10, 6, 7]
====================================
cloned = 11
killed = 8
cloned = 1
killed = 15
cloned = 21
killed = 3
cloned = 10
killed = 16
cloned = 6
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 2, 5, 0]
lower threshold: [3, 4, 6, 10, 12, 13, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 9, 7, 15, 11, 14]
====================================
cloned = 17
killed = 8
cloned = 9
killed = 1
cloned = 7
killed = 2
cloned = 15
killed = 5
cloned = 11
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 10, 13, 18, 16]
lower threshold: [0, 1, 2, 3, 4, 7, 9, 11, 14, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 12, 19, 5, 15, 21]
====================================
cloned = 6
killed = 8
cloned = 12
killed = 10
cloned = 19
killed = 13
cloned = 5
killed = 18
cloned = 15
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 16, 2, 5]
lower threshold: [0, 4, 6, 8, 11, 12, 13, 14, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 15, 9, 1, 7, 21]
====================================
cloned = 10
killed = 3
cloned = 15
killed = 20
cloned = 9
killed = 16
cloned = 1
killed = 2
cloned = 7
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 11, 6, 1]
lower threshold: [0, 3, 4, 5, 7, 10, 14, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 15, 17, 9, 12, 21]
====================================
cloned = 13
killed = 2
cloned = 15
killed = 8
cloned = 17
killed = 11
cloned = 9
killed = 6
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 6, 17, 14, 10]
lower threshold: [0, 3, 5, 7, 8, 9, 11, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 12, 13, 1, 4]
====================================
cloned = 20
killed = 2
cloned = 18
killed = 6
cloned = 12
killed = 17
cloned = 13
killed = 14
cloned = 1
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 9, 18, 16, 13]
lower threshold: [0, 1, 2, 3, 4, 5, 7, 10, 12, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 11, 6, 19, 20, 14]
====================================
cloned = 8
killed = 15
cloned = 11
killed = 9
cloned = 6
killed = 18
cloned = 19
killed = 16
cloned = 20
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 14, 20, 17, 15]
lower threshold: [1, 2, 4, 5, 6, 9, 10, 12, 13, 16, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 18, 7, 21, 0, 3]
====================================
cloned = 11
killed = 8
cloned = 18
killed = 14
cloned = 7
killed = 20
cloned = 21
killed = 17
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 17, 9, 7]
lower threshold: [0, 1, 3, 4, 5, 10, 12, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 18, 13, 21, 8, 6]
====================================
cloned = 14
killed = 11
cloned = 18
killed = 2
cloned = 13
killed = 17
cloned = 21
killed = 9
cloned = 8
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 13, 4, 16]
lower threshold: [1, 2, 6, 7, 8, 9, 14, 15, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 5, 18, 17, 3]
====================================
cloned = 12
killed = 10
cloned = 0
killed = 11
cloned = 5
killed = 13
cloned = 18
killed = 4
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 7, 4, 20, 2]
lower threshold: [0, 6, 9, 10, 12, 13, 14, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 8, 3, 11, 5, 1]
====================================
cloned = 16
killed = 19
cloned = 8
killed = 7
cloned = 3
killed = 4
cloned = 11
killed = 20
cloned = 5
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 21, 11, 13]
lower threshold: [0, 4, 5, 6, 7, 9, 12, 14, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 19, 18, 17, 10, 2]
====================================
cloned = 8
killed = 1
cloned = 19
killed = 3
cloned = 18
killed = 21
cloned = 17
killed = 11
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 14, 2, 16, 0]
lower threshold: [1, 3, 6, 8, 9, 11, 12, 13, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 18, 5, 4, 15]
====================================
cloned = 20
killed = 10
cloned = 7
killed = 14
cloned = 18
killed = 2
cloned = 5
killed = 16
cloned = 4
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 6, 8, 10, 14]
lower threshold: [3, 4, 5, 9, 11, 13, 15, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 12, 7, 1, 16, 17]
====================================
cloned = 0
killed = 2
cloned = 12
killed = 6
cloned = 7
killed = 8
cloned = 1
killed = 10
cloned = 16
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 17, 1, 20, 12]
lower threshold: [4, 6, 8, 10, 11, 13, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 0, 7, 14, 3, 2]
====================================
cloned = 5
killed = 9
cloned = 0
killed = 17
cloned = 7
killed = 1
cloned = 14
killed = 20
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 8, 13, 14, 9]
lower threshold: [2, 3, 4, 5, 6, 7, 10, 12, 15, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 1, 11, 0, 21, 17]
====================================
cloned = 20
killed = 19
cloned = 1
killed = 8
cloned = 11
killed = 13
cloned = 0
killed = 14
cloned = 21
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 17, 6, 15, 5]
lower threshold: [0, 3, 4, 9, 11, 12, 13, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 18, 1, 8, 7]
====================================
cloned = 14
killed = 10
cloned = 2
killed = 17
cloned = 18
killed = 6
cloned = 1
killed = 15
cloned = 8
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 2, 11, 16, 7]
lower threshold: [0, 1, 5, 6, 8, 9, 12, 13, 14, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 3, 15, 20, 10, 4]
====================================
cloned = 19
killed = 17
cloned = 3
killed = 2
cloned = 15
killed = 11
cloned = 20
killed = 16
cloned = 10
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 6, 8, 0, 4]
lower threshold: [3, 5, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 1, 9, 17, 2, 18]
====================================
cloned = 14
killed = 7
cloned = 1
killed = 6
cloned = 9
killed = 8
cloned = 17
killed = 0
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 1, 5, 15]
lower threshold: [0, 2, 6, 8, 10, 11, 14, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 3, 20, 13, 9, 4]
====================================
cloned = 16
killed = 7
cloned = 3
killed = 12
cloned = 20
killed = 1
cloned = 13
killed = 5
cloned = 9
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 18, 17, 3, 6]
lower threshold: [0, 4, 5, 8, 9, 10, 12, 13, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 15, 11, 7, 1, 2]
====================================
cloned = 14
killed = 19
cloned = 15
killed = 18
cloned = 11
killed = 17
cloned = 7
killed = 3
cloned = 1
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 14, 0, 12]
lower threshold: [1, 2, 3, 4, 5, 6, 9, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 20, 10, 7, 16]
====================================
cloned = 8
killed = 15
cloned = 13
killed = 11
cloned = 20
killed = 14
cloned = 10
killed = 0
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 21, 13, 18, 12]
lower threshold: [0, 1, 2, 4, 5, 8, 9, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 11, 14, 6, 7, 3]
====================================
cloned = 17
killed = 10
cloned = 11
killed = 21
cloned = 14
killed = 13
cloned = 6
killed = 18
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 15, 16, 19, 2]
lower threshold: [0, 1, 3, 4, 5, 7, 8, 12, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 20, 11, 6, 9]
====================================
cloned = 14
killed = 10
cloned = 13
killed = 15
cloned = 20
killed = 16
cloned = 11
killed = 19
cloned = 6
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 7, 12, 15]
lower threshold: [0, 1, 2, 6, 8, 13, 16, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 3, 10, 14, 5, 21]
====================================
cloned = 9
killed = 11
cloned = 3
killed = 4
cloned = 10
killed = 7
cloned = 14
killed = 12
cloned = 5
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 10, 9, 12]
lower threshold: [1, 3, 4, 7, 8, 11, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 21, 6, 0, 20, 13]
====================================
cloned = 17
killed = 2
cloned = 21
killed = 5
cloned = 6
killed = 10
cloned = 0
killed = 9
cloned = 20
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 4, 2, 13]
lower threshold: [3, 7, 8, 9, 12, 15, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 11, 1, 0, 17, 14]
====================================
cloned = 5
killed = 10
cloned = 11
killed = 6
cloned = 1
killed = 4
cloned = 0
killed = 2
cloned = 17
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 17, 5, 3]
lower threshold: [0, 4, 8, 9, 10, 11, 13, 14, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 21, 12, 7, 15, 19]
====================================
cloned = 2
killed = 1
cloned = 21
killed = 6
cloned = 12
killed = 17
cloned = 7
killed = 5
cloned = 15
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 4, 19, 14]
lower threshold: [1, 2, 5, 7, 8, 10, 11, 13, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 16, 18, 9, 17]
====================================
cloned = 12
killed = 0
cloned = 6
killed = 3
cloned = 16
killed = 4
cloned = 18
killed = 19
cloned = 9
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 17, 13, 21, 6]
lower threshold: [1, 3, 4, 5, 8, 9, 10, 11, 12, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 20, 18, 16, 2, 0]
====================================
cloned = 7
killed = 14
cloned = 20
killed = 17
cloned = 18
killed = 13
cloned = 16
killed = 21
cloned = 2
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 7, 9, 0]
lower threshold: [3, 4, 5, 6, 13, 14, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 11, 17, 20, 10, 8]
====================================
cloned = 12
killed = 1
cloned = 11
killed = 2
cloned = 17
killed = 7
cloned = 20
killed = 9
cloned = 10
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 8, 14, 2, 4]
lower threshold: [0, 1, 5, 6, 9, 10, 11, 12, 13, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 20, 18, 15, 3, 16]
====================================
cloned = 7
killed = 19
cloned = 20
killed = 8
cloned = 18
killed = 14
cloned = 15
killed = 2
cloned = 3
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 17, 8, 16]
lower threshold: [3, 5, 7, 9, 11, 13, 14, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 2, 21, 1, 6, 4]
====================================
cloned = 12
killed = 0
cloned = 2
killed = 10
cloned = 21
killed = 17
cloned = 1
killed = 8
cloned = 6
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 3, 1, 20]
lower threshold: [0, 2, 4, 5, 6, 8, 10, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 11, 18, 14, 21, 13]
====================================
cloned = 7
killed = 12
cloned = 11
killed = 9
cloned = 18
killed = 3
cloned = 14
killed = 1
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 21, 4, 20, 14]
lower threshold: [2, 5, 6, 9, 11, 12, 15, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 10, 3, 8, 7, 13]
====================================
cloned = 0
killed = 1
cloned = 10
killed = 21
cloned = 3
killed = 4
cloned = 8
killed = 20
cloned = 7
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 0, 1, 18, 8]
lower threshold: [2, 3, 7, 9, 11, 12, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 14, 13, 10, 5, 4]
====================================
cloned = 15
killed = 6
cloned = 14
killed = 0
cloned = 13
killed = 1
cloned = 10
killed = 18
cloned = 5
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 13, 17, 11, 3]
lower threshold: [2, 4, 7, 8, 10, 12, 14, 15, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 16, 5, 20, 9]
====================================
cloned = 0
killed = 1
cloned = 6
killed = 13
cloned = 16
killed = 17
cloned = 5
killed = 11
cloned = 20
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 17, 8, 6, 10]
lower threshold: [1, 5, 7, 9, 11, 12, 13, 15, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 2, 14, 4, 0]
====================================
cloned = 3
killed = 16
cloned = 18
killed = 17
cloned = 2
killed = 8
cloned = 14
killed = 6
cloned = 4
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 10, 11, 0, 19]
lower threshold: [1, 3, 4, 5, 6, 8, 9, 13, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 2, 15, 7, 21, 12]
====================================
cloned = 16
killed = 14
cloned = 2
killed = 10
cloned = 15
killed = 11
cloned = 7
killed = 0
cloned = 21
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 5, 16, 20]
lower threshold: [0, 1, 3, 9, 10, 11, 14, 15, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 8, 13, 2, 4, 6]
====================================
cloned = 12
killed = 17
cloned = 8
killed = 7
cloned = 13
killed = 5
cloned = 2
killed = 16
cloned = 4
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 1, 20, 15, 18]
lower threshold: [2, 3, 5, 7, 8, 10, 11, 12, 13, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 0, 6, 16, 9, 17]
====================================
cloned = 14
killed = 4
cloned = 0
killed = 1
cloned = 6
killed = 20
cloned = 16
killed = 15
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 13, 5, 18, 20]
lower threshold: [0, 2, 3, 4, 9, 10, 15, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 14, 11, 1, 6, 8]
====================================
cloned = 12
killed = 7
cloned = 14
killed = 13
cloned = 11
killed = 5
cloned = 1
killed = 18
cloned = 6
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 19, 17, 8, 1]
lower threshold: [0, 3, 5, 6, 9, 10, 12, 13, 14, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 4, 2, 11, 7, 16]
====================================
cloned = 15
killed = 21
cloned = 4
killed = 19
cloned = 2
killed = 17
cloned = 11
killed = 8
cloned = 7
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 19, 1, 14, 17]
lower threshold: [0, 3, 5, 8, 10, 11, 13, 15, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 6, 4, 12, 9, 21]
====================================
cloned = 2
killed = 7
cloned = 6
killed = 19
cloned = 4
killed = 1
cloned = 12
killed = 14
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 9, 20, 21]
lower threshold: [1, 2, 6, 8, 10, 11, 12, 14, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 5, 3, 13, 7, 17]
====================================
cloned = 0
killed = 4
cloned = 5
killed = 15
cloned = 3
killed = 9
cloned = 13
killed = 20
cloned = 7
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 21, 9, 6]
lower threshold: [0, 2, 4, 5, 7, 8, 11, 12, 14, 15, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 17, 1, 18, 20]
====================================
cloned = 10
killed = 13
cloned = 19
killed = 3
cloned = 17
killed = 21
cloned = 1
killed = 9
cloned = 18
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 15, 11, 16, 10]
lower threshold: [1, 3, 5, 7, 12, 13, 14, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 2, 4, 19, 6]
====================================
cloned = 9
killed = 8
cloned = 0
killed = 15
cloned = 2
killed = 11
cloned = 4
killed = 16
cloned = 19
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 2, 11, 18]
lower threshold: [1, 4, 8, 10, 13, 14, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 7, 12, 19, 5]
====================================
cloned = 9
killed = 6
cloned = 0
killed = 3
cloned = 7
killed = 2
cloned = 12
killed = 11
cloned = 19
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 8, 18, 2, 11]
lower threshold: [0, 3, 5, 9, 12, 13, 14, 15, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 4, 19, 21, 1]
====================================
cloned = 7
killed = 6
cloned = 10
killed = 8
cloned = 4
killed = 18
cloned = 19
killed = 2
cloned = 21
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 19, 13, 18, 16]
lower threshold: [0, 1, 2, 4, 5, 6, 7, 8, 9, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 14, 3, 10, 11, 21]
====================================
cloned = 12
killed = 15
cloned = 14
killed = 19
cloned = 3
killed = 13
cloned = 10
killed = 18
cloned = 11
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 13, 8, 4, 12]
lower threshold: [0, 1, 2, 3, 5, 6, 7, 14, 15, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 9, 11, 21, 10, 18]
====================================
cloned = 16
killed = 19
cloned = 9
killed = 13
cloned = 11
killed = 8
cloned = 21
killed = 4
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 20, 11, 17, 5]
lower threshold: [2, 3, 4, 6, 10, 13, 14, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 7, 0, 8, 9, 12]
====================================
cloned = 1
killed = 19
cloned = 7
killed = 20
cloned = 0
killed = 11
cloned = 8
killed = 17
cloned = 9
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 9, 10, 18]
lower threshold: [0, 3, 6, 11, 13, 14, 15, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 1, 2, 8, 17, 12]
====================================
cloned = 5
killed = 7
cloned = 1
killed = 4
cloned = 2
killed = 9
cloned = 8
killed = 10
cloned = 17
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 9, 7, 2]
lower threshold: [0, 1, 4, 6, 8, 12, 13, 14, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 21, 17, 19, 5, 10]
====================================
cloned = 15
killed = 3
cloned = 21
killed = 11
cloned = 17
killed = 9
cloned = 19
killed = 7
cloned = 5
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 4, 20, 16]
lower threshold: [0, 5, 7, 9, 10, 11, 12, 14, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 6, 21, 18, 13]
====================================
cloned = 1
killed = 3
cloned = 8
killed = 2
cloned = 6
killed = 4
cloned = 21
killed = 20
cloned = 18
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 21, 18, 20]
lower threshold: [2, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 8, 11, 16, 0, 19]
====================================
cloned = 4
killed = 1
cloned = 8
killed = 3
cloned = 11
killed = 21
cloned = 16
killed = 18
cloned = 0
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 18, 3, 11, 9]
lower threshold: [0, 1, 2, 5, 12, 14, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 6, 8, 13, 10, 19]
====================================
cloned = 7
killed = 4
cloned = 6
killed = 18
cloned = 8
killed = 3
cloned = 13
killed = 11
cloned = 10
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 18, 5, 8, 6]
lower threshold: [1, 3, 7, 11, 12, 13, 14, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 4, 9, 21, 2, 0]
====================================
cloned = 10
killed = 20
cloned = 4
killed = 18
cloned = 9
killed = 5
cloned = 21
killed = 8
cloned = 2
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 0, 19, 9, 21]
lower threshold: [2, 4, 6, 7, 8, 12, 13, 14, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 10, 5, 1, 11, 3]
====================================
cloned = 20
killed = 15
cloned = 10
killed = 0
cloned = 5
killed = 19
cloned = 1
killed = 9
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 21, 17, 3, 7]
lower threshold: [0, 1, 2, 4, 5, 6, 9, 11, 13, 14, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 12, 10, 15, 20, 8]
====================================
cloned = 16
killed = 18
cloned = 12
killed = 21
cloned = 10
killed = 17
cloned = 15
killed = 3
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 21, 19, 2, 6]
lower threshold: [0, 3, 4, 7, 10, 12, 13, 14, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 17, 1, 8, 11, 16]
====================================
cloned = 9
killed = 5
cloned = 17
killed = 21
cloned = 1
killed = 19
cloned = 8
killed = 2
cloned = 11
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 14, 6, 11, 7]
lower threshold: [0, 5, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 13, 3, 2, 1]
====================================
cloned = 12
killed = 19
cloned = 4
killed = 14
cloned = 13
killed = 6
cloned = 3
killed = 11
cloned = 2
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 5, 7, 14, 0]
lower threshold: [2, 3, 6, 9, 10, 11, 12, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 8, 15, 1, 20]
====================================
cloned = 13
killed = 16
cloned = 4
killed = 5
cloned = 8
killed = 7
cloned = 15
killed = 14
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 13, 15, 17]
lower threshold: [2, 4, 6, 8, 9, 11, 12, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 14, 3, 7, 18, 1]
====================================
cloned = 0
killed = 10
cloned = 14
killed = 5
cloned = 3
killed = 13
cloned = 7
killed = 15
cloned = 18
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 5, 14, 0]
lower threshold: [1, 3, 4, 6, 7, 9, 11, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 13, 10, 18, 17, 2]
====================================
cloned = 20
killed = 8
cloned = 13
killed = 12
cloned = 10
killed = 5
cloned = 18
killed = 14
cloned = 17
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 21, 13, 2]
lower threshold: [4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 19, 17, 7, 18, 1]
====================================
cloned = 9
killed = 3
cloned = 19
killed = 0
cloned = 17
killed = 21
cloned = 7
killed = 13
cloned = 18
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 4, 17, 0, 10]
lower threshold: [7, 8, 9, 12, 14, 15, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 5, 1, 2, 11, 3]
====================================
cloned = 6
killed = 13
cloned = 5
killed = 4
cloned = 1
killed = 17
cloned = 2
killed = 0
cloned = 11
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 20, 5, 3, 12]
lower threshold: [0, 2, 4, 6, 8, 10, 11, 13, 14, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 9, 17, 19, 16, 7]
====================================
cloned = 1
killed = 15
cloned = 9
killed = 20
cloned = 17
killed = 5
cloned = 19
killed = 3
cloned = 16
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 5, 20, 4]
lower threshold: [0, 1, 3, 9, 12, 13, 14, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 8, 18, 10, 17, 11]
====================================
cloned = 2
killed = 6
cloned = 8
killed = 7
cloned = 18
killed = 5
cloned = 10
killed = 20
cloned = 17
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 21, 8, 1]
lower threshold: [0, 2, 4, 5, 6, 9, 14, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 3, 16, 10, 13, 7]
====================================
cloned = 17
killed = 11
cloned = 3
killed = 12
cloned = 16
killed = 21
cloned = 10
killed = 8
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 0, 19, 3]
lower threshold: [1, 4, 7, 8, 9, 10, 12, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 15, 2, 5, 11, 20]
====================================
cloned = 6
killed = 13
cloned = 15
killed = 17
cloned = 2
killed = 0
cloned = 5
killed = 19
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 20, 17, 10, 7]
lower threshold: [0, 1, 2, 3, 4, 8, 11, 12, 13, 14, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 18, 6, 5, 15, 19]
====================================
cloned = 9
killed = 16
cloned = 18
killed = 20
cloned = 6
killed = 17
cloned = 5
killed = 10
cloned = 15
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 20, 1, 13]
lower threshold: [0, 2, 3, 4, 10, 11, 12, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 18, 7, 15, 8, 9]
====================================
cloned = 14
killed = 6
cloned = 18
killed = 5
cloned = 7
killed = 20
cloned = 15
killed = 1
cloned = 8
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 13, 3, 6]
lower threshold: [2, 5, 7, 8, 10, 12, 15, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 14, 0, 21, 20, 11]
====================================
cloned = 4
killed = 1
cloned = 14
killed = 9
cloned = 0
killed = 13
cloned = 21
killed = 3
cloned = 20
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 14, 15, 3]
lower threshold: [0, 1, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 10, 13, 12, 9, 16]
====================================
cloned = 2
killed = 11
cloned = 10
killed = 8
cloned = 13
killed = 14
cloned = 12
killed = 15
cloned = 9
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 19, 15, 4, 16]
lower threshold: [0, 1, 6, 8, 9, 12, 13, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 5, 7, 11, 10, 2]
====================================
cloned = 3
killed = 14
cloned = 5
killed = 19
cloned = 7
killed = 15
cloned = 11
killed = 4
cloned = 10
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 10, 1, 19, 11]
lower threshold: [0, 3, 4, 5, 6, 7, 13, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 2, 17, 15, 12]
====================================
cloned = 14
killed = 8
cloned = 9
killed = 10
cloned = 2
killed = 1
cloned = 17
killed = 19
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 21, 1, 3]
lower threshold: [0, 5, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 7, 17, 12, 6, 8]
====================================
cloned = 2
killed = 9
cloned = 7
killed = 4
cloned = 17
killed = 21
cloned = 12
killed = 1
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 1, 3, 15, 14]
lower threshold: [0, 2, 6, 7, 8, 11, 12, 13, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 10, 16, 17, 5, 9]
====================================
cloned = 21
killed = 4
cloned = 10
killed = 1
cloned = 16
killed = 3
cloned = 17
killed = 15
cloned = 5
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 1, 5, 12, 19]
lower threshold: [0, 2, 3, 4, 6, 8, 13, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 11, 7, 10, 9, 20]
====================================
cloned = 17
killed = 15
cloned = 11
killed = 1
cloned = 7
killed = 5
cloned = 10
killed = 12
cloned = 9
killed = 19
Trial run 7/seed 12907:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 3,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 6,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.425000000000004,
  56.144999999999996,
  59.205,
  54.875,
  52.0,
  54.11000000000001,
  57.17999999999999,
  37.54,
  44.7,
  30.145,
  47.915,
  50.98499999999999,
  47.50999999999999,
  52.339999999999996,
  56.529999999999994,
  36.88,
  51.585,
  49.265,
  45.525,
  44.440000000000005,
  35.025000000000006,
  55.614999999999995,
  53.724999999999994],
 [65.58500000000001,
  61.685,
  65.2,
  61.815,
  57.6,
  57.325,
  59.16999999999999,
  65.585,
  60.870000000000005,
  65.2,
  54.885,
  54.77499999999999,
  53.595,
  59.47,
  57.24,
  59.994999999999976,
  56.55499999999999,
  52.595,
  49.03000000000001,
  57.055,
  60.425,
  60.425,
  56.55],
 [65.63,
  63.04,
  65.7,
  60.769999999999996,
  61.905,
  61.83,
  59.589999999999975,
  65.63,
  62.980000000000004,
  65.69999999999999,
  65.63,
  63.36499999999999,
  65.7,
  63.04499999999999,
  57.114999999999995,
  59.81999999999998,
  62.08500000000001,
  60.769999999999996,
  65.63,
  57.16499999999999,
  61.974999999999994,
  61.974999999999994,
  65.7],
 [65.88,
  66.18,
  65.94,
  65.94,
  64.845,
  65.10000000000001,
  65.94,
  65.88,
  66.32,
  65.94,
  65.88,
  66.21,
  65.94,
  64.60499999999999,
  65.94,
  65.94,
  64.60499999999999,
  65.88,
  65.88,
  65.88,
  64.60499999999999,
  64.60499999999999,
  65.94],
 [65.76,
  65.46999999999998,
  65.88,
  65.88,
  65.47,
  65.46999999999998,
  65.88,
  65.76,
  65.47,
  65.88,
  65.76,
  65.46999999999998,
  65.88,
  65.47,
  65.88,
  65.88,
  65.88,
  65.76,
  65.76,
  65.76,
  65.88,
  63.209999999999994,
  65.88],
 [65.92,
  65.96,
  65.96000000000001,
  65.96000000000001,
  65.37999999999998,
  65.96,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.37999999999998,
  65.96000000000001,
  65.96,
  65.96,
  65.92,
  65.92,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.28000000000001,
 56.36,
 59.425,
 54.76,
 52.21,
 54.095000000000006,
 55.245,
 37.06,
 44.940000000000005,
 29.270000000000007,
 47.905,
 51.02499999999999,
 47.829999999999984,
 52.445,
 55.959999999999994,
 37.0,
 51.735,
 49.07,
 46.26,
 42.075,
 35.085,
 55.455,
 53.16]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.6
Upper: 55.0025
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 61.41,
 65.2,
 61.815,
 57.599999999999994,
 57.325,
 58.00999999999999,
 65.585,
 61.045,
 65.2,
 54.885,
 54.77499999999999,
 51.625,
 59.47,
 57.41,
 55.984999999999985,
 56.55499999999999,
 48.66499999999999,
 49.010000000000005,
 57.209999999999994,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.26749999999999
Upper: 61.2275
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 15, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 3
killed = 15
cloned = 7
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.64500000000001,
 65.68499999999999,
 65.715,
 60.785,
 61.99,
 61.845,
 59.934999999999974,
 65.645,
 65.155,
 65.71499999999999,
 65.64500000000001,
 65.25,
 65.715,
 63.05999999999999,
 59.665,
 60.785000000000004,
 62.10000000000001,
 65.64500000000001,
 65.715,
 59.87499999999999,
 61.989999999999995,
 61.989999999999995,
 62.099999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.9175
Upper: 65.64500000000001
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 6, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [0, 10, 17]
upper:           [1, 2, 9, 12, 18]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 5
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[65.73,
 66.6,
 65.815,
 66.44999999999999,
 63.12,
 65.815,
 65.815,
 65.73,
 66.585,
 65.815,
 65.73,
 66.49,
 65.815,
 63.375,
 65.815,
 65.815,
 62.894999999999996,
 65.73,
 65.815,
 62.87500000000001,
 62.83999999999999,
 62.84,
 62.894999999999996]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 63.2475
Upper: 65.815
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [5, 6, 9, 14, 15, 18]
upper:           [1, 3, 8, 11, 2, 12]
====================================
cloned = 1
killed = 4
cloned = 3
killed = 16
cloned = 8
killed = 19
cloned = 11
killed = 20
cloned = 2
killed = 21
cloned = 12
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.39,
 65.83999999999999,
 65.38999999999999,
 65.39,
 65.83999999999997,
 65.84,
 65.68,
 65.38999999999999,
 65.83999999999999,
 65.68,
 65.39,
 65.83999999999999,
 62.27999999999999,
 65.83999999999999,
 65.83999999999999,
 65.38999999999999,
 65.68,
 65.83999999999999,
 65.39,
 65.39,
 65.83999999999999,
 65.84]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.39
Upper: 65.83999999999999
====================================
lower list size: 4
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 13, 16, 19]
lower threshold: [1, 4, 11, 20]
....................................
upper threshold: [12, 18, 21]
upper:           [6, 22, 9, 14, 15, 2]
====================================
cloned = 6
killed = 3
cloned = 22
killed = 8
cloned = 9
killed = 13
cloned = 14
killed = 16
cloned = 15
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 65.29999999999998,
 65.92,
 65.92,
 65.29999999999998,
 65.91999999999999,
 65.91999999999999,
 65.84,
 65.91999999999999,
 65.91999999999999,
 65.84,
 65.29999999999998,
 65.92,
 65.91999999999999,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.84,
 65.91999999999999,
 65.91999999999999,
 65.29999999999998,
 65.92,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.84
Upper: 65.91999999999999
====================================
lower list size: 4
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 11, 20, 7]
lower threshold: [0, 10, 17]
....................................
upper threshold: [5, 6, 8, 9, 13, 15, 16, 18, 19]
upper:           [2, 3, 12, 14, 21, 22]
====================================
cloned = 2
killed = 1
cloned = 3
killed = 4
cloned = 12
killed = 11
cloned = 14
killed = 20
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 11, 16, 20, 17]
lower threshold: [0, 1, 2, 4, 5, 8, 9, 15, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 3, 14, 12, 6]
====================================
cloned = 7
killed = 13
cloned = 10
killed = 11
cloned = 3
killed = 16
cloned = 14
killed = 20
cloned = 12
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 21, 17, 3]
lower threshold: [4, 6, 7, 12, 13, 14, 15, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 10, 2, 5, 0, 9]
====================================
cloned = 1
killed = 11
cloned = 10
killed = 8
cloned = 2
killed = 21
cloned = 5
killed = 17
cloned = 0
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 5, 13, 1, 3]
lower threshold: [2, 4, 6, 7, 8, 9, 10, 11, 14, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 20, 0, 16, 19, 15]
====================================
cloned = 18
killed = 12
cloned = 20
killed = 5
cloned = 0
killed = 13
cloned = 16
killed = 1
cloned = 19
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 10, 3, 4, 15]
lower threshold: [1, 2, 6, 7, 8, 13, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 11, 5, 0, 12, 18]
====================================
cloned = 9
killed = 14
cloned = 11
killed = 10
cloned = 5
killed = 3
cloned = 0
killed = 4
cloned = 12
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 11, 5, 10, 3]
lower threshold: [0, 1, 4, 6, 8, 9, 13, 14, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 2, 7, 20, 19]
====================================
cloned = 12
killed = 18
cloned = 15
killed = 11
cloned = 2
killed = 5
cloned = 7
killed = 10
cloned = 20
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 7, 10, 14]
lower threshold: [2, 3, 4, 8, 11, 13, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 6, 1, 17, 12, 20]
====================================
cloned = 9
killed = 5
cloned = 6
killed = 0
cloned = 1
killed = 7
cloned = 17
killed = 10
cloned = 12
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 19, 20, 14, 9]
lower threshold: [1, 2, 3, 4, 5, 7, 11, 12, 13, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 6, 10, 0, 8, 15]
====================================
cloned = 18
killed = 21
cloned = 6
killed = 19
cloned = 10
killed = 20
cloned = 0
killed = 14
cloned = 8
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 18, 10, 14, 5]
lower threshold: [1, 2, 3, 4, 6, 8, 9, 11, 12, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 20, 13, 0, 15, 21]
====================================
cloned = 19
killed = 7
cloned = 20
killed = 18
cloned = 13
killed = 10
cloned = 0
killed = 14
cloned = 15
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 2, 3, 12]
lower threshold: [0, 6, 7, 9, 10, 11, 14, 15, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 18, 5, 1, 8, 16]
====================================
cloned = 19
killed = 4
cloned = 18
killed = 13
cloned = 5
killed = 2
cloned = 1
killed = 3
cloned = 8
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 11, 17, 10]
lower threshold: [3, 5, 7, 8, 9, 12, 13, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 20, 19, 1, 0, 14]
====================================
cloned = 2
killed = 6
cloned = 20
killed = 4
cloned = 19
killed = 11
cloned = 1
killed = 17
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 19, 11, 18, 3]
lower threshold: [0, 1, 2, 5, 6, 7, 10, 12, 14, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 13, 16, 8, 4, 9]
====================================
cloned = 21
killed = 15
cloned = 13
killed = 19
cloned = 16
killed = 11
cloned = 8
killed = 18
cloned = 4
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 20, 18, 3]
lower threshold: [2, 5, 8, 10, 11, 12, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 13, 6, 16, 0, 7]
====================================
cloned = 1
killed = 9
cloned = 13
killed = 4
cloned = 6
killed = 20
cloned = 16
killed = 18
cloned = 0
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 21, 9, 11, 10]
lower threshold: [0, 1, 2, 4, 5, 7, 8, 14, 15, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 3, 16, 19, 13, 6]
====================================
cloned = 12
killed = 18
cloned = 3
killed = 21
cloned = 16
killed = 9
cloned = 19
killed = 11
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 8, 3, 18]
lower threshold: [0, 2, 4, 6, 7, 11, 13, 14, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 9, 10, 19, 16]
====================================
cloned = 15
killed = 5
cloned = 12
killed = 1
cloned = 9
killed = 8
cloned = 10
killed = 3
cloned = 19
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 9, 21, 11, 13]
lower threshold: [0, 1, 2, 4, 5, 8, 10, 15, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 12, 17, 14, 6, 7]
====================================
cloned = 19
killed = 3
cloned = 12
killed = 9
cloned = 17
killed = 21
cloned = 14
killed = 11
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 7, 8, 4, 15]
lower threshold: [0, 1, 2, 3, 5, 6, 9, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 11, 10, 18, 14, 13]
====================================
cloned = 12
killed = 20
cloned = 11
killed = 7
cloned = 10
killed = 8
cloned = 18
killed = 4
cloned = 14
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 17, 16, 7, 14]
lower threshold: [0, 1, 4, 6, 9, 10, 12, 13, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 2, 19, 3, 8, 11]
====================================
cloned = 21
killed = 5
cloned = 2
killed = 17
cloned = 19
killed = 16
cloned = 3
killed = 7
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 18, 0, 13]
lower threshold: [1, 2, 4, 5, 6, 9, 10, 11, 14, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 17, 21, 8, 16, 15]
====================================
cloned = 7
killed = 12
cloned = 17
killed = 3
cloned = 21
killed = 18
cloned = 8
killed = 0
cloned = 16
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 15, 2, 7, 20]
lower threshold: [3, 5, 6, 8, 9, 10, 12, 13, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 11, 0, 1, 4, 14]
====================================
cloned = 16
killed = 19
cloned = 11
killed = 15
cloned = 0
killed = 2
cloned = 1
killed = 7
cloned = 4
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 3, 20, 18]
lower threshold: [0, 2, 4, 5, 6, 9, 11, 13, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 1, 7, 21, 10, 14]
====================================
cloned = 15
killed = 12
cloned = 1
killed = 8
cloned = 7
killed = 3
cloned = 21
killed = 20
cloned = 10
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 20, 10, 15]
lower threshold: [4, 5, 7, 8, 11, 12, 13, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 19, 17, 2, 0, 1]
====================================
cloned = 9
killed = 3
cloned = 19
killed = 6
cloned = 17
killed = 20
cloned = 2
killed = 10
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 20, 18, 12, 21]
lower threshold: [0, 1, 2, 3, 4, 8, 10, 14, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 9, 19, 7, 13, 11]
====================================
cloned = 6
killed = 5
cloned = 9
killed = 20
cloned = 19
killed = 18
cloned = 7
killed = 12
cloned = 13
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 19, 17, 2]
lower threshold: [1, 3, 4, 7, 8, 9, 11, 12, 14, 15, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 6, 18, 5, 21]
====================================
cloned = 10
killed = 20
cloned = 13
killed = 0
cloned = 6
killed = 19
cloned = 18
killed = 17
cloned = 5
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 11, 15, 9, 5]
lower threshold: [0, 1, 2, 3, 6, 8, 10, 12, 14, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 4, 16, 19, 7, 18]
====================================
cloned = 17
killed = 13
cloned = 4
killed = 11
cloned = 16
killed = 15
cloned = 19
killed = 9
cloned = 7
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 6, 21, 3, 9]
lower threshold: [0, 1, 2, 5, 12, 13, 14, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 11, 4, 10, 7, 16]
====================================
cloned = 8
killed = 18
cloned = 11
killed = 6
cloned = 4
killed = 21
cloned = 10
killed = 3
cloned = 7
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 0, 6, 15]
lower threshold: [2, 5, 7, 8, 10, 11, 12, 14, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 9, 4, 20, 3, 21]
====================================
cloned = 1
killed = 13
cloned = 9
killed = 16
cloned = 4
killed = 0
cloned = 20
killed = 6
cloned = 3
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 0, 1, 17, 5]
lower threshold: [4, 6, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 14, 2, 3, 8, 7]
====================================
cloned = 9
killed = 15
cloned = 14
killed = 0
cloned = 2
killed = 1
cloned = 3
killed = 17
cloned = 8
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 10, 5, 0]
lower threshold: [1, 2, 3, 7, 8, 11, 12, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 4, 13, 14, 20, 18]
====================================
cloned = 17
killed = 9
cloned = 4
killed = 6
cloned = 13
killed = 10
cloned = 14
killed = 5
cloned = 20
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 2, 11, 9]
lower threshold: [0, 1, 3, 5, 7, 8, 13, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 15, 4, 20, 16, 12]
====================================
cloned = 14
killed = 10
cloned = 15
killed = 6
cloned = 4
killed = 2
cloned = 20
killed = 11
cloned = 16
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 15, 16, 17, 9]
lower threshold: [0, 3, 4, 5, 7, 8, 11, 13, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 2, 1, 10, 6, 12]
====================================
cloned = 18
killed = 14
cloned = 2
killed = 15
cloned = 1
killed = 16
cloned = 10
killed = 17
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 0, 5, 17, 2]
lower threshold: [3, 4, 8, 9, 10, 14, 15, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 7, 13, 12, 1, 6]
====================================
cloned = 11
killed = 19
cloned = 7
killed = 0
cloned = 13
killed = 5
cloned = 12
killed = 17
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 16, 4, 20]
lower threshold: [0, 1, 2, 3, 5, 7, 9, 13, 15, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 11, 19, 6, 12, 17]
====================================
cloned = 14
killed = 10
cloned = 11
killed = 8
cloned = 19
killed = 16
cloned = 6
killed = 4
cloned = 12
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 3, 4, 20]
lower threshold: [2, 5, 8, 9, 10, 12, 13, 14, 15, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 16, 1, 6, 19, 11]
====================================
cloned = 0
killed = 17
cloned = 16
killed = 7
cloned = 1
killed = 3
cloned = 6
killed = 4
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 21, 15, 3, 14]
lower threshold: [0, 1, 2, 4, 5, 6, 10, 11, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 12, 7, 9, 18, 8]
====================================
cloned = 13
killed = 19
cloned = 12
killed = 21
cloned = 7
killed = 15
cloned = 9
killed = 3
cloned = 18
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 5, 7, 11, 17]
lower threshold: [0, 1, 2, 3, 8, 9, 12, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 16, 10, 6, 13, 4]
====================================
cloned = 21
killed = 14
cloned = 16
killed = 5
cloned = 10
killed = 7
cloned = 6
killed = 11
cloned = 13
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 8, 18, 3, 6]
lower threshold: [0, 1, 2, 4, 7, 9, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 10, 14, 5, 11, 13]
====================================
cloned = 12
killed = 15
cloned = 10
killed = 8
cloned = 14
killed = 18
cloned = 5
killed = 3
cloned = 11
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 17, 18, 16, 2]
lower threshold: [0, 3, 4, 7, 8, 10, 11, 12, 13, 14, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 19, 6, 15, 5, 1]
====================================
cloned = 21
killed = 9
cloned = 19
killed = 17
cloned = 6
killed = 18
cloned = 15
killed = 16
cloned = 5
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 13, 11, 16]
lower threshold: [2, 3, 5, 7, 10, 12, 14, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 9, 4, 17, 0]
====================================
cloned = 15
killed = 6
cloned = 8
killed = 1
cloned = 9
killed = 13
cloned = 4
killed = 11
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 18, 2, 8, 21]
lower threshold: [0, 4, 7, 9, 12, 13, 14, 15, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 19, 6, 5, 10, 11]
====================================
cloned = 3
killed = 1
cloned = 19
killed = 18
cloned = 6
killed = 2
cloned = 5
killed = 8
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 11, 5, 8, 10]
lower threshold: [1, 2, 3, 4, 6, 7, 9, 13, 14, 15, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 21, 12, 19, 20, 18]
====================================
cloned = 0
killed = 16
cloned = 21
killed = 11
cloned = 12
killed = 5
cloned = 19
killed = 8
cloned = 20
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 18, 20, 9]
lower threshold: [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 21, 6, 5, 12, 17]
====================================
cloned = 4
killed = 7
cloned = 21
killed = 10
cloned = 6
killed = 18
cloned = 5
killed = 20
cloned = 12
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 15, 12, 10]
lower threshold: [0, 4, 5, 11, 13, 14, 16, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 21, 7, 9, 6]
====================================
cloned = 8
killed = 3
cloned = 1
killed = 2
cloned = 21
killed = 15
cloned = 7
killed = 12
cloned = 9
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 7, 3, 1, 9]
lower threshold: [0, 2, 4, 8, 11, 12, 13, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 10, 6, 5, 14]
====================================
cloned = 21
killed = 16
cloned = 18
killed = 7
cloned = 10
killed = 3
cloned = 6
killed = 1
cloned = 5
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 5, 13, 11, 0]
lower threshold: [1, 2, 4, 6, 8, 10, 14, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 7, 18, 9, 3, 15]
====================================
cloned = 16
killed = 12
cloned = 7
killed = 5
cloned = 18
killed = 13
cloned = 9
killed = 11
cloned = 3
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 13, 9, 12, 11]
lower threshold: [0, 1, 3, 4, 6, 8, 14, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 17, 16, 21, 5, 2]
====================================
cloned = 7
killed = 10
cloned = 17
killed = 13
cloned = 16
killed = 9
cloned = 21
killed = 12
cloned = 5
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 8, 12, 9, 20]
lower threshold: [1, 2, 4, 6, 7, 10, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 16, 0, 11, 5, 3]
====================================
cloned = 18
killed = 13
cloned = 16
killed = 8
cloned = 0
killed = 12
cloned = 11
killed = 9
cloned = 5
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 21, 0, 18]
lower threshold: [1, 5, 7, 9, 10, 11, 12, 14, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 15, 2, 4, 3, 20]
====================================
cloned = 6
killed = 8
cloned = 15
killed = 13
cloned = 2
killed = 21
cloned = 4
killed = 0
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 21, 11, 13, 20]
lower threshold: [2, 3, 5, 7, 8, 9, 10, 12, 14, 15, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 17, 18, 4, 19]
====================================
cloned = 0
killed = 1
cloned = 6
killed = 21
cloned = 17
killed = 11
cloned = 18
killed = 13
cloned = 4
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 15, 6, 20]
lower threshold: [1, 3, 8, 9, 10, 12, 14, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 0, 13, 16, 5, 2]
====================================
cloned = 7
killed = 11
cloned = 0
killed = 4
cloned = 13
killed = 15
cloned = 16
killed = 6
cloned = 5
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 1, 16, 5, 8]
lower threshold: [0, 2, 3, 4, 7, 9, 10, 11, 12, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 13, 20, 18, 14, 21]
====================================
cloned = 6
killed = 15
cloned = 13
killed = 1
cloned = 20
killed = 16
cloned = 18
killed = 5
cloned = 14
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 20, 18, 0, 15]
lower threshold: [2, 3, 5, 6, 8, 9, 12, 13, 14, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 11, 17, 16, 10, 1]
====================================
cloned = 7
killed = 4
cloned = 11
killed = 20
cloned = 17
killed = 18
cloned = 16
killed = 0
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 2, 14, 4]
lower threshold: [0, 1, 3, 8, 10, 12, 13, 16, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 7, 11, 15, 19, 9]
====================================
cloned = 5
killed = 20
cloned = 7
killed = 6
cloned = 11
killed = 2
cloned = 15
killed = 14
cloned = 19
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 20, 0, 2, 14]
lower threshold: [3, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 6, 8, 16, 1]
====================================
cloned = 13
killed = 17
cloned = 4
killed = 20
cloned = 6
killed = 0
cloned = 8
killed = 2
cloned = 16
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 0, 4, 20, 18]
lower threshold: [2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 12, 5, 10, 8, 1]
====================================
cloned = 21
killed = 6
cloned = 12
killed = 0
cloned = 5
killed = 4
cloned = 10
killed = 20
cloned = 8
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 20, 0, 19, 6]
lower threshold: [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 15, 8, 18, 14, 17]
====================================
cloned = 13
killed = 21
cloned = 15
killed = 20
cloned = 8
killed = 0
cloned = 18
killed = 19
cloned = 14
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 20, 8, 21, 6]
lower threshold: [0, 2, 3, 5, 7, 10, 12, 14, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 1, 19, 11, 9, 18]
====================================
cloned = 4
killed = 13
cloned = 1
killed = 20
cloned = 19
killed = 8
cloned = 11
killed = 21
cloned = 9
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 15, 9, 8, 2]
lower threshold: [1, 3, 4, 7, 10, 14, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 12, 6, 0, 11, 18]
====================================
cloned = 13
killed = 5
cloned = 12
killed = 15
cloned = 6
killed = 9
cloned = 0
killed = 8
cloned = 11
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 10, 9, 2]
lower threshold: [1, 3, 6, 11, 12, 14, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 8, 5, 7, 4, 15]
====================================
cloned = 0
killed = 13
cloned = 8
killed = 17
cloned = 5
killed = 10
cloned = 7
killed = 9
cloned = 4
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 14, 6, 13, 21]
lower threshold: [0, 3, 7, 8, 9, 10, 11, 12, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 19, 1, 4, 5, 20]
====================================
cloned = 18
killed = 2
cloned = 19
killed = 14
cloned = 1
killed = 6
cloned = 4
killed = 13
cloned = 5
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 6, 20, 4]
lower threshold: [0, 1, 2, 3, 8, 9, 12, 13, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 17, 14, 7, 5, 18]
====================================
cloned = 15
killed = 11
cloned = 17
killed = 10
cloned = 14
killed = 6
cloned = 7
killed = 20
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 13, 10, 8, 19]
lower threshold: [0, 1, 2, 3, 6, 7, 9, 12, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 14, 4, 18, 15, 5]
====================================
cloned = 11
killed = 16
cloned = 14
killed = 13
cloned = 4
killed = 10
cloned = 18
killed = 8
cloned = 15
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 9, 18, 5]
lower threshold: [2, 3, 4, 6, 7, 8, 11, 13, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 20, 15, 0, 21, 14]
====================================
cloned = 12
killed = 10
cloned = 20
killed = 1
cloned = 15
killed = 9
cloned = 0
killed = 18
cloned = 21
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 0, 14, 1, 15]
lower threshold: [4, 6, 7, 8, 10, 13, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 12, 17, 3, 11]
====================================
cloned = 9
killed = 2
cloned = 5
killed = 0
cloned = 12
killed = 14
cloned = 17
killed = 1
cloned = 3
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 4, 18, 15, 9]
lower threshold: [0, 1, 2, 3, 5, 6, 8, 13, 14, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 12, 11, 20, 10, 7]
====================================
cloned = 16
killed = 17
cloned = 12
killed = 4
cloned = 11
killed = 18
cloned = 20
killed = 15
cloned = 10
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 10, 9, 13]
lower threshold: [1, 2, 4, 5, 7, 11, 12, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 8, 14, 15, 6, 19]
====================================
cloned = 16
killed = 0
cloned = 8
killed = 3
cloned = 14
killed = 10
cloned = 15
killed = 9
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 15, 19, 6, 5]
lower threshold: [4, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 2, 9, 1, 3, 8]
====================================
cloned = 7
killed = 0
cloned = 2
killed = 15
cloned = 9
killed = 19
cloned = 1
killed = 6
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 14, 13, 8, 12]
lower threshold: [0, 2, 3, 6, 7, 9, 11, 16, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 5, 15, 4, 20, 1]
====================================
cloned = 10
killed = 19
cloned = 5
killed = 14
cloned = 15
killed = 13
cloned = 4
killed = 8
cloned = 20
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 21, 18, 20]
lower threshold: [1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 0, 3, 12, 19, 4]
====================================
cloned = 11
killed = 10
cloned = 0
killed = 9
cloned = 3
killed = 21
cloned = 12
killed = 18
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 14, 17, 18, 12]
lower threshold: [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 16, 1, 21, 15, 9]
====================================
cloned = 2
killed = 19
cloned = 16
killed = 14
cloned = 1
killed = 17
cloned = 21
killed = 18
cloned = 15
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 6, 12, 17]
lower threshold: [0, 2, 3, 5, 8, 9, 11, 13, 14, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 4, 1, 20, 16, 21]
====================================
cloned = 18
killed = 7
cloned = 4
killed = 10
cloned = 1
killed = 6
cloned = 20
killed = 12
cloned = 16
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 5, 20, 4]
lower threshold: [0, 2, 6, 7, 8, 10, 13, 14, 15, 16, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 1, 12, 18, 17, 3]
====================================
cloned = 11
killed = 9
cloned = 1
killed = 19
cloned = 12
killed = 5
cloned = 18
killed = 20
cloned = 17
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 13, 8, 15]
lower threshold: [1, 3, 5, 6, 11, 12, 14, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 2, 9, 7, 4, 20]
====================================
cloned = 18
killed = 0
cloned = 2
killed = 10
cloned = 9
killed = 13
cloned = 7
killed = 8
cloned = 4
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 18, 16, 2, 15]
lower threshold: [4, 6, 7, 8, 9, 11, 12, 13, 14, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 1, 10, 20, 3, 17]
====================================
cloned = 0
killed = 5
cloned = 1
killed = 18
cloned = 10
killed = 16
cloned = 20
killed = 2
cloned = 3
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 0, 21, 11]
lower threshold: [1, 3, 4, 5, 6, 12, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 20, 8, 17, 13, 2]
====================================
cloned = 9
killed = 7
cloned = 20
killed = 10
cloned = 8
killed = 0
cloned = 17
killed = 21
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 15, 8, 16, 0]
lower threshold: [1, 4, 5, 6, 9, 12, 13, 14, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 10, 7, 20, 19, 11]
====================================
cloned = 2
killed = 3
cloned = 10
killed = 15
cloned = 7
killed = 8
cloned = 20
killed = 16
cloned = 19
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 7, 3, 15, 19]
lower threshold: [1, 4, 5, 6, 8, 9, 12, 13, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 0, 11, 10, 17, 2]
====================================
cloned = 16
killed = 14
cloned = 0
killed = 7
cloned = 11
killed = 3
cloned = 10
killed = 15
cloned = 17
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 20, 10, 5]
lower threshold: [0, 1, 2, 7, 8, 9, 12, 14, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 13, 21, 3, 6, 11]
====================================
cloned = 19
killed = 4
cloned = 13
killed = 15
cloned = 21
killed = 20
cloned = 3
killed = 10
cloned = 6
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 5, 1, 4]
lower threshold: [0, 2, 7, 9, 10, 14, 15, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 11, 16, 8, 12, 13]
====================================
cloned = 6
killed = 3
cloned = 11
killed = 20
cloned = 16
killed = 5
cloned = 8
killed = 1
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 8, 20, 12, 21]
lower threshold: [0, 1, 2, 4, 5, 7, 10, 11, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 3, 13, 14, 16, 6]
====================================
cloned = 15
killed = 9
cloned = 3
killed = 8
cloned = 13
killed = 20
cloned = 14
killed = 12
cloned = 16
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 12, 16, 14]
lower threshold: [0, 3, 4, 7, 8, 11, 13, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 15, 6, 20, 1, 5]
====================================
cloned = 9
killed = 10
cloned = 15
killed = 2
cloned = 6
killed = 12
cloned = 20
killed = 16
cloned = 1
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 13, 3, 5]
lower threshold: [0, 1, 4, 10, 12, 14, 16, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 19, 9, 15, 6, 2]
====================================
cloned = 7
killed = 8
cloned = 19
killed = 11
cloned = 9
killed = 13
cloned = 15
killed = 3
cloned = 6
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 7, 8, 15, 14]
lower threshold: [0, 1, 3, 4, 9, 10, 12, 13, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 21, 11, 6, 5, 2]
====================================
cloned = 17
killed = 20
cloned = 21
killed = 7
cloned = 11
killed = 8
cloned = 6
killed = 15
cloned = 5
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 4, 6, 19]
lower threshold: [0, 5, 7, 11, 12, 13, 15, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 2, 8, 14, 10, 21]
====================================
cloned = 9
killed = 1
cloned = 2
killed = 3
cloned = 8
killed = 4
cloned = 14
killed = 6
cloned = 10
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 20, 8, 11, 16]
lower threshold: [1, 3, 4, 5, 6, 7, 10, 13, 14, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 0, 9, 18, 17]
====================================
cloned = 15
killed = 2
cloned = 12
killed = 20
cloned = 0
killed = 8
cloned = 9
killed = 11
cloned = 18
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 16, 8, 2, 1]
lower threshold: [3, 4, 6, 10, 11, 12, 14, 15, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 13, 0, 9, 19, 7]
====================================
cloned = 21
killed = 5
cloned = 13
killed = 16
cloned = 0
killed = 8
cloned = 9
killed = 2
cloned = 19
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 16, 21, 20, 1]
lower threshold: [0, 2, 3, 5, 7, 9, 10, 11, 13, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 6, 17, 14, 12, 8]
====================================
cloned = 4
killed = 18
cloned = 6
killed = 16
cloned = 17
killed = 21
cloned = 14
killed = 20
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 17, 6, 14, 11]
lower threshold: [2, 4, 8, 9, 10, 12, 13, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 7, 3, 1, 15, 5]
====================================
cloned = 21
killed = 0
cloned = 7
killed = 17
cloned = 3
killed = 6
cloned = 1
killed = 14
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 18, 3, 17, 11]
lower threshold: [0, 1, 2, 4, 6, 8, 12, 13, 15, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 5, 7, 16, 9, 10]
====================================
cloned = 14
killed = 20
cloned = 5
killed = 18
cloned = 7
killed = 3
cloned = 16
killed = 17
cloned = 9
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 12, 0, 19]
lower threshold: [2, 5, 6, 7, 8, 9, 11, 14, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 10, 15, 1, 20]
====================================
cloned = 4
killed = 13
cloned = 16
killed = 3
cloned = 10
killed = 12
cloned = 15
killed = 0
cloned = 1
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 19, 9, 16, 10]
lower threshold: [2, 3, 4, 5, 6, 8, 11, 12, 14, 15, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 13, 21, 1, 20, 7]
====================================
cloned = 0
killed = 17
cloned = 13
killed = 19
cloned = 21
killed = 9
cloned = 1
killed = 16
cloned = 20
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 17, 5, 6, 7]
lower threshold: [0, 1, 2, 3, 4, 10, 12, 13, 15, 16, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 9, 19, 18, 20, 8]
====================================
cloned = 11
killed = 14
cloned = 9
killed = 17
cloned = 19
killed = 5
cloned = 18
killed = 6
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 7, 12, 8]
lower threshold: [1, 3, 4, 5, 6, 9, 10, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 18, 20, 17, 0, 14]
====================================
cloned = 13
killed = 11
cloned = 18
killed = 2
cloned = 20
killed = 7
cloned = 17
killed = 12
cloned = 0
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 20, 4, 16]
lower threshold: [1, 2, 6, 7, 8, 10, 11, 15, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 5, 3, 13, 14, 0]
====================================
cloned = 12
killed = 17
cloned = 5
killed = 9
cloned = 3
killed = 20
cloned = 13
killed = 4
cloned = 14
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 0, 17, 3, 4]
lower threshold: [1, 6, 7, 9, 11, 14, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 5, 12, 2, 8, 10]
====================================
cloned = 15
killed = 13
cloned = 5
killed = 0
cloned = 12
killed = 17
cloned = 2
killed = 3
cloned = 8
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 1, 8, 6]
lower threshold: [0, 4, 5, 10, 11, 12, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 3, 18, 13, 7]
====================================
cloned = 19
killed = 9
cloned = 14
killed = 2
cloned = 3
killed = 1
cloned = 18
killed = 8
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 20, 11, 19, 21]
lower threshold: [1, 2, 4, 5, 8, 9, 10, 12, 13, 14, 15, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 17, 16, 3, 0, 18]
====================================
cloned = 7
killed = 6
cloned = 17
killed = 20
cloned = 16
killed = 11
cloned = 3
killed = 19
cloned = 0
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 13, 8, 11]
lower threshold: [2, 3, 4, 9, 10, 12, 14, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 1, 6, 0, 19, 15]
====================================
cloned = 5
killed = 17
cloned = 1
killed = 7
cloned = 6
killed = 13
cloned = 0
killed = 8
cloned = 19
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 14, 10, 20, 9]
lower threshold: [0, 1, 2, 3, 4, 5, 6, 8, 12, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 21, 7, 13, 16, 11]
====================================
cloned = 18
killed = 17
cloned = 21
killed = 14
cloned = 7
killed = 10
cloned = 13
killed = 20
cloned = 16
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 15, 4, 18]
lower threshold: [0, 2, 3, 5, 6, 7, 8, 11, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 14, 1, 10, 13, 16]
====================================
cloned = 21
killed = 12
cloned = 14
killed = 9
cloned = 1
killed = 15
cloned = 10
killed = 4
cloned = 13
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 16, 10, 2, 0]
lower threshold: [1, 4, 5, 6, 7, 8, 9, 12, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 17, 14, 13, 21, 3]
====================================
cloned = 15
killed = 11
cloned = 17
killed = 16
cloned = 14
killed = 10
cloned = 13
killed = 2
cloned = 21
killed = 0
Trial run 8/seed 12908:
..................................................
winner: {'Evolved FSM 6', 'Tit For Tat'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Evolved ANN 5 Noise 05': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 4,
          'Tit For 2 Tats': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1})]
--------------------------------------------------
Score:
[[61.28000000000001,
  56.36,
  59.425,
  54.76,
  52.21,
  54.095000000000006,
  55.245,
  37.06,
  44.940000000000005,
  29.270000000000007,
  47.905,
  51.02499999999999,
  47.829999999999984,
  52.445,
  55.959999999999994,
  37.0,
  51.735,
  49.07,
  46.26,
  42.075,
  35.085,
  55.455,
  53.16],
 [65.58500000000001,
  61.41,
  65.2,
  61.815,
  57.599999999999994,
  57.325,
  58.00999999999999,
  65.585,
  61.045,
  65.2,
  54.885,
  54.77499999999999,
  51.625,
  59.47,
  57.41,
  55.984999999999985,
  56.55499999999999,
  48.66499999999999,
  49.010000000000005,
  57.209999999999994,
  60.425,
  60.425,
  56.55],
 [65.64500000000001,
  65.68499999999999,
  65.715,
  60.785,
  61.99,
  61.845,
  59.934999999999974,
  65.645,
  65.155,
  65.71499999999999,
  65.64500000000001,
  65.25,
  65.715,
  63.05999999999999,
  59.665,
  60.785000000000004,
  62.10000000000001,
  65.64500000000001,
  65.715,
  59.87499999999999,
  61.989999999999995,
  61.989999999999995,
  62.099999999999994],
 [65.73,
  66.6,
  65.815,
  66.44999999999999,
  63.12,
  65.815,
  65.815,
  65.73,
  66.585,
  65.815,
  65.73,
  66.49,
  65.815,
  63.375,
  65.815,
  65.815,
  62.894999999999996,
  65.73,
  65.815,
  62.87500000000001,
  62.83999999999999,
  62.84,
  62.894999999999996],
 [65.68,
  65.39,
  65.83999999999999,
  65.38999999999999,
  65.39,
  65.83999999999997,
  65.84,
  65.68,
  65.38999999999999,
  65.83999999999999,
  65.68,
  65.39,
  65.83999999999999,
  62.27999999999999,
  65.83999999999999,
  65.83999999999999,
  65.38999999999999,
  65.68,
  65.83999999999999,
  65.39,
  65.39,
  65.83999999999999,
  65.84],
 [65.84,
  65.29999999999998,
  65.92,
  65.92,
  65.29999999999998,
  65.91999999999999,
  65.91999999999999,
  65.84,
  65.91999999999999,
  65.91999999999999,
  65.84,
  65.29999999999998,
  65.92,
  65.91999999999999,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.84,
  65.91999999999999,
  65.91999999999999,
  65.29999999999998,
  65.92,
  65.92],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.17000000000001,
 55.675,
 59.36,
 54.73,
 52.269999999999996,
 54.31,
 52.97499999999999,
 37.0,
 44.775000000000006,
 30.79499999999999,
 47.73500000000001,
 50.94499999999999,
 45.849999999999994,
 52.309999999999995,
 56.224999999999994,
 37.04,
 51.605000000000004,
 47.135,
 45.67999999999999,
 43.97,
 34.87500000000001,
 55.385,
 53.63499999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.2275
Upper: 54.519999999999996
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 64.405,
 65.215,
 61.83,
 57.49499999999999,
 57.34,
 56.12499999999998,
 65.6,
 63.015,
 65.215,
 54.9,
 54.78999999999999,
 51.379999999999995,
 59.485,
 57.699999999999996,
 61.83,
 56.56999999999999,
 50.315,
 50.85500000000001,
 57.82,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.344999999999985
Upper: 62.4225
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 11, 12, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.62,
 66.86,
 65.71000000000001,
 58.73,
 61.6,
 61.56,
 65.62,
 65.62,
 67.16999999999999,
 65.71000000000001,
 66.97,
 65.71,
 65.62,
 62.61,
 61.46999999999999,
 58.730000000000004,
 61.650000000000006,
 66.99000000000001,
 65.71,
 61.32999999999999,
 61.53999999999999,
 61.53999999999999,
 61.64999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.55
Upper: 65.71000000000001
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 15, 19, 20, 21]
lower threshold: []
....................................
upper threshold: []
upper:           [1, 8, 10, 17, 2, 9]
====================================
cloned = 1
killed = 3
cloned = 8
killed = 14
cloned = 10
killed = 15
cloned = 17
killed = 19
cloned = 2
killed = 20
cloned = 9
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.60499999999999,
 65.83999999999999,
 65.6,
 63.36500000000001,
 63.60000000000001,
 65.68,
 65.67999999999999,
 65.63,
 65.84,
 65.55,
 65.83999999999997,
 65.68,
 62.27999999999999,
 65.77000000000001,
 65.83,
 62.27999999999999,
 65.67999999999999,
 65.83999999999997,
 65.67,
 65.83999999999999,
 65.84,
 62.27999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.57499999999999
Upper: 65.83499999999998
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 10, 13, 16, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [2, 9, 11, 18, 20, 21]
====================================
cloned = 2
killed = 4
cloned = 9
killed = 5
cloned = 11
killed = 10
cloned = 18
killed = 13
cloned = 20
killed = 16
cloned = 21
killed = 22
######################################
~~~ Scores: ~~~
[65.72,
 65.11999999999998,
 65.85999999999999,
 65.11999999999998,
 65.85999999999999,
 65.85999999999999,
 65.72,
 65.72,
 65.11999999999999,
 65.85999999999999,
 65.86,
 65.85999999999999,
 65.72,
 65.86,
 65.11999999999999,
 65.11999999999999,
 65.85999999999999,
 65.11999999999999,
 65.85999999999999,
 65.11999999999999,
 65.85999999999999,
 65.86,
 65.86]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.11999999999999
Upper: 65.85999999999999
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 17, 15, 8]
lower threshold: [14, 19]
....................................
upper threshold: [4, 5, 9, 11, 18, 20]
upper:           [10, 13, 21, 22, 16, 2]
====================================
cloned = 10
killed = 1
cloned = 13
killed = 3
cloned = 21
killed = 17
cloned = 22
killed = 15
cloned = 16
killed = 8
######################################
~~~ Scores: ~~~
[65.92,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.92,
 65.92,
 65.96,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.41999999999997,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.41999999999997,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.94
Upper: 65.96000000000001
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 7, 12, 14, 19]
lower threshold: []
....................................
upper threshold: [10, 11, 13, 16, 17, 18, 20, 22]
upper:           [1, 21, 15, 5, 9, 3]
====================================
cloned = 1
killed = 0
cloned = 21
killed = 6
cloned = 15
killed = 7
cloned = 5
killed = 12
cloned = 9
killed = 14
cloned = 3
killed = 19
Trial run 9/seed 12909:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8,
          'Tit For Tat': 6,
          'Evolved FSM 6': 4,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 12,
          'Second by RichardHufford': 7,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.17000000000001,
  55.675,
  59.36,
  54.73,
  52.269999999999996,
  54.31,
  52.97499999999999,
  37.0,
  44.775000000000006,
  30.79499999999999,
  47.73500000000001,
  50.94499999999999,
  45.849999999999994,
  52.309999999999995,
  56.224999999999994,
  37.04,
  51.605000000000004,
  47.135,
  45.67999999999999,
  43.97,
  34.87500000000001,
  55.385,
  53.63499999999999],
 [65.60000000000001,
  64.405,
  65.215,
  61.83,
  57.49499999999999,
  57.34,
  56.12499999999998,
  65.6,
  63.015,
  65.215,
  54.9,
  54.78999999999999,
  51.379999999999995,
  59.485,
  57.699999999999996,
  61.83,
  56.56999999999999,
  50.315,
  50.85500000000001,
  57.82,
  60.44,
  60.44,
  56.565],
 [65.62,
  66.86,
  65.71000000000001,
  58.73,
  61.6,
  61.56,
  65.62,
  65.62,
  67.16999999999999,
  65.71000000000001,
  66.97,
  65.71,
  65.62,
  62.61,
  61.46999999999999,
  58.730000000000004,
  61.650000000000006,
  66.99000000000001,
  65.71,
  61.32999999999999,
  61.53999999999999,
  61.53999999999999,
  61.64999999999999],
 [65.68,
  65.60499999999999,
  65.83999999999999,
  65.6,
  63.36500000000001,
  63.60000000000001,
  65.68,
  65.67999999999999,
  65.63,
  65.84,
  65.55,
  65.83999999999997,
  65.68,
  62.27999999999999,
  65.77000000000001,
  65.83,
  62.27999999999999,
  65.67999999999999,
  65.83999999999997,
  65.67,
  65.83999999999999,
  65.84,
  62.27999999999999],
 [65.72,
  65.11999999999998,
  65.85999999999999,
  65.11999999999998,
  65.85999999999999,
  65.85999999999999,
  65.72,
  65.72,
  65.11999999999999,
  65.85999999999999,
  65.86,
  65.85999999999999,
  65.72,
  65.86,
  65.11999999999999,
  65.11999999999999,
  65.85999999999999,
  65.11999999999999,
  65.85999999999999,
  65.11999999999999,
  65.85999999999999,
  65.86,
  65.86],
 [65.92,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.92,
  65.92,
  65.96,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.41999999999997,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.41999999999997,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.135,
 56.3,
 59.285,
 54.62,
 52.11999999999999,
 53.84,
 53.384999999999984,
 36.84,
 44.67,
 34.505,
 47.805,
 50.56499999999999,
 45.834999999999994,
 52.39,
 56.209999999999994,
 36.9,
 50.37,
 47.03,
 45.51499999999999,
 44.11,
 35.10500000000001,
 55.36,
 53.61]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.0925
Upper: 54.230000000000004
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.07000000000001,
 65.215,
 61.83,
 57.785,
 57.34,
 57.00999999999998,
 65.6,
 63.120000000000005,
 65.215,
 54.9,
 54.78999999999999,
 51.32,
 59.485,
 57.79,
 61.83,
 56.56999999999999,
 52.265,
 50.56000000000001,
 57.839999999999996,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.45
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.98,
 65.69500000000001,
 58.714999999999996,
 61.690000000000005,
 61.545,
 58.129999999999974,
 65.605,
 64.84,
 65.695,
 65.605,
 64.71999999999998,
 65.69500000000001,
 62.595,
 58.71999999999999,
 58.715,
 61.635000000000005,
 65.605,
 64.775,
 58.78,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [7, 17]
upper:           [2, 9, 12, 22, 0, 10]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 66.19500000000001,
 65.92,
 65.91999999999999,
 64.57499999999999,
 64.80000000000001,
 65.91999999999999,
 65.84,
 66.07,
 65.91999999999999,
 65.84,
 66.3,
 65.92,
 64.13999999999999,
 65.91999999999999,
 65.91999999999999,
 64.13999999999999,
 65.84,
 66.27,
 65.84,
 64.13999999999999,
 64.14,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.32000000000001
Upper: 65.92
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [22]
upper:           [1, 8, 11, 18, 12, 2]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 12
killed = 20
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.03999999999999,
 65.83999999999999,
 65.83999999999997,
 65.03999999999999,
 65.03999999999999,
 65.84,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.04,
 65.83999999999997,
 65.83999999999999,
 65.03999999999999,
 65.68,
 65.03999999999999,
 65.68,
 65.83999999999997,
 65.83999999999999,
 65.83999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.03999999999999
Upper: 65.83999999999999
====================================
lower list size: 0
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 16, 11, 4]
lower threshold: [8, 18]
....................................
upper threshold: [12, 22]
upper:           [6, 15, 2, 9, 21]
====================================
cloned = 6
killed = 5
cloned = 15
killed = 1
cloned = 2
killed = 16
cloned = 9
killed = 11
cloned = 21
killed = 4
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.94,
 65.94,
 65.94,
 65.88,
 65.33999999999999,
 65.94,
 65.88,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.94,
 65.88,
 65.33999999999999,
 65.88,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 18, 10, 0]
lower threshold: [7, 17, 19]
....................................
upper threshold: [1, 3, 4, 5, 6, 12, 15, 16, 22]
upper:           [2, 14, 11, 21, 9, 20]
====================================
cloned = 2
killed = 8
cloned = 14
killed = 13
cloned = 11
killed = 18
cloned = 21
killed = 10
cloned = 9
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 17, 11, 21, 3]
lower threshold: [4, 5, 7, 9, 12, 13, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 0, 20, 2, 1, 6]
====================================
cloned = 10
killed = 8
cloned = 0
killed = 17
cloned = 20
killed = 11
cloned = 2
killed = 21
cloned = 1
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 9, 17, 10, 21]
lower threshold: [0, 4, 5, 6, 7, 11, 12, 14, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 8, 15, 3, 2, 1]
====================================
cloned = 13
killed = 19
cloned = 8
killed = 9
cloned = 15
killed = 17
cloned = 3
killed = 10
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 4, 5, 7]
lower threshold: [1, 2, 6, 10, 11, 12, 15, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 9, 8, 16, 21]
====================================
cloned = 14
killed = 0
cloned = 13
killed = 3
cloned = 9
killed = 4
cloned = 8
killed = 5
cloned = 16
killed = 7
Trial run 10/seed 12910:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.135,
  56.3,
  59.285,
  54.62,
  52.11999999999999,
  53.84,
  53.384999999999984,
  36.84,
  44.67,
  34.505,
  47.805,
  50.56499999999999,
  45.834999999999994,
  52.39,
  56.209999999999994,
  36.9,
  50.37,
  47.03,
  45.51499999999999,
  44.11,
  35.10500000000001,
  55.36,
  53.61],
 [65.60000000000001,
  63.07000000000001,
  65.215,
  61.83,
  57.785,
  57.34,
  57.00999999999998,
  65.6,
  63.120000000000005,
  65.215,
  54.9,
  54.78999999999999,
  51.32,
  59.485,
  57.79,
  61.83,
  56.56999999999999,
  52.265,
  50.56000000000001,
  57.839999999999996,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.98,
  65.69500000000001,
  58.714999999999996,
  61.690000000000005,
  61.545,
  58.129999999999974,
  65.605,
  64.84,
  65.695,
  65.605,
  64.71999999999998,
  65.69500000000001,
  62.595,
  58.71999999999999,
  58.715,
  61.635000000000005,
  65.605,
  64.775,
  58.78,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.84,
  66.19500000000001,
  65.92,
  65.91999999999999,
  64.57499999999999,
  64.80000000000001,
  65.91999999999999,
  65.84,
  66.07,
  65.91999999999999,
  65.84,
  66.3,
  65.92,
  64.13999999999999,
  65.91999999999999,
  65.91999999999999,
  64.13999999999999,
  65.84,
  66.27,
  65.84,
  64.13999999999999,
  64.14,
  65.92],
 [65.68,
  65.03999999999999,
  65.83999999999999,
  65.83999999999997,
  65.03999999999999,
  65.03999999999999,
  65.84,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.04,
  65.83999999999997,
  65.83999999999999,
  65.03999999999999,
  65.68,
  65.03999999999999,
  65.68,
  65.83999999999997,
  65.83999999999999,
  65.83999999999999],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.94,
  65.94,
  65.94,
  65.88,
  65.33999999999999,
  65.94,
  65.88,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.94,
  65.88,
  65.33999999999999,
  65.88,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.330000000000005,
 55.84,
 59.25,
 54.755,
 52.265,
 53.795,
 54.75999999999999,
 36.739999999999995,
 44.805,
 28.719999999999995,
 47.79,
 50.81499999999999,
 48.44999999999999,
 52.39,
 56.51499999999999,
 37.025,
 51.32,
 47.125,
 46.43,
 44.04,
 34.71500000000001,
 55.39999999999999,
 53.155]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.6175
Upper: 54.75749999999999
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 61.290000000000006,
 65.2,
 61.815,
 57.69499999999999,
 57.325,
 55.21999999999998,
 65.585,
 60.995000000000005,
 65.2,
 54.885,
 54.77499999999999,
 49.715,
 59.47,
 57.084999999999994,
 55.76999999999998,
 56.55499999999999,
 48.654999999999994,
 49.065000000000005,
 57.26,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 55.494999999999976
Upper: 61.142500000000005
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 11, 12, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 3
killed = 12
cloned = 7
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.64500000000001,
 66.98499999999999,
 65.715,
 60.785,
 61.935,
 61.845,
 65.64500000000001,
 65.645,
 65.355,
 65.715,
 65.26,
 65.715,
 60.785000000000004,
 63.05999999999999,
 59.785,
 60.879999999999974,
 62.099999999999994,
 65.64500000000001,
 65.715,
 59.584999999999994,
 61.989999999999995,
 61.989999999999995,
 62.099999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.89
Upper: 65.64500000000001
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 12, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [0, 6, 17]
upper:           [1, 2, 9, 11, 18]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 5
cloned = 9
killed = 12
cloned = 11
killed = 14
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[65.73,
 66.57,
 65.815,
 66.50999999999998,
 63.279999999999994,
 65.815,
 65.73,
 65.73,
 66.71,
 65.815,
 66.67999999999999,
 65.815,
 65.815,
 63.375,
 65.81499999999998,
 65.815,
 62.89499999999998,
 65.73,
 65.815,
 62.915000000000006,
 62.83999999999999,
 62.84,
 62.894999999999996]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 63.3275
Upper: 65.815
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [2, 5, 9, 11, 18]
upper:           [1, 3, 8, 10, 12, 15]
====================================
cloned = 1
killed = 4
cloned = 3
killed = 16
cloned = 8
killed = 19
cloned = 10
killed = 20
cloned = 12
killed = 21
cloned = 15
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.39,
 65.83999999999999,
 65.38999999999999,
 65.39,
 65.83999999999999,
 65.68,
 65.68,
 65.38999999999999,
 65.83999999999999,
 65.38999999999999,
 65.83999999999999,
 65.83999999999997,
 62.27999999999999,
 65.83999999999999,
 65.83999999999999,
 65.38999999999999,
 65.68,
 65.83999999999997,
 65.39,
 65.38999999999999,
 65.83999999999997,
 65.84]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.38999999999999
Upper: 65.83999999999999
====================================
lower list size: 1
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 8, 10, 16]
lower threshold: [20]
....................................
upper threshold: [9, 15]
upper:           [22, 14, 2, 11, 5]
====================================
cloned = 22
killed = 13
cloned = 14
killed = 3
cloned = 2
killed = 8
cloned = 11
killed = 10
cloned = 5
killed = 16
######################################
~~~ Scores: ~~~
[65.84,
 65.29999999999998,
 65.91999999999999,
 65.92,
 65.29999999999998,
 65.91999999999999,
 65.84,
 65.84,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.84,
 65.91999999999999,
 65.29999999999998,
 65.29999999999998,
 65.91999999999999,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.84
Upper: 65.91999999999999
====================================
lower list size: 4
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 19, 20, 6]
lower threshold: [0, 7, 17]
....................................
upper threshold: [2, 8, 9, 11, 12, 13, 15, 16, 18, 21]
upper:           [3, 14, 22, 10, 5]
====================================
cloned = 3
killed = 1
cloned = 14
killed = 4
cloned = 22
killed = 19
cloned = 10
killed = 20
cloned = 5
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 0, 13, 21]
lower threshold: [1, 3, 4, 5, 6, 9, 10, 11, 12, 15, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 2, 14, 19, 7, 18]
====================================
cloned = 8
killed = 20
cloned = 2
killed = 16
cloned = 14
killed = 0
cloned = 19
killed = 13
cloned = 7
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 14, 12, 3, 4]
lower threshold: [5, 6, 8, 9, 10, 11, 13, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 0, 1, 15, 2, 20]
====================================
cloned = 7
killed = 17
cloned = 0
killed = 14
cloned = 1
killed = 12
cloned = 15
killed = 3
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 20, 9, 17]
lower threshold: [1, 4, 6, 7, 12, 13, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 11, 2, 8, 10, 21]
====================================
cloned = 0
killed = 3
cloned = 11
killed = 5
cloned = 2
killed = 20
cloned = 8
killed = 9
cloned = 10
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 11, 1, 20, 13]
lower threshold: [2, 3, 6, 7, 8, 10, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 4, 9, 17, 12, 5]
====================================
cloned = 0
killed = 21
cloned = 4
killed = 11
cloned = 9
killed = 1
cloned = 17
killed = 20
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 12, 1, 21, 6]
lower threshold: [0, 3, 4, 7, 9, 10, 11, 13, 14, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 5, 8, 2, 20, 16]
====================================
cloned = 15
killed = 17
cloned = 5
killed = 12
cloned = 8
killed = 1
cloned = 2
killed = 21
cloned = 20
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 21, 8, 18, 7]
lower threshold: [0, 1, 3, 4, 5, 11, 12, 14, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 16, 6, 9, 10, 13]
====================================
cloned = 20
killed = 2
cloned = 16
killed = 21
cloned = 6
killed = 8
cloned = 9
killed = 18
cloned = 10
killed = 7
Trial run 11/seed 12911:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Michaelos: (D,)': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Evolved ANN 5 Noise 05': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 4,
          'Tit For 2 Tats': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.330000000000005,
  55.84,
  59.25,
  54.755,
  52.265,
  53.795,
  54.75999999999999,
  36.739999999999995,
  44.805,
  28.719999999999995,
  47.79,
  50.81499999999999,
  48.44999999999999,
  52.39,
  56.51499999999999,
  37.025,
  51.32,
  47.125,
  46.43,
  44.04,
  34.71500000000001,
  55.39999999999999,
  53.155],
 [65.58500000000001,
  61.290000000000006,
  65.2,
  61.815,
  57.69499999999999,
  57.325,
  55.21999999999998,
  65.585,
  60.995000000000005,
  65.2,
  54.885,
  54.77499999999999,
  49.715,
  59.47,
  57.084999999999994,
  55.76999999999998,
  56.55499999999999,
  48.654999999999994,
  49.065000000000005,
  57.26,
  60.425,
  60.425,
  56.55],
 [65.64500000000001,
  66.98499999999999,
  65.715,
  60.785,
  61.935,
  61.845,
  65.64500000000001,
  65.645,
  65.355,
  65.715,
  65.26,
  65.715,
  60.785000000000004,
  63.05999999999999,
  59.785,
  60.879999999999974,
  62.099999999999994,
  65.64500000000001,
  65.715,
  59.584999999999994,
  61.989999999999995,
  61.989999999999995,
  62.099999999999994],
 [65.73,
  66.57,
  65.815,
  66.50999999999998,
  63.279999999999994,
  65.815,
  65.73,
  65.73,
  66.71,
  65.815,
  66.67999999999999,
  65.815,
  65.815,
  63.375,
  65.81499999999998,
  65.815,
  62.89499999999998,
  65.73,
  65.815,
  62.915000000000006,
  62.83999999999999,
  62.84,
  62.894999999999996],
 [65.68,
  65.39,
  65.83999999999999,
  65.38999999999999,
  65.39,
  65.83999999999999,
  65.68,
  65.68,
  65.38999999999999,
  65.83999999999999,
  65.38999999999999,
  65.83999999999999,
  65.83999999999997,
  62.27999999999999,
  65.83999999999999,
  65.83999999999999,
  65.38999999999999,
  65.68,
  65.83999999999997,
  65.39,
  65.38999999999999,
  65.83999999999997,
  65.84],
 [65.84,
  65.29999999999998,
  65.91999999999999,
  65.92,
  65.29999999999998,
  65.91999999999999,
  65.84,
  65.84,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.84,
  65.91999999999999,
  65.29999999999998,
  65.29999999999998,
  65.91999999999999,
  65.92],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.51,
 56.89,
 59.43,
 54.56,
 52.53999999999999,
 54.345000000000006,
 53.74499999999999,
 37.019999999999996,
 44.760000000000005,
 30.925,
 48.15,
 50.64499999999999,
 48.28999999999999,
 52.485,
 56.144999999999996,
 36.760000000000005,
 51.760000000000005,
 47.07,
 45.605,
 41.845,
 34.76500000000001,
 55.425,
 52.989999999999995]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.182500000000005
Upper: 54.4525
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.515,
 65.215,
 61.83,
 57.53500000000001,
 57.34,
 59.34999999999999,
 65.6,
 63.14,
 65.215,
 54.9,
 54.78999999999999,
 53.33,
 59.485,
 57.9,
 61.83,
 56.56999999999999,
 52.275,
 50.74500000000001,
 58.05,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.485
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.155,
 65.69500000000001,
 58.714999999999996,
 61.86999999999999,
 61.545,
 60.14499999999998,
 65.605,
 65.16499999999999,
 65.695,
 65.605,
 65.02999999999999,
 65.69500000000001,
 62.595,
 58.879999999999995,
 58.715,
 61.635000000000005,
 65.605,
 66.79500000000002,
 58.76,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [2, 9, 12, 18, 22]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 18
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.135,
 65.9,
 65.89999999999999,
 64.285,
 64.5,
 65.9,
 65.8,
 66.14999999999999,
 65.89999999999999,
 65.80000000000001,
 66.24,
 65.89999999999999,
 63.67499999999998,
 65.89999999999999,
 66.22,
 63.675,
 65.80000000000001,
 66.29,
 65.89999999999999,
 63.67499999999998,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.15
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 6]
upper:           [1, 8, 11, 15, 18]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 15
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27,
 65.8,
 65.79999999999998,
 65.27,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.27,
 65.27,
 65.60000000000001,
 65.27000000000001,
 65.8,
 65.27000000000001,
 61.349999999999994,
 65.79999999999998]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 15, 11, 4]
lower threshold: [5, 8, 16]
....................................
upper threshold: [3, 14, 22]
upper:           [2, 12, 19, 9, 6]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 1
cloned = 19
killed = 15
cloned = 9
killed = 11
cloned = 6
killed = 4
######################################
~~~ Scores: ~~~
[65.76,
 65.88,
 65.88,
 65.88,
 65.88,
 65.17999999999998,
 65.88,
 65.76,
 65.17999999999999,
 65.88,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.17999999999998,
 65.76,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 13, 16, 18, 20]
lower threshold: []
....................................
upper threshold: [1, 2, 3, 6, 9, 15, 22]
upper:           [19, 11, 14, 4, 12, 21]
====================================
cloned = 19
killed = 5
cloned = 11
killed = 8
cloned = 14
killed = 13
cloned = 4
killed = 16
cloned = 12
killed = 18
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 12, 9, 7]
lower threshold: [0, 1, 3, 8, 10, 14, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 2, 18, 21, 6, 11]
====================================
cloned = 13
killed = 5
cloned = 2
killed = 4
cloned = 18
killed = 12
cloned = 21
killed = 9
cloned = 6
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 21, 2, 15]
lower threshold: [0, 4, 5, 9, 11, 12, 13, 14, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 8, 10, 1, 7, 17]
====================================
cloned = 6
killed = 16
cloned = 8
killed = 3
cloned = 10
killed = 21
cloned = 1
killed = 2
cloned = 7
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 10, 18, 21, 4]
lower threshold: [0, 6, 7, 8, 9, 12, 14, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 20, 11, 1, 5, 3]
====================================
cloned = 2
killed = 13
cloned = 20
killed = 10
cloned = 11
killed = 18
cloned = 1
killed = 21
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 15, 13, 1, 8]
lower threshold: [0, 2, 5, 6, 7, 10, 11, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 18, 4, 3, 9]
====================================
cloned = 19
killed = 12
cloned = 14
killed = 15
cloned = 18
killed = 13
cloned = 4
killed = 1
cloned = 3
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 10, 6, 21]
lower threshold: [0, 2, 4, 5, 7, 9, 11, 12, 13, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 15, 14, 17, 1, 8]
====================================
cloned = 16
killed = 3
cloned = 15
killed = 20
cloned = 14
killed = 10
cloned = 17
killed = 6
cloned = 1
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 18, 13, 20, 11]
lower threshold: [0, 1, 3, 4, 5, 8, 9, 10, 12, 14, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 15, 6, 19, 2, 21]
====================================
cloned = 17
killed = 7
cloned = 15
killed = 18
cloned = 6
killed = 13
cloned = 19
killed = 20
cloned = 2
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 20, 19, 8, 9]
lower threshold: [0, 1, 2, 4, 5, 7, 11, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 3, 17, 6, 10, 15]
====================================
cloned = 12
killed = 13
cloned = 3
killed = 20
cloned = 17
killed = 19
cloned = 6
killed = 8
cloned = 10
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 16, 13, 3, 6]
lower threshold: [0, 1, 4, 5, 7, 11, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 9, 8, 20, 12, 18]
====================================
cloned = 10
killed = 2
cloned = 9
killed = 16
cloned = 8
killed = 13
cloned = 20
killed = 3
cloned = 12
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 21, 9, 1, 8]
lower threshold: [2, 3, 4, 6, 7, 12, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 0, 5, 10, 13, 18]
====================================
cloned = 11
killed = 14
cloned = 0
killed = 21
cloned = 5
killed = 9
cloned = 10
killed = 1
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 17, 9, 18, 1]
lower threshold: [0, 2, 5, 11, 12, 13, 14, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 7, 4, 10, 6, 8]
====================================
cloned = 3
killed = 20
cloned = 7
killed = 17
cloned = 4
killed = 9
cloned = 10
killed = 18
cloned = 6
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 8, 21, 7]
lower threshold: [2, 3, 5, 11, 12, 14, 15, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 6, 0, 9, 1, 4]
====================================
cloned = 10
killed = 13
cloned = 6
killed = 17
cloned = 0
killed = 8
cloned = 9
killed = 21
cloned = 1
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 18, 14, 2, 6]
lower threshold: [0, 3, 4, 5, 7, 11, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 10, 8, 9, 15, 1]
====================================
cloned = 13
killed = 12
cloned = 10
killed = 18
cloned = 8
killed = 14
cloned = 9
killed = 2
cloned = 15
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 10, 19, 7]
lower threshold: [1, 2, 3, 5, 9, 13, 14, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 4, 8, 11, 17, 0]
====================================
cloned = 18
killed = 12
cloned = 4
killed = 6
cloned = 8
killed = 10
cloned = 11
killed = 19
cloned = 17
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 15, 3, 10, 11]
lower threshold: [0, 2, 4, 5, 8, 13, 14, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 7, 18, 12, 6, 9]
====================================
cloned = 1
killed = 17
cloned = 7
killed = 15
cloned = 18
killed = 3
cloned = 12
killed = 10
cloned = 6
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 10, 7, 18, 1]
lower threshold: [2, 4, 6, 11, 12, 14, 15, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 0, 17, 9, 5, 8]
====================================
cloned = 3
killed = 13
cloned = 0
killed = 10
cloned = 17
killed = 7
cloned = 9
killed = 18
cloned = 5
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 3, 17, 11]
lower threshold: [0, 1, 7, 8, 9, 13, 14, 15, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 6, 19, 4, 10, 5]
====================================
cloned = 21
killed = 2
cloned = 6
killed = 12
cloned = 19
killed = 3
cloned = 4
killed = 17
cloned = 10
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 21, 2, 1, 3]
lower threshold: [0, 5, 7, 8, 11, 12, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 17, 20, 10, 4, 13]
====================================
cloned = 9
killed = 6
cloned = 17
killed = 21
cloned = 20
killed = 2
cloned = 10
killed = 1
cloned = 4
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 11, 3, 8, 16]
lower threshold: [0, 1, 2, 7, 9, 13, 14, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 18, 15, 6, 10]
====================================
cloned = 12
killed = 5
cloned = 4
killed = 11
cloned = 18
killed = 3
cloned = 15
killed = 8
cloned = 6
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 21, 18, 1, 11]
lower threshold: [0, 3, 6, 8, 9, 12, 13, 14, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 5, 15, 10, 7, 16]
====================================
cloned = 4
killed = 2
cloned = 5
killed = 21
cloned = 15
killed = 18
cloned = 10
killed = 1
cloned = 7
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 19, 10, 21, 2]
lower threshold: [0, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 12, 5, 3, 1, 8]
====================================
cloned = 11
killed = 20
cloned = 12
killed = 19
cloned = 5
killed = 10
cloned = 3
killed = 21
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 13, 11, 20, 5]
lower threshold: [1, 3, 6, 7, 8, 9, 10, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 2, 4, 21, 14, 12]
====================================
cloned = 17
killed = 0
cloned = 2
killed = 13
cloned = 4
killed = 11
cloned = 21
killed = 20
cloned = 14
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 14, 1, 21, 0]
lower threshold: [2, 3, 4, 6, 7, 9, 12, 13, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 20, 8, 10, 19]
====================================
cloned = 18
killed = 11
cloned = 5
killed = 14
cloned = 20
killed = 1
cloned = 8
killed = 21
cloned = 10
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 15, 7, 8, 5]
lower threshold: [0, 2, 9, 10, 12, 13, 14, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 11, 17, 4, 1, 3]
====================================
cloned = 6
killed = 19
cloned = 11
killed = 15
cloned = 17
killed = 7
cloned = 4
killed = 8
cloned = 1
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 6, 8, 11, 9]
lower threshold: [0, 4, 5, 10, 12, 13, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 2, 7, 3, 18, 1]
====================================
cloned = 20
killed = 16
cloned = 2
killed = 6
cloned = 7
killed = 8
cloned = 3
killed = 11
cloned = 18
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 12, 16, 2]
lower threshold: [0, 1, 4, 5, 7, 8, 13, 14, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 17, 10, 6, 3, 15]
====================================
cloned = 11
killed = 9
cloned = 17
killed = 19
cloned = 10
killed = 12
cloned = 6
killed = 16
cloned = 3
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 14, 8, 18, 16]
lower threshold: [0, 1, 3, 5, 7, 10, 11, 12, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 2, 9, 6, 20, 4]
====================================
cloned = 21
killed = 13
cloned = 2
killed = 14
cloned = 9
killed = 8
cloned = 6
killed = 18
cloned = 20
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 21, 20, 10, 3]
lower threshold: [0, 2, 4, 8, 11, 12, 13, 14, 15, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 6, 19, 5, 7, 9]
====================================
cloned = 17
killed = 1
cloned = 6
killed = 21
cloned = 19
killed = 20
cloned = 5
killed = 10
cloned = 7
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 9, 20, 10]
lower threshold: [0, 2, 6, 8, 13, 14, 16, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 15, 5, 11, 1, 3]
====================================
cloned = 4
killed = 7
cloned = 15
killed = 12
cloned = 5
killed = 9
cloned = 11
killed = 20
cloned = 1
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 18, 5, 12]
lower threshold: [0, 1, 4, 8, 9, 10, 14, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 6, 13, 2, 7, 11]
====================================
cloned = 3
killed = 21
cloned = 6
killed = 17
cloned = 13
killed = 18
cloned = 2
killed = 5
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 17, 12, 13]
lower threshold: [0, 4, 7, 8, 9, 11, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 1, 2, 14, 3, 5]
====================================
cloned = 15
killed = 10
cloned = 1
killed = 6
cloned = 2
killed = 17
cloned = 14
killed = 12
cloned = 3
killed = 13
Trial run 12/seed 12912:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.51,
  56.89,
  59.43,
  54.56,
  52.53999999999999,
  54.345000000000006,
  53.74499999999999,
  37.019999999999996,
  44.760000000000005,
  30.925,
  48.15,
  50.64499999999999,
  48.28999999999999,
  52.485,
  56.144999999999996,
  36.760000000000005,
  51.760000000000005,
  47.07,
  45.605,
  41.845,
  34.76500000000001,
  55.425,
  52.989999999999995],
 [65.60000000000001,
  63.515,
  65.215,
  61.83,
  57.53500000000001,
  57.34,
  59.34999999999999,
  65.6,
  63.14,
  65.215,
  54.9,
  54.78999999999999,
  53.33,
  59.485,
  57.9,
  61.83,
  56.56999999999999,
  52.275,
  50.74500000000001,
  58.05,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.155,
  65.69500000000001,
  58.714999999999996,
  61.86999999999999,
  61.545,
  60.14499999999998,
  65.605,
  65.16499999999999,
  65.695,
  65.605,
  65.02999999999999,
  65.69500000000001,
  62.595,
  58.879999999999995,
  58.715,
  61.635000000000005,
  65.605,
  66.79500000000002,
  58.76,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.135,
  65.9,
  65.89999999999999,
  64.285,
  64.5,
  65.9,
  65.8,
  66.14999999999999,
  65.89999999999999,
  65.80000000000001,
  66.24,
  65.89999999999999,
  63.67499999999998,
  65.89999999999999,
  66.22,
  63.675,
  65.80000000000001,
  66.29,
  65.89999999999999,
  63.67499999999998,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27,
  65.8,
  65.79999999999998,
  65.27,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.27,
  65.27,
  65.60000000000001,
  65.27000000000001,
  65.8,
  65.27000000000001,
  61.349999999999994,
  65.79999999999998],
 [65.76,
  65.88,
  65.88,
  65.88,
  65.88,
  65.17999999999998,
  65.88,
  65.76,
  65.17999999999999,
  65.88,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.17999999999998,
  65.76,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.88,
  65.88],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.29,
 56.17,
 59.28,
 54.72,
 51.93000000000001,
 54.550000000000004,
 56.83999999999999,
 36.9,
 44.715,
 33.47,
 47.82,
 50.92499999999999,
 47.584999999999994,
 52.385,
 56.16499999999999,
 37.0,
 50.3,
 49.050000000000004,
 45.605,
 44.1,
 34.650000000000006,
 55.36,
 53.209999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.16
Upper: 55.04
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 62.06,
 65.2,
 61.815,
 57.645,
 57.325,
 60.344999999999985,
 65.585,
 61.34,
 65.2,
 54.885,
 54.77499999999999,
 51.464999999999996,
 59.47,
 56.99999999999999,
 57.32499999999998,
 56.55499999999999,
 52.565,
 48.88,
 56.985,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 61.5775
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 3
killed = 17
cloned = 7
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.63,
 63.86,
 65.7,
 60.769999999999996,
 61.93999999999999,
 61.83,
 59.589999999999975,
 65.63,
 63.05,
 65.69999999999999,
 65.63,
 63.160000000000004,
 65.7,
 63.04499999999999,
 57.205,
 60.339999999999975,
 62.08500000000001,
 60.769999999999996,
 65.63,
 57.144999999999996,
 61.974999999999994,
 61.974999999999994,
 65.7]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.3
Upper: 65.63
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 17, 19]
lower threshold: []
....................................
upper threshold: [7, 18]
upper:           [2, 9, 12, 22, 10, 0]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 10
killed = 17
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[65.88,
 66.42,
 65.94,
 65.94,
 65.10499999999999,
 65.10000000000001,
 65.94,
 65.88,
 66.295,
 65.94,
 65.88,
 66.27999999999999,
 65.94,
 64.60499999999999,
 65.94,
 65.94,
 64.60499999999999,
 65.88,
 65.88,
 65.88,
 64.60499999999999,
 64.60499999999999,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.49249999999999
Upper: 65.94
====================================
lower list size: 6
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 3, 6, 9, 15, 22]
upper:           [1, 8, 11, 12, 14]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 12
killed = 16
cloned = 14
killed = 20
######################################
~~~ Scores: ~~~
[65.76,
 65.46999999999998,
 65.88,
 65.88,
 65.47,
 65.46999999999998,
 65.88,
 65.76,
 65.47,
 65.88,
 65.76,
 65.46999999999998,
 65.88,
 65.47,
 65.88,
 65.88,
 65.88,
 65.76,
 65.76,
 65.76,
 65.88,
 63.209999999999994,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 4
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 11, 21, 4]
lower threshold: [8, 13]
....................................
upper threshold: [9, 12, 14, 22]
upper:           [20, 16, 3, 6, 15, 2]
====================================
cloned = 20
killed = 1
cloned = 16
killed = 5
cloned = 3
killed = 11
cloned = 6
killed = 21
cloned = 15
killed = 4
######################################
~~~ Scores: ~~~
[65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.92,
 65.37999999999998,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.37999999999998,
 65.96000000000001,
 65.96,
 65.96,
 65.92,
 65.92,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.92
Upper: 65.96000000000001
====================================
lower list size: 2
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 17, 0, 18]
lower threshold: [7, 10, 19]
....................................
upper threshold: [3, 6, 9, 14, 21, 22]
upper:           [11, 2, 12, 20, 1, 4]
====================================
cloned = 11
killed = 8
cloned = 2
killed = 13
cloned = 12
killed = 17
cloned = 20
killed = 0
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 10, 9, 2, 0]
lower threshold: [1, 4, 6, 7, 12, 13, 14, 15, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 19, 3, 20, 11, 18]
====================================
cloned = 5
killed = 8
cloned = 19
killed = 10
cloned = 3
killed = 9
cloned = 20
killed = 2
cloned = 11
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 5, 8, 12, 7]
lower threshold: [0, 3, 4, 11, 13, 14, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 1, 2, 6, 17, 10]
====================================
cloned = 20
killed = 9
cloned = 1
killed = 5
cloned = 2
killed = 8
cloned = 6
killed = 12
cloned = 17
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 8, 3, 17, 11]
lower threshold: [0, 1, 7, 9, 10, 13, 14, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 2, 4, 5, 6, 18]
====================================
cloned = 12
killed = 19
cloned = 2
killed = 8
cloned = 4
killed = 3
cloned = 5
killed = 17
cloned = 6
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 1, 14, 8, 11]
lower threshold: [2, 4, 5, 6, 10, 12, 13, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 3, 19, 7, 0, 15]
====================================
cloned = 9
killed = 16
cloned = 3
killed = 1
cloned = 19
killed = 14
cloned = 7
killed = 8
cloned = 0
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 20, 14, 8, 5]
lower threshold: [1, 2, 3, 4, 6, 10, 11, 12, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 9, 7, 19, 18, 0]
====================================
cloned = 15
killed = 13
cloned = 9
killed = 20
cloned = 7
killed = 14
cloned = 19
killed = 8
cloned = 18
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 1, 19, 8]
lower threshold: [0, 4, 5, 6, 11, 12, 13, 14, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 7, 2, 9, 3, 21]
====================================
cloned = 15
killed = 17
cloned = 7
killed = 10
cloned = 2
killed = 1
cloned = 9
killed = 19
cloned = 3
killed = 8
Trial run 13/seed 12913:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 3,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 6,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.29,
  56.17,
  59.28,
  54.72,
  51.93000000000001,
  54.550000000000004,
  56.83999999999999,
  36.9,
  44.715,
  33.47,
  47.82,
  50.92499999999999,
  47.584999999999994,
  52.385,
  56.16499999999999,
  37.0,
  50.3,
  49.050000000000004,
  45.605,
  44.1,
  34.650000000000006,
  55.36,
  53.209999999999994],
 [65.58500000000001,
  62.06,
  65.2,
  61.815,
  57.645,
  57.325,
  60.344999999999985,
  65.585,
  61.34,
  65.2,
  54.885,
  54.77499999999999,
  51.464999999999996,
  59.47,
  56.99999999999999,
  57.32499999999998,
  56.55499999999999,
  52.565,
  48.88,
  56.985,
  60.425,
  60.425,
  56.55],
 [65.63,
  63.86,
  65.7,
  60.769999999999996,
  61.93999999999999,
  61.83,
  59.589999999999975,
  65.63,
  63.05,
  65.69999999999999,
  65.63,
  63.160000000000004,
  65.7,
  63.04499999999999,
  57.205,
  60.339999999999975,
  62.08500000000001,
  60.769999999999996,
  65.63,
  57.144999999999996,
  61.974999999999994,
  61.974999999999994,
  65.7],
 [65.88,
  66.42,
  65.94,
  65.94,
  65.10499999999999,
  65.10000000000001,
  65.94,
  65.88,
  66.295,
  65.94,
  65.88,
  66.27999999999999,
  65.94,
  64.60499999999999,
  65.94,
  65.94,
  64.60499999999999,
  65.88,
  65.88,
  65.88,
  64.60499999999999,
  64.60499999999999,
  65.94],
 [65.76,
  65.46999999999998,
  65.88,
  65.88,
  65.47,
  65.46999999999998,
  65.88,
  65.76,
  65.47,
  65.88,
  65.76,
  65.46999999999998,
  65.88,
  65.47,
  65.88,
  65.88,
  65.88,
  65.76,
  65.76,
  65.76,
  65.88,
  63.209999999999994,
  65.88],
 [65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.92,
  65.37999999999998,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.37999999999998,
  65.96000000000001,
  65.96,
  65.96,
  65.92,
  65.92,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.135,
 57.85,
 59.309999999999995,
 54.73,
 52.225,
 54.475,
 56.42499999999999,
 37.02,
 44.82,
 28.415,
 47.970000000000006,
 50.78499999999999,
 47.79499999999999,
 52.33,
 56.49499999999999,
 36.76,
 51.620000000000005,
 47.045,
 46.129999999999995,
 43.970000000000006,
 35.120000000000005,
 55.48,
 53.43499999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.474999999999994
Upper: 55.105
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 60.875,
 65.2,
 61.815,
 57.559999999999995,
 57.325,
 59.069999999999986,
 65.585,
 61.125,
 65.2,
 54.885,
 54.77499999999999,
 51.565,
 59.47,
 57.154999999999994,
 57.219999999999985,
 56.55499999999999,
 52.565,
 48.94500000000001,
 56.875,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 61.0
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 2
killed = 11
cloned = 3
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.63,
 63.11,
 65.7,
 60.769999999999996,
 62.074999999999996,
 61.83,
 59.91499999999998,
 65.63,
 64.155,
 65.69999999999999,
 65.63,
 65.7,
 60.77,
 63.045,
 57.46499999999999,
 60.75999999999998,
 62.084999999999994,
 65.63,
 63.43,
 57.115,
 61.974999999999994,
 61.974999999999994,
 65.7]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.3
Upper: 65.63
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 12, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [10, 17]
upper:           [2, 9, 11, 22, 0, 7]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 11
killed = 12
cloned = 22
killed = 14
cloned = 0
killed = 15
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[65.88,
 66.19999999999999,
 65.94,
 65.94,
 65.075,
 65.1,
 65.94,
 65.88,
 66.28999999999999,
 65.94,
 65.88,
 65.94,
 65.94,
 64.60499999999999,
 65.94,
 65.88,
 64.60499999999999,
 65.88,
 66.375,
 65.88,
 64.60499999999999,
 64.605,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.49
Upper: 65.94
====================================
lower list size: 6
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 9, 11, 12, 14, 22]
upper:           [1, 8, 18, 6, 3]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 18
killed = 13
cloned = 6
killed = 16
cloned = 3
killed = 20
######################################
~~~ Scores: ~~~
[65.76,
 65.46999999999998,
 65.88,
 65.88,
 65.47,
 65.46999999999998,
 65.88,
 65.76,
 65.47,
 65.88,
 65.76,
 65.88,
 65.88,
 65.47,
 65.88,
 65.76,
 65.88,
 65.76,
 65.46999999999998,
 65.76,
 65.88,
 63.209999999999994,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 4
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 18, 21, 4]
lower threshold: [8, 13]
....................................
upper threshold: [2, 3, 6, 22]
upper:           [16, 12, 11, 14, 20, 9]
====================================
cloned = 16
killed = 1
cloned = 12
killed = 5
cloned = 11
killed = 18
cloned = 14
killed = 21
cloned = 20
killed = 4
######################################
~~~ Scores: ~~~
[65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.92,
 65.37999999999998,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.37999999999998,
 65.96000000000001,
 65.92,
 65.96,
 65.92,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.92
Upper: 65.96000000000001
====================================
lower list size: 2
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 17, 0, 15]
lower threshold: [7, 10, 19]
....................................
upper threshold: [2, 6, 12, 14, 18, 20, 22]
upper:           [1, 11, 4, 3, 9, 21]
====================================
cloned = 1
killed = 8
cloned = 11
killed = 13
cloned = 4
killed = 17
cloned = 3
killed = 0
cloned = 9
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 12, 16, 21, 9]
lower threshold: [1, 2, 3, 4, 6, 7, 10, 13, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 15, 8, 5, 14, 11]
====================================
cloned = 0
killed = 19
cloned = 15
killed = 12
cloned = 8
killed = 16
cloned = 5
killed = 21
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 18, 10, 2]
lower threshold: [0, 1, 3, 5, 6, 11, 12, 13, 14, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 15, 16, 20, 19, 4]
====================================
cloned = 9
killed = 7
cloned = 15
killed = 8
cloned = 16
killed = 18
cloned = 20
killed = 10
cloned = 19
killed = 2
Trial run 14/seed 12914:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 3,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 6,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.135,
  57.85,
  59.309999999999995,
  54.73,
  52.225,
  54.475,
  56.42499999999999,
  37.02,
  44.82,
  28.415,
  47.970000000000006,
  50.78499999999999,
  47.79499999999999,
  52.33,
  56.49499999999999,
  36.76,
  51.620000000000005,
  47.045,
  46.129999999999995,
  43.970000000000006,
  35.120000000000005,
  55.48,
  53.43499999999999],
 [65.58500000000001,
  60.875,
  65.2,
  61.815,
  57.559999999999995,
  57.325,
  59.069999999999986,
  65.585,
  61.125,
  65.2,
  54.885,
  54.77499999999999,
  51.565,
  59.47,
  57.154999999999994,
  57.219999999999985,
  56.55499999999999,
  52.565,
  48.94500000000001,
  56.875,
  60.425,
  60.425,
  56.55],
 [65.63,
  63.11,
  65.7,
  60.769999999999996,
  62.074999999999996,
  61.83,
  59.91499999999998,
  65.63,
  64.155,
  65.69999999999999,
  65.63,
  65.7,
  60.77,
  63.045,
  57.46499999999999,
  60.75999999999998,
  62.084999999999994,
  65.63,
  63.43,
  57.115,
  61.974999999999994,
  61.974999999999994,
  65.7],
 [65.88,
  66.19999999999999,
  65.94,
  65.94,
  65.075,
  65.1,
  65.94,
  65.88,
  66.28999999999999,
  65.94,
  65.88,
  65.94,
  65.94,
  64.60499999999999,
  65.94,
  65.88,
  64.60499999999999,
  65.88,
  66.375,
  65.88,
  64.60499999999999,
  64.605,
  65.94],
 [65.76,
  65.46999999999998,
  65.88,
  65.88,
  65.47,
  65.46999999999998,
  65.88,
  65.76,
  65.47,
  65.88,
  65.76,
  65.88,
  65.88,
  65.47,
  65.88,
  65.76,
  65.88,
  65.76,
  65.46999999999998,
  65.76,
  65.88,
  63.209999999999994,
  65.88],
 [65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.92,
  65.37999999999998,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.37999999999998,
  65.96000000000001,
  65.92,
  65.96,
  65.92,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.32,
 56.144999999999996,
 59.349999999999994,
 54.825,
 52.19,
 54.190000000000005,
 53.37999999999999,
 37.160000000000004,
 44.955000000000005,
 29.909999999999993,
 47.910000000000004,
 50.71499999999999,
 45.55499999999999,
 52.455,
 56.26499999999999,
 37.04,
 51.575,
 49.13,
 46.315,
 41.905,
 34.865,
 55.67999999999999,
 53.125]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.254999999999995
Upper: 54.50750000000001
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.160000000000004,
 65.215,
 61.83,
 57.635,
 57.34,
 55.71999999999998,
 65.6,
 63.900000000000006,
 65.215,
 54.9,
 54.78999999999999,
 51.32,
 59.485,
 57.72,
 61.83,
 56.56999999999999,
 50.214999999999996,
 50.79500000000001,
 57.839999999999996,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.142499999999984
Upper: 62.495000000000005
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 11, 12, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.62,
 67.08999999999999,
 65.71000000000001,
 58.73,
 61.995,
 61.56,
 65.62,
 65.62,
 67.07999999999998,
 65.71000000000001,
 66.97999999999999,
 65.71,
 65.62,
 62.61,
 61.38999999999999,
 58.730000000000004,
 61.650000000000006,
 67.24000000000001,
 65.71,
 61.32999999999999,
 61.53999999999999,
 61.53999999999999,
 61.64999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.55
Upper: 65.71000000000001
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 15, 19, 20, 21]
lower threshold: []
....................................
upper threshold: []
upper:           [1, 8, 10, 17, 2, 9]
====================================
cloned = 1
killed = 3
cloned = 8
killed = 14
cloned = 10
killed = 15
cloned = 17
killed = 19
cloned = 2
killed = 20
cloned = 9
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.6,
 65.83999999999999,
 65.82,
 63.31,
 63.60000000000001,
 65.68,
 65.67999999999999,
 65.7,
 65.84,
 65.74,
 65.83999999999997,
 65.68,
 62.27999999999999,
 65.65,
 65.72,
 62.27999999999999,
 65.735,
 65.83999999999997,
 65.74,
 65.83999999999999,
 65.84,
 62.27999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.625
Upper: 65.82999999999998
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 5, 13, 16, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [2, 9, 11, 18, 20, 21]
====================================
cloned = 2
killed = 1
cloned = 9
killed = 4
cloned = 11
killed = 5
cloned = 18
killed = 13
cloned = 20
killed = 16
cloned = 21
killed = 22
######################################
~~~ Scores: ~~~
[65.72,
 65.86,
 65.85999999999999,
 65.11999999999999,
 65.85999999999999,
 65.85999999999999,
 65.72,
 65.72,
 65.11999999999999,
 65.86,
 65.11999999999999,
 65.85999999999999,
 65.72,
 65.86,
 65.11999999999999,
 65.11999999999999,
 65.85999999999999,
 65.11999999999999,
 65.85999999999999,
 65.11999999999999,
 65.85999999999999,
 65.85999999999999,
 65.85999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.11999999999999
Upper: 65.85999999999999
====================================
lower list size: 0
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [10, 14, 15, 17, 8]
lower threshold: [3, 19]
....................................
upper threshold: [2, 4, 5, 11, 18, 20, 22]
upper:           [1, 9, 13, 16, 21]
====================================
cloned = 1
killed = 10
cloned = 9
killed = 14
cloned = 13
killed = 15
cloned = 16
killed = 17
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[65.92,
 65.96000000000001,
 65.96,
 65.41999999999997,
 65.96,
 65.96000000000001,
 65.92,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.41999999999999,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.94
Upper: 65.96000000000001
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 6, 7, 12, 19]
lower threshold: []
....................................
upper threshold: [1, 5, 8, 10, 14, 16, 17, 22]
upper:           [9, 20, 21, 13, 15, 18]
====================================
cloned = 9
killed = 0
cloned = 20
killed = 3
cloned = 21
killed = 6
cloned = 13
killed = 7
cloned = 15
killed = 12
cloned = 18
killed = 19
Trial run 15/seed 12915:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8,
          'Tit For Tat': 6,
          'Evolved FSM 6': 4,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 12,
          'Second by RichardHufford': 7,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.32,
  56.144999999999996,
  59.349999999999994,
  54.825,
  52.19,
  54.190000000000005,
  53.37999999999999,
  37.160000000000004,
  44.955000000000005,
  29.909999999999993,
  47.910000000000004,
  50.71499999999999,
  45.55499999999999,
  52.455,
  56.26499999999999,
  37.04,
  51.575,
  49.13,
  46.315,
  41.905,
  34.865,
  55.67999999999999,
  53.125],
 [65.60000000000001,
  63.160000000000004,
  65.215,
  61.83,
  57.635,
  57.34,
  55.71999999999998,
  65.6,
  63.900000000000006,
  65.215,
  54.9,
  54.78999999999999,
  51.32,
  59.485,
  57.72,
  61.83,
  56.56999999999999,
  50.214999999999996,
  50.79500000000001,
  57.839999999999996,
  60.44,
  60.44,
  56.565],
 [65.62,
  67.08999999999999,
  65.71000000000001,
  58.73,
  61.995,
  61.56,
  65.62,
  65.62,
  67.07999999999998,
  65.71000000000001,
  66.97999999999999,
  65.71,
  65.62,
  62.61,
  61.38999999999999,
  58.730000000000004,
  61.650000000000006,
  67.24000000000001,
  65.71,
  61.32999999999999,
  61.53999999999999,
  61.53999999999999,
  61.64999999999999],
 [65.68,
  65.6,
  65.83999999999999,
  65.82,
  63.31,
  63.60000000000001,
  65.68,
  65.67999999999999,
  65.7,
  65.84,
  65.74,
  65.83999999999997,
  65.68,
  62.27999999999999,
  65.65,
  65.72,
  62.27999999999999,
  65.735,
  65.83999999999997,
  65.74,
  65.83999999999999,
  65.84,
  62.27999999999999],
 [65.72,
  65.86,
  65.85999999999999,
  65.11999999999999,
  65.85999999999999,
  65.85999999999999,
  65.72,
  65.72,
  65.11999999999999,
  65.86,
  65.11999999999999,
  65.85999999999999,
  65.72,
  65.86,
  65.11999999999999,
  65.11999999999999,
  65.85999999999999,
  65.11999999999999,
  65.85999999999999,
  65.11999999999999,
  65.85999999999999,
  65.85999999999999,
  65.85999999999999],
 [65.92,
  65.96000000000001,
  65.96,
  65.41999999999997,
  65.96,
  65.96000000000001,
  65.92,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.41999999999999,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.615,
 55.605000000000004,
 59.385,
 54.755,
 51.925,
 54.470000000000006,
 54.58999999999999,
 36.739999999999995,
 44.715,
 33.805,
 47.905,
 50.84499999999999,
 47.709999999999994,
 52.405,
 56.5,
 36.965,
 51.129999999999995,
 47.1,
 45.529999999999994,
 42.705000000000005,
 34.925000000000004,
 55.654999999999994,
 53.459999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.1225
Upper: 54.6725
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.72500000000001,
 65.215,
 61.83,
 57.75,
 57.34,
 58.02999999999998,
 65.6,
 63.465,
 65.215,
 54.9,
 54.78999999999999,
 53.19,
 59.485,
 57.76,
 61.83,
 56.56999999999999,
 50.305,
 50.63000000000001,
 57.8,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.6475
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.72,
 65.69500000000001,
 58.714999999999996,
 61.74499999999999,
 61.545,
 61.799999999999976,
 65.605,
 66.80499999999999,
 65.695,
 65.605,
 64.75499999999998,
 65.69500000000001,
 62.595,
 58.81999999999999,
 58.715,
 61.635000000000005,
 65.605,
 66.72500000000001,
 58.84,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.535
Upper: 65.695
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 15, 19, 20, 21]
lower threshold: []
....................................
upper threshold: [9, 22]
upper:           [1, 2, 8, 12, 18]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 14
cloned = 8
killed = 15
cloned = 12
killed = 19
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.70500000000001,
 63.795,
 65.845,
 63.97,
 63.769999999999996,
 63.88500000000001,
 57.17499999999998,
 65.705,
 64.015,
 65.84499999999998,
 65.70500000000001,
 64.01,
 65.845,
 62.72999999999999,
 65.84499999999998,
 64.175,
 62.72999999999999,
 65.70500000000001,
 63.78999999999999,
 65.845,
 63.870000000000005,
 62.72999999999999,
 65.84499999999998]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 63.7925
Upper: 65.775
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 13, 16, 18, 21]
lower threshold: []
....................................
upper threshold: []
upper:           [2, 9, 12, 14, 19, 22]
====================================
cloned = 2
killed = 4
cloned = 9
killed = 6
cloned = 12
killed = 13
cloned = 14
killed = 16
cloned = 19
killed = 18
cloned = 22
killed = 21
######################################
~~~ Scores: ~~~
[65.76,
 65.09999999999998,
 65.88,
 65.09999999999998,
 65.88,
 64.20000000000002,
 65.88,
 65.76,
 65.09999999999998,
 65.88,
 65.76,
 65.1,
 65.88,
 65.88,
 65.88,
 65.1,
 65.88,
 65.76,
 65.88,
 65.88,
 65.1,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.1
Upper: 65.88
====================================
lower list size: 4
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11]
lower threshold: [15, 20]
....................................
upper threshold: [2, 4, 13, 16, 18, 22]
upper:           [12, 9, 19, 14, 6, 21]
====================================
cloned = 12
killed = 1
cloned = 9
killed = 3
cloned = 19
killed = 5
cloned = 14
killed = 8
cloned = 6
killed = 11
######################################
~~~ Scores: ~~~
[65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96,
 65.92,
 65.96,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.41999999999999,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.41999999999999,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.94
Upper: 65.96000000000001
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 10, 15, 17, 20]
lower threshold: []
....................................
upper threshold: [1, 6, 14, 16, 18, 19, 22]
upper:           [2, 4, 21, 8, 12, 3]
====================================
cloned = 2
killed = 0
cloned = 4
killed = 7
cloned = 21
killed = 10
cloned = 8
killed = 15
cloned = 12
killed = 17
cloned = 3
killed = 20
Trial run 16/seed 12916:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 7,
          'Tit For Tat': 6,
          'Evolved FSM 6': 4,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 12,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4,
          'EvolvedLookerUp2_2_2': 1}),
 Counter({'Tit For Tat': 17,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.615,
  55.605000000000004,
  59.385,
  54.755,
  51.925,
  54.470000000000006,
  54.58999999999999,
  36.739999999999995,
  44.715,
  33.805,
  47.905,
  50.84499999999999,
  47.709999999999994,
  52.405,
  56.5,
  36.965,
  51.129999999999995,
  47.1,
  45.529999999999994,
  42.705000000000005,
  34.925000000000004,
  55.654999999999994,
  53.459999999999994],
 [65.60000000000001,
  63.72500000000001,
  65.215,
  61.83,
  57.75,
  57.34,
  58.02999999999998,
  65.6,
  63.465,
  65.215,
  54.9,
  54.78999999999999,
  53.19,
  59.485,
  57.76,
  61.83,
  56.56999999999999,
  50.305,
  50.63000000000001,
  57.8,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.72,
  65.69500000000001,
  58.714999999999996,
  61.74499999999999,
  61.545,
  61.799999999999976,
  65.605,
  66.80499999999999,
  65.695,
  65.605,
  64.75499999999998,
  65.69500000000001,
  62.595,
  58.81999999999999,
  58.715,
  61.635000000000005,
  65.605,
  66.72500000000001,
  58.84,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.70500000000001,
  63.795,
  65.845,
  63.97,
  63.769999999999996,
  63.88500000000001,
  57.17499999999998,
  65.705,
  64.015,
  65.84499999999998,
  65.70500000000001,
  64.01,
  65.845,
  62.72999999999999,
  65.84499999999998,
  64.175,
  62.72999999999999,
  65.70500000000001,
  63.78999999999999,
  65.845,
  63.870000000000005,
  62.72999999999999,
  65.84499999999998],
 [65.76,
  65.09999999999998,
  65.88,
  65.09999999999998,
  65.88,
  64.20000000000002,
  65.88,
  65.76,
  65.09999999999998,
  65.88,
  65.76,
  65.1,
  65.88,
  65.88,
  65.88,
  65.1,
  65.88,
  65.76,
  65.88,
  65.88,
  65.1,
  65.88,
  65.88],
 [65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96,
  65.92,
  65.96,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.41999999999999,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.41999999999999,
  65.96000000000001,
  65.96000000000001]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.31000000000001,
 56.620000000000005,
 59.285,
 54.595,
 52.19500000000001,
 54.495000000000005,
 53.719999999999985,
 36.84,
 44.805,
 29.880000000000006,
 47.64,
 50.95499999999999,
 47.709999999999994,
 52.405,
 56.155,
 36.92,
 51.995000000000005,
 47.175000000000004,
 46.269999999999996,
 42.205000000000005,
 34.940000000000005,
 55.654999999999994,
 53.084999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.537499999999994
Upper: 54.545
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 64.425,
 65.215,
 61.83,
 57.775,
 57.34,
 60.99999999999998,
 65.6,
 63.465,
 65.215,
 54.9,
 54.78999999999999,
 53.169999999999995,
 59.485,
 58.105,
 61.83,
 56.56999999999999,
 52.265,
 50.88500000000001,
 57.93,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.6475
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.85000000000001,
 65.69500000000001,
 58.714999999999996,
 61.9,
 61.545,
 58.22499999999997,
 65.605,
 64.94,
 65.695,
 65.605,
 65.03999999999999,
 65.69500000000001,
 62.595,
 58.769999999999996,
 58.715,
 61.635000000000005,
 65.605,
 64.995,
 58.9,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 17]
upper:           [2, 9, 12, 22, 10, 7]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 10
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 66.145,
 65.92,
 65.91999999999999,
 64.77,
 64.80000000000001,
 65.91999999999999,
 65.84,
 66.33999999999999,
 65.91999999999999,
 65.84,
 66.24999999999999,
 65.92,
 64.13999999999999,
 65.91999999999999,
 65.91999999999999,
 64.13999999999999,
 65.84,
 66.22,
 65.84,
 64.13999999999999,
 64.14,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.32000000000001
Upper: 65.92
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [22]
upper:           [1, 8, 11, 18, 2, 12]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 2
killed = 20
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.03999999999999,
 65.83999999999999,
 65.83999999999997,
 65.03999999999999,
 65.03999999999999,
 65.84,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.04,
 65.83999999999997,
 65.83999999999999,
 65.03999999999999,
 65.68,
 65.03999999999999,
 65.68,
 65.83999999999997,
 65.83999999999999,
 65.83999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.03999999999999
Upper: 65.83999999999999
====================================
lower list size: 0
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 8, 5, 4]
lower threshold: [16, 18]
....................................
upper threshold: [9, 22]
upper:           [6, 21, 12, 2, 15]
====================================
cloned = 6
killed = 1
cloned = 21
killed = 11
cloned = 12
killed = 8
cloned = 2
killed = 5
cloned = 15
killed = 4
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.94,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.33999999999997,
 65.88,
 65.33999999999999,
 65.88,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 18, 10, 7]
lower threshold: [0, 17, 19]
....................................
upper threshold: [2, 3, 4, 8, 11, 14, 15, 21, 22]
upper:           [1, 9, 6, 20, 12, 5]
====================================
cloned = 1
killed = 13
cloned = 9
killed = 16
cloned = 6
killed = 18
cloned = 20
killed = 10
cloned = 12
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 0, 9, 11]
lower threshold: [1, 2, 3, 6, 10, 13, 14, 15, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 18, 17, 12, 8, 5]
====================================
cloned = 16
killed = 4
cloned = 18
killed = 7
cloned = 17
killed = 0
cloned = 12
killed = 9
cloned = 8
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 20, 7, 8, 4]
lower threshold: [0, 3, 5, 6, 9, 10, 14, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 11, 13, 16, 12, 19]
====================================
cloned = 1
killed = 2
cloned = 11
killed = 20
cloned = 13
killed = 7
cloned = 16
killed = 8
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 12, 19, 1]
lower threshold: [2, 3, 5, 6, 9, 11, 13, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 8, 10, 0, 14]
====================================
cloned = 4
killed = 17
cloned = 16
killed = 7
cloned = 8
killed = 12
cloned = 10
killed = 19
cloned = 0
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 0, 12, 4]
lower threshold: [2, 5, 6, 7, 9, 10, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 13, 21, 14, 1, 3]
====================================
cloned = 18
killed = 8
cloned = 13
killed = 11
cloned = 21
killed = 0
cloned = 14
killed = 12
cloned = 1
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 15, 2, 18, 19]
lower threshold: [0, 1, 3, 5, 7, 9, 10, 11, 12, 13, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 16, 14, 17, 6]
====================================
cloned = 8
killed = 21
cloned = 4
killed = 15
cloned = 16
killed = 2
cloned = 14
killed = 18
cloned = 17
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 13, 17, 19]
lower threshold: [0, 1, 3, 6, 7, 8, 12, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 9, 15, 5, 20, 4]
====================================
cloned = 10
killed = 2
cloned = 9
killed = 11
cloned = 15
killed = 13
cloned = 5
killed = 17
cloned = 20
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 7, 19, 15, 10]
lower threshold: [3, 5, 6, 8, 9, 12, 13, 14, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 1, 4, 20, 21, 2]
====================================
cloned = 0
killed = 11
cloned = 1
killed = 7
cloned = 4
killed = 19
cloned = 20
killed = 15
cloned = 21
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 14, 5, 0]
lower threshold: [3, 4, 6, 8, 10, 11, 12, 13, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 21, 19, 9, 18, 2]
====================================
cloned = 17
killed = 1
cloned = 21
killed = 7
cloned = 19
killed = 14
cloned = 9
killed = 5
cloned = 18
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 0, 13, 15, 3]
lower threshold: [1, 4, 6, 7, 9, 10, 11, 14, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 18, 5, 8, 16, 17]
====================================
cloned = 12
killed = 2
cloned = 18
killed = 0
cloned = 5
killed = 13
cloned = 8
killed = 15
cloned = 16
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 20, 11, 14]
lower threshold: [1, 5, 6, 7, 9, 10, 12, 13, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 16, 2, 19, 8, 0]
====================================
cloned = 18
killed = 3
cloned = 16
killed = 4
cloned = 2
killed = 20
cloned = 19
killed = 11
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 4, 16, 6, 15]
lower threshold: [0, 1, 2, 3, 5, 8, 11, 12, 13, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 18, 9, 10, 7, 19]
====================================
cloned = 14
killed = 20
cloned = 18
killed = 4
cloned = 9
killed = 16
cloned = 10
killed = 6
cloned = 7
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 12, 14, 3, 1]
lower threshold: [2, 6, 7, 9, 10, 11, 13, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 5, 19, 0, 8, 4]
====================================
cloned = 21
killed = 20
cloned = 5
killed = 12
cloned = 19
killed = 14
cloned = 0
killed = 3
cloned = 8
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 9, 18, 5, 1]
lower threshold: [0, 2, 3, 4, 6, 8, 10, 11, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 13, 7, 19, 14]
====================================
cloned = 15
killed = 16
cloned = 12
killed = 9
cloned = 13
killed = 18
cloned = 7
killed = 5
cloned = 19
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 3, 20, 21]
lower threshold: [0, 1, 2, 4, 5, 6, 8, 9, 10, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 17, 7, 16, 15]
====================================
cloned = 14
killed = 12
cloned = 13
killed = 11
cloned = 17
killed = 3
cloned = 7
killed = 20
cloned = 16
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 2, 19, 12, 5]
lower threshold: [4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 16, 0, 20, 3, 1]
====================================
cloned = 9
killed = 18
cloned = 16
killed = 2
cloned = 0
killed = 19
cloned = 20
killed = 12
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 12, 20, 19]
lower threshold: [0, 3, 4, 5, 6, 7, 9, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 10, 17, 2, 11]
====================================
cloned = 14
killed = 8
cloned = 13
killed = 1
cloned = 10
killed = 12
cloned = 17
killed = 20
cloned = 2
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 1, 11, 19]
lower threshold: [0, 3, 5, 6, 7, 8, 12, 13, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 16, 2, 4, 14, 15]
====================================
cloned = 21
killed = 9
cloned = 16
killed = 10
cloned = 2
killed = 1
cloned = 4
killed = 11
cloned = 14
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 17, 14, 16, 0]
lower threshold: [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 11, 18, 19, 1, 13]
====================================
cloned = 21
killed = 12
cloned = 11
killed = 17
cloned = 18
killed = 14
cloned = 19
killed = 16
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 4, 15, 12]
lower threshold: [1, 5, 6, 7, 8, 11, 13, 14, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 20, 2, 9, 3, 17]
====================================
cloned = 0
killed = 16
cloned = 20
killed = 10
cloned = 2
killed = 4
cloned = 9
killed = 15
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 6, 8, 12]
lower threshold: [2, 4, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 3, 9, 7, 0, 21]
====================================
cloned = 1
killed = 11
cloned = 3
killed = 5
cloned = 9
killed = 6
cloned = 7
killed = 8
cloned = 0
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 4, 5, 7]
lower threshold: [0, 2, 3, 6, 9, 10, 11, 13, 14, 16, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 1, 17, 8, 12, 18]
====================================
cloned = 15
killed = 20
cloned = 1
killed = 21
cloned = 17
killed = 4
cloned = 8
killed = 5
cloned = 12
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 9, 10, 18]
lower threshold: [0, 1, 2, 3, 4, 6, 7, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 21, 5, 14, 12, 15]
====================================
cloned = 13
killed = 11
cloned = 21
killed = 8
cloned = 5
killed = 9
cloned = 14
killed = 10
cloned = 12
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 5, 14, 1, 18]
lower threshold: [0, 2, 6, 7, 8, 10, 11, 12, 13, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 4, 21, 9, 3, 20]
====================================
cloned = 15
killed = 16
cloned = 4
killed = 5
cloned = 21
killed = 14
cloned = 9
killed = 1
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 5, 3, 21]
lower threshold: [1, 2, 4, 7, 10, 11, 12, 13, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 8, 9, 19, 17, 15]
====================================
cloned = 14
killed = 0
cloned = 8
killed = 6
cloned = 9
killed = 5
cloned = 19
killed = 3
cloned = 17
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 11, 1, 13]
lower threshold: [0, 2, 3, 6, 8, 10, 12, 14, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 19, 5, 21, 17, 9]
====================================
cloned = 16
killed = 7
cloned = 19
killed = 4
cloned = 5
killed = 11
cloned = 21
killed = 1
cloned = 17
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 14, 13, 8, 3]
lower threshold: [0, 1, 6, 9, 10, 11, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 12, 2, 5, 7, 4]
====================================
cloned = 20
killed = 17
cloned = 12
killed = 14
cloned = 2
killed = 13
cloned = 5
killed = 8
cloned = 7
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 12, 7, 5]
lower threshold: [0, 2, 3, 4, 6, 8, 9, 11, 14, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 20, 16, 15, 13, 17]
====================================
cloned = 21
killed = 10
cloned = 20
killed = 1
cloned = 16
killed = 12
cloned = 15
killed = 7
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 14, 19, 13, 18]
lower threshold: [1, 5, 6, 7, 8, 11, 12, 15, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 4, 20, 3, 9, 2]
====================================
cloned = 0
killed = 10
cloned = 4
killed = 14
cloned = 20
killed = 19
cloned = 3
killed = 13
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 15, 6, 16, 7]
lower threshold: [0, 1, 2, 3, 4, 8, 11, 12, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 10, 9, 5, 19, 13]
====================================
cloned = 21
killed = 14
cloned = 10
killed = 15
cloned = 9
killed = 6
cloned = 5
killed = 16
cloned = 19
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 2, 17, 6]
lower threshold: [1, 4, 7, 8, 9, 14, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 0, 15, 10, 12, 11]
====================================
cloned = 5
killed = 13
cloned = 0
killed = 3
cloned = 15
killed = 2
cloned = 10
killed = 17
cloned = 12
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 0, 10, 18, 13]
lower threshold: [1, 2, 3, 4, 6, 8, 9, 11, 12, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 14, 15, 20, 5, 7]
====================================
cloned = 17
killed = 16
cloned = 14
killed = 0
cloned = 15
killed = 10
cloned = 20
killed = 18
cloned = 5
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 4, 20, 12, 14]
lower threshold: [3, 5, 6, 7, 9, 11, 13, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 8, 17, 0, 2, 1]
====================================
cloned = 10
killed = 19
cloned = 8
killed = 4
cloned = 17
killed = 20
cloned = 0
killed = 12
cloned = 2
killed = 14
Trial run 17/seed 12917:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.31000000000001,
  56.620000000000005,
  59.285,
  54.595,
  52.19500000000001,
  54.495000000000005,
  53.719999999999985,
  36.84,
  44.805,
  29.880000000000006,
  47.64,
  50.95499999999999,
  47.709999999999994,
  52.405,
  56.155,
  36.92,
  51.995000000000005,
  47.175000000000004,
  46.269999999999996,
  42.205000000000005,
  34.940000000000005,
  55.654999999999994,
  53.084999999999994],
 [65.60000000000001,
  64.425,
  65.215,
  61.83,
  57.775,
  57.34,
  60.99999999999998,
  65.6,
  63.465,
  65.215,
  54.9,
  54.78999999999999,
  53.169999999999995,
  59.485,
  58.105,
  61.83,
  56.56999999999999,
  52.265,
  50.88500000000001,
  57.93,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.85000000000001,
  65.69500000000001,
  58.714999999999996,
  61.9,
  61.545,
  58.22499999999997,
  65.605,
  64.94,
  65.695,
  65.605,
  65.03999999999999,
  65.69500000000001,
  62.595,
  58.769999999999996,
  58.715,
  61.635000000000005,
  65.605,
  64.995,
  58.9,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.84,
  66.145,
  65.92,
  65.91999999999999,
  64.77,
  64.80000000000001,
  65.91999999999999,
  65.84,
  66.33999999999999,
  65.91999999999999,
  65.84,
  66.24999999999999,
  65.92,
  64.13999999999999,
  65.91999999999999,
  65.91999999999999,
  64.13999999999999,
  65.84,
  66.22,
  65.84,
  64.13999999999999,
  64.14,
  65.92],
 [65.68,
  65.03999999999999,
  65.83999999999999,
  65.83999999999997,
  65.03999999999999,
  65.03999999999999,
  65.84,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.04,
  65.83999999999997,
  65.83999999999999,
  65.03999999999999,
  65.68,
  65.03999999999999,
  65.68,
  65.83999999999997,
  65.83999999999999,
  65.83999999999999],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.94,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.33999999999997,
  65.88,
  65.33999999999999,
  65.88,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.38,
 56.44500000000001,
 59.199999999999996,
 54.69,
 52.065,
 54.35,
 53.61999999999998,
 36.86,
 44.760000000000005,
 30.89,
 47.78,
 50.794999999999995,
 45.52999999999999,
 52.32,
 56.379999999999995,
 36.96,
 51.54,
 47.275,
 45.864999999999995,
 44.300000000000004,
 34.940000000000005,
 55.519999999999996,
 53.30999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.144999999999996
Upper: 54.519999999999996
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 62.980000000000004,
 65.215,
 61.83,
 57.779999999999994,
 57.34,
 57.439999999999976,
 65.6,
 63.53500000000001,
 65.215,
 54.9,
 54.78999999999999,
 53.41,
 59.485,
 57.93,
 61.83,
 56.56999999999999,
 50.305,
 50.640000000000015,
 57.989999999999995,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.405
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.205,
 65.69500000000001,
 58.714999999999996,
 61.665,
 61.545,
 59.27499999999998,
 65.605,
 65.01,
 65.695,
 65.605,
 65.14499999999998,
 65.69500000000001,
 62.595,
 58.809999999999995,
 58.715,
 61.635000000000005,
 65.605,
 64.92,
 59.195,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [7, 17]
upper:           [2, 9, 12, 22, 0, 10]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 66.105,
 65.92,
 65.91999999999999,
 64.37,
 64.80000000000001,
 65.91999999999999,
 65.84,
 66.28,
 65.91999999999999,
 65.84,
 66.195,
 65.92,
 64.13999999999999,
 65.91999999999999,
 65.91999999999999,
 64.13999999999999,
 65.84,
 66.14999999999999,
 65.84,
 64.13999999999999,
 64.14,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.32000000000001
Upper: 65.92
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [22]
upper:           [1, 8, 11, 18, 12, 2]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 12
killed = 20
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.03999999999999,
 65.83999999999999,
 65.83999999999997,
 65.03999999999999,
 65.03999999999999,
 65.84,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.04,
 65.83999999999997,
 65.83999999999999,
 65.03999999999999,
 65.68,
 65.03999999999999,
 65.68,
 65.83999999999997,
 65.83999999999999,
 65.83999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.03999999999999
Upper: 65.83999999999999
====================================
lower list size: 0
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [16, 1, 8, 5, 11]
lower threshold: [4, 18]
....................................
upper threshold: [12, 22]
upper:           [6, 15, 2, 9, 21]
====================================
cloned = 6
killed = 16
cloned = 15
killed = 1
cloned = 2
killed = 8
cloned = 9
killed = 5
cloned = 21
killed = 11
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.94,
 65.88,
 65.33999999999999,
 65.88,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 18, 10, 7]
lower threshold: [0, 17, 19]
....................................
upper threshold: [1, 8, 9, 12, 14, 15, 16, 21, 22]
upper:           [2, 11, 3, 6, 5, 20]
====================================
cloned = 2
killed = 4
cloned = 11
killed = 13
cloned = 3
killed = 18
cloned = 6
killed = 10
cloned = 5
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 16, 18, 9]
lower threshold: [0, 1, 2, 3, 4, 6, 7, 8, 13, 14, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 20, 12, 11, 10, 5]
====================================
cloned = 15
killed = 21
cloned = 20
killed = 17
cloned = 12
killed = 16
cloned = 11
killed = 18
cloned = 10
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 7, 6, 0, 15]
lower threshold: [3, 4, 5, 9, 10, 11, 12, 13, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 2, 1, 14, 8, 19]
====================================
cloned = 17
killed = 18
cloned = 2
killed = 7
cloned = 1
killed = 6
cloned = 14
killed = 0
cloned = 8
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 16, 10, 13]
lower threshold: [0, 4, 5, 7, 9, 11, 12, 14, 15, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 6, 1, 18, 17, 8]
====================================
cloned = 2
killed = 3
cloned = 6
killed = 20
cloned = 1
killed = 16
cloned = 18
killed = 10
cloned = 17
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 0, 4, 21]
lower threshold: [3, 5, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 8, 1, 6, 2, 18]
====================================
cloned = 14
killed = 9
cloned = 8
killed = 7
cloned = 1
killed = 0
cloned = 6
killed = 4
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 7, 19, 3, 20]
lower threshold: [0, 1, 4, 6, 9, 10, 11, 12, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 8, 15, 5, 13, 16]
====================================
cloned = 2
killed = 14
cloned = 8
killed = 7
cloned = 15
killed = 19
cloned = 5
killed = 3
cloned = 13
killed = 20
Trial run 18/seed 12918:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.38,
  56.44500000000001,
  59.199999999999996,
  54.69,
  52.065,
  54.35,
  53.61999999999998,
  36.86,
  44.760000000000005,
  30.89,
  47.78,
  50.794999999999995,
  45.52999999999999,
  52.32,
  56.379999999999995,
  36.96,
  51.54,
  47.275,
  45.864999999999995,
  44.300000000000004,
  34.940000000000005,
  55.519999999999996,
  53.30999999999999],
 [65.60000000000001,
  62.980000000000004,
  65.215,
  61.83,
  57.779999999999994,
  57.34,
  57.439999999999976,
  65.6,
  63.53500000000001,
  65.215,
  54.9,
  54.78999999999999,
  53.41,
  59.485,
  57.93,
  61.83,
  56.56999999999999,
  50.305,
  50.640000000000015,
  57.989999999999995,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.205,
  65.69500000000001,
  58.714999999999996,
  61.665,
  61.545,
  59.27499999999998,
  65.605,
  65.01,
  65.695,
  65.605,
  65.14499999999998,
  65.69500000000001,
  62.595,
  58.809999999999995,
  58.715,
  61.635000000000005,
  65.605,
  64.92,
  59.195,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.84,
  66.105,
  65.92,
  65.91999999999999,
  64.37,
  64.80000000000001,
  65.91999999999999,
  65.84,
  66.28,
  65.91999999999999,
  65.84,
  66.195,
  65.92,
  64.13999999999999,
  65.91999999999999,
  65.91999999999999,
  64.13999999999999,
  65.84,
  66.14999999999999,
  65.84,
  64.13999999999999,
  64.14,
  65.92],
 [65.68,
  65.03999999999999,
  65.83999999999999,
  65.83999999999997,
  65.03999999999999,
  65.03999999999999,
  65.84,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.04,
  65.83999999999997,
  65.83999999999999,
  65.03999999999999,
  65.68,
  65.03999999999999,
  65.68,
  65.83999999999997,
  65.83999999999999,
  65.83999999999999],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.94,
  65.88,
  65.33999999999999,
  65.88,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.23500000000001,
 57.525,
 59.335,
 54.63,
 52.11999999999999,
 53.975,
 56.19499999999999,
 36.76,
 44.730000000000004,
 28.839999999999993,
 47.955000000000005,
 50.77499999999999,
 48.31,
 52.434999999999995,
 56.48499999999999,
 37.0,
 51.2,
 47.115,
 46.455,
 43.995000000000005,
 35.245000000000005,
 55.64,
 53.19499999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.5925
Upper: 55.135000000000005
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 63.43,
 65.2,
 61.815,
 57.51,
 57.325,
 56.344999999999985,
 65.585,
 60.875,
 65.2,
 54.885,
 54.77499999999999,
 49.675000000000004,
 59.47,
 56.815,
 55.68499999999998,
 56.55499999999999,
 48.684999999999995,
 49.135000000000005,
 56.955,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.014999999999986
Upper: 61.345
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 15, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 3
killed = 15
cloned = 7
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.64500000000001,
 65.19,
 65.715,
 60.785,
 61.925000000000004,
 61.845,
 60.52499999999998,
 65.645,
 65.22999999999999,
 65.71499999999999,
 65.64500000000001,
 65.735,
 65.715,
 63.05999999999999,
 60.035000000000004,
 60.785000000000004,
 62.10000000000001,
 65.64500000000001,
 65.715,
 60.13999999999999,
 61.989999999999995,
 61.989999999999995,
 62.099999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.885000000000005
Upper: 65.64500000000001
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 6, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [0, 10, 17]
upper:           [2, 9, 11, 12, 18]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 5
cloned = 11
killed = 6
cloned = 12
killed = 14
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[65.73,
 66.71000000000001,
 65.815,
 65.815,
 63.25500000000001,
 65.815,
 66.665,
 65.73,
 66.64499999999998,
 65.815,
 65.73,
 66.64,
 65.815,
 63.375,
 65.815,
 65.815,
 62.894999999999996,
 65.73,
 65.815,
 62.974999999999994,
 62.84,
 62.83999999999999,
 62.894999999999996]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 63.315000000000005
Upper: 65.815
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [3, 5, 12, 14, 15, 18]
upper:           [1, 6, 8, 11, 9, 2]
====================================
cloned = 1
killed = 4
cloned = 6
killed = 16
cloned = 8
killed = 19
cloned = 11
killed = 20
cloned = 9
killed = 21
cloned = 2
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.39,
 65.84,
 65.83999999999999,
 65.38999999999999,
 65.83999999999997,
 65.39,
 65.68,
 65.38999999999999,
 65.83999999999999,
 65.68,
 65.39,
 65.83999999999999,
 62.27999999999999,
 65.83999999999999,
 65.83999999999999,
 65.38999999999999,
 65.68,
 65.83999999999999,
 65.39,
 65.39,
 65.83999999999999,
 65.84]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.39
Upper: 65.83999999999999
====================================
lower list size: 4
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 13, 16, 11]
lower threshold: [1, 6, 19, 20]
....................................
upper threshold: [15, 18, 21]
upper:           [2, 22, 9, 14, 3, 12]
====================================
cloned = 2
killed = 4
cloned = 22
killed = 8
cloned = 9
killed = 13
cloned = 14
killed = 16
cloned = 3
killed = 11
######################################
~~~ Scores: ~~~
[65.84,
 65.29999999999998,
 65.91999999999999,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.3,
 65.84,
 65.91999999999999,
 65.92,
 65.84,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.84,
 65.91999999999999,
 65.29999999999998,
 65.29999999999998,
 65.91999999999999,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.84
Upper: 65.91999999999999
====================================
lower list size: 4
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 19, 20, 0]
lower threshold: [7, 10, 17]
....................................
upper threshold: [2, 4, 5, 8, 11, 13, 15, 16, 21]
upper:           [3, 9, 14, 22, 18, 12]
====================================
cloned = 3
killed = 1
cloned = 9
killed = 6
cloned = 14
killed = 19
cloned = 22
killed = 20
cloned = 18
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 3, 4, 11, 14]
lower threshold: [1, 5, 7, 9, 10, 12, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 0, 8, 6, 13, 2]
====================================
cloned = 18
killed = 15
cloned = 0
killed = 3
cloned = 8
killed = 4
cloned = 6
killed = 11
cloned = 13
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 7, 4, 11]
lower threshold: [3, 5, 6, 10, 12, 13, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 16, 18, 8, 20, 1]
====================================
cloned = 0
killed = 2
cloned = 16
killed = 9
cloned = 18
killed = 7
cloned = 8
killed = 4
cloned = 20
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 15, 18, 17]
lower threshold: [2, 4, 8, 10, 11, 12, 13, 14, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 6, 9, 16, 0, 7]
====================================
cloned = 3
killed = 5
cloned = 6
killed = 1
cloned = 9
killed = 15
cloned = 16
killed = 18
cloned = 0
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 7, 13, 10, 12]
lower threshold: [1, 2, 3, 4, 5, 8, 15, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 21, 11, 0, 16, 6]
====================================
cloned = 9
killed = 14
cloned = 21
killed = 7
cloned = 11
killed = 13
cloned = 0
killed = 10
cloned = 16
killed = 12
Trial run 19/seed 12919:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Evolved ANN 5 Noise 05': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 4,
          'Tit For 2 Tats': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.23500000000001,
  57.525,
  59.335,
  54.63,
  52.11999999999999,
  53.975,
  56.19499999999999,
  36.76,
  44.730000000000004,
  28.839999999999993,
  47.955000000000005,
  50.77499999999999,
  48.31,
  52.434999999999995,
  56.48499999999999,
  37.0,
  51.2,
  47.115,
  46.455,
  43.995000000000005,
  35.245000000000005,
  55.64,
  53.19499999999999],
 [65.58500000000001,
  63.43,
  65.2,
  61.815,
  57.51,
  57.325,
  56.344999999999985,
  65.585,
  60.875,
  65.2,
  54.885,
  54.77499999999999,
  49.675000000000004,
  59.47,
  56.815,
  55.68499999999998,
  56.55499999999999,
  48.684999999999995,
  49.135000000000005,
  56.955,
  60.425,
  60.425,
  56.55],
 [65.64500000000001,
  65.19,
  65.715,
  60.785,
  61.925000000000004,
  61.845,
  60.52499999999998,
  65.645,
  65.22999999999999,
  65.71499999999999,
  65.64500000000001,
  65.735,
  65.715,
  63.05999999999999,
  60.035000000000004,
  60.785000000000004,
  62.10000000000001,
  65.64500000000001,
  65.715,
  60.13999999999999,
  61.989999999999995,
  61.989999999999995,
  62.099999999999994],
 [65.73,
  66.71000000000001,
  65.815,
  65.815,
  63.25500000000001,
  65.815,
  66.665,
  65.73,
  66.64499999999998,
  65.815,
  65.73,
  66.64,
  65.815,
  63.375,
  65.815,
  65.815,
  62.894999999999996,
  65.73,
  65.815,
  62.974999999999994,
  62.84,
  62.83999999999999,
  62.894999999999996],
 [65.68,
  65.39,
  65.84,
  65.83999999999999,
  65.38999999999999,
  65.83999999999997,
  65.39,
  65.68,
  65.38999999999999,
  65.83999999999999,
  65.68,
  65.39,
  65.83999999999999,
  62.27999999999999,
  65.83999999999999,
  65.83999999999999,
  65.38999999999999,
  65.68,
  65.83999999999999,
  65.39,
  65.39,
  65.83999999999999,
  65.84],
 [65.84,
  65.29999999999998,
  65.91999999999999,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.3,
  65.84,
  65.91999999999999,
  65.92,
  65.84,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.84,
  65.91999999999999,
  65.29999999999998,
  65.29999999999998,
  65.91999999999999,
  65.92],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.255,
 56.404999999999994,
 59.385,
 54.585,
 51.765,
 53.965,
 53.47999999999998,
 37.12,
 44.805,
 31.009999999999994,
 47.87500000000001,
 50.904999999999994,
 45.69499999999999,
 52.434999999999995,
 56.62,
 36.72,
 51.685,
 47.08,
 45.565,
 44.13,
 34.675000000000004,
 55.504999999999995,
 53.47]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.185
Upper: 54.275000000000006
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.405,
 65.215,
 61.83,
 57.86499999999999,
 57.34,
 57.564999999999976,
 65.6,
 63.485,
 65.215,
 54.9,
 54.78999999999999,
 51.199999999999996,
 59.485,
 57.76,
 61.83,
 56.56999999999999,
 52.265,
 50.56000000000001,
 57.599999999999994,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.6175
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.75,
 65.69500000000001,
 58.714999999999996,
 61.665000000000006,
 61.545,
 60.21999999999998,
 65.605,
 66.735,
 65.695,
 65.605,
 65.33499999999998,
 65.69500000000001,
 62.595,
 59.029999999999994,
 58.715,
 61.635000000000005,
 65.605,
 64.83,
 58.82500000000001,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [2, 8, 9, 12, 22]
====================================
cloned = 2
killed = 3
cloned = 8
killed = 6
cloned = 9
killed = 14
cloned = 12
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.17,
 65.9,
 65.89999999999999,
 64.47,
 64.5,
 66.185,
 65.8,
 66.28999999999999,
 65.89999999999999,
 65.80000000000001,
 66.18499999999999,
 65.89999999999999,
 63.675,
 65.89999999999999,
 65.89999999999999,
 63.67499999999998,
 65.80000000000001,
 66.015,
 65.89999999999999,
 63.675,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.15
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2]
upper:           [1, 6, 8, 11, 18]
====================================
cloned = 1
killed = 4
cloned = 6
killed = 5
cloned = 8
killed = 13
cloned = 11
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27000000000001,
 65.8,
 65.79999999999998,
 65.27,
 65.27,
 65.27000000000001,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.79999999999998,
 65.27,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.27000000000001,
 61.349999999999994,
 65.8]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 8, 4, 5, 11]
lower threshold: [16, 18]
....................................
upper threshold: [3, 15, 19]
upper:           [2, 12, 22, 14, 9]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 8
cloned = 22
killed = 4
cloned = 14
killed = 5
cloned = 9
killed = 11
######################################
~~~ Scores: ~~~
[65.76,
 65.17999999999999,
 65.88,
 65.88,
 65.88,
 65.88,
 65.17999999999999,
 65.76,
 65.88,
 65.87999999999998,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.17999999999999,
 65.76,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 13, 16, 18, 20]
lower threshold: []
....................................
upper threshold: [5, 11, 12, 15, 21, 22]
upper:           [19, 14, 4, 2, 8, 3]
====================================
cloned = 19
killed = 1
cloned = 14
killed = 6
cloned = 4
killed = 13
cloned = 2
killed = 16
cloned = 8
killed = 18
cloned = 3
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 12, 9, 3, 11]
lower threshold: [0, 2, 4, 5, 8, 10, 13, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 7, 19, 6, 17, 20]
====================================
cloned = 1
killed = 15
cloned = 7
killed = 12
cloned = 19
killed = 9
cloned = 6
killed = 3
cloned = 17
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 7, 16, 3, 6]
lower threshold: [2, 5, 9, 10, 12, 14, 15, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 4, 8, 1, 13, 11]
====================================
cloned = 0
killed = 19
cloned = 4
killed = 7
cloned = 8
killed = 16
cloned = 1
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 19, 1, 15, 6]
lower threshold: [0, 2, 4, 5, 8, 9, 14, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 7, 10, 3, 11, 13]
====================================
cloned = 16
killed = 12
cloned = 7
killed = 19
cloned = 10
killed = 1
cloned = 3
killed = 15
cloned = 11
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 12, 1, 6, 7]
lower threshold: [2, 3, 4, 8, 9, 10, 14, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 5, 0, 11, 13, 21]
====================================
cloned = 17
killed = 15
cloned = 5
killed = 12
cloned = 0
killed = 1
cloned = 11
killed = 6
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 8, 10, 2]
lower threshold: [0, 3, 4, 6, 11, 13, 14, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 17, 12, 16, 9, 1]
====================================
cloned = 21
killed = 5
cloned = 17
killed = 7
cloned = 12
killed = 8
cloned = 16
killed = 10
cloned = 9
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 7, 8, 15]
lower threshold: [0, 3, 4, 9, 10, 13, 14, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 2, 12, 20, 5, 16]
====================================
cloned = 11
killed = 1
cloned = 2
killed = 6
cloned = 12
killed = 7
cloned = 20
killed = 8
cloned = 5
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 12, 2, 1]
lower threshold: [3, 4, 7, 9, 10, 11, 13, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 6, 20, 8, 5, 19]
====================================
cloned = 17
killed = 14
cloned = 6
killed = 0
cloned = 20
killed = 12
cloned = 8
killed = 2
cloned = 5
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 8, 21, 2, 13]
lower threshold: [0, 4, 5, 6, 7, 10, 12, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 11, 20, 9, 18, 14]
====================================
cloned = 3
killed = 1
cloned = 11
killed = 8
cloned = 20
killed = 21
cloned = 9
killed = 2
cloned = 18
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 14, 5, 7, 6]
lower threshold: [0, 2, 3, 8, 9, 10, 11, 13, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 21, 18, 15, 19, 12]
====================================
cloned = 4
killed = 1
cloned = 21
killed = 14
cloned = 18
killed = 5
cloned = 15
killed = 7
cloned = 19
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 11, 20, 2]
lower threshold: [1, 4, 5, 6, 9, 13, 15, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 3, 0, 7, 16, 14]
====================================
cloned = 12
killed = 10
cloned = 3
killed = 8
cloned = 0
killed = 11
cloned = 7
killed = 20
cloned = 16
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 12, 9, 10]
lower threshold: [1, 4, 5, 8, 11, 13, 14, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 7, 0, 16, 6, 2]
====================================
cloned = 19
killed = 3
cloned = 7
killed = 20
cloned = 0
killed = 12
cloned = 16
killed = 9
cloned = 6
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 15, 21, 4, 6]
lower threshold: [0, 1, 2, 3, 7, 10, 11, 12, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 9, 5, 19, 13, 8]
====================================
cloned = 20
killed = 14
cloned = 9
killed = 15
cloned = 5
killed = 21
cloned = 19
killed = 4
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 7, 12, 1]
lower threshold: [3, 6, 8, 9, 11, 13, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 4, 14, 5, 0, 18]
====================================
cloned = 21
killed = 10
cloned = 4
killed = 2
cloned = 14
killed = 7
cloned = 5
killed = 12
cloned = 0
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 17, 12, 6, 19]
lower threshold: [0, 2, 3, 4, 5, 11, 13, 14, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 7, 21, 8, 9, 1]
====================================
cloned = 10
killed = 18
cloned = 7
killed = 17
cloned = 21
killed = 12
cloned = 8
killed = 6
cloned = 9
killed = 19
Trial run 20/seed 12920:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.255,
  56.404999999999994,
  59.385,
  54.585,
  51.765,
  53.965,
  53.47999999999998,
  37.12,
  44.805,
  31.009999999999994,
  47.87500000000001,
  50.904999999999994,
  45.69499999999999,
  52.434999999999995,
  56.62,
  36.72,
  51.685,
  47.08,
  45.565,
  44.13,
  34.675000000000004,
  55.504999999999995,
  53.47],
 [65.60000000000001,
  63.405,
  65.215,
  61.83,
  57.86499999999999,
  57.34,
  57.564999999999976,
  65.6,
  63.485,
  65.215,
  54.9,
  54.78999999999999,
  51.199999999999996,
  59.485,
  57.76,
  61.83,
  56.56999999999999,
  52.265,
  50.56000000000001,
  57.599999999999994,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.75,
  65.69500000000001,
  58.714999999999996,
  61.665000000000006,
  61.545,
  60.21999999999998,
  65.605,
  66.735,
  65.695,
  65.605,
  65.33499999999998,
  65.69500000000001,
  62.595,
  59.029999999999994,
  58.715,
  61.635000000000005,
  65.605,
  64.83,
  58.82500000000001,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.17,
  65.9,
  65.89999999999999,
  64.47,
  64.5,
  66.185,
  65.8,
  66.28999999999999,
  65.89999999999999,
  65.80000000000001,
  66.18499999999999,
  65.89999999999999,
  63.675,
  65.89999999999999,
  65.89999999999999,
  63.67499999999998,
  65.80000000000001,
  66.015,
  65.89999999999999,
  63.675,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27000000000001,
  65.8,
  65.79999999999998,
  65.27,
  65.27,
  65.27000000000001,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.79999999999998,
  65.27,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.27000000000001,
  61.349999999999994,
  65.8],
 [65.76,
  65.17999999999999,
  65.88,
  65.88,
  65.88,
  65.88,
  65.17999999999999,
  65.76,
  65.88,
  65.87999999999998,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.17999999999999,
  65.76,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.88,
  65.88],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
