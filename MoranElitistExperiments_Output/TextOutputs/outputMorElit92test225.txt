>>> Output of Elitist Selection (Modified) Moran Process <<<
------------------------------------------------------------
Experiment parameters:
1. Player Agents: 23
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
2. newFileNameNumber for plot:           92
3. (Number of) turns:                    200
4. Starting seed (firstSeed):            306
5. iterations:                           20
6. splitThresholdPercentile:             25%
7. ConvergeScoreGenLimit:                100
8. displayOutput:                        True
9. createPlot:                           2
10.PlotFileType:                         PNG
11.(use) csv (as output's file format):  False
12.testing (mode):                       False
------------------------------------------------------------
######################################
~~~ Scores: ~~~
[61.475,
 56.589999999999996,
 59.385,
 54.765,
 52.35,
 54.73500000000001,
 50.97999999999999,
 37.14,
 44.790000000000006,
 27.349999999999998,
 47.89,
 50.904999999999994,
 46.44,
 52.345,
 56.385,
 37.08,
 51.46,
 47.105000000000004,
 46.575,
 41.885000000000005,
 34.495000000000005,
 55.644999999999996,
 53.405]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.615
Upper: 54.75
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.12500000000001,
 65.215,
 61.83,
 57.720000000000006,
 57.34,
 57.439999999999976,
 65.6,
 63.010000000000005,
 65.215,
 54.9,
 54.78999999999999,
 51.18,
 59.485,
 57.62,
 61.83,
 56.56999999999999,
 52.29,
 50.77000000000001,
 58.084999999999994,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.42
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 66.56,
 65.69500000000001,
 58.714999999999996,
 61.675,
 61.545,
 59.81999999999998,
 65.605,
 64.885,
 65.695,
 65.605,
 65.09499999999998,
 65.69500000000001,
 62.595,
 58.67999999999999,
 58.715,
 61.635000000000005,
 65.605,
 64.81,
 58.86,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [1, 2, 9, 12, 22]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 6
cloned = 9
killed = 14
cloned = 12
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.21,
 65.89999999999999,
 66.28,
 64.53,
 64.5,
 65.9,
 65.8,
 66.20499999999998,
 65.89999999999999,
 65.80000000000001,
 66.25,
 65.89999999999999,
 63.675,
 65.89999999999999,
 65.89999999999999,
 63.67499999999998,
 65.80000000000001,
 66.31,
 65.89999999999999,
 63.67499999999998,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.16499999999999
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [6]
upper:           [1, 3, 8, 11, 18]
====================================
cloned = 1
killed = 4
cloned = 3
killed = 5
cloned = 8
killed = 13
cloned = 11
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27,
 65.8,
 65.27,
 65.27,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.79999999999998,
 65.27,
 65.60000000000001,
 65.27000000000001,
 65.79999999999998,
 65.27000000000001,
 61.349999999999994,
 65.8]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 8, 5, 3, 1]
lower threshold: [4, 11, 16]
....................................
upper threshold: [14, 15, 19]
upper:           [2, 12, 22, 6, 9]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 8
cloned = 22
killed = 5
cloned = 6
killed = 3
cloned = 9
killed = 1
######################################
~~~ Scores: ~~~
[65.76,
 65.87999999999998,
 65.88,
 65.88,
 65.17999999999998,
 65.88,
 65.88,
 65.76,
 65.88,
 65.88,
 65.76,
 65.17999999999998,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.17999999999998,
 65.76,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 13, 16, 18, 20]
lower threshold: []
....................................
upper threshold: [2, 3, 5, 19, 21, 22]
upper:           [8, 14, 12, 9, 6, 15]
====================================
cloned = 8
killed = 4
cloned = 14
killed = 11
cloned = 12
killed = 13
cloned = 9
killed = 16
cloned = 6
killed = 18
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 3, 20, 4, 12]
lower threshold: [0, 2, 5, 6, 9, 10, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 11, 18, 16, 13]
====================================
cloned = 1
killed = 7
cloned = 8
killed = 3
cloned = 11
killed = 20
cloned = 18
killed = 4
cloned = 16
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 2, 8, 10, 6]
lower threshold: [0, 1, 4, 5, 7, 11, 12, 14, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 13, 9, 19, 16, 3]
====================================
cloned = 20
killed = 15
cloned = 13
killed = 2
cloned = 9
killed = 8
cloned = 19
killed = 10
cloned = 16
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 8, 21, 4, 3]
lower threshold: [0, 1, 6, 9, 10, 11, 12, 14, 15, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 2, 13, 5, 16]
====================================
cloned = 20
killed = 19
cloned = 7
killed = 8
cloned = 2
killed = 21
cloned = 13
killed = 4
cloned = 5
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 2, 10, 9, 18]
lower threshold: [1, 4, 7, 11, 13, 14, 15, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 12, 5, 8, 3, 6]
====================================
cloned = 0
killed = 16
cloned = 12
killed = 2
cloned = 5
killed = 10
cloned = 8
killed = 9
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 20, 13, 14, 9]
lower threshold: [0, 3, 4, 5, 8, 11, 12, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 2, 19, 7, 6, 21]
====================================
cloned = 10
killed = 1
cloned = 2
killed = 20
cloned = 19
killed = 13
cloned = 7
killed = 14
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 12, 17, 18]
lower threshold: [0, 3, 4, 6, 7, 8, 9, 14, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 15, 16, 2, 5]
====================================
cloned = 10
killed = 11
cloned = 13
killed = 1
cloned = 15
killed = 12
cloned = 16
killed = 17
cloned = 2
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 18, 20, 16]
lower threshold: [0, 2, 3, 4, 5, 7, 8, 13, 14, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 21, 1, 10, 17, 9]
====================================
cloned = 6
killed = 12
cloned = 21
killed = 11
cloned = 1
killed = 18
cloned = 10
killed = 20
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 15, 14, 6]
lower threshold: [0, 3, 5, 7, 8, 9, 10, 12, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 17, 1, 18, 4, 19]
====================================
cloned = 13
killed = 11
cloned = 17
killed = 2
cloned = 1
killed = 15
cloned = 18
killed = 14
cloned = 4
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 13, 18, 17, 20]
lower threshold: [0, 2, 3, 7, 8, 10, 12, 14, 15, 16, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 4, 9, 11, 5, 6]
====================================
cloned = 19
killed = 1
cloned = 4
killed = 13
cloned = 9
killed = 18
cloned = 11
killed = 17
cloned = 5
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 12, 17, 0]
lower threshold: [2, 3, 4, 5, 6, 8, 10, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 7, 14, 1, 18, 13]
====================================
cloned = 21
killed = 11
cloned = 7
killed = 9
cloned = 14
killed = 12
cloned = 1
killed = 17
cloned = 18
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 5, 0, 7, 16]
lower threshold: [1, 3, 4, 8, 11, 15, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 2, 10, 14, 6, 12]
====================================
cloned = 13
killed = 9
cloned = 2
killed = 5
cloned = 10
killed = 0
cloned = 14
killed = 7
cloned = 6
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 21, 10, 17]
lower threshold: [0, 1, 2, 6, 9, 11, 13, 14, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 3, 5, 16, 15, 12]
====================================
cloned = 8
killed = 7
cloned = 3
killed = 4
cloned = 5
killed = 21
cloned = 16
killed = 10
cloned = 15
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 0, 9, 7, 21]
lower threshold: [2, 3, 5, 8, 10, 11, 12, 14, 15, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 6, 19, 13, 20, 17]
====================================
cloned = 1
killed = 4
cloned = 6
killed = 0
cloned = 19
killed = 9
cloned = 13
killed = 7
cloned = 20
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 4, 13, 21]
lower threshold: [0, 2, 3, 5, 8, 9, 12, 14, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 1, 11, 7, 18, 10]
====================================
cloned = 16
killed = 20
cloned = 1
killed = 6
cloned = 11
killed = 4
cloned = 7
killed = 13
cloned = 18
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 0, 12, 3, 19]
lower threshold: [4, 6, 7, 9, 11, 13, 14, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 20, 8, 5, 1, 2]
====================================
cloned = 10
killed = 17
cloned = 20
killed = 0
cloned = 8
killed = 12
cloned = 5
killed = 3
cloned = 1
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 6, 7, 18, 11]
lower threshold: [0, 2, 3, 4, 10, 13, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 9, 19, 12, 5]
====================================
cloned = 8
killed = 14
cloned = 1
killed = 6
cloned = 9
killed = 7
cloned = 19
killed = 18
cloned = 12
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 11, 16, 10]
lower threshold: [0, 1, 4, 5, 9, 12, 14, 15, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 21, 13, 6, 3, 8]
====================================
cloned = 20
killed = 7
cloned = 21
killed = 2
cloned = 13
killed = 11
cloned = 6
killed = 16
cloned = 3
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 10, 4, 8, 11]
lower threshold: [0, 2, 3, 6, 7, 12, 15, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 17, 13, 16, 1, 9]
====================================
cloned = 5
killed = 14
cloned = 17
killed = 10
cloned = 13
killed = 4
cloned = 16
killed = 8
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 11, 4, 12]
lower threshold: [0, 1, 2, 6, 7, 8, 14, 15, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 18, 3, 17, 16, 10]
====================================
cloned = 13
killed = 5
cloned = 18
killed = 9
cloned = 3
killed = 11
cloned = 17
killed = 4
cloned = 16
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 8, 1, 21]
lower threshold: [0, 4, 5, 6, 7, 9, 10, 11, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 18, 14, 12, 2, 20]
====================================
cloned = 16
killed = 13
cloned = 18
killed = 3
cloned = 14
killed = 8
cloned = 12
killed = 1
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 14, 9, 8]
lower threshold: [0, 2, 3, 7, 10, 11, 15, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 6, 13, 5, 18, 20]
====================================
cloned = 4
killed = 12
cloned = 6
killed = 1
cloned = 13
killed = 14
cloned = 5
killed = 9
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 15, 18, 20, 7]
lower threshold: [0, 1, 2, 4, 9, 10, 11, 12, 14, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 19, 6, 13, 21, 3]
====================================
cloned = 8
killed = 5
cloned = 19
killed = 15
cloned = 6
killed = 18
cloned = 13
killed = 20
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 19, 9, 6, 14]
lower threshold: [0, 1, 2, 3, 5, 8, 10, 13, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 7, 16, 11, 20]
====================================
cloned = 12
killed = 18
cloned = 4
killed = 19
cloned = 7
killed = 9
cloned = 16
killed = 6
cloned = 11
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 21, 6, 17]
lower threshold: [0, 1, 2, 8, 10, 12, 13, 14, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 18, 9, 15, 7, 5]
====================================
cloned = 4
killed = 3
cloned = 18
killed = 11
cloned = 9
killed = 21
cloned = 15
killed = 6
cloned = 7
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 18, 8, 20, 5]
lower threshold: [0, 2, 3, 4, 7, 9, 12, 13, 14, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 19, 10, 16, 15, 6]
====================================
cloned = 11
killed = 1
cloned = 19
killed = 18
cloned = 10
killed = 8
cloned = 16
killed = 20
cloned = 15
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 0, 11, 14]
lower threshold: [2, 3, 4, 5, 7, 8, 13, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 12, 1, 15, 17, 6]
====================================
cloned = 20
killed = 10
cloned = 12
killed = 9
cloned = 1
killed = 0
cloned = 15
killed = 11
cloned = 17
killed = 14
Trial run 1/seed 306:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.475,
  56.589999999999996,
  59.385,
  54.765,
  52.35,
  54.73500000000001,
  50.97999999999999,
  37.14,
  44.790000000000006,
  27.349999999999998,
  47.89,
  50.904999999999994,
  46.44,
  52.345,
  56.385,
  37.08,
  51.46,
  47.105000000000004,
  46.575,
  41.885000000000005,
  34.495000000000005,
  55.644999999999996,
  53.405],
 [65.60000000000001,
  63.12500000000001,
  65.215,
  61.83,
  57.720000000000006,
  57.34,
  57.439999999999976,
  65.6,
  63.010000000000005,
  65.215,
  54.9,
  54.78999999999999,
  51.18,
  59.485,
  57.62,
  61.83,
  56.56999999999999,
  52.29,
  50.77000000000001,
  58.084999999999994,
  60.44,
  60.44,
  56.565],
 [65.605,
  66.56,
  65.69500000000001,
  58.714999999999996,
  61.675,
  61.545,
  59.81999999999998,
  65.605,
  64.885,
  65.695,
  65.605,
  65.09499999999998,
  65.69500000000001,
  62.595,
  58.67999999999999,
  58.715,
  61.635000000000005,
  65.605,
  64.81,
  58.86,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.21,
  65.89999999999999,
  66.28,
  64.53,
  64.5,
  65.9,
  65.8,
  66.20499999999998,
  65.89999999999999,
  65.80000000000001,
  66.25,
  65.89999999999999,
  63.675,
  65.89999999999999,
  65.89999999999999,
  63.67499999999998,
  65.80000000000001,
  66.31,
  65.89999999999999,
  63.67499999999998,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27,
  65.8,
  65.27,
  65.27,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.79999999999998,
  65.27,
  65.60000000000001,
  65.27000000000001,
  65.79999999999998,
  65.27000000000001,
  61.349999999999994,
  65.8],
 [65.76,
  65.87999999999998,
  65.88,
  65.88,
  65.17999999999998,
  65.88,
  65.88,
  65.76,
  65.88,
  65.88,
  65.76,
  65.17999999999998,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.17999999999998,
  65.76,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.88,
  65.88],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.32500000000001,
 55.91,
 59.315,
 54.975,
 52.154999999999994,
 54.45,
 57.46499999999999,
 36.74,
 44.715,
 30.195,
 48.045,
 50.81499999999999,
 47.66999999999999,
 52.335,
 56.68999999999999,
 37.419999999999995,
 51.425,
 49.04,
 45.55499999999999,
 44.00000000000001,
 34.675000000000004,
 55.239999999999995,
 53.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.135
Upper: 55.1075
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 63.660000000000004,
 65.2,
 61.815,
 57.650000000000006,
 57.325,
 60.55999999999998,
 65.585,
 63.155,
 65.2,
 54.885,
 54.77499999999999,
 51.785,
 59.47,
 57.38999999999999,
 60.35499999999999,
 56.55499999999999,
 52.595,
 49.145,
 57.54,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 62.485
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.59,
 63.464999999999996,
 65.68,
 58.699999999999996,
 61.85,
 61.53,
 59.58999999999998,
 65.59,
 62.86500000000001,
 65.67999999999999,
 65.59,
 64.37499999999999,
 65.68,
 62.58,
 57.77499999999999,
 59.08499999999999,
 61.620000000000005,
 65.59,
 62.544999999999995,
 57.735,
 61.50999999999999,
 61.50999999999999,
 65.67999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.50999999999999
Upper: 65.59
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [10, 17]
upper:           [2, 9, 12, 22, 7, 0]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 66.155,
 65.92,
 65.91999999999999,
 64.46,
 64.80000000000001,
 65.91999999999999,
 65.84,
 66.36999999999999,
 65.91999999999999,
 65.84,
 66.13999999999999,
 65.92,
 64.13999999999999,
 65.91999999999999,
 65.91999999999999,
 64.13999999999999,
 65.84,
 66.23,
 65.84,
 64.13999999999999,
 64.14,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.32000000000001
Upper: 65.92
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [22]
upper:           [1, 8, 11, 18, 2, 12]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 2
killed = 20
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.03999999999999,
 65.83999999999999,
 65.83999999999997,
 65.03999999999999,
 65.03999999999999,
 65.84,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.04,
 65.83999999999997,
 65.83999999999999,
 65.03999999999999,
 65.68,
 65.03999999999999,
 65.68,
 65.83999999999997,
 65.83999999999999,
 65.83999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.03999999999999
Upper: 65.83999999999999
====================================
lower list size: 0
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 16, 8, 5]
lower threshold: [4, 18]
....................................
upper threshold: [2, 22]
upper:           [6, 9, 15, 12, 21]
====================================
cloned = 6
killed = 11
cloned = 9
killed = 1
cloned = 15
killed = 16
cloned = 12
killed = 8
cloned = 21
killed = 5
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.94,
 65.88,
 65.33999999999999,
 65.88,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 18, 17, 10]
lower threshold: [0, 7, 19]
....................................
upper threshold: [2, 3, 6, 9, 12, 15, 16, 21, 22]
upper:           [20, 11, 14, 1, 5, 8]
====================================
cloned = 20
killed = 4
cloned = 11
killed = 13
cloned = 14
killed = 18
cloned = 1
killed = 17
cloned = 5
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 19, 14, 8]
lower threshold: [1, 2, 3, 6, 11, 13, 15, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 0, 7, 12, 9]
====================================
cloned = 5
killed = 16
cloned = 4
killed = 10
cloned = 0
killed = 19
cloned = 7
killed = 14
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 19, 17, 10]
lower threshold: [1, 3, 4, 6, 8, 9, 11, 13, 15, 16, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 7, 12, 2, 20, 14]
====================================
cloned = 18
killed = 0
cloned = 7
killed = 5
cloned = 12
killed = 19
cloned = 2
killed = 17
cloned = 20
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 17, 4, 1]
lower threshold: [5, 6, 7, 10, 11, 12, 13, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 0, 3, 21, 2, 8]
====================================
cloned = 14
killed = 18
cloned = 0
killed = 9
cloned = 3
killed = 17
cloned = 21
killed = 4
cloned = 2
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 18, 20, 2, 11]
lower threshold: [0, 1, 3, 4, 8, 9, 12, 13, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 5, 6, 7, 19, 10]
====================================
cloned = 14
killed = 16
cloned = 5
killed = 18
cloned = 6
killed = 20
cloned = 7
killed = 2
cloned = 19
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 16, 3, 6]
lower threshold: [1, 5, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 21, 0, 10, 4, 2]
====================================
cloned = 17
killed = 9
cloned = 21
killed = 12
cloned = 0
killed = 16
cloned = 10
killed = 3
cloned = 4
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 17, 13, 1, 16]
lower threshold: [0, 2, 3, 7, 10, 11, 14, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 19, 12, 9, 8]
====================================
cloned = 5
killed = 6
cloned = 4
killed = 17
cloned = 19
killed = 13
cloned = 12
killed = 1
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 13, 15, 5, 3]
lower threshold: [0, 1, 6, 7, 8, 9, 12, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 2, 10, 21, 11, 14]
====================================
cloned = 4
killed = 19
cloned = 2
killed = 13
cloned = 10
killed = 15
cloned = 21
killed = 5
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 21, 18, 19]
lower threshold: [0, 4, 5, 6, 7, 8, 9, 14, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 1, 11, 13, 15, 2]
====================================
cloned = 10
killed = 3
cloned = 1
killed = 12
cloned = 11
killed = 21
cloned = 13
killed = 18
cloned = 15
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 10, 3, 11, 17]
lower threshold: [0, 2, 5, 8, 9, 12, 13, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 15, 7, 6, 14, 4]
====================================
cloned = 1
killed = 20
cloned = 15
killed = 10
cloned = 7
killed = 3
cloned = 6
killed = 11
cloned = 14
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 16, 14, 10, 17]
lower threshold: [0, 1, 2, 3, 5, 8, 11, 12, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 19, 7, 6, 13, 4]
====================================
cloned = 18
killed = 9
cloned = 19
killed = 16
cloned = 7
killed = 14
cloned = 6
killed = 10
cloned = 13
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 13, 12, 14]
lower threshold: [0, 2, 3, 4, 6, 8, 9, 10, 11, 15, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 19, 17, 1, 5, 20]
====================================
cloned = 16
killed = 21
cloned = 19
killed = 7
cloned = 17
killed = 13
cloned = 1
killed = 12
cloned = 5
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 10, 9, 8, 18]
lower threshold: [0, 1, 2, 4, 5, 11, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 3, 6, 19, 7, 12]
====================================
cloned = 13
killed = 14
cloned = 3
killed = 10
cloned = 6
killed = 9
cloned = 19
killed = 8
cloned = 7
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 13, 20, 8, 15]
lower threshold: [1, 3, 4, 5, 6, 7, 11, 14, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 16, 2, 9, 10, 12]
====================================
cloned = 18
killed = 0
cloned = 16
killed = 13
cloned = 2
killed = 20
cloned = 9
killed = 8
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 9, 11, 0, 17]
lower threshold: [1, 2, 3, 7, 8, 10, 13, 14, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 4, 12, 15, 6]
====================================
cloned = 18
killed = 19
cloned = 5
killed = 9
cloned = 4
killed = 11
cloned = 12
killed = 0
cloned = 15
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 3, 20, 1, 10]
lower threshold: [0, 2, 4, 5, 6, 7, 13, 15, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 16, 8, 11, 14, 9]
====================================
cloned = 12
killed = 17
cloned = 16
killed = 3
cloned = 8
killed = 20
cloned = 11
killed = 1
cloned = 14
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 21, 11, 6, 15]
lower threshold: [1, 4, 5, 7, 8, 10, 13, 14, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 17, 0, 2, 3, 19]
====================================
cloned = 12
killed = 9
cloned = 17
killed = 21
cloned = 0
killed = 11
cloned = 2
killed = 6
cloned = 3
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 15, 11, 19]
lower threshold: [1, 3, 4, 6, 7, 10, 12, 14, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 2, 13, 5, 21, 8]
====================================
cloned = 0
killed = 18
cloned = 2
killed = 9
cloned = 13
killed = 15
cloned = 5
killed = 11
cloned = 21
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 11, 21, 2]
lower threshold: [0, 1, 3, 5, 7, 12, 13, 14, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 15, 6, 16, 10, 18]
====================================
cloned = 8
killed = 9
cloned = 15
killed = 4
cloned = 6
killed = 11
cloned = 16
killed = 21
cloned = 10
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 5, 21, 4, 13]
lower threshold: [3, 7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 18, 6, 2, 1]
====================================
cloned = 12
killed = 14
cloned = 0
killed = 5
cloned = 18
killed = 21
cloned = 6
killed = 4
cloned = 2
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 20, 16, 0]
lower threshold: [3, 4, 6, 8, 9, 11, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 1, 12, 2, 5, 13]
====================================
cloned = 18
killed = 10
cloned = 1
killed = 7
cloned = 12
killed = 20
cloned = 2
killed = 16
cloned = 5
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 19, 4, 8, 18]
lower threshold: [2, 5, 6, 9, 11, 14, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 12, 1, 10, 13, 0]
====================================
cloned = 7
killed = 3
cloned = 12
killed = 19
cloned = 1
killed = 4
cloned = 10
killed = 8
cloned = 13
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 10, 20, 14]
lower threshold: [1, 2, 3, 5, 8, 11, 12, 13, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 0, 7, 16, 6, 9]
====================================
cloned = 19
killed = 4
cloned = 0
killed = 15
cloned = 7
killed = 10
cloned = 16
killed = 20
cloned = 6
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 6, 9, 19, 10]
lower threshold: [2, 3, 4, 5, 7, 8, 13, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 0, 12, 15, 11, 1]
====================================
cloned = 14
killed = 16
cloned = 0
killed = 6
cloned = 12
killed = 9
cloned = 15
killed = 19
cloned = 11
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 0, 5, 10]
lower threshold: [1, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 9, 4, 21, 11, 12]
====================================
cloned = 20
killed = 2
cloned = 9
killed = 7
cloned = 4
killed = 0
cloned = 21
killed = 5
cloned = 11
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 17, 4, 21]
lower threshold: [1, 2, 6, 7, 8, 11, 12, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 10, 5, 0, 3]
====================================
cloned = 14
killed = 18
cloned = 13
killed = 9
cloned = 10
killed = 17
cloned = 5
killed = 4
cloned = 0
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 2, 9, 12]
lower threshold: [0, 6, 7, 8, 10, 14, 15, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 3, 11, 4, 17, 19]
====================================
cloned = 5
killed = 13
cloned = 3
killed = 1
cloned = 11
killed = 2
cloned = 4
killed = 9
cloned = 17
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 6, 14, 17, 8]
lower threshold: [2, 3, 5, 7, 10, 11, 12, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 0, 20, 13, 9, 4]
====================================
cloned = 1
killed = 21
cloned = 0
killed = 6
cloned = 20
killed = 14
cloned = 13
killed = 17
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 18, 13, 1, 20]
lower threshold: [0, 3, 4, 7, 8, 9, 10, 11, 14, 16, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 15, 6, 5, 17, 2]
====================================
cloned = 19
killed = 12
cloned = 15
killed = 18
cloned = 6
killed = 13
cloned = 5
killed = 1
cloned = 17
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 16, 15, 5, 9]
lower threshold: [2, 3, 7, 8, 10, 11, 12, 13, 14, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 19, 21, 0, 20, 4]
====================================
cloned = 1
killed = 6
cloned = 19
killed = 16
cloned = 21
killed = 15
cloned = 0
killed = 5
cloned = 20
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 17, 20, 21]
lower threshold: [4, 5, 6, 7, 8, 11, 12, 14, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 10, 1, 0, 2, 13]
====================================
cloned = 15
killed = 9
cloned = 10
killed = 3
cloned = 1
killed = 17
cloned = 0
killed = 20
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 6, 11, 5, 4]
lower threshold: [1, 2, 7, 9, 12, 13, 14, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 10, 3, 8, 0, 16]
====================================
cloned = 15
killed = 17
cloned = 10
killed = 6
cloned = 3
killed = 11
cloned = 8
killed = 5
cloned = 0
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 13, 11, 19]
lower threshold: [4, 7, 8, 9, 10, 12, 15, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 5, 17, 3, 0]
====================================
cloned = 14
killed = 6
cloned = 2
killed = 1
cloned = 5
killed = 13
cloned = 17
killed = 11
cloned = 3
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 0, 11, 5]
lower threshold: [3, 4, 9, 10, 12, 13, 14, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 1, 6, 16, 7, 21]
====================================
cloned = 15
killed = 8
cloned = 1
killed = 2
cloned = 6
killed = 0
cloned = 16
killed = 11
cloned = 7
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 5, 0, 16]
lower threshold: [2, 3, 6, 7, 9, 10, 13, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 8, 14, 4, 18]
====================================
cloned = 12
killed = 1
cloned = 15
killed = 11
cloned = 8
killed = 5
cloned = 14
killed = 0
cloned = 4
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 21, 3, 0, 20]
lower threshold: [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 15, 7, 17, 19, 18]
====================================
cloned = 6
killed = 2
cloned = 15
killed = 21
cloned = 7
killed = 3
cloned = 17
killed = 0
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 15, 20, 3, 8]
lower threshold: [0, 1, 5, 7, 11, 12, 13, 14, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 2, 10, 9, 16, 4]
====================================
cloned = 18
killed = 6
cloned = 2
killed = 15
cloned = 10
killed = 20
cloned = 9
killed = 3
cloned = 16
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 5, 14, 0, 20]
lower threshold: [2, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 1, 10, 3, 21, 4]
====================================
cloned = 15
killed = 19
cloned = 1
killed = 5
cloned = 10
killed = 14
cloned = 3
killed = 0
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 7, 8, 5, 21]
lower threshold: [0, 1, 3, 4, 6, 9, 11, 12, 14, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 16, 18, 2, 13, 10]
====================================
cloned = 17
killed = 20
cloned = 16
killed = 7
cloned = 18
killed = 8
cloned = 2
killed = 5
cloned = 13
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 17, 4, 10, 2]
lower threshold: [3, 5, 6, 7, 8, 9, 13, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 14, 12, 15, 11, 19]
====================================
cloned = 1
killed = 0
cloned = 14
killed = 17
cloned = 12
killed = 4
cloned = 15
killed = 10
cloned = 11
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 19, 2, 5]
lower threshold: [0, 1, 3, 6, 8, 9, 14, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 13, 18, 7, 12, 11]
====================================
cloned = 4
killed = 17
cloned = 13
killed = 10
cloned = 18
killed = 19
cloned = 7
killed = 2
cloned = 12
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 15, 9, 12, 6]
lower threshold: [1, 2, 3, 4, 8, 13, 14, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 10, 5, 11, 0, 17]
====================================
cloned = 16
killed = 7
cloned = 10
killed = 15
cloned = 5
killed = 9
cloned = 11
killed = 12
cloned = 0
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 17, 10, 8]
lower threshold: [0, 1, 3, 4, 6, 11, 15, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 13, 14, 2, 16, 5]
====================================
cloned = 7
killed = 9
cloned = 13
killed = 12
cloned = 14
killed = 17
cloned = 2
killed = 10
cloned = 16
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 17, 15, 4]
lower threshold: [1, 2, 3, 8, 9, 11, 14, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 0, 18, 5, 6]
====================================
cloned = 10
killed = 7
cloned = 13
killed = 12
cloned = 0
killed = 17
cloned = 18
killed = 15
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 16, 12, 13]
lower threshold: [0, 2, 3, 6, 7, 10, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 4, 5, 9, 15, 14]
====================================
cloned = 11
killed = 8
cloned = 4
killed = 1
cloned = 5
killed = 16
cloned = 9
killed = 12
cloned = 15
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 21, 4, 13]
lower threshold: [1, 2, 6, 7, 9, 12, 14, 15, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 17, 0, 3, 19, 10]
====================================
cloned = 8
killed = 11
cloned = 17
killed = 5
cloned = 0
killed = 21
cloned = 3
killed = 4
cloned = 19
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 8, 1, 3]
lower threshold: [2, 4, 5, 7, 9, 10, 15, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 14, 12, 16, 6, 0]
====================================
cloned = 21
killed = 11
cloned = 14
killed = 13
cloned = 12
killed = 8
cloned = 16
killed = 1
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 10, 15, 20]
lower threshold: [1, 2, 4, 5, 6, 8, 9, 12, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 16, 14, 13, 0]
====================================
cloned = 7
killed = 3
cloned = 18
killed = 11
cloned = 16
killed = 10
cloned = 14
killed = 15
cloned = 13
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 0, 17, 3]
lower threshold: [1, 5, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 9, 8, 6, 2]
====================================
cloned = 14
killed = 10
cloned = 4
killed = 7
cloned = 9
killed = 0
cloned = 8
killed = 17
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 19, 0, 16, 5]
lower threshold: [2, 3, 4, 7, 8, 9, 10, 11, 13, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 18, 1, 12, 17]
====================================
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 18
killed = 0
cloned = 1
killed = 16
cloned = 12
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 16, 7, 6, 9]
lower threshold: [0, 1, 2, 3, 4, 11, 12, 13, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 10, 17, 21, 5]
====================================
cloned = 15
killed = 14
cloned = 8
killed = 16
cloned = 10
killed = 7
cloned = 17
killed = 6
cloned = 21
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 13, 9, 8]
lower threshold: [0, 1, 4, 6, 7, 15, 16, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 20, 10, 3, 11, 14]
====================================
cloned = 5
killed = 2
cloned = 20
killed = 12
cloned = 10
killed = 13
cloned = 3
killed = 9
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 10, 4, 20]
lower threshold: [0, 2, 5, 7, 8, 11, 12, 13, 14, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 21, 17, 15, 19, 9]
====================================
cloned = 6
killed = 3
cloned = 21
killed = 1
cloned = 17
killed = 10
cloned = 15
killed = 4
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 19, 10, 13, 18]
lower threshold: [2, 3, 6, 7, 9, 11, 14, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 12, 1, 4, 15, 8]
====================================
cloned = 0
killed = 5
cloned = 12
killed = 19
cloned = 1
killed = 10
cloned = 4
killed = 13
cloned = 15
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 0, 1, 8]
lower threshold: [3, 7, 9, 10, 11, 12, 13, 14, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 16, 2, 20, 15]
====================================
cloned = 6
killed = 4
cloned = 18
killed = 5
cloned = 16
killed = 0
cloned = 2
killed = 1
cloned = 20
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 11, 21, 6, 19]
lower threshold: [0, 2, 4, 5, 7, 8, 9, 10, 12, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 13, 3, 1, 14, 17]
====================================
cloned = 15
killed = 16
cloned = 13
killed = 11
cloned = 3
killed = 21
cloned = 1
killed = 6
cloned = 14
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 4, 20, 3]
lower threshold: [1, 8, 9, 11, 12, 13, 16, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 5, 7, 14, 15, 2]
====================================
cloned = 0
killed = 10
cloned = 5
killed = 6
cloned = 7
killed = 4
cloned = 14
killed = 20
cloned = 15
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 15, 16, 2]
lower threshold: [0, 1, 3, 4, 6, 10, 13, 14, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 9, 18, 19, 7, 8]
====================================
cloned = 5
killed = 11
cloned = 9
killed = 12
cloned = 18
killed = 15
cloned = 19
killed = 16
cloned = 7
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 12, 6, 20]
lower threshold: [0, 2, 4, 8, 9, 10, 13, 14, 15, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 17, 11, 1, 18, 16]
====================================
cloned = 5
killed = 3
cloned = 17
killed = 7
cloned = 11
killed = 12
cloned = 1
killed = 6
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 10, 9, 21, 17]
lower threshold: [0, 1, 2, 6, 8, 11, 15, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 5, 12, 14, 3, 7]
====================================
cloned = 4
killed = 13
cloned = 5
killed = 10
cloned = 12
killed = 9
cloned = 14
killed = 21
cloned = 3
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 16, 6, 10, 5]
lower threshold: [2, 3, 4, 9, 11, 12, 13, 14, 15, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 20, 18, 1, 8, 17]
====================================
cloned = 0
killed = 7
cloned = 20
killed = 16
cloned = 18
killed = 6
cloned = 1
killed = 10
cloned = 8
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 0, 9, 7]
lower threshold: [2, 3, 5, 11, 14, 15, 16, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 10, 4, 19, 6]
====================================
cloned = 8
killed = 12
cloned = 13
killed = 1
cloned = 10
killed = 0
cloned = 4
killed = 9
cloned = 19
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 20, 19, 12, 14]
lower threshold: [2, 4, 5, 7, 8, 9, 10, 13, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 1, 18, 3, 0, 11]
====================================
cloned = 6
killed = 16
cloned = 1
killed = 20
cloned = 18
killed = 19
cloned = 3
killed = 12
cloned = 0
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 14, 19, 4]
lower threshold: [0, 2, 3, 5, 9, 11, 13, 15, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 8, 21, 1, 12]
====================================
cloned = 6
killed = 10
cloned = 18
killed = 7
cloned = 8
killed = 14
cloned = 21
killed = 19
cloned = 1
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 20, 10, 7]
lower threshold: [0, 4, 6, 9, 11, 13, 14, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 12, 19, 1, 21, 8]
====================================
cloned = 2
killed = 3
cloned = 12
killed = 5
cloned = 19
killed = 20
cloned = 1
killed = 10
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 15, 1, 5, 10]
lower threshold: [0, 2, 4, 8, 9, 11, 13, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 12, 3, 19, 6]
====================================
cloned = 20
killed = 17
cloned = 7
killed = 15
cloned = 12
killed = 1
cloned = 3
killed = 5
cloned = 19
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 8, 3, 14, 6]
lower threshold: [1, 2, 4, 5, 9, 12, 13, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 0, 11, 10, 15, 7]
====================================
cloned = 20
killed = 18
cloned = 0
killed = 8
cloned = 11
killed = 3
cloned = 10
killed = 14
cloned = 15
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 6, 17, 7, 16]
lower threshold: [0, 2, 3, 5, 8, 9, 11, 13, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 12, 10, 4, 14, 19]
====================================
cloned = 1
killed = 21
cloned = 12
killed = 6
cloned = 10
killed = 17
cloned = 4
killed = 7
cloned = 14
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 4, 3, 13, 11]
lower threshold: [0, 5, 6, 7, 9, 10, 12, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 16, 20, 1, 8]
====================================
cloned = 2
killed = 14
cloned = 15
killed = 4
cloned = 16
killed = 3
cloned = 20
killed = 13
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 5, 0, 15]
lower threshold: [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 17, 18, 16, 3, 1]
====================================
cloned = 4
killed = 20
cloned = 17
killed = 21
cloned = 18
killed = 5
cloned = 16
killed = 0
cloned = 3
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 14, 0, 9, 7]
lower threshold: [2, 4, 5, 6, 10, 12, 13, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 21, 3, 20, 17]
====================================
cloned = 1
killed = 11
cloned = 8
killed = 14
cloned = 21
killed = 0
cloned = 3
killed = 9
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 15, 13, 8, 0]
lower threshold: [3, 4, 5, 6, 7, 9, 10, 11, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 2, 17, 12, 14, 20]
====================================
cloned = 18
killed = 1
cloned = 2
killed = 15
cloned = 17
killed = 13
cloned = 12
killed = 8
cloned = 14
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 17, 2, 18, 4]
lower threshold: [0, 5, 6, 7, 9, 12, 13, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 19, 10, 11, 14]
====================================
cloned = 1
killed = 3
cloned = 8
killed = 17
cloned = 19
killed = 2
cloned = 10
killed = 18
cloned = 11
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 19, 12, 17, 20]
lower threshold: [1, 4, 6, 8, 10, 13, 14, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 3, 2, 7, 5]
====================================
cloned = 9
killed = 11
cloned = 0
killed = 19
cloned = 3
killed = 12
cloned = 2
killed = 17
cloned = 7
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 21, 17, 4, 8]
lower threshold: [0, 1, 3, 7, 9, 10, 11, 12, 13, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 16, 5, 14, 2, 19]
====================================
cloned = 15
killed = 6
cloned = 16
killed = 21
cloned = 5
killed = 17
cloned = 14
killed = 4
cloned = 2
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 5, 19, 10]
lower threshold: [0, 3, 7, 8, 9, 11, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 14, 12, 1, 2, 18]
====================================
cloned = 13
killed = 4
cloned = 14
killed = 6
cloned = 12
killed = 5
cloned = 1
killed = 19
cloned = 2
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 17, 13, 9, 1]
lower threshold: [3, 4, 5, 7, 8, 10, 11, 12, 14, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 2, 15, 6, 18, 0]
====================================
cloned = 20
killed = 16
cloned = 2
killed = 17
cloned = 15
killed = 13
cloned = 6
killed = 9
cloned = 18
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 9, 2, 14]
lower threshold: [1, 6, 7, 12, 13, 15, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 10, 0, 5, 4, 17]
====================================
cloned = 8
killed = 3
cloned = 10
killed = 11
cloned = 0
killed = 9
cloned = 5
killed = 2
cloned = 4
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 16, 18, 0, 13]
lower threshold: [1, 2, 3, 4, 6, 9, 11, 12, 14, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 5, 21, 10, 17, 7]
====================================
cloned = 15
killed = 8
cloned = 5
killed = 16
cloned = 21
killed = 18
cloned = 10
killed = 0
cloned = 17
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 3, 19, 16]
lower threshold: [0, 1, 4, 6, 7, 9, 11, 14, 15, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 2, 21, 5, 12, 13]
====================================
cloned = 20
killed = 10
cloned = 2
killed = 8
cloned = 21
killed = 3
cloned = 5
killed = 19
cloned = 12
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 19, 13, 7, 10]
lower threshold: [0, 1, 2, 3, 5, 6, 9, 11, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 14, 18, 12, 4, 20]
====================================
cloned = 16
killed = 8
cloned = 14
killed = 19
cloned = 18
killed = 13
cloned = 12
killed = 7
cloned = 4
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 15, 1, 14, 9]
lower threshold: [0, 2, 3, 4, 5, 6, 7, 10, 13, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 20, 21, 17, 12, 8]
====================================
cloned = 16
killed = 11
cloned = 20
killed = 15
cloned = 21
killed = 1
cloned = 17
killed = 14
cloned = 12
killed = 9
Trial run 2/seed 307:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.32500000000001,
  55.91,
  59.315,
  54.975,
  52.154999999999994,
  54.45,
  57.46499999999999,
  36.74,
  44.715,
  30.195,
  48.045,
  50.81499999999999,
  47.66999999999999,
  52.335,
  56.68999999999999,
  37.419999999999995,
  51.425,
  49.04,
  45.55499999999999,
  44.00000000000001,
  34.675000000000004,
  55.239999999999995,
  53.55],
 [65.58500000000001,
  63.660000000000004,
  65.2,
  61.815,
  57.650000000000006,
  57.325,
  60.55999999999998,
  65.585,
  63.155,
  65.2,
  54.885,
  54.77499999999999,
  51.785,
  59.47,
  57.38999999999999,
  60.35499999999999,
  56.55499999999999,
  52.595,
  49.145,
  57.54,
  60.425,
  60.425,
  56.55],
 [65.59,
  63.464999999999996,
  65.68,
  58.699999999999996,
  61.85,
  61.53,
  59.58999999999998,
  65.59,
  62.86500000000001,
  65.67999999999999,
  65.59,
  64.37499999999999,
  65.68,
  62.58,
  57.77499999999999,
  59.08499999999999,
  61.620000000000005,
  65.59,
  62.544999999999995,
  57.735,
  61.50999999999999,
  61.50999999999999,
  65.67999999999999],
 [65.84,
  66.155,
  65.92,
  65.91999999999999,
  64.46,
  64.80000000000001,
  65.91999999999999,
  65.84,
  66.36999999999999,
  65.91999999999999,
  65.84,
  66.13999999999999,
  65.92,
  64.13999999999999,
  65.91999999999999,
  65.91999999999999,
  64.13999999999999,
  65.84,
  66.23,
  65.84,
  64.13999999999999,
  64.14,
  65.92],
 [65.68,
  65.03999999999999,
  65.83999999999999,
  65.83999999999997,
  65.03999999999999,
  65.03999999999999,
  65.84,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.04,
  65.83999999999997,
  65.83999999999999,
  65.03999999999999,
  65.68,
  65.03999999999999,
  65.68,
  65.83999999999997,
  65.83999999999999,
  65.83999999999999],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.94,
  65.88,
  65.33999999999999,
  65.88,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.115,
 55.92,
 59.375,
 54.86,
 52.02,
 53.98500000000001,
 57.12499999999999,
 37.08,
 44.61000000000001,
 31.595000000000002,
 47.955000000000005,
 50.70499999999999,
 47.575,
 52.355,
 56.28999999999999,
 37.125,
 51.5,
 49.015,
 45.60999999999999,
 44.050000000000004,
 34.885000000000005,
 55.099999999999994,
 53.155]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.11
Upper: 54.98
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 61.04,
 65.2,
 61.815,
 57.545,
 57.325,
 57.22999999999999,
 65.585,
 61.31500000000001,
 65.2,
 54.885,
 54.77499999999999,
 53.515,
 59.47,
 56.855,
 57.24499999999998,
 56.55499999999999,
 48.635,
 49.145,
 56.894999999999996,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 61.17750000000001
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 2
killed = 11
cloned = 3
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.63,
 63.055,
 65.7,
 60.769999999999996,
 61.975,
 61.83,
 59.91499999999998,
 65.63,
 63.36500000000001,
 65.69999999999999,
 65.63,
 65.7,
 60.77,
 63.045,
 57.38499999999999,
 59.77999999999997,
 62.084999999999994,
 65.63,
 62.964999999999996,
 57.325,
 61.974999999999994,
 61.974999999999994,
 65.7]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.3
Upper: 65.63
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 12, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [10, 17]
upper:           [2, 9, 11, 22, 7, 0]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 11
killed = 12
cloned = 22
killed = 14
cloned = 7
killed = 15
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[65.88,
 66.33999999999999,
 65.94,
 65.94,
 65.0,
 65.1,
 65.94,
 65.88,
 66.22999999999999,
 65.94,
 65.88,
 65.94,
 65.94,
 64.60499999999999,
 65.94,
 65.88,
 64.60499999999999,
 65.88,
 66.42,
 65.88,
 64.60499999999999,
 64.605,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.49
Upper: 65.94
====================================
lower list size: 6
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 6, 9, 11, 14, 22]
upper:           [1, 8, 18, 12, 3]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 18
killed = 13
cloned = 12
killed = 16
cloned = 3
killed = 20
######################################
~~~ Scores: ~~~
[65.76,
 65.46999999999998,
 65.88,
 65.88,
 65.47,
 65.46999999999998,
 65.88,
 65.76,
 65.47,
 65.88,
 65.76,
 65.88,
 65.88,
 65.47,
 65.88,
 65.76,
 65.88,
 65.76,
 65.46999999999998,
 65.76,
 65.88,
 63.209999999999994,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 4
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 18, 21, 4]
lower threshold: [8, 13]
....................................
upper threshold: [2, 9, 16, 22]
upper:           [14, 3, 12, 6, 11, 20]
====================================
cloned = 14
killed = 1
cloned = 3
killed = 5
cloned = 12
killed = 18
cloned = 6
killed = 21
cloned = 11
killed = 4
######################################
~~~ Scores: ~~~
[65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.92,
 65.37999999999998,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.37999999999998,
 65.96000000000001,
 65.92,
 65.96,
 65.92,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.92
Upper: 65.96000000000001
====================================
lower list size: 2
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 17, 15, 0]
lower threshold: [7, 10, 19]
....................................
upper threshold: [3, 4, 6, 18, 20, 21, 22]
upper:           [12, 9, 2, 14, 11, 1]
====================================
cloned = 12
killed = 8
cloned = 9
killed = 13
cloned = 2
killed = 17
cloned = 14
killed = 15
cloned = 11
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 6, 0, 12]
lower threshold: [2, 3, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 10, 7, 11, 13]
====================================
cloned = 1
killed = 5
cloned = 4
killed = 14
cloned = 10
killed = 6
cloned = 7
killed = 0
cloned = 11
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 10, 0, 18]
lower threshold: [1, 2, 5, 6, 8, 11, 12, 13, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 20, 17, 7, 15, 14]
====================================
cloned = 3
killed = 4
cloned = 20
killed = 9
cloned = 17
killed = 10
cloned = 7
killed = 0
cloned = 15
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 17, 20, 14, 19]
lower threshold: [0, 1, 3, 4, 6, 8, 10, 12, 13, 16, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 7, 15, 2, 9, 18]
====================================
cloned = 11
killed = 5
cloned = 7
killed = 17
cloned = 15
killed = 20
cloned = 2
killed = 14
cloned = 9
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 3, 4, 2]
lower threshold: [0, 5, 8, 9, 14, 15, 16, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 1, 7, 12, 10, 11]
====================================
cloned = 21
killed = 6
cloned = 1
killed = 13
cloned = 7
killed = 3
cloned = 12
killed = 4
cloned = 10
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 4, 19, 17, 9]
lower threshold: [0, 5, 6, 7, 10, 11, 13, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 14, 2, 1, 3]
====================================
cloned = 8
killed = 18
cloned = 12
killed = 4
cloned = 14
killed = 19
cloned = 2
killed = 17
cloned = 1
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 5, 7, 0, 4]
lower threshold: [1, 2, 3, 6, 9, 14, 15, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 13, 11, 10, 8, 12]
====================================
cloned = 17
killed = 19
cloned = 13
killed = 5
cloned = 11
killed = 7
cloned = 10
killed = 0
cloned = 8
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 5, 20, 7]
lower threshold: [0, 1, 2, 8, 9, 12, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 10, 17, 6, 11]
====================================
cloned = 14
killed = 3
cloned = 4
killed = 13
cloned = 10
killed = 5
cloned = 17
killed = 20
cloned = 6
killed = 7
Trial run 3/seed 308:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 3,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 6,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.115,
  55.92,
  59.375,
  54.86,
  52.02,
  53.98500000000001,
  57.12499999999999,
  37.08,
  44.61000000000001,
  31.595000000000002,
  47.955000000000005,
  50.70499999999999,
  47.575,
  52.355,
  56.28999999999999,
  37.125,
  51.5,
  49.015,
  45.60999999999999,
  44.050000000000004,
  34.885000000000005,
  55.099999999999994,
  53.155],
 [65.58500000000001,
  61.04,
  65.2,
  61.815,
  57.545,
  57.325,
  57.22999999999999,
  65.585,
  61.31500000000001,
  65.2,
  54.885,
  54.77499999999999,
  53.515,
  59.47,
  56.855,
  57.24499999999998,
  56.55499999999999,
  48.635,
  49.145,
  56.894999999999996,
  60.425,
  60.425,
  56.55],
 [65.63,
  63.055,
  65.7,
  60.769999999999996,
  61.975,
  61.83,
  59.91499999999998,
  65.63,
  63.36500000000001,
  65.69999999999999,
  65.63,
  65.7,
  60.77,
  63.045,
  57.38499999999999,
  59.77999999999997,
  62.084999999999994,
  65.63,
  62.964999999999996,
  57.325,
  61.974999999999994,
  61.974999999999994,
  65.7],
 [65.88,
  66.33999999999999,
  65.94,
  65.94,
  65.0,
  65.1,
  65.94,
  65.88,
  66.22999999999999,
  65.94,
  65.88,
  65.94,
  65.94,
  64.60499999999999,
  65.94,
  65.88,
  64.60499999999999,
  65.88,
  66.42,
  65.88,
  64.60499999999999,
  64.605,
  65.94],
 [65.76,
  65.46999999999998,
  65.88,
  65.88,
  65.47,
  65.46999999999998,
  65.88,
  65.76,
  65.47,
  65.88,
  65.76,
  65.88,
  65.88,
  65.47,
  65.88,
  65.76,
  65.88,
  65.76,
  65.46999999999998,
  65.76,
  65.88,
  63.209999999999994,
  65.88],
 [65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.92,
  65.37999999999998,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.37999999999998,
  65.96000000000001,
  65.92,
  65.96,
  65.92,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.37,
 56.015,
 59.125,
 54.605,
 51.775000000000006,
 53.935,
 53.40999999999998,
 37.02,
 44.805,
 29.385000000000005,
 47.78,
 50.95499999999999,
 46.39999999999999,
 52.519999999999996,
 56.434999999999995,
 36.78,
 51.400000000000006,
 49.165000000000006,
 45.559999999999995,
 41.825,
 34.71,
 55.5,
 53.66499999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.1825
Upper: 54.269999999999996
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.13,
 65.215,
 61.83,
 57.525,
 57.34,
 59.589999999999975,
 65.6,
 63.39500000000001,
 65.215,
 54.9,
 54.78999999999999,
 53.33,
 59.485,
 58.12,
 61.83,
 56.56999999999999,
 52.225,
 50.54000000000001,
 57.919999999999995,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.480000000000004
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.60000000000001,
 65.69500000000001,
 58.714999999999996,
 61.824999999999996,
 61.545,
 60.56999999999998,
 65.605,
 65.27499999999999,
 65.695,
 65.605,
 66.785,
 65.69500000000001,
 62.595,
 58.8,
 58.715,
 61.635000000000005,
 65.605,
 64.92,
 58.660000000000004,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [2, 9, 11, 12, 22]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 11
killed = 14
cloned = 12
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.18,
 65.89999999999999,
 65.89999999999999,
 64.15,
 64.5,
 65.89999999999999,
 65.8,
 66.195,
 65.89999999999999,
 65.80000000000001,
 66.12499999999999,
 65.89999999999999,
 63.675,
 66.1,
 65.89999999999999,
 63.67499999999998,
 65.80000000000001,
 66.30000000000001,
 65.89999999999999,
 63.67499999999998,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.15
Upper: 65.89999999999999
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 3, 6, 9, 12, 15, 19, 22]
upper:           [1, 8, 11, 14, 18]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 14
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.6,
 65.27000000000001,
 65.8,
 65.79999999999998,
 65.27,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27000000000001,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.27,
 65.79999999999998,
 65.27,
 65.60000000000001,
 65.27000000000001,
 65.79999999999998,
 65.27,
 61.349999999999994,
 65.8]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 11, 5, 16, 14]
lower threshold: [4, 20]
....................................
upper threshold: [9, 15, 19]
upper:           [2, 12, 22, 6, 3]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 11
cloned = 22
killed = 5
cloned = 6
killed = 16
cloned = 3
killed = 14
######################################
~~~ Scores: ~~~
[65.76,
 65.17999999999999,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.76,
 65.17999999999999,
 65.88,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.88,
 65.76,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 8, 13, 18, 20]
lower threshold: []
....................................
upper threshold: [2, 3, 5, 6, 12, 19, 22]
upper:           [11, 21, 16, 14, 9, 15]
====================================
cloned = 11
killed = 1
cloned = 21
killed = 4
cloned = 16
killed = 8
cloned = 14
killed = 13
cloned = 9
killed = 18
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 16, 11, 3]
lower threshold: [0, 1, 5, 6, 10, 12, 14, 15, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 19, 21, 2, 13, 9]
====================================
cloned = 8
killed = 4
cloned = 19
killed = 7
cloned = 21
killed = 16
cloned = 2
killed = 11
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 13, 16, 12, 6]
lower threshold: [1, 3, 4, 5, 9, 10, 15, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 11, 0, 14, 7, 17]
====================================
cloned = 8
killed = 2
cloned = 11
killed = 13
cloned = 0
killed = 16
cloned = 14
killed = 12
cloned = 7
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 15, 20, 18, 7]
lower threshold: [0, 1, 3, 5, 10, 12, 13, 14, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 4, 6, 8, 21, 9]
====================================
cloned = 11
killed = 2
cloned = 4
killed = 15
cloned = 6
killed = 20
cloned = 8
killed = 18
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 11, 2, 17, 19]
lower threshold: [1, 3, 4, 6, 7, 8, 9, 10, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 18, 12, 14, 0]
====================================
cloned = 5
killed = 21
cloned = 13
killed = 11
cloned = 18
killed = 2
cloned = 12
killed = 17
cloned = 14
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 13, 11, 16, 8]
lower threshold: [0, 2, 3, 5, 7, 10, 12, 14, 15, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 4, 6, 9, 19]
====================================
cloned = 21
killed = 1
cloned = 18
killed = 13
cloned = 4
killed = 11
cloned = 6
killed = 16
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 12, 21, 8, 15]
lower threshold: [0, 2, 3, 4, 5, 7, 10, 11, 13, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 1, 6, 17, 14, 9]
====================================
cloned = 20
killed = 19
cloned = 1
killed = 12
cloned = 6
killed = 21
cloned = 17
killed = 8
cloned = 14
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 15, 16, 10, 17]
lower threshold: [0, 3, 5, 6, 8, 9, 11, 12, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 20, 7, 14, 1, 4]
====================================
cloned = 2
killed = 13
cloned = 20
killed = 15
cloned = 7
killed = 16
cloned = 14
killed = 10
cloned = 1
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 2, 10, 4, 8]
lower threshold: [1, 3, 5, 6, 9, 11, 12, 13, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 7, 0, 16, 19, 20]
====================================
cloned = 14
killed = 15
cloned = 7
killed = 2
cloned = 0
killed = 10
cloned = 16
killed = 4
cloned = 19
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 3, 19, 10, 12]
lower threshold: [0, 2, 6, 7, 9, 11, 14, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 5, 4, 1, 13, 8]
====================================
cloned = 21
killed = 15
cloned = 5
killed = 3
cloned = 4
killed = 19
cloned = 1
killed = 10
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 9, 10, 18]
lower threshold: [0, 2, 4, 6, 7, 13, 14, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 17, 12, 20, 3, 5]
====================================
cloned = 11
killed = 8
cloned = 17
killed = 1
cloned = 12
killed = 9
cloned = 20
killed = 10
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 18, 12, 19, 3]
lower threshold: [0, 2, 4, 5, 7, 8, 10, 11, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 6, 14, 9, 21, 15]
====================================
cloned = 13
killed = 1
cloned = 6
killed = 18
cloned = 14
killed = 12
cloned = 9
killed = 19
cloned = 21
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 7, 11, 1, 14]
lower threshold: [0, 2, 3, 6, 8, 10, 12, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 18, 4, 21, 13]
====================================
cloned = 9
killed = 16
cloned = 5
killed = 7
cloned = 18
killed = 11
cloned = 4
killed = 1
cloned = 21
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 7, 0, 15]
lower threshold: [1, 4, 5, 8, 9, 13, 16, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 21, 14, 3, 12, 11]
====================================
cloned = 2
killed = 10
cloned = 21
killed = 6
cloned = 14
killed = 7
cloned = 3
killed = 0
cloned = 12
killed = 15
Trial run 4/seed 309:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.37,
  56.015,
  59.125,
  54.605,
  51.775000000000006,
  53.935,
  53.40999999999998,
  37.02,
  44.805,
  29.385000000000005,
  47.78,
  50.95499999999999,
  46.39999999999999,
  52.519999999999996,
  56.434999999999995,
  36.78,
  51.400000000000006,
  49.165000000000006,
  45.559999999999995,
  41.825,
  34.71,
  55.5,
  53.66499999999999],
 [65.60000000000001,
  63.13,
  65.215,
  61.83,
  57.525,
  57.34,
  59.589999999999975,
  65.6,
  63.39500000000001,
  65.215,
  54.9,
  54.78999999999999,
  53.33,
  59.485,
  58.12,
  61.83,
  56.56999999999999,
  52.225,
  50.54000000000001,
  57.919999999999995,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.60000000000001,
  65.69500000000001,
  58.714999999999996,
  61.824999999999996,
  61.545,
  60.56999999999998,
  65.605,
  65.27499999999999,
  65.695,
  65.605,
  66.785,
  65.69500000000001,
  62.595,
  58.8,
  58.715,
  61.635000000000005,
  65.605,
  64.92,
  58.660000000000004,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.18,
  65.89999999999999,
  65.89999999999999,
  64.15,
  64.5,
  65.89999999999999,
  65.8,
  66.195,
  65.89999999999999,
  65.80000000000001,
  66.12499999999999,
  65.89999999999999,
  63.675,
  66.1,
  65.89999999999999,
  63.67499999999998,
  65.80000000000001,
  66.30000000000001,
  65.89999999999999,
  63.67499999999998,
  63.675,
  65.89999999999999],
 [65.6,
  65.27000000000001,
  65.8,
  65.79999999999998,
  65.27,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27000000000001,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.27,
  65.79999999999998,
  65.27,
  65.60000000000001,
  65.27000000000001,
  65.79999999999998,
  65.27,
  61.349999999999994,
  65.8],
 [65.76,
  65.17999999999999,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.76,
  65.17999999999999,
  65.88,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.88,
  65.76,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.88,
  65.88],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.24,
 56.14,
 59.19,
 54.67,
 52.3,
 54.025,
 54.859999999999985,
 36.84,
 44.970000000000006,
 29.63,
 47.705000000000005,
 50.87499999999999,
 48.36999999999999,
 52.379999999999995,
 56.015,
 37.015,
 50.915,
 47.015,
 46.349999999999994,
 43.865,
 34.845000000000006,
 55.67999999999999,
 53.06999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.66
Upper: 54.76499999999999
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 62.56,
 65.2,
 61.815,
 57.525,
 57.325,
 55.13999999999998,
 65.585,
 60.870000000000005,
 65.2,
 54.885,
 54.77499999999999,
 51.585,
 59.47,
 57.095,
 58.284999999999975,
 56.55499999999999,
 48.684999999999995,
 49.1,
 56.735,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 55.844999999999985
Upper: 61.3425
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 11, 12, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 3
killed = 12
cloned = 7
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.64500000000001,
 65.30999999999999,
 65.715,
 60.785,
 61.875,
 61.845,
 65.64500000000001,
 65.645,
 66.435,
 65.715,
 65.43,
 65.715,
 60.785000000000004,
 63.05999999999999,
 59.845,
 61.37499999999997,
 62.099999999999994,
 65.64500000000001,
 65.715,
 59.785,
 61.989999999999995,
 61.989999999999995,
 62.099999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.86
Upper: 65.64500000000001
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 12, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [0, 6, 17]
upper:           [2, 8, 9, 11, 18]
====================================
cloned = 2
killed = 3
cloned = 8
killed = 5
cloned = 9
killed = 12
cloned = 11
killed = 14
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[65.73,
 66.63499999999999,
 65.815,
 65.815,
 63.145,
 66.61999999999999,
 65.73,
 65.73,
 66.565,
 65.815,
 66.58,
 65.815,
 65.815,
 63.374999999999986,
 65.815,
 65.815,
 62.894999999999996,
 65.73,
 65.815,
 62.975,
 62.83999999999999,
 62.84,
 62.894999999999996]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 63.25999999999999
Upper: 65.815
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [3, 9, 11, 14, 15, 18]
upper:           [1, 5, 8, 10, 12, 2]
====================================
cloned = 1
killed = 4
cloned = 5
killed = 16
cloned = 8
killed = 19
cloned = 10
killed = 20
cloned = 12
killed = 21
cloned = 2
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.39,
 65.83999999999999,
 65.83999999999999,
 65.39,
 65.39,
 65.68,
 65.68,
 65.39,
 65.84,
 65.38999999999999,
 65.83999999999999,
 65.83999999999997,
 62.27999999999999,
 65.83999999999999,
 65.83999999999999,
 65.38999999999999,
 65.68,
 65.83999999999999,
 65.39,
 65.38999999999999,
 65.83999999999997,
 65.84]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.39
Upper: 65.83999999999999
====================================
lower list size: 4
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [10, 13, 16, 20, 1]
lower threshold: [4, 5, 8, 19]
....................................
upper threshold: [2, 18]
upper:           [9, 22, 3, 15, 14, 11]
====================================
cloned = 9
killed = 10
cloned = 22
killed = 13
cloned = 3
killed = 16
cloned = 15
killed = 20
cloned = 14
killed = 1
######################################
~~~ Scores: ~~~
[65.84,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.29999999999998,
 65.29999999999998,
 65.84,
 65.84,
 65.29999999999998,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.92,
 65.84,
 65.92,
 65.3,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.84
Upper: 65.91999999999999
====================================
lower list size: 4
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 8, 19, 0]
lower threshold: [6, 7, 17]
....................................
upper threshold: [1, 2, 3, 10, 11, 12, 13, 14, 15, 22]
upper:           [9, 16, 18, 20, 21]
====================================
cloned = 9
killed = 4
cloned = 16
killed = 5
cloned = 18
killed = 8
cloned = 20
killed = 19
cloned = 21
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 14, 9, 11, 19]
lower threshold: [0, 2, 3, 4, 5, 6, 12, 13, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 10, 7, 17, 18]
====================================
cloned = 8
killed = 16
cloned = 1
killed = 14
cloned = 10
killed = 9
cloned = 7
killed = 11
cloned = 17
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 1, 7, 21]
lower threshold: [0, 2, 3, 8, 9, 10, 12, 13, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 16, 18, 11, 15]
====================================
cloned = 6
killed = 4
cloned = 14
killed = 5
cloned = 16
killed = 1
cloned = 18
killed = 7
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 14, 0, 17, 21]
lower threshold: [2, 5, 6, 7, 10, 11, 12, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 1, 8, 13, 4, 3]
====================================
cloned = 16
killed = 9
cloned = 1
killed = 14
cloned = 8
killed = 0
cloned = 13
killed = 17
cloned = 4
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 13, 0, 21]
lower threshold: [1, 5, 6, 7, 10, 11, 12, 14, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 15, 3, 20, 8, 17]
====================================
cloned = 4
killed = 2
cloned = 15
killed = 9
cloned = 3
killed = 13
cloned = 20
killed = 0
cloned = 8
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 16, 20, 5, 15]
lower threshold: [0, 1, 6, 8, 9, 10, 12, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 11, 13, 4, 14, 3]
====================================
cloned = 2
killed = 7
cloned = 11
killed = 16
cloned = 13
killed = 20
cloned = 4
killed = 5
cloned = 14
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 5, 19, 16, 6]
lower threshold: [2, 4, 9, 10, 12, 13, 14, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 0, 7, 1, 8, 11]
====================================
cloned = 3
killed = 17
cloned = 0
killed = 5
cloned = 7
killed = 19
cloned = 1
killed = 16
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 15, 5, 7, 16]
lower threshold: [0, 1, 6, 9, 10, 11, 12, 13, 14, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 21, 8, 3, 4, 2]
====================================
cloned = 19
killed = 17
cloned = 21
killed = 15
cloned = 8
killed = 5
cloned = 3
killed = 7
cloned = 4
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 19, 17, 0]
lower threshold: [2, 4, 7, 8, 10, 11, 12, 14, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 1, 3, 15, 9]
====================================
cloned = 18
killed = 13
cloned = 5
killed = 6
cloned = 1
killed = 19
cloned = 3
killed = 17
cloned = 15
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 10, 16, 18]
lower threshold: [0, 2, 4, 7, 8, 9, 11, 14, 15, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 3, 21, 12, 17, 5]
====================================
cloned = 1
killed = 6
cloned = 3
killed = 13
cloned = 21
killed = 10
cloned = 12
killed = 16
cloned = 17
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 14, 7, 13, 18]
lower threshold: [1, 2, 4, 5, 6, 9, 10, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 8, 0, 11, 3, 20]
====================================
cloned = 12
killed = 21
cloned = 8
killed = 14
cloned = 0
killed = 7
cloned = 11
killed = 13
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 2, 6, 7]
lower threshold: [0, 3, 4, 5, 8, 10, 11, 13, 15, 16, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 19, 14, 18, 17, 20]
====================================
cloned = 12
killed = 9
cloned = 19
killed = 1
cloned = 14
killed = 2
cloned = 18
killed = 6
cloned = 17
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 17, 21, 12]
lower threshold: [0, 2, 6, 7, 8, 9, 10, 13, 14, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 1, 5, 19, 3, 15]
====================================
cloned = 18
killed = 11
cloned = 1
killed = 4
cloned = 5
killed = 17
cloned = 19
killed = 21
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 9, 21, 2]
lower threshold: [4, 5, 7, 8, 10, 11, 12, 14, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 0, 3, 13, 16, 19]
====================================
cloned = 17
killed = 6
cloned = 0
killed = 1
cloned = 3
killed = 9
cloned = 13
killed = 21
cloned = 16
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 19, 18, 14, 9]
lower threshold: [1, 3, 4, 6, 7, 8, 11, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 2, 0, 12, 17]
====================================
cloned = 5
killed = 10
cloned = 13
killed = 19
cloned = 2
killed = 18
cloned = 0
killed = 14
cloned = 12
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 13, 6, 16]
lower threshold: [2, 3, 7, 8, 11, 12, 14, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 19, 1, 4, 9, 10]
====================================
cloned = 20
killed = 5
cloned = 19
killed = 0
cloned = 1
killed = 13
cloned = 4
killed = 6
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 7, 8, 16]
lower threshold: [0, 2, 3, 4, 5, 9, 10, 11, 14, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 15, 1, 19, 18, 12]
====================================
cloned = 21
killed = 13
cloned = 15
killed = 6
cloned = 1
killed = 7
cloned = 19
killed = 8
cloned = 18
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 18, 9, 19, 5]
lower threshold: [0, 1, 4, 7, 10, 11, 12, 14, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 3, 6, 2, 13, 15]
====================================
cloned = 8
killed = 20
cloned = 3
killed = 18
cloned = 6
killed = 9
cloned = 2
killed = 19
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 4, 8, 21, 10]
lower threshold: [0, 2, 5, 6, 7, 9, 11, 14, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 3, 1, 12, 18, 13]
====================================
cloned = 20
killed = 16
cloned = 3
killed = 4
cloned = 1
killed = 8
cloned = 12
killed = 21
cloned = 18
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 5, 7, 6]
lower threshold: [0, 1, 4, 8, 11, 13, 15, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 18, 14, 20, 3, 12]
====================================
cloned = 2
killed = 9
cloned = 18
killed = 10
cloned = 14
killed = 5
cloned = 20
killed = 7
cloned = 3
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 3, 4, 19]
lower threshold: [0, 2, 5, 6, 9, 10, 12, 14, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 21, 16, 7, 15]
====================================
cloned = 8
killed = 11
cloned = 1
killed = 13
cloned = 21
killed = 3
cloned = 16
killed = 4
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 5, 3, 6, 18]
lower threshold: [1, 2, 4, 7, 8, 10, 13, 14, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 17, 20, 15, 11, 12]
====================================
cloned = 0
killed = 9
cloned = 17
killed = 5
cloned = 20
killed = 3
cloned = 15
killed = 6
cloned = 11
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 12, 3, 9, 13]
lower threshold: [0, 4, 6, 7, 10, 11, 14, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 2, 8, 18, 16, 5]
====================================
cloned = 1
killed = 15
cloned = 2
killed = 12
cloned = 8
killed = 3
cloned = 18
killed = 9
cloned = 16
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 12, 0, 14]
lower threshold: [1, 3, 4, 7, 10, 11, 15, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 6, 5, 13, 8, 2]
====================================
cloned = 21
killed = 20
cloned = 6
killed = 9
cloned = 5
killed = 12
cloned = 13
killed = 0
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 19, 1, 10]
lower threshold: [0, 3, 4, 7, 12, 13, 15, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 9, 6, 16, 2, 11]
====================================
cloned = 8
killed = 5
cloned = 9
killed = 14
cloned = 6
killed = 19
cloned = 16
killed = 1
cloned = 2
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 0, 7, 14, 4]
lower threshold: [3, 6, 8, 9, 10, 12, 13, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 5, 2, 1, 15, 20]
====================================
cloned = 11
killed = 18
cloned = 5
killed = 0
cloned = 2
killed = 7
cloned = 1
killed = 14
cloned = 15
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 11, 1, 15]
lower threshold: [2, 3, 5, 6, 7, 9, 13, 14, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 8, 10, 18, 4]
====================================
cloned = 12
killed = 20
cloned = 0
killed = 21
cloned = 8
killed = 11
cloned = 10
killed = 1
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 17, 5, 19, 18]
lower threshold: [0, 1, 2, 6, 7, 10, 12, 13, 14, 15, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 4, 8, 20, 16, 11]
====================================
cloned = 9
killed = 3
cloned = 4
killed = 17
cloned = 8
killed = 5
cloned = 20
killed = 19
cloned = 16
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 18, 7, 15, 14]
lower threshold: [1, 3, 5, 8, 9, 10, 11, 12, 13, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 4, 0, 16, 6, 17]
====================================
cloned = 19
killed = 2
cloned = 4
killed = 18
cloned = 0
killed = 7
cloned = 16
killed = 15
cloned = 6
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 14, 20, 18, 21]
lower threshold: [0, 2, 3, 4, 5, 6, 7, 11, 13, 15, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 16, 12, 10, 19]
====================================
cloned = 1
killed = 9
cloned = 8
killed = 14
cloned = 16
killed = 20
cloned = 12
killed = 18
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 14, 4, 10, 1]
lower threshold: [0, 2, 3, 5, 6, 7, 9, 11, 13, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 19, 12, 16, 18, 17]
====================================
cloned = 8
killed = 15
cloned = 19
killed = 14
cloned = 12
killed = 4
cloned = 16
killed = 10
cloned = 18
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 14, 17, 3, 1]
lower threshold: [2, 5, 7, 8, 9, 12, 13, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 10, 16, 11, 21]
====================================
cloned = 0
killed = 4
cloned = 6
killed = 14
cloned = 10
killed = 17
cloned = 16
killed = 3
cloned = 11
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 17, 1, 13, 19]
lower threshold: [0, 2, 6, 8, 9, 11, 12, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 3, 10, 5, 14, 4]
====================================
cloned = 7
killed = 18
cloned = 3
killed = 17
cloned = 10
killed = 1
cloned = 5
killed = 13
cloned = 14
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 1, 21, 13]
lower threshold: [0, 3, 4, 6, 7, 10, 14, 15, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 12, 2, 5, 18, 8]
====================================
cloned = 19
killed = 11
cloned = 12
killed = 9
cloned = 2
killed = 1
cloned = 5
killed = 21
cloned = 18
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 18, 16, 14, 19]
lower threshold: [1, 4, 5, 6, 7, 9, 10, 11, 12, 15, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 0, 13, 2, 20, 8]
====================================
cloned = 3
killed = 21
cloned = 0
killed = 18
cloned = 13
killed = 16
cloned = 2
killed = 14
cloned = 20
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 4, 9, 12, 13]
lower threshold: [0, 1, 3, 6, 7, 8, 11, 14, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 10, 18, 16, 5, 17]
====================================
cloned = 2
killed = 15
cloned = 10
killed = 4
cloned = 18
killed = 9
cloned = 16
killed = 12
cloned = 5
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 14, 7, 21, 20]
lower threshold: [0, 2, 3, 5, 6, 8, 9, 10, 12, 13, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 1, 16, 17, 15, 11]
====================================
cloned = 4
killed = 18
cloned = 1
killed = 14
cloned = 16
killed = 7
cloned = 17
killed = 21
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 17, 10, 8, 15]
lower threshold: [1, 2, 3, 5, 7, 9, 11, 14, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 18, 12, 4, 13, 21]
====================================
cloned = 0
killed = 6
cloned = 18
killed = 17
cloned = 12
killed = 10
cloned = 4
killed = 8
cloned = 13
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 10, 19, 6]
lower threshold: [0, 1, 2, 3, 4, 8, 14, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 12, 16, 13, 5, 7]
====================================
cloned = 20
killed = 9
cloned = 12
killed = 11
cloned = 16
killed = 10
cloned = 13
killed = 19
cloned = 5
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 20, 16, 18, 3]
lower threshold: [1, 5, 7, 9, 10, 11, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 13, 12, 4, 8, 2]
====================================
cloned = 0
killed = 6
cloned = 13
killed = 20
cloned = 12
killed = 16
cloned = 4
killed = 18
cloned = 8
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 3, 16, 4]
lower threshold: [0, 2, 6, 7, 9, 10, 12, 13, 14, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 8, 19, 1, 5, 18]
====================================
cloned = 21
killed = 15
cloned = 8
killed = 11
cloned = 19
killed = 3
cloned = 1
killed = 16
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 2, 13, 10, 9]
lower threshold: [1, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 11, 7, 21, 0, 3]
====================================
cloned = 6
killed = 19
cloned = 11
killed = 2
cloned = 7
killed = 13
cloned = 21
killed = 10
cloned = 0
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 14, 2, 15]
lower threshold: [0, 1, 3, 4, 5, 6, 12, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 16, 13, 18, 8, 11]
====================================
cloned = 7
killed = 10
cloned = 16
killed = 9
cloned = 13
killed = 14
cloned = 18
killed = 2
cloned = 8
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 17, 19, 2]
lower threshold: [4, 6, 7, 8, 10, 11, 12, 14, 15, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 13, 16, 20, 1]
====================================
cloned = 9
killed = 3
cloned = 5
killed = 0
cloned = 13
killed = 17
cloned = 16
killed = 19
cloned = 20
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 6, 21, 17, 18]
lower threshold: [1, 2, 5, 7, 9, 10, 11, 14, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 0, 19, 12, 4, 13]
====================================
cloned = 3
killed = 8
cloned = 0
killed = 6
cloned = 19
killed = 21
cloned = 12
killed = 17
cloned = 4
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 9, 20, 12, 14]
lower threshold: [0, 1, 2, 3, 4, 5, 10, 11, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 16, 7, 8, 6, 18]
====================================
cloned = 13
killed = 19
cloned = 16
killed = 9
cloned = 7
killed = 20
cloned = 8
killed = 12
cloned = 6
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 11, 5, 6, 8]
lower threshold: [0, 3, 4, 10, 13, 14, 15, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 9, 7, 1, 12, 2]
====================================
cloned = 20
killed = 18
cloned = 9
killed = 11
cloned = 7
killed = 5
cloned = 1
killed = 6
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 1, 19, 12, 2]
lower threshold: [3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 14, 15, 13, 0, 21]
====================================
cloned = 18
killed = 16
cloned = 14
killed = 1
cloned = 15
killed = 19
cloned = 13
killed = 12
cloned = 0
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 15, 8, 1]
lower threshold: [0, 2, 3, 4, 12, 13, 14, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 18, 11, 7, 20, 10]
====================================
cloned = 5
killed = 6
cloned = 18
killed = 9
cloned = 11
killed = 15
cloned = 7
killed = 8
cloned = 20
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 5, 12, 17, 0]
lower threshold: [2, 3, 4, 6, 7, 11, 13, 14, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 21, 10, 8, 9, 1]
====================================
cloned = 15
killed = 16
cloned = 21
killed = 5
cloned = 10
killed = 12
cloned = 8
killed = 17
cloned = 9
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 4, 20, 14, 6]
lower threshold: [0, 2, 3, 5, 7, 8, 11, 12, 13, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 9, 1, 21, 17, 10]
====================================
cloned = 15
killed = 19
cloned = 9
killed = 4
cloned = 1
killed = 20
cloned = 21
killed = 14
cloned = 17
killed = 6
Trial run 5/seed 310:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Michaelos: (D,)': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Evolved ANN 5 Noise 05': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 4,
          'Tit For 2 Tats': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.24,
  56.14,
  59.19,
  54.67,
  52.3,
  54.025,
  54.859999999999985,
  36.84,
  44.970000000000006,
  29.63,
  47.705000000000005,
  50.87499999999999,
  48.36999999999999,
  52.379999999999995,
  56.015,
  37.015,
  50.915,
  47.015,
  46.349999999999994,
  43.865,
  34.845000000000006,
  55.67999999999999,
  53.06999999999999],
 [65.58500000000001,
  62.56,
  65.2,
  61.815,
  57.525,
  57.325,
  55.13999999999998,
  65.585,
  60.870000000000005,
  65.2,
  54.885,
  54.77499999999999,
  51.585,
  59.47,
  57.095,
  58.284999999999975,
  56.55499999999999,
  48.684999999999995,
  49.1,
  56.735,
  60.425,
  60.425,
  56.55],
 [65.64500000000001,
  65.30999999999999,
  65.715,
  60.785,
  61.875,
  61.845,
  65.64500000000001,
  65.645,
  66.435,
  65.715,
  65.43,
  65.715,
  60.785000000000004,
  63.05999999999999,
  59.845,
  61.37499999999997,
  62.099999999999994,
  65.64500000000001,
  65.715,
  59.785,
  61.989999999999995,
  61.989999999999995,
  62.099999999999994],
 [65.73,
  66.63499999999999,
  65.815,
  65.815,
  63.145,
  66.61999999999999,
  65.73,
  65.73,
  66.565,
  65.815,
  66.58,
  65.815,
  65.815,
  63.374999999999986,
  65.815,
  65.815,
  62.894999999999996,
  65.73,
  65.815,
  62.975,
  62.83999999999999,
  62.84,
  62.894999999999996],
 [65.68,
  65.39,
  65.83999999999999,
  65.83999999999999,
  65.39,
  65.39,
  65.68,
  65.68,
  65.39,
  65.84,
  65.38999999999999,
  65.83999999999999,
  65.83999999999997,
  62.27999999999999,
  65.83999999999999,
  65.83999999999999,
  65.38999999999999,
  65.68,
  65.83999999999999,
  65.39,
  65.38999999999999,
  65.83999999999997,
  65.84],
 [65.84,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.29999999999998,
  65.29999999999998,
  65.84,
  65.84,
  65.29999999999998,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.92,
  65.84,
  65.92,
  65.3,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.275,
 55.85,
 59.26,
 54.76,
 52.28999999999999,
 54.325,
 50.77999999999999,
 37.04,
 44.955000000000005,
 33.605000000000004,
 47.745,
 50.73499999999999,
 45.60499999999999,
 52.47,
 56.455,
 36.940000000000005,
 51.465,
 47.185,
 45.765,
 41.965,
 34.97500000000001,
 55.23,
 52.364999999999995]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.28
Upper: 54.542500000000004
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.10000000000001,
 65.215,
 61.83,
 57.57000000000001,
 57.34,
 57.42999999999997,
 65.6,
 63.435,
 65.215,
 54.9,
 54.78999999999999,
 51.36,
 59.485,
 57.91,
 61.83,
 56.56999999999999,
 52.195,
 50.56000000000001,
 57.91,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.465
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.17999999999999,
 65.69500000000001,
 58.714999999999996,
 61.58499999999999,
 61.545,
 60.924999999999976,
 65.605,
 64.86,
 65.695,
 65.605,
 65.58999999999999,
 65.69500000000001,
 62.595,
 58.75999999999999,
 58.715,
 61.635000000000005,
 65.605,
 65.65,
 59.515,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [2, 9, 12, 18, 22]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 18
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.11500000000001,
 65.9,
 65.89999999999999,
 64.11500000000001,
 64.5,
 65.9,
 65.8,
 66.14999999999999,
 65.89999999999999,
 65.80000000000001,
 66.175,
 65.89999999999999,
 63.67499999999998,
 65.89999999999999,
 66.34,
 63.675,
 65.80000000000001,
 66.11,
 65.89999999999999,
 63.67499999999998,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.15
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 6]
upper:           [1, 8, 11, 15, 18]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 15
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27,
 65.8,
 65.79999999999998,
 65.27,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.27,
 65.27,
 65.60000000000001,
 65.27000000000001,
 65.8,
 65.27000000000001,
 61.349999999999994,
 65.79999999999998]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 11, 4, 8]
lower threshold: [5, 15, 16]
....................................
upper threshold: [3, 9, 22]
upper:           [2, 12, 19, 6, 14]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 1
cloned = 19
killed = 11
cloned = 6
killed = 4
cloned = 14
killed = 8
######################################
~~~ Scores: ~~~
[65.76,
 65.88,
 65.88,
 65.88,
 65.88,
 65.17999999999998,
 65.88,
 65.76,
 65.88,
 65.88,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.17999999999998,
 65.76,
 65.17999999999999,
 65.88000000000001,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [5, 13, 15, 16, 18, 20]
lower threshold: []
....................................
upper threshold: [1, 2, 8, 9, 11, 12, 21, 22]
upper:           [19, 6, 4, 3, 14]
====================================
cloned = 19
killed = 5
cloned = 6
killed = 13
cloned = 4
killed = 15
cloned = 3
killed = 16
cloned = 14
killed = 18
######################################
~~~ Scores: ~~~
[65.96000000000001,
 65.97999999999999,
 65.98,
 65.98,
 65.98,
 65.97999999999999,
 65.98,
 65.96000000000001,
 65.98,
 65.97999999999999,
 65.96000000000001,
 65.97999999999999,
 65.98,
 65.97999999999999,
 65.98,
 65.97999999999999,
 65.98,
 65.96000000000001,
 65.97999999999999,
 65.98,
 65.47999999999998,
 65.97999999999999,
 65.98]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.97999999999999
Upper: 65.98
====================================
lower list size: 5
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 10, 17, 20]
lower threshold: [1, 5, 9, 11, 13, 15, 18, 21]
....................................
upper threshold: [8, 16, 19, 22]
upper:           [12, 14, 2, 4, 3, 6]
====================================
cloned = 12
killed = 0
cloned = 14
killed = 7
cloned = 2
killed = 10
cloned = 4
killed = 17
cloned = 3
killed = 20
Trial run 6/seed 311:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.275,
  55.85,
  59.26,
  54.76,
  52.28999999999999,
  54.325,
  50.77999999999999,
  37.04,
  44.955000000000005,
  33.605000000000004,
  47.745,
  50.73499999999999,
  45.60499999999999,
  52.47,
  56.455,
  36.940000000000005,
  51.465,
  47.185,
  45.765,
  41.965,
  34.97500000000001,
  55.23,
  52.364999999999995],
 [65.60000000000001,
  63.10000000000001,
  65.215,
  61.83,
  57.57000000000001,
  57.34,
  57.42999999999997,
  65.6,
  63.435,
  65.215,
  54.9,
  54.78999999999999,
  51.36,
  59.485,
  57.91,
  61.83,
  56.56999999999999,
  52.195,
  50.56000000000001,
  57.91,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.17999999999999,
  65.69500000000001,
  58.714999999999996,
  61.58499999999999,
  61.545,
  60.924999999999976,
  65.605,
  64.86,
  65.695,
  65.605,
  65.58999999999999,
  65.69500000000001,
  62.595,
  58.75999999999999,
  58.715,
  61.635000000000005,
  65.605,
  65.65,
  59.515,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.11500000000001,
  65.9,
  65.89999999999999,
  64.11500000000001,
  64.5,
  65.9,
  65.8,
  66.14999999999999,
  65.89999999999999,
  65.80000000000001,
  66.175,
  65.89999999999999,
  63.67499999999998,
  65.89999999999999,
  66.34,
  63.675,
  65.80000000000001,
  66.11,
  65.89999999999999,
  63.67499999999998,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27,
  65.8,
  65.79999999999998,
  65.27,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.27,
  65.27,
  65.60000000000001,
  65.27000000000001,
  65.8,
  65.27000000000001,
  61.349999999999994,
  65.79999999999998],
 [65.76,
  65.88,
  65.88,
  65.88,
  65.88,
  65.17999999999998,
  65.88,
  65.76,
  65.88,
  65.88,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.17999999999998,
  65.76,
  65.17999999999999,
  65.88000000000001,
  65.17999999999999,
  65.88,
  65.88],
 [65.96000000000001,
  65.97999999999999,
  65.98,
  65.98,
  65.98,
  65.97999999999999,
  65.98,
  65.96000000000001,
  65.98,
  65.97999999999999,
  65.96000000000001,
  65.97999999999999,
  65.98,
  65.97999999999999,
  65.98,
  65.97999999999999,
  65.98,
  65.96000000000001,
  65.97999999999999,
  65.98,
  65.47999999999998,
  65.97999999999999,
  65.98]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.415,
 56.06,
 59.265,
 54.955,
 52.025,
 53.690000000000005,
 54.87999999999998,
 36.9,
 44.715,
 29.865000000000006,
 47.95,
 50.85499999999999,
 45.66,
 52.35,
 56.13999999999999,
 37.16,
 51.7,
 49.22,
 46.515,
 44.190000000000005,
 34.720000000000006,
 55.504999999999995,
 53.485]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.1875
Upper: 54.91749999999999
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.2,
 65.215,
 61.83,
 57.49,
 57.34,
 57.34999999999998,
 65.6,
 63.10000000000001,
 65.215,
 54.9,
 54.78999999999999,
 51.22,
 59.485,
 57.87,
 61.83,
 56.56999999999999,
 52.195,
 50.71500000000001,
 57.86,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.465
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.69,
 65.69500000000001,
 58.714999999999996,
 61.605000000000004,
 61.545,
 61.299999999999976,
 65.605,
 64.905,
 65.695,
 65.605,
 66.75999999999999,
 65.69500000000001,
 62.595,
 58.839999999999996,
 58.715,
 61.635000000000005,
 65.605,
 65.56,
 58.845000000000006,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.64750000000001
====================================
lower list size: 5
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: []
upper:           [1, 2, 9, 11, 12, 22]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 6
cloned = 9
killed = 14
cloned = 11
killed = 15
cloned = 12
killed = 19
######################################
~~~ Scores: ~~~
[65.76,
 66.29,
 65.88,
 66.1,
 64.315,
 64.20000000000002,
 65.88,
 65.76,
 66.13,
 65.88,
 65.76,
 66.28,
 65.88,
 63.209999999999994,
 65.88,
 66.005,
 63.209999999999994,
 65.76,
 66.25,
 65.88,
 63.20999999999998,
 63.209999999999994,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.0375
Upper: 65.9425
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: []
upper:           [1, 3, 8, 11, 15, 18]
====================================
cloned = 1
killed = 4
cloned = 3
killed = 5
cloned = 8
killed = 13
cloned = 11
killed = 16
cloned = 15
killed = 20
cloned = 18
killed = 21
######################################
~~~ Scores: ~~~
[65.52000000000001,
 64.82000000000001,
 65.75999999999999,
 64.82,
 64.82000000000001,
 64.82000000000001,
 65.75999999999999,
 65.52000000000001,
 64.82,
 65.75999999999998,
 65.52000000000001,
 64.82,
 65.75999999999999,
 64.82000000000001,
 65.75999999999998,
 64.82,
 64.82,
 65.52000000000001,
 64.82000000000001,
 65.75999999999999,
 64.82000000000001,
 64.82,
 65.75999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 64.82
Upper: 65.75999999999998
====================================
lower list size: 0
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 15, 11, 16]
lower threshold: [21]
....................................
upper threshold: [9, 14]
upper:           [2, 6, 12, 19, 22]
====================================
cloned = 2
killed = 8
cloned = 6
killed = 3
cloned = 12
killed = 15
cloned = 19
killed = 11
cloned = 22
killed = 16
######################################
~~~ Scores: ~~~
[65.72,
 65.11999999999999,
 65.86,
 65.85999999999999,
 65.11999999999999,
 65.11999999999999,
 65.85999999999999,
 65.72,
 65.85999999999999,
 65.85999999999999,
 65.72,
 65.86,
 65.86,
 65.12,
 65.85999999999999,
 65.86,
 65.85999999999999,
 65.72,
 65.11999999999999,
 65.86,
 65.12,
 65.11999999999999,
 65.85999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.12
Upper: 65.85999999999999
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 5, 18, 21]
lower threshold: [13, 20]
....................................
upper threshold: [3, 6, 8, 9, 14, 16, 22]
upper:           [2, 11, 12, 15, 19]
====================================
cloned = 2
killed = 1
cloned = 11
killed = 4
cloned = 12
killed = 5
cloned = 15
killed = 18
cloned = 19
killed = 21
######################################
~~~ Scores: ~~~
[65.92,
 65.96,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96,
 65.92,
 65.96,
 65.96000000000001,
 65.41999999999999,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.92,
 65.96,
 65.96000000000001,
 65.41999999999999,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.94
Upper: 65.96000000000001
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 10, 13, 17, 20]
lower threshold: []
....................................
upper threshold: [2, 4, 6, 16, 22]
upper:           [21, 19, 12, 14, 8, 3]
====================================
cloned = 21
killed = 0
cloned = 19
killed = 7
cloned = 12
killed = 10
cloned = 14
killed = 13
cloned = 8
killed = 17
cloned = 3
killed = 20
Trial run 7/seed 312:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 7,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 12,
          'Tit For Tat': 7,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 12,
          'Second by RichardHufford': 7,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 17,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.415,
  56.06,
  59.265,
  54.955,
  52.025,
  53.690000000000005,
  54.87999999999998,
  36.9,
  44.715,
  29.865000000000006,
  47.95,
  50.85499999999999,
  45.66,
  52.35,
  56.13999999999999,
  37.16,
  51.7,
  49.22,
  46.515,
  44.190000000000005,
  34.720000000000006,
  55.504999999999995,
  53.485],
 [65.60000000000001,
  63.2,
  65.215,
  61.83,
  57.49,
  57.34,
  57.34999999999998,
  65.6,
  63.10000000000001,
  65.215,
  54.9,
  54.78999999999999,
  51.22,
  59.485,
  57.87,
  61.83,
  56.56999999999999,
  52.195,
  50.71500000000001,
  57.86,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.69,
  65.69500000000001,
  58.714999999999996,
  61.605000000000004,
  61.545,
  61.299999999999976,
  65.605,
  64.905,
  65.695,
  65.605,
  66.75999999999999,
  65.69500000000001,
  62.595,
  58.839999999999996,
  58.715,
  61.635000000000005,
  65.605,
  65.56,
  58.845000000000006,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.76,
  66.29,
  65.88,
  66.1,
  64.315,
  64.20000000000002,
  65.88,
  65.76,
  66.13,
  65.88,
  65.76,
  66.28,
  65.88,
  63.209999999999994,
  65.88,
  66.005,
  63.209999999999994,
  65.76,
  66.25,
  65.88,
  63.20999999999998,
  63.209999999999994,
  65.88],
 [65.52000000000001,
  64.82000000000001,
  65.75999999999999,
  64.82,
  64.82000000000001,
  64.82000000000001,
  65.75999999999999,
  65.52000000000001,
  64.82,
  65.75999999999998,
  65.52000000000001,
  64.82,
  65.75999999999999,
  64.82000000000001,
  65.75999999999998,
  64.82,
  64.82,
  65.52000000000001,
  64.82000000000001,
  65.75999999999999,
  64.82000000000001,
  64.82,
  65.75999999999999],
 [65.72,
  65.11999999999999,
  65.86,
  65.85999999999999,
  65.11999999999999,
  65.11999999999999,
  65.85999999999999,
  65.72,
  65.85999999999999,
  65.85999999999999,
  65.72,
  65.86,
  65.86,
  65.12,
  65.85999999999999,
  65.86,
  65.85999999999999,
  65.72,
  65.11999999999999,
  65.86,
  65.12,
  65.11999999999999,
  65.85999999999999],
 [65.92,
  65.96,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96,
  65.92,
  65.96,
  65.96000000000001,
  65.41999999999999,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.92,
  65.96,
  65.96000000000001,
  65.41999999999999,
  65.96000000000001,
  65.96000000000001]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.4,
 55.845,
 59.315,
 54.78,
 52.145,
 54.49,
 54.74499999999999,
 36.879999999999995,
 44.715,
 30.854999999999997,
 47.905,
 50.66499999999999,
 48.269999999999996,
 52.464999999999996,
 56.199999999999996,
 37.074999999999996,
 50.254999999999995,
 49.01,
 46.394999999999996,
 42.165,
 34.68000000000001,
 55.66,
 53.28]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.555
Upper: 54.762499999999996
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.325,
 65.215,
 61.83,
 57.519999999999996,
 57.34,
 59.62999999999998,
 65.6,
 63.42500000000001,
 65.215,
 54.9,
 54.78999999999999,
 53.24999999999999,
 59.485,
 57.97,
 61.83,
 56.56999999999999,
 52.265,
 50.56000000000001,
 57.8,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.5775
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.82000000000001,
 65.69500000000001,
 58.714999999999996,
 61.684999999999995,
 61.545,
 59.52999999999998,
 65.605,
 65.155,
 65.695,
 65.605,
 65.57499999999999,
 65.69500000000001,
 62.595,
 58.599999999999994,
 58.715,
 61.635000000000005,
 65.605,
 65.105,
 58.78,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [10, 17]
upper:           [2, 9, 12, 22, 0, 7]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 66.27,
 65.92,
 65.91999999999999,
 64.715,
 64.80000000000001,
 65.91999999999999,
 65.84,
 66.36,
 65.91999999999999,
 65.84,
 66.13,
 65.92,
 64.13999999999999,
 65.91999999999999,
 65.91999999999999,
 64.13999999999999,
 65.84,
 66.315,
 65.84,
 64.13999999999999,
 64.14,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.32000000000001
Upper: 65.92
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [22]
upper:           [1, 8, 11, 18, 2, 12]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 2
killed = 20
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.03999999999999,
 65.83999999999999,
 65.83999999999997,
 65.03999999999999,
 65.03999999999999,
 65.84,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.04,
 65.83999999999997,
 65.83999999999999,
 65.03999999999999,
 65.68,
 65.03999999999999,
 65.68,
 65.83999999999997,
 65.83999999999999,
 65.83999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.03999999999999
Upper: 65.83999999999999
====================================
lower list size: 0
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 8, 16, 1]
lower threshold: [5, 18]
....................................
upper threshold: [12, 22]
upper:           [6, 2, 9, 15, 21]
====================================
cloned = 6
killed = 4
cloned = 2
killed = 11
cloned = 9
killed = 8
cloned = 15
killed = 16
cloned = 21
killed = 1
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.94,
 65.33999999999997,
 65.94,
 65.88,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.94,
 65.88,
 65.33999999999997,
 65.88,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 13, 18, 10, 0]
lower threshold: [7, 17, 19]
....................................
upper threshold: [2, 8, 9, 11, 12, 14, 15, 20, 22]
upper:           [16, 3, 21, 1, 6, 4]
====================================
cloned = 16
killed = 5
cloned = 3
killed = 13
cloned = 21
killed = 18
cloned = 1
killed = 10
cloned = 6
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 6, 10, 12]
lower threshold: [0, 1, 2, 3, 4, 9, 14, 15, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 20, 18, 11, 19]
====================================
cloned = 5
killed = 8
cloned = 13
killed = 7
cloned = 20
killed = 6
cloned = 18
killed = 10
cloned = 11
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 18, 0, 14, 17]
lower threshold: [1, 2, 4, 6, 7, 9, 11, 13, 15, 16, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 3, 8, 21, 12, 10]
====================================
cloned = 20
killed = 5
cloned = 3
killed = 18
cloned = 8
killed = 0
cloned = 21
killed = 14
cloned = 12
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 19, 5, 4, 16]
lower threshold: [1, 3, 6, 10, 12, 13, 14, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 11, 20, 7, 9, 2]
====================================
cloned = 8
killed = 0
cloned = 11
killed = 19
cloned = 20
killed = 5
cloned = 7
killed = 4
cloned = 9
killed = 16
Trial run 8/seed 313:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.4,
  55.845,
  59.315,
  54.78,
  52.145,
  54.49,
  54.74499999999999,
  36.879999999999995,
  44.715,
  30.854999999999997,
  47.905,
  50.66499999999999,
  48.269999999999996,
  52.464999999999996,
  56.199999999999996,
  37.074999999999996,
  50.254999999999995,
  49.01,
  46.394999999999996,
  42.165,
  34.68000000000001,
  55.66,
  53.28],
 [65.60000000000001,
  63.325,
  65.215,
  61.83,
  57.519999999999996,
  57.34,
  59.62999999999998,
  65.6,
  63.42500000000001,
  65.215,
  54.9,
  54.78999999999999,
  53.24999999999999,
  59.485,
  57.97,
  61.83,
  56.56999999999999,
  52.265,
  50.56000000000001,
  57.8,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.82000000000001,
  65.69500000000001,
  58.714999999999996,
  61.684999999999995,
  61.545,
  59.52999999999998,
  65.605,
  65.155,
  65.695,
  65.605,
  65.57499999999999,
  65.69500000000001,
  62.595,
  58.599999999999994,
  58.715,
  61.635000000000005,
  65.605,
  65.105,
  58.78,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.84,
  66.27,
  65.92,
  65.91999999999999,
  64.715,
  64.80000000000001,
  65.91999999999999,
  65.84,
  66.36,
  65.91999999999999,
  65.84,
  66.13,
  65.92,
  64.13999999999999,
  65.91999999999999,
  65.91999999999999,
  64.13999999999999,
  65.84,
  66.315,
  65.84,
  64.13999999999999,
  64.14,
  65.92],
 [65.68,
  65.03999999999999,
  65.83999999999999,
  65.83999999999997,
  65.03999999999999,
  65.03999999999999,
  65.84,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.04,
  65.83999999999997,
  65.83999999999999,
  65.03999999999999,
  65.68,
  65.03999999999999,
  65.68,
  65.83999999999997,
  65.83999999999999,
  65.83999999999999],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.94,
  65.33999999999997,
  65.94,
  65.88,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.94,
  65.88,
  65.33999999999997,
  65.88,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.38,
 56.48499999999999,
 59.355,
 54.755,
 52.02,
 54.660000000000004,
 53.25499999999999,
 37.0,
 44.775000000000006,
 30.429999999999996,
 47.84,
 50.71499999999999,
 45.72999999999999,
 52.41,
 56.209999999999994,
 36.86,
 51.575,
 47.255,
 46.489999999999995,
 43.77000000000001,
 34.830000000000005,
 55.629999999999995,
 52.709999999999994]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.2525
Upper: 54.7075
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.96000000000001,
 65.215,
 61.83,
 57.76500000000001,
 57.34,
 57.76999999999998,
 65.6,
 63.13000000000001,
 65.215,
 54.9,
 54.78999999999999,
 53.19,
 59.485,
 57.879999999999995,
 61.83,
 56.56999999999999,
 50.305,
 50.66000000000001,
 58.029999999999994,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.480000000000004
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.9,
 65.69500000000001,
 58.714999999999996,
 61.77499999999999,
 61.545,
 60.104999999999976,
 65.605,
 66.755,
 65.695,
 65.605,
 64.72999999999999,
 65.69500000000001,
 62.595,
 58.8,
 58.715,
 61.635000000000005,
 65.605,
 65.165,
 58.75,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [2, 8, 9, 12, 22]
====================================
cloned = 2
killed = 3
cloned = 8
killed = 6
cloned = 9
killed = 14
cloned = 12
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.045,
 65.9,
 65.89999999999999,
 64.39,
 64.5,
 66.26,
 65.8,
 66.11999999999999,
 65.89999999999999,
 65.80000000000001,
 66.14999999999999,
 65.89999999999999,
 63.675,
 65.89999999999999,
 65.89999999999999,
 63.67499999999998,
 65.80000000000001,
 66.14,
 65.89999999999999,
 63.675,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.15
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2]
upper:           [1, 6, 8, 11, 18]
====================================
cloned = 1
killed = 4
cloned = 6
killed = 5
cloned = 8
killed = 13
cloned = 11
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27000000000001,
 65.8,
 65.79999999999998,
 65.27,
 65.27,
 65.27000000000001,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.79999999999998,
 65.27,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.27000000000001,
 61.349999999999994,
 65.8]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 16, 5, 11, 8]
lower threshold: [4, 18]
....................................
upper threshold: [3, 9, 19]
upper:           [2, 12, 22, 15, 14]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 16
cloned = 22
killed = 5
cloned = 15
killed = 11
cloned = 14
killed = 8
######################################
~~~ Scores: ~~~
[65.76,
 65.17999999999999,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.17999999999998,
 65.76,
 65.88,
 65.88,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.88,
 65.76,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 6, 13, 18, 20]
lower threshold: []
....................................
upper threshold: [3, 5, 8, 9, 12, 15, 22]
upper:           [2, 16, 21, 11, 14, 19]
====================================
cloned = 2
killed = 1
cloned = 16
killed = 4
cloned = 21
killed = 6
cloned = 11
killed = 13
cloned = 14
killed = 18
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 20, 15, 2]
lower threshold: [0, 4, 5, 6, 9, 10, 12, 14, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 19, 18, 11, 3, 8]
====================================
cloned = 7
killed = 13
cloned = 19
killed = 1
cloned = 18
killed = 20
cloned = 11
killed = 15
cloned = 3
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 16, 21, 7]
lower threshold: [0, 1, 2, 4, 6, 12, 15, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 5, 9, 8, 14, 13]
====================================
cloned = 11
killed = 3
cloned = 5
killed = 10
cloned = 9
killed = 16
cloned = 8
killed = 21
cloned = 14
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 0, 11, 2]
lower threshold: [3, 5, 6, 8, 9, 12, 13, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 14, 16, 15, 19, 1]
====================================
cloned = 4
killed = 7
cloned = 14
killed = 10
cloned = 16
killed = 0
cloned = 15
killed = 11
cloned = 19
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 16, 6, 14, 10]
lower threshold: [0, 2, 3, 5, 9, 11, 12, 15, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 13, 21, 7, 1, 4]
====================================
cloned = 19
killed = 8
cloned = 13
killed = 16
cloned = 21
killed = 6
cloned = 7
killed = 14
cloned = 1
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 11, 19, 10]
lower threshold: [1, 2, 4, 5, 7, 12, 13, 14, 15, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 0, 9, 21, 16, 6]
====================================
cloned = 18
killed = 8
cloned = 0
killed = 3
cloned = 9
killed = 11
cloned = 21
killed = 19
cloned = 16
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 6, 8, 4]
lower threshold: [3, 5, 7, 10, 13, 14, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 18, 0, 9, 2, 21]
====================================
cloned = 11
killed = 1
cloned = 18
killed = 12
cloned = 0
killed = 6
cloned = 9
killed = 8
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 4, 18, 12, 2]
lower threshold: [0, 1, 3, 5, 7, 9, 10, 11, 13, 14, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 16, 15, 6, 20, 19]
====================================
cloned = 8
killed = 21
cloned = 16
killed = 4
cloned = 15
killed = 18
cloned = 6
killed = 12
cloned = 20
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 15, 6, 13, 9]
lower threshold: [0, 2, 3, 4, 5, 7, 8, 10, 11, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 19, 16, 17, 14, 12]
====================================
cloned = 18
killed = 1
cloned = 19
killed = 15
cloned = 16
killed = 6
cloned = 17
killed = 13
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 4, 8, 16]
lower threshold: [0, 1, 7, 10, 12, 13, 14, 15, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 17, 11, 20, 9, 6]
====================================
cloned = 3
killed = 5
cloned = 17
killed = 2
cloned = 11
killed = 4
cloned = 20
killed = 8
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 9, 16, 8]
lower threshold: [0, 1, 3, 6, 10, 11, 13, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 14, 21, 7, 5]
====================================
cloned = 12
killed = 4
cloned = 15
killed = 2
cloned = 14
killed = 9
cloned = 21
killed = 16
cloned = 7
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 19, 9, 6, 21]
lower threshold: [1, 2, 4, 5, 7, 10, 12, 13, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 15, 8, 3, 11, 0]
====================================
cloned = 14
killed = 17
cloned = 15
killed = 19
cloned = 8
killed = 9
cloned = 3
killed = 6
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 17, 13, 6]
lower threshold: [0, 2, 4, 5, 8, 14, 15, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 16, 3, 9, 12, 11]
====================================
cloned = 10
killed = 1
cloned = 16
killed = 7
cloned = 3
killed = 17
cloned = 9
killed = 13
cloned = 12
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 12, 14, 19, 10]
lower threshold: [0, 1, 2, 3, 5, 7, 11, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 9, 18, 13, 6]
====================================
cloned = 8
killed = 15
cloned = 4
killed = 12
cloned = 9
killed = 14
cloned = 18
killed = 19
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 15, 5, 19, 0]
lower threshold: [1, 4, 8, 9, 10, 11, 12, 13, 14, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 6, 18, 21, 16, 7]
====================================
cloned = 2
killed = 3
cloned = 6
killed = 15
cloned = 18
killed = 5
cloned = 21
killed = 19
cloned = 16
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 1, 2, 21, 13]
lower threshold: [3, 5, 7, 8, 10, 12, 14, 15, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 6, 16, 9, 4, 20]
====================================
cloned = 11
killed = 0
cloned = 6
killed = 1
cloned = 16
killed = 2
cloned = 9
killed = 21
cloned = 4
killed = 13
Trial run 9/seed 314:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.38,
  56.48499999999999,
  59.355,
  54.755,
  52.02,
  54.660000000000004,
  53.25499999999999,
  37.0,
  44.775000000000006,
  30.429999999999996,
  47.84,
  50.71499999999999,
  45.72999999999999,
  52.41,
  56.209999999999994,
  36.86,
  51.575,
  47.255,
  46.489999999999995,
  43.77000000000001,
  34.830000000000005,
  55.629999999999995,
  52.709999999999994],
 [65.60000000000001,
  63.96000000000001,
  65.215,
  61.83,
  57.76500000000001,
  57.34,
  57.76999999999998,
  65.6,
  63.13000000000001,
  65.215,
  54.9,
  54.78999999999999,
  53.19,
  59.485,
  57.879999999999995,
  61.83,
  56.56999999999999,
  50.305,
  50.66000000000001,
  58.029999999999994,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.9,
  65.69500000000001,
  58.714999999999996,
  61.77499999999999,
  61.545,
  60.104999999999976,
  65.605,
  66.755,
  65.695,
  65.605,
  64.72999999999999,
  65.69500000000001,
  62.595,
  58.8,
  58.715,
  61.635000000000005,
  65.605,
  65.165,
  58.75,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.045,
  65.9,
  65.89999999999999,
  64.39,
  64.5,
  66.26,
  65.8,
  66.11999999999999,
  65.89999999999999,
  65.80000000000001,
  66.14999999999999,
  65.89999999999999,
  63.675,
  65.89999999999999,
  65.89999999999999,
  63.67499999999998,
  65.80000000000001,
  66.14,
  65.89999999999999,
  63.675,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27000000000001,
  65.8,
  65.79999999999998,
  65.27,
  65.27,
  65.27000000000001,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.79999999999998,
  65.27,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.27000000000001,
  61.349999999999994,
  65.8],
 [65.76,
  65.17999999999999,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.17999999999998,
  65.76,
  65.88,
  65.88,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.88,
  65.76,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.88,
  65.88],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.395,
 55.965,
 59.214999999999996,
 54.765,
 51.95499999999999,
 54.00000000000001,
 53.07499999999998,
 36.92,
 44.790000000000006,
 30.990000000000002,
 47.775,
 50.684999999999995,
 45.724999999999994,
 52.425,
 56.31499999999999,
 36.660000000000004,
 51.64,
 49.01,
 45.66,
 42.275000000000006,
 34.67000000000001,
 55.519999999999996,
 53.504999999999995]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.225
Upper: 54.38250000000001
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 62.980000000000004,
 65.215,
 61.83,
 57.6,
 57.34,
 57.75999999999998,
 65.6,
 63.7,
 65.215,
 54.9,
 54.78999999999999,
 51.12,
 59.485,
 57.599999999999994,
 61.83,
 56.56999999999999,
 52.205,
 50.52000000000001,
 57.83,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.405
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.78,
 65.69500000000001,
 58.714999999999996,
 61.845,
 61.545,
 60.00999999999998,
 65.605,
 65.205,
 65.695,
 65.605,
 64.88999999999999,
 65.69500000000001,
 62.595,
 58.94,
 58.715,
 61.635000000000005,
 65.605,
 66.81500000000001,
 58.620000000000005,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [2, 9, 12, 18, 22]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 18
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.065,
 65.9,
 65.89999999999999,
 64.28999999999999,
 64.5,
 65.9,
 65.8,
 66.115,
 65.89999999999999,
 65.80000000000001,
 66.27999999999999,
 65.89999999999999,
 63.67499999999998,
 65.89999999999999,
 66.22,
 63.675,
 65.80000000000001,
 66.21000000000001,
 65.89999999999999,
 63.67499999999998,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.15
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 6]
upper:           [1, 8, 11, 15, 18]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 15
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27,
 65.8,
 65.79999999999998,
 65.27,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.27,
 65.27,
 65.60000000000001,
 65.27000000000001,
 65.8,
 65.27000000000001,
 61.349999999999994,
 65.79999999999998]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 5, 11, 8, 4]
lower threshold: [1, 15, 16]
....................................
upper threshold: [3, 6, 22]
upper:           [2, 12, 19, 14, 9]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 5
cloned = 19
killed = 11
cloned = 14
killed = 8
cloned = 9
killed = 4
######################################
~~~ Scores: ~~~
[65.76,
 65.17999999999999,
 65.88,
 65.88,
 65.88,
 65.88,
 65.88,
 65.76,
 65.88,
 65.87999999999998,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.17999999999998,
 65.76,
 65.17999999999999,
 65.88000000000001,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [1, 13, 15, 16, 18, 20]
lower threshold: []
....................................
upper threshold: [2, 3, 8, 11, 12, 14, 22]
upper:           [19, 6, 21, 5, 4]
====================================
cloned = 19
killed = 1
cloned = 6
killed = 13
cloned = 21
killed = 15
cloned = 5
killed = 16
cloned = 4
killed = 18
######################################
~~~ Scores: ~~~
[65.96000000000001,
 65.97999999999999,
 65.98,
 65.98,
 65.98,
 65.97999999999999,
 65.98,
 65.96000000000001,
 65.98,
 65.97999999999999,
 65.96000000000001,
 65.97999999999999,
 65.98,
 65.97999999999999,
 65.98,
 65.97999999999999,
 65.98,
 65.96000000000001,
 65.97999999999999,
 65.98,
 65.47999999999998,
 65.97999999999999,
 65.98]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.97999999999999
Upper: 65.98
====================================
lower list size: 5
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 10, 17, 20]
lower threshold: [1, 5, 9, 11, 13, 15, 18, 21]
....................................
upper threshold: [6, 14, 19, 22]
upper:           [12, 8, 16, 2, 4, 3]
====================================
cloned = 12
killed = 0
cloned = 8
killed = 7
cloned = 16
killed = 10
cloned = 2
killed = 17
cloned = 4
killed = 20
Trial run 10/seed 315:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.395,
  55.965,
  59.214999999999996,
  54.765,
  51.95499999999999,
  54.00000000000001,
  53.07499999999998,
  36.92,
  44.790000000000006,
  30.990000000000002,
  47.775,
  50.684999999999995,
  45.724999999999994,
  52.425,
  56.31499999999999,
  36.660000000000004,
  51.64,
  49.01,
  45.66,
  42.275000000000006,
  34.67000000000001,
  55.519999999999996,
  53.504999999999995],
 [65.60000000000001,
  62.980000000000004,
  65.215,
  61.83,
  57.6,
  57.34,
  57.75999999999998,
  65.6,
  63.7,
  65.215,
  54.9,
  54.78999999999999,
  51.12,
  59.485,
  57.599999999999994,
  61.83,
  56.56999999999999,
  52.205,
  50.52000000000001,
  57.83,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.78,
  65.69500000000001,
  58.714999999999996,
  61.845,
  61.545,
  60.00999999999998,
  65.605,
  65.205,
  65.695,
  65.605,
  64.88999999999999,
  65.69500000000001,
  62.595,
  58.94,
  58.715,
  61.635000000000005,
  65.605,
  66.81500000000001,
  58.620000000000005,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.065,
  65.9,
  65.89999999999999,
  64.28999999999999,
  64.5,
  65.9,
  65.8,
  66.115,
  65.89999999999999,
  65.80000000000001,
  66.27999999999999,
  65.89999999999999,
  63.67499999999998,
  65.89999999999999,
  66.22,
  63.675,
  65.80000000000001,
  66.21000000000001,
  65.89999999999999,
  63.67499999999998,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27,
  65.8,
  65.79999999999998,
  65.27,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.27,
  65.27,
  65.60000000000001,
  65.27000000000001,
  65.8,
  65.27000000000001,
  61.349999999999994,
  65.79999999999998],
 [65.76,
  65.17999999999999,
  65.88,
  65.88,
  65.88,
  65.88,
  65.88,
  65.76,
  65.88,
  65.87999999999998,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.17999999999998,
  65.76,
  65.17999999999999,
  65.88000000000001,
  65.17999999999999,
  65.88,
  65.88],
 [65.96000000000001,
  65.97999999999999,
  65.98,
  65.98,
  65.98,
  65.97999999999999,
  65.98,
  65.96000000000001,
  65.98,
  65.97999999999999,
  65.96000000000001,
  65.97999999999999,
  65.98,
  65.97999999999999,
  65.98,
  65.97999999999999,
  65.98,
  65.96000000000001,
  65.97999999999999,
  65.98,
  65.47999999999998,
  65.97999999999999,
  65.98]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.220000000000006,
 56.565000000000005,
 59.335,
 54.8,
 51.82,
 54.550000000000004,
 57.60499999999999,
 37.160000000000004,
 44.88,
 30.865,
 48.220000000000006,
 50.73499999999999,
 47.749999999999986,
 52.339999999999996,
 56.25,
 37.125,
 50.62,
 49.035,
 46.39,
 44.04500000000001,
 34.83500000000001,
 55.52499999999999,
 53.265]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.635000000000005
Upper: 55.162499999999994
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 61.239999999999995,
 65.2,
 61.815,
 57.614999999999995,
 57.325,
 57.539999999999985,
 65.585,
 61.11,
 65.2,
 54.885,
 54.77499999999999,
 51.565,
 59.47,
 57.14,
 57.64499999999998,
 56.55499999999999,
 50.644999999999996,
 49.06,
 57.169999999999995,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 61.175
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 3
killed = 17
cloned = 7
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.63,
 64.235,
 65.7,
 60.769999999999996,
 62.26,
 61.83,
 62.33499999999998,
 65.63,
 63.394999999999996,
 65.69999999999999,
 65.63,
 65.27999999999999,
 65.7,
 63.04499999999999,
 57.42,
 60.33499999999998,
 62.08500000000001,
 60.769999999999996,
 65.63,
 57.224999999999994,
 61.974999999999994,
 61.974999999999994,
 65.7]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.902499999999996
Upper: 65.63
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 14, 15, 17, 19]
lower threshold: []
....................................
upper threshold: [0, 18]
upper:           [2, 9, 12, 22, 10, 7]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 5
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 10
killed = 17
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[65.86500000000001,
 64.56,
 65.925,
 65.925,
 65.205,
 65.92499999999998,
 63.754999999999974,
 65.865,
 64.89999999999999,
 65.925,
 65.86500000000001,
 66.16499999999999,
 65.925,
 64.58999999999999,
 65.925,
 65.925,
 64.58999999999999,
 65.86500000000001,
 65.86500000000001,
 65.86500000000001,
 64.58999999999999,
 64.58999999999999,
 65.925]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 64.74499999999999
Upper: 65.925
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 3, 22]
upper:           [11, 15, 14, 9, 12]
====================================
cloned = 11
killed = 1
cloned = 15
killed = 6
cloned = 14
killed = 13
cloned = 9
killed = 16
cloned = 12
killed = 20
######################################
~~~ Scores: ~~~
[65.88,
 65.21999999999998,
 65.94,
 65.94,
 65.08000000000001,
 65.94,
 65.94,
 65.88,
 65.32999999999998,
 65.94,
 65.88,
 65.33999999999999,
 65.94,
 65.94,
 65.94,
 65.94,
 65.94,
 65.88,
 65.88,
 65.88,
 65.94,
 64.60499999999999,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 5
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 8, 11, 21]
lower threshold: [0, 7, 10, 17, 18, 19]
....................................
upper threshold: [2, 6, 9, 13, 16, 22]
upper:           [14, 20, 12, 15, 3, 5]
====================================
cloned = 14
killed = 1
cloned = 20
killed = 4
cloned = 12
killed = 8
cloned = 15
killed = 11
cloned = 3
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 6, 18, 13]
lower threshold: [0, 2, 3, 4, 5, 9, 12, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 21, 14, 1, 10, 8]
====================================
cloned = 7
killed = 15
cloned = 21
killed = 11
cloned = 14
killed = 6
cloned = 1
killed = 18
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 13, 12, 6]
lower threshold: [1, 4, 5, 7, 9, 11, 15, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 2, 16, 0, 8, 10]
====================================
cloned = 21
killed = 3
cloned = 2
killed = 14
cloned = 16
killed = 13
cloned = 0
killed = 12
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 5, 16, 10]
lower threshold: [0, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 14, 2, 7, 1, 20]
====================================
cloned = 18
killed = 3
cloned = 14
killed = 12
cloned = 2
killed = 5
cloned = 7
killed = 16
cloned = 1
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 13, 16, 8, 10]
lower threshold: [1, 2, 3, 4, 5, 7, 9, 11, 12, 15, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 19, 20, 0, 14]
====================================
cloned = 6
killed = 17
cloned = 18
killed = 13
cloned = 19
killed = 16
cloned = 20
killed = 8
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 9, 8, 1]
lower threshold: [0, 4, 5, 6, 10, 11, 13, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 2, 19, 14, 3, 15]
====================================
cloned = 12
killed = 17
cloned = 2
killed = 7
cloned = 19
killed = 9
cloned = 14
killed = 8
cloned = 3
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 13, 12, 21]
lower threshold: [0, 1, 5, 7, 8, 10, 11, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 17, 4, 2, 14, 3]
====================================
cloned = 18
killed = 6
cloned = 17
killed = 9
cloned = 4
killed = 13
cloned = 2
killed = 12
cloned = 14
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 11, 7, 2]
lower threshold: [0, 3, 8, 10, 14, 15, 16, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 20, 1, 12, 9]
====================================
cloned = 5
killed = 13
cloned = 4
killed = 6
cloned = 20
killed = 11
cloned = 1
killed = 7
cloned = 12
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 19, 15, 14]
lower threshold: [2, 3, 5, 6, 7, 9, 10, 16, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 8, 12, 20, 13, 1]
====================================
cloned = 11
killed = 0
cloned = 8
killed = 4
cloned = 12
killed = 19
cloned = 20
killed = 15
cloned = 13
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 14, 18, 20]
lower threshold: [0, 1, 4, 6, 8, 10, 11, 13, 15, 16, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 17, 12, 21, 9, 3]
====================================
cloned = 5
killed = 2
cloned = 17
killed = 7
cloned = 12
killed = 14
cloned = 21
killed = 18
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 7, 8, 0, 17]
lower threshold: [4, 5, 6, 9, 10, 12, 13, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 1, 2, 3, 18, 21]
====================================
cloned = 14
killed = 11
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 0
cloned = 18
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 17, 13, 19, 3]
lower threshold: [0, 1, 5, 6, 9, 10, 11, 12, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 4, 21, 14, 8, 16]
====================================
cloned = 7
killed = 2
cloned = 4
killed = 17
cloned = 21
killed = 13
cloned = 14
killed = 19
cloned = 8
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 17, 1, 9, 8]
lower threshold: [4, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 0, 11, 7, 21, 20]
====================================
cloned = 2
killed = 3
cloned = 0
killed = 17
cloned = 11
killed = 1
cloned = 7
killed = 9
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 5, 4, 20, 2]
lower threshold: [0, 1, 3, 6, 7, 9, 10, 11, 15, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 17, 16, 13, 12, 8]
====================================
cloned = 14
killed = 19
cloned = 17
killed = 5
cloned = 16
killed = 4
cloned = 13
killed = 20
cloned = 12
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 16, 18, 4]
lower threshold: [0, 3, 5, 9, 10, 12, 14, 15, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 1, 6, 8, 17, 2]
====================================
cloned = 13
killed = 7
cloned = 1
killed = 11
cloned = 6
killed = 16
cloned = 8
killed = 18
cloned = 17
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 13, 20, 7, 16]
lower threshold: [1, 3, 4, 5, 6, 8, 10, 12, 14, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 9, 18, 0, 17, 11]
====================================
cloned = 2
killed = 21
cloned = 9
killed = 13
cloned = 18
killed = 20
cloned = 0
killed = 7
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 1, 2, 15, 18]
lower threshold: [0, 3, 4, 5, 8, 9, 10, 11, 13, 14, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 7, 6, 19, 12, 21]
====================================
cloned = 16
killed = 20
cloned = 7
killed = 1
cloned = 6
killed = 2
cloned = 19
killed = 15
cloned = 12
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 16, 0, 18]
lower threshold: [1, 2, 3, 4, 9, 10, 11, 12, 14, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 7, 20, 15, 6, 5]
====================================
cloned = 17
killed = 8
cloned = 7
killed = 13
cloned = 20
killed = 16
cloned = 15
killed = 0
cloned = 6
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 1, 18, 0]
lower threshold: [2, 3, 7, 10, 11, 14, 15, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 5, 9, 12, 13]
====================================
cloned = 8
killed = 20
cloned = 4
killed = 6
cloned = 5
killed = 1
cloned = 9
killed = 18
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 5, 14, 4]
lower threshold: [3, 7, 8, 10, 11, 12, 16, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 9, 0, 15, 2, 19]
====================================
cloned = 1
killed = 6
cloned = 9
killed = 13
cloned = 0
killed = 5
cloned = 15
killed = 14
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 21, 6, 4, 13]
lower threshold: [1, 2, 3, 5, 8, 12, 15, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 11, 20, 7, 14]
====================================
cloned = 9
killed = 10
cloned = 0
killed = 21
cloned = 11
killed = 6
cloned = 20
killed = 4
cloned = 7
killed = 13
Trial run 11/seed 316:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 3,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 12,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 3,
          'Evolved HMM 5': 1,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.220000000000006,
  56.565000000000005,
  59.335,
  54.8,
  51.82,
  54.550000000000004,
  57.60499999999999,
  37.160000000000004,
  44.88,
  30.865,
  48.220000000000006,
  50.73499999999999,
  47.749999999999986,
  52.339999999999996,
  56.25,
  37.125,
  50.62,
  49.035,
  46.39,
  44.04500000000001,
  34.83500000000001,
  55.52499999999999,
  53.265],
 [65.58500000000001,
  61.239999999999995,
  65.2,
  61.815,
  57.614999999999995,
  57.325,
  57.539999999999985,
  65.585,
  61.11,
  65.2,
  54.885,
  54.77499999999999,
  51.565,
  59.47,
  57.14,
  57.64499999999998,
  56.55499999999999,
  50.644999999999996,
  49.06,
  57.169999999999995,
  60.425,
  60.425,
  56.55],
 [65.63,
  64.235,
  65.7,
  60.769999999999996,
  62.26,
  61.83,
  62.33499999999998,
  65.63,
  63.394999999999996,
  65.69999999999999,
  65.63,
  65.27999999999999,
  65.7,
  63.04499999999999,
  57.42,
  60.33499999999998,
  62.08500000000001,
  60.769999999999996,
  65.63,
  57.224999999999994,
  61.974999999999994,
  61.974999999999994,
  65.7],
 [65.86500000000001,
  64.56,
  65.925,
  65.925,
  65.205,
  65.92499999999998,
  63.754999999999974,
  65.865,
  64.89999999999999,
  65.925,
  65.86500000000001,
  66.16499999999999,
  65.925,
  64.58999999999999,
  65.925,
  65.925,
  64.58999999999999,
  65.86500000000001,
  65.86500000000001,
  65.86500000000001,
  64.58999999999999,
  64.58999999999999,
  65.925],
 [65.88,
  65.21999999999998,
  65.94,
  65.94,
  65.08000000000001,
  65.94,
  65.94,
  65.88,
  65.32999999999998,
  65.94,
  65.88,
  65.33999999999999,
  65.94,
  65.94,
  65.94,
  65.94,
  65.94,
  65.88,
  65.88,
  65.88,
  65.94,
  64.60499999999999,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.48500000000001,
 55.97,
 59.265,
 54.835,
 52.4,
 54.005,
 54.964999999999996,
 37.04,
 44.82,
 28.485000000000003,
 47.74,
 50.724999999999994,
 47.61999999999999,
 52.305,
 56.445,
 37.059999999999995,
 51.56,
 49.105,
 46.33,
 42.1,
 35.31000000000001,
 55.434999999999995,
 53.41]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.575
Upper: 54.9
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 61.195,
 65.2,
 61.815,
 57.559999999999995,
 57.325,
 59.219999999999985,
 65.585,
 61.00500000000001,
 65.2,
 54.885,
 54.77499999999999,
 51.645,
 59.47,
 56.815,
 57.23499999999998,
 56.55499999999999,
 52.51499999999999,
 49.01500000000001,
 56.955,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 61.10000000000001
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 7, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 3
killed = 17
cloned = 7
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.63,
 63.91,
 65.7,
 60.769999999999996,
 62.03500000000001,
 61.83,
 60.244999999999976,
 65.63,
 63.035,
 65.69999999999999,
 65.63,
 63.07,
 65.7,
 63.04499999999999,
 57.05499999999999,
 60.08499999999998,
 62.08500000000001,
 60.769999999999996,
 65.63,
 57.46999999999999,
 61.974999999999994,
 61.974999999999994,
 65.7]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.3
Upper: 65.63
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 17, 19]
lower threshold: []
....................................
upper threshold: [0, 18]
upper:           [2, 9, 12, 22, 7, 10]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 7
killed = 17
cloned = 10
killed = 19
######################################
~~~ Scores: ~~~
[65.88,
 66.41,
 65.94,
 65.94,
 65.08,
 65.10000000000001,
 65.94,
 65.88,
 66.42,
 65.94,
 65.88,
 66.26499999999999,
 65.94,
 64.60499999999999,
 65.94,
 65.94,
 64.60499999999999,
 65.88,
 65.88,
 65.88,
 64.60499999999999,
 64.60499999999999,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.49000000000001
Upper: 65.94
====================================
lower list size: 6
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 3, 6, 9, 14, 22]
upper:           [1, 8, 11, 15, 12]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 15
killed = 16
cloned = 12
killed = 20
######################################
~~~ Scores: ~~~
[65.76,
 65.46999999999998,
 65.88,
 65.88,
 65.47,
 65.46999999999998,
 65.88,
 65.76,
 65.47,
 65.88,
 65.76,
 65.46999999999998,
 65.88,
 65.47,
 65.88,
 65.88,
 65.88,
 65.76,
 65.76,
 65.76,
 65.88,
 63.209999999999994,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 4
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 11, 21, 4]
lower threshold: [8, 13]
....................................
upper threshold: [14, 15, 16, 22]
upper:           [6, 20, 3, 2, 12, 9]
====================================
cloned = 6
killed = 1
cloned = 20
killed = 5
cloned = 3
killed = 11
cloned = 2
killed = 21
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001,
 65.96,
 65.96000000000001,
 65.92,
 65.37999999999998,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.37999999999998,
 65.96000000000001,
 65.96,
 65.96,
 65.92,
 65.92,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.92
Upper: 65.96000000000001
====================================
lower list size: 2
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 17, 10, 0]
lower threshold: [7, 18, 19]
....................................
upper threshold: [2, 4, 6, 9, 11, 22]
upper:           [21, 20, 14, 3, 12, 1]
====================================
cloned = 21
killed = 8
cloned = 20
killed = 13
cloned = 14
killed = 17
cloned = 3
killed = 10
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 12, 11, 16]
lower threshold: [1, 2, 4, 5, 7, 9, 10, 15, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 8, 20, 0, 21]
====================================
cloned = 6
killed = 3
cloned = 14
killed = 13
cloned = 8
killed = 12
cloned = 20
killed = 11
cloned = 0
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 4, 3, 21, 2]
lower threshold: [0, 1, 6, 7, 8, 10, 11, 15, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 19, 17, 12, 9, 14]
====================================
cloned = 5
killed = 13
cloned = 19
killed = 4
cloned = 17
killed = 3
cloned = 12
killed = 21
cloned = 9
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 16, 3, 9, 12]
lower threshold: [2, 4, 5, 6, 7, 10, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 11, 1, 18, 20, 13]
====================================
cloned = 0
killed = 8
cloned = 11
killed = 16
cloned = 1
killed = 3
cloned = 18
killed = 9
cloned = 20
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 6, 13, 3]
lower threshold: [0, 1, 2, 4, 5, 9, 11, 14, 15, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 20, 12, 19, 10, 8]
====================================
cloned = 7
killed = 21
cloned = 20
killed = 17
cloned = 12
killed = 6
cloned = 19
killed = 13
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 8, 1, 13, 3]
lower threshold: [4, 5, 7, 10, 12, 14, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 20, 0, 6, 11, 17]
====================================
cloned = 2
killed = 9
cloned = 20
killed = 8
cloned = 0
killed = 1
cloned = 6
killed = 13
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 10, 3, 0, 20]
lower threshold: [5, 6, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 1, 4, 7, 16, 13]
====================================
cloned = 2
killed = 18
cloned = 1
killed = 10
cloned = 4
killed = 3
cloned = 7
killed = 0
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 5, 8, 19, 3]
lower threshold: [1, 2, 4, 7, 9, 15, 16, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 10, 14, 11, 12, 6]
====================================
cloned = 0
killed = 13
cloned = 10
killed = 5
cloned = 14
killed = 8
cloned = 11
killed = 19
cloned = 12
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 14, 3, 19, 8]
lower threshold: [1, 5, 6, 7, 11, 12, 13, 15, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 2, 0, 16, 21, 10]
====================================
cloned = 9
killed = 4
cloned = 2
killed = 14
cloned = 0
killed = 3
cloned = 16
killed = 19
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 0, 1, 9, 6]
lower threshold: [5, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 17, 3, 2, 21, 4]
====================================
cloned = 20
killed = 16
cloned = 17
killed = 0
cloned = 3
killed = 1
cloned = 2
killed = 9
cloned = 21
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 2, 20, 13, 15]
lower threshold: [0, 3, 4, 6, 8, 10, 11, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 14, 5, 12, 1, 9]
====================================
cloned = 7
killed = 17
cloned = 14
killed = 2
cloned = 5
killed = 20
cloned = 12
killed = 13
cloned = 1
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 19, 3, 5, 12]
lower threshold: [0, 7, 8, 11, 13, 14, 15, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 4, 1, 9, 10, 6]
====================================
cloned = 16
killed = 2
cloned = 4
killed = 19
cloned = 1
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 18, 19, 16, 3]
lower threshold: [0, 2, 5, 7, 8, 10, 12, 14, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 6, 9, 4, 1, 11]
====================================
cloned = 13
killed = 17
cloned = 6
killed = 18
cloned = 9
killed = 19
cloned = 4
killed = 16
cloned = 1
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 10, 18, 7, 13]
lower threshold: [0, 2, 5, 9, 11, 12, 14, 15, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 19, 8, 6, 3]
====================================
cloned = 1
killed = 21
cloned = 4
killed = 10
cloned = 19
killed = 18
cloned = 8
killed = 7
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 20, 6, 18]
lower threshold: [0, 1, 2, 3, 4, 5, 8, 9, 13, 15, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 10, 12, 11, 14, 7]
====================================
cloned = 19
killed = 21
cloned = 10
killed = 17
cloned = 12
killed = 20
cloned = 11
killed = 6
cloned = 14
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 3, 14, 16]
lower threshold: [0, 2, 5, 9, 10, 11, 15, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 1, 7, 20, 12, 8]
====================================
cloned = 6
killed = 4
cloned = 1
killed = 13
cloned = 7
killed = 3
cloned = 20
killed = 14
cloned = 12
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 1, 6, 0, 18]
lower threshold: [2, 3, 5, 7, 8, 11, 13, 14, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 4, 15, 12, 10, 16]
====================================
cloned = 9
killed = 20
cloned = 4
killed = 1
cloned = 15
killed = 6
cloned = 12
killed = 0
cloned = 10
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 11, 16, 2, 12]
lower threshold: [3, 5, 6, 7, 8, 9, 13, 14, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 21, 4, 10, 15, 1]
====================================
cloned = 0
killed = 17
cloned = 21
killed = 11
cloned = 4
killed = 16
cloned = 10
killed = 2
cloned = 15
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 16, 7, 10, 19]
lower threshold: [0, 1, 4, 6, 8, 11, 12, 13, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 3, 2, 5, 15, 9]
====================================
cloned = 14
killed = 17
cloned = 3
killed = 16
cloned = 2
killed = 7
cloned = 5
killed = 10
cloned = 15
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 17, 15, 18, 9]
lower threshold: [0, 1, 2, 3, 4, 6, 7, 8, 11, 16, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 10, 12, 20, 5, 13]
====================================
cloned = 21
killed = 14
cloned = 10
killed = 17
cloned = 12
killed = 15
cloned = 20
killed = 18
cloned = 5
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 6, 14, 18, 9]
lower threshold: [0, 2, 3, 5, 7, 10, 11, 12, 15, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 4, 8, 1, 13, 19]
====================================
cloned = 21
killed = 16
cloned = 4
killed = 6
cloned = 8
killed = 14
cloned = 1
killed = 18
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 11, 4, 21, 13]
lower threshold: [1, 2, 7, 8, 9, 10, 12, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 3, 5, 0, 16, 18]
====================================
cloned = 6
killed = 14
cloned = 3
killed = 11
cloned = 5
killed = 4
cloned = 0
killed = 21
cloned = 16
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 8, 5, 4, 11]
lower threshold: [0, 2, 6, 7, 9, 10, 13, 14, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 20, 15, 1, 19, 3]
====================================
cloned = 12
killed = 21
cloned = 20
killed = 8
cloned = 15
killed = 5
cloned = 1
killed = 4
cloned = 19
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 18, 6, 14, 2]
lower threshold: [1, 3, 5, 8, 9, 10, 12, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 15, 11, 16, 0, 13]
====================================
cloned = 4
killed = 7
cloned = 15
killed = 18
cloned = 11
killed = 6
cloned = 16
killed = 14
cloned = 0
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 9, 1, 8]
lower threshold: [0, 2, 3, 6, 7, 15, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 14, 11, 12, 13, 4]
====================================
cloned = 5
killed = 17
cloned = 14
killed = 10
cloned = 11
killed = 9
cloned = 12
killed = 1
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 12, 10, 7, 0]
lower threshold: [1, 2, 3, 5, 8, 9, 11, 13, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 21, 18, 14, 6, 4]
====================================
cloned = 16
killed = 15
cloned = 21
killed = 12
cloned = 18
killed = 10
cloned = 14
killed = 7
cloned = 6
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 17, 18, 9, 20]
lower threshold: [2, 3, 6, 7, 8, 10, 11, 12, 13, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 14, 4, 21, 0, 1]
====================================
cloned = 16
killed = 5
cloned = 14
killed = 17
cloned = 4
killed = 18
cloned = 21
killed = 9
cloned = 0
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 5, 4, 11]
lower threshold: [3, 6, 7, 8, 10, 12, 14, 15, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 0, 2, 19, 16, 21]
====================================
cloned = 13
killed = 1
cloned = 0
killed = 9
cloned = 2
killed = 5
cloned = 19
killed = 4
cloned = 16
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 16, 15, 11, 5]
lower threshold: [2, 4, 7, 8, 10, 12, 13, 14, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 0, 9, 1, 3, 19]
====================================
cloned = 6
killed = 21
cloned = 0
killed = 16
cloned = 9
killed = 15
cloned = 1
killed = 11
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 4, 8, 14]
lower threshold: [1, 2, 3, 6, 7, 10, 12, 13, 15, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 16, 5, 0, 11, 21]
====================================
cloned = 18
killed = 9
cloned = 16
killed = 19
cloned = 5
killed = 4
cloned = 0
killed = 8
cloned = 11
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 4, 10, 9, 14]
lower threshold: [2, 6, 7, 11, 12, 13, 15, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 8, 1, 0, 3, 5]
====================================
cloned = 17
killed = 20
cloned = 8
killed = 4
cloned = 1
killed = 10
cloned = 0
killed = 9
cloned = 3
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 20, 15, 6]
lower threshold: [0, 1, 5, 7, 8, 11, 13, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 3, 18, 10, 2, 14]
====================================
cloned = 12
killed = 9
cloned = 3
killed = 4
cloned = 18
killed = 20
cloned = 10
killed = 15
cloned = 2
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 18, 8, 15]
lower threshold: [0, 2, 3, 4, 5, 10, 11, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 12, 1, 13, 7, 14]
====================================
cloned = 6
killed = 17
cloned = 12
killed = 9
cloned = 1
killed = 18
cloned = 13
killed = 8
cloned = 7
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 0, 3, 17]
lower threshold: [4, 9, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 14, 8, 6, 10, 2]
====================================
cloned = 5
killed = 7
cloned = 14
killed = 1
cloned = 8
killed = 0
cloned = 6
killed = 3
cloned = 10
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 7, 20, 11, 14]
lower threshold: [2, 3, 5, 6, 8, 10, 13, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 12, 1, 17, 9, 0]
====================================
cloned = 4
killed = 15
cloned = 12
killed = 7
cloned = 1
killed = 20
cloned = 17
killed = 11
cloned = 9
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 13, 4, 9, 11]
lower threshold: [0, 1, 2, 3, 6, 7, 10, 12, 14, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 19, 5, 20, 8, 17]
====================================
cloned = 21
killed = 15
cloned = 19
killed = 13
cloned = 5
killed = 4
cloned = 20
killed = 9
cloned = 8
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 21, 4, 0]
lower threshold: [1, 3, 6, 7, 8, 10, 11, 12, 13, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 17, 19, 14, 2, 15]
====================================
cloned = 5
killed = 18
cloned = 17
killed = 9
cloned = 19
killed = 21
cloned = 14
killed = 4
cloned = 2
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 20, 1, 13]
lower threshold: [2, 4, 7, 8, 9, 10, 14, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 0, 5, 19, 17, 12]
====================================
cloned = 11
killed = 3
cloned = 0
killed = 6
cloned = 5
killed = 20
cloned = 19
killed = 1
cloned = 17
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 18, 13, 3]
lower threshold: [0, 6, 7, 8, 10, 11, 14, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 15, 4, 9, 5, 2]
====================================
cloned = 21
killed = 12
cloned = 15
killed = 1
cloned = 4
killed = 18
cloned = 9
killed = 13
cloned = 5
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 8, 16, 21]
lower threshold: [0, 2, 3, 4, 5, 6, 11, 12, 13, 14, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 1, 19, 15, 10, 20]
====================================
cloned = 7
killed = 17
cloned = 1
killed = 9
cloned = 19
killed = 8
cloned = 15
killed = 16
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 5, 14, 7]
lower threshold: [3, 4, 6, 8, 12, 16, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 13, 11, 15, 10, 0]
====================================
cloned = 2
killed = 9
cloned = 13
killed = 1
cloned = 11
killed = 5
cloned = 15
killed = 14
cloned = 10
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 21, 14, 20, 0]
lower threshold: [1, 5, 7, 8, 10, 12, 13, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 6, 11, 17, 4, 3]
====================================
cloned = 2
killed = 9
cloned = 6
killed = 21
cloned = 11
killed = 14
cloned = 17
killed = 20
cloned = 4
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 13, 14, 8, 11]
lower threshold: [0, 2, 4, 6, 7, 10, 15, 16, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 3, 9, 5, 12, 1]
====================================
cloned = 19
killed = 20
cloned = 3
killed = 13
cloned = 9
killed = 14
cloned = 5
killed = 8
cloned = 12
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 17, 13, 5, 6]
lower threshold: [0, 1, 2, 3, 10, 11, 12, 14, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 19, 4, 7, 16, 21]
====================================
cloned = 9
killed = 8
cloned = 19
killed = 17
cloned = 4
killed = 13
cloned = 7
killed = 5
cloned = 16
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 13, 12, 16, 5]
lower threshold: [1, 2, 7, 10, 14, 15, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 8, 11, 6, 0, 3]
====================================
cloned = 4
killed = 9
cloned = 8
killed = 13
cloned = 11
killed = 12
cloned = 6
killed = 16
cloned = 0
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 15, 14, 20, 9]
lower threshold: [0, 1, 3, 5, 6, 8, 10, 13, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 4, 11, 7, 19, 2]
====================================
cloned = 17
killed = 12
cloned = 4
killed = 15
cloned = 11
killed = 14
cloned = 7
killed = 20
cloned = 19
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 6, 14, 21]
lower threshold: [0, 1, 2, 4, 9, 10, 15, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 17, 7, 3, 5, 8]
====================================
cloned = 12
killed = 11
cloned = 17
killed = 13
cloned = 7
killed = 6
cloned = 3
killed = 14
cloned = 5
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 2, 21, 8]
lower threshold: [0, 1, 3, 5, 6, 7, 10, 13, 14, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 4, 17, 20, 9, 11]
====================================
cloned = 18
killed = 16
cloned = 4
killed = 12
cloned = 17
killed = 2
cloned = 20
killed = 21
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 15, 14, 21, 13]
lower threshold: [1, 3, 5, 6, 8, 9, 10, 11, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 20, 7, 0, 12, 4]
====================================
cloned = 16
killed = 2
cloned = 20
killed = 15
cloned = 7
killed = 14
cloned = 0
killed = 21
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 16, 12, 13]
lower threshold: [0, 2, 6, 7, 8, 9, 10, 14, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 11, 3, 18, 5, 1]
====================================
cloned = 17
killed = 4
cloned = 11
killed = 15
cloned = 3
killed = 16
cloned = 18
killed = 12
cloned = 5
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 2, 9, 16]
lower threshold: [0, 3, 4, 8, 13, 14, 15, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 1, 12, 6, 10]
====================================
cloned = 7
killed = 11
cloned = 18
killed = 5
cloned = 1
killed = 2
cloned = 12
killed = 9
cloned = 6
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 13, 12, 0, 17]
lower threshold: [1, 2, 3, 5, 6, 7, 8, 9, 14, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 18, 4, 15, 11]
====================================
cloned = 10
killed = 16
cloned = 19
killed = 13
cloned = 18
killed = 12
cloned = 4
killed = 0
cloned = 15
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 4, 20, 17]
lower threshold: [1, 2, 3, 5, 6, 10, 13, 14, 15, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 8, 12, 0, 19, 16]
====================================
cloned = 11
killed = 7
cloned = 8
killed = 9
cloned = 12
killed = 4
cloned = 0
killed = 20
cloned = 19
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 0, 18, 4, 11]
lower threshold: [1, 2, 6, 8, 9, 10, 13, 14, 15, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 16, 3, 7, 5, 17]
====================================
cloned = 21
killed = 12
cloned = 16
killed = 0
cloned = 3
killed = 18
cloned = 7
killed = 4
cloned = 5
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 21, 18, 16]
lower threshold: [1, 2, 3, 4, 5, 7, 10, 13, 14, 15, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 8, 12, 0, 11, 17]
====================================
cloned = 6
killed = 9
cloned = 8
killed = 19
cloned = 12
killed = 21
cloned = 0
killed = 18
cloned = 11
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 19, 14, 18]
lower threshold: [0, 2, 7, 8, 10, 11, 12, 13, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 1, 4, 17, 6, 5]
====================================
cloned = 3
killed = 9
cloned = 1
killed = 15
cloned = 4
killed = 19
cloned = 17
killed = 14
cloned = 6
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 5, 6, 18]
lower threshold: [1, 2, 8, 9, 11, 12, 13, 14, 15, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 4, 0, 7, 3, 10]
====================================
cloned = 16
killed = 21
cloned = 4
killed = 17
cloned = 0
killed = 5
cloned = 7
killed = 6
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 0, 4, 18, 7]
lower threshold: [2, 5, 8, 9, 10, 11, 12, 13, 14, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 16, 21, 1, 15, 3]
====================================
cloned = 6
killed = 19
cloned = 16
killed = 0
cloned = 21
killed = 4
cloned = 1
killed = 18
cloned = 15
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 12, 2, 11]
lower threshold: [1, 3, 5, 7, 9, 10, 14, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 15, 13, 21, 16, 0]
====================================
cloned = 6
killed = 8
cloned = 15
killed = 4
cloned = 13
killed = 12
cloned = 21
killed = 2
cloned = 16
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 20, 21, 5, 2]
lower threshold: [0, 3, 4, 6, 9, 10, 11, 14, 15, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 19, 13, 8, 7, 12]
====================================
cloned = 1
killed = 17
cloned = 19
killed = 20
cloned = 13
killed = 21
cloned = 8
killed = 5
cloned = 7
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 6, 13, 16, 3]
lower threshold: [1, 4, 7, 9, 12, 14, 15, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 5, 10, 0, 11, 2]
====================================
cloned = 8
killed = 18
cloned = 5
killed = 6
cloned = 10
killed = 13
cloned = 0
killed = 16
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 5, 11, 21, 10]
lower threshold: [0, 1, 4, 6, 7, 12, 13, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 8, 3, 2, 20, 14]
====================================
cloned = 9
killed = 17
cloned = 8
killed = 5
cloned = 3
killed = 11
cloned = 2
killed = 21
cloned = 20
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 4, 0, 11, 12]
lower threshold: [5, 6, 9, 10, 13, 14, 15, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 3, 7, 17, 2, 1]
====================================
cloned = 8
killed = 18
cloned = 3
killed = 4
cloned = 7
killed = 0
cloned = 17
killed = 11
cloned = 2
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 5, 4, 1]
lower threshold: [0, 2, 6, 7, 11, 12, 14, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 21, 17, 8, 16, 9]
====================================
cloned = 10
killed = 3
cloned = 21
killed = 13
cloned = 17
killed = 5
cloned = 8
killed = 4
cloned = 16
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 3, 21, 15]
lower threshold: [1, 2, 4, 7, 8, 9, 10, 11, 12, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 19, 13, 17, 5]
====================================
cloned = 6
killed = 14
cloned = 18
killed = 0
cloned = 19
killed = 3
cloned = 13
killed = 21
cloned = 17
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 7, 1, 18]
lower threshold: [2, 5, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 21, 6, 16, 14, 4]
====================================
cloned = 3
killed = 20
cloned = 21
killed = 0
cloned = 6
killed = 7
cloned = 16
killed = 1
cloned = 14
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 20, 14, 2, 3]
lower threshold: [0, 5, 9, 10, 11, 12, 15, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 6, 4, 7, 18]
====================================
cloned = 8
killed = 13
cloned = 1
killed = 20
cloned = 6
killed = 14
cloned = 4
killed = 2
cloned = 7
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 17, 12, 8]
lower threshold: [1, 5, 6, 7, 9, 10, 13, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 3, 4, 11, 14, 2]
====================================
cloned = 15
killed = 20
cloned = 3
killed = 0
cloned = 4
killed = 17
cloned = 11
killed = 12
cloned = 14
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 20, 19, 11]
lower threshold: [2, 4, 5, 7, 9, 10, 12, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 1, 15, 6, 0, 8]
====================================
cloned = 17
killed = 3
cloned = 1
killed = 13
cloned = 15
killed = 20
cloned = 6
killed = 19
cloned = 0
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 13, 21, 8]
lower threshold: [2, 5, 7, 9, 10, 12, 14, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 1, 18, 6, 11, 0]
====================================
cloned = 3
killed = 4
cloned = 1
killed = 15
cloned = 18
killed = 13
cloned = 6
killed = 21
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 13, 4, 19]
lower threshold: [1, 3, 7, 9, 10, 11, 12, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 21, 2, 6, 0, 20]
====================================
cloned = 8
killed = 5
cloned = 21
killed = 14
cloned = 2
killed = 13
cloned = 6
killed = 4
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 8, 17, 18]
lower threshold: [0, 1, 3, 4, 6, 7, 11, 12, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 9, 15, 13, 21, 14]
====================================
cloned = 5
killed = 10
cloned = 9
killed = 2
cloned = 15
killed = 8
cloned = 13
killed = 17
cloned = 21
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 20, 19, 0, 8]
lower threshold: [1, 5, 6, 7, 9, 10, 11, 12, 14, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 3, 15, 4, 18, 13]
====================================
cloned = 16
killed = 2
cloned = 3
killed = 20
cloned = 15
killed = 19
cloned = 4
killed = 0
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 13, 0, 20, 9]
lower threshold: [1, 2, 3, 4, 6, 7, 8, 14, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 15, 5, 18, 16, 11]
====================================
cloned = 10
killed = 12
cloned = 15
killed = 13
cloned = 5
killed = 0
cloned = 18
killed = 20
cloned = 16
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 15, 0, 1, 18]
lower threshold: [3, 5, 7, 8, 9, 10, 11, 13, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 14, 2, 16, 21, 6]
====================================
cloned = 4
killed = 12
cloned = 14
killed = 15
cloned = 2
killed = 0
cloned = 16
killed = 1
cloned = 21
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 17, 20, 15, 13]
lower threshold: [1, 2, 3, 6, 7, 8, 10, 11, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 9, 12, 5, 14, 4]
====================================
cloned = 0
killed = 18
cloned = 9
killed = 17
cloned = 12
killed = 20
cloned = 5
killed = 15
cloned = 14
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 17, 5, 3, 0]
lower threshold: [1, 2, 4, 8, 10, 13, 14, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 7, 20, 9, 12, 15]
====================================
cloned = 6
killed = 11
cloned = 7
killed = 17
cloned = 20
killed = 5
cloned = 9
killed = 3
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 0, 15, 8, 16]
lower threshold: [1, 2, 3, 4, 5, 6, 9, 11, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 14, 19, 7, 12, 13]
====================================
cloned = 10
killed = 17
cloned = 14
killed = 0
cloned = 19
killed = 15
cloned = 7
killed = 8
cloned = 12
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 16, 13, 21]
lower threshold: [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 15, 14, 7, 19, 17]
====================================
cloned = 20
killed = 4
cloned = 15
killed = 10
cloned = 14
killed = 16
cloned = 7
killed = 13
cloned = 19
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 20, 16, 12, 4]
lower threshold: [0, 1, 3, 5, 6, 8, 9, 13, 14, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 15, 2, 11, 18]
====================================
cloned = 7
killed = 19
cloned = 10
killed = 20
cloned = 15
killed = 16
cloned = 2
killed = 12
cloned = 11
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 12, 6, 7]
lower threshold: [2, 3, 4, 5, 11, 13, 14, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 8, 17, 0, 10]
====================================
cloned = 21
killed = 1
cloned = 18
killed = 9
cloned = 8
killed = 12
cloned = 17
killed = 6
cloned = 0
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 21, 19, 7, 9]
lower threshold: [1, 3, 6, 8, 10, 12, 13, 14, 15, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 18, 4, 5, 2, 16]
====================================
cloned = 11
killed = 0
cloned = 18
killed = 21
cloned = 4
killed = 19
cloned = 5
killed = 7
cloned = 2
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 5, 6, 8]
lower threshold: [1, 2, 3, 4, 7, 13, 14, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 10, 16, 19, 17, 12]
====================================
cloned = 9
killed = 11
cloned = 10
killed = 0
cloned = 16
killed = 5
cloned = 19
killed = 6
cloned = 17
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 21, 12, 19]
lower threshold: [0, 1, 3, 5, 6, 9, 10, 14, 15, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 2, 17, 11, 13]
====================================
cloned = 4
killed = 7
cloned = 16
killed = 8
cloned = 2
killed = 21
cloned = 17
killed = 12
cloned = 11
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 6, 4, 3]
lower threshold: [0, 1, 2, 5, 8, 10, 11, 13, 14, 15, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 20, 21, 7, 19, 17]
====================================
cloned = 9
killed = 16
cloned = 20
killed = 12
cloned = 21
killed = 6
cloned = 7
killed = 4
cloned = 19
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 13, 3, 9, 10]
lower threshold: [0, 1, 2, 5, 7, 8, 11, 14, 15, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 6, 4, 12, 19, 18]
====================================
cloned = 20
killed = 16
cloned = 6
killed = 13
cloned = 4
killed = 3
cloned = 12
killed = 9
cloned = 19
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 16, 7, 18, 3]
lower threshold: [0, 1, 4, 5, 6, 8, 10, 12, 13, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 21, 17, 9, 11, 20]
====================================
cloned = 14
killed = 2
cloned = 21
killed = 16
cloned = 17
killed = 7
cloned = 9
killed = 18
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 14, 3, 9]
lower threshold: [0, 1, 5, 6, 11, 13, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 8, 12, 2, 19]
====================================
cloned = 7
killed = 4
cloned = 18
killed = 10
cloned = 8
killed = 14
cloned = 12
killed = 3
cloned = 2
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 8, 13, 2, 4]
lower threshold: [0, 1, 3, 5, 10, 11, 12, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 9, 16, 18, 14]
====================================
cloned = 20
killed = 6
cloned = 7
killed = 8
cloned = 9
killed = 13
cloned = 16
killed = 2
cloned = 18
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 13, 7, 10, 17]
lower threshold: [3, 4, 5, 6, 8, 12, 15, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 14, 9, 1, 19, 11]
====================================
cloned = 0
killed = 2
cloned = 14
killed = 13
cloned = 9
killed = 7
cloned = 1
killed = 10
cloned = 19
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 8, 18, 14, 17]
lower threshold: [0, 3, 5, 7, 9, 11, 13, 15, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 12, 6, 2, 10]
====================================
cloned = 1
killed = 20
cloned = 4
killed = 8
cloned = 12
killed = 18
cloned = 6
killed = 14
cloned = 2
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 4, 19, 16, 9]
lower threshold: [0, 1, 2, 3, 5, 10, 11, 12, 14, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 8, 7, 15, 17, 6]
====================================
cloned = 21
killed = 13
cloned = 8
killed = 4
cloned = 7
killed = 19
cloned = 15
killed = 16
cloned = 17
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 21, 10, 17, 9]
lower threshold: [1, 2, 3, 5, 7, 11, 12, 13, 14, 15, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 19, 8, 6, 18, 4]
====================================
cloned = 0
killed = 16
cloned = 19
killed = 21
cloned = 8
killed = 10
cloned = 6
killed = 17
cloned = 18
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 16, 13, 3]
lower threshold: [2, 4, 5, 7, 8, 9, 10, 12, 14, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 21, 20, 11, 17, 6]
====================================
cloned = 18
killed = 1
cloned = 21
killed = 0
cloned = 20
killed = 16
cloned = 11
killed = 13
cloned = 17
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 3, 5, 20]
lower threshold: [1, 2, 6, 8, 10, 12, 13, 14, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 17, 15, 9, 19, 11]
====================================
cloned = 0
killed = 7
cloned = 17
killed = 4
cloned = 15
killed = 3
cloned = 9
killed = 5
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 19, 13, 5]
lower threshold: [0, 1, 2, 3, 7, 10, 11, 12, 14, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 8, 6, 16, 18, 9]
====================================
cloned = 21
killed = 4
cloned = 8
killed = 15
cloned = 6
killed = 19
cloned = 16
killed = 13
cloned = 18
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 6, 21, 0]
lower threshold: [4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 19, 12, 2, 11, 10]
====================================
cloned = 9
killed = 1
cloned = 19
killed = 3
cloned = 12
killed = 6
cloned = 2
killed = 21
cloned = 11
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 3, 6, 21, 5]
lower threshold: [0, 1, 2, 7, 9, 12, 14, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 11, 13, 8, 10, 4]
====================================
cloned = 20
killed = 19
cloned = 11
killed = 3
cloned = 13
killed = 6
cloned = 8
killed = 21
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 4, 15, 16]
lower threshold: [1, 2, 3, 6, 7, 10, 11, 12, 13, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 5, 21, 17, 8, 9]
====================================
cloned = 14
killed = 20
cloned = 5
killed = 0
cloned = 21
killed = 4
cloned = 17
killed = 15
cloned = 8
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 15, 0, 18, 13]
lower threshold: [1, 2, 3, 4, 6, 8, 10, 11, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 16, 12, 9, 5, 14]
====================================
cloned = 21
killed = 7
cloned = 16
killed = 15
cloned = 12
killed = 0
cloned = 9
killed = 18
cloned = 5
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 1, 17, 13]
lower threshold: [0, 2, 7, 9, 10, 11, 14, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 6, 19, 8, 4, 15]
====================================
cloned = 5
killed = 12
cloned = 6
killed = 3
cloned = 19
killed = 1
cloned = 8
killed = 17
cloned = 4
killed = 13
Trial run 12/seed 317:
..................................................
winner: {'Evolved FSM 6', 'Tit For Tat'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 3,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 6,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3})]
--------------------------------------------------
Score:
[[61.48500000000001,
  55.97,
  59.265,
  54.835,
  52.4,
  54.005,
  54.964999999999996,
  37.04,
  44.82,
  28.485000000000003,
  47.74,
  50.724999999999994,
  47.61999999999999,
  52.305,
  56.445,
  37.059999999999995,
  51.56,
  49.105,
  46.33,
  42.1,
  35.31000000000001,
  55.434999999999995,
  53.41],
 [65.58500000000001,
  61.195,
  65.2,
  61.815,
  57.559999999999995,
  57.325,
  59.219999999999985,
  65.585,
  61.00500000000001,
  65.2,
  54.885,
  54.77499999999999,
  51.645,
  59.47,
  56.815,
  57.23499999999998,
  56.55499999999999,
  52.51499999999999,
  49.01500000000001,
  56.955,
  60.425,
  60.425,
  56.55],
 [65.63,
  63.91,
  65.7,
  60.769999999999996,
  62.03500000000001,
  61.83,
  60.244999999999976,
  65.63,
  63.035,
  65.69999999999999,
  65.63,
  63.07,
  65.7,
  63.04499999999999,
  57.05499999999999,
  60.08499999999998,
  62.08500000000001,
  60.769999999999996,
  65.63,
  57.46999999999999,
  61.974999999999994,
  61.974999999999994,
  65.7],
 [65.88,
  66.41,
  65.94,
  65.94,
  65.08,
  65.10000000000001,
  65.94,
  65.88,
  66.42,
  65.94,
  65.88,
  66.26499999999999,
  65.94,
  64.60499999999999,
  65.94,
  65.94,
  64.60499999999999,
  65.88,
  65.88,
  65.88,
  64.60499999999999,
  64.60499999999999,
  65.94],
 [65.76,
  65.46999999999998,
  65.88,
  65.88,
  65.47,
  65.46999999999998,
  65.88,
  65.76,
  65.47,
  65.88,
  65.76,
  65.46999999999998,
  65.88,
  65.47,
  65.88,
  65.88,
  65.88,
  65.76,
  65.76,
  65.76,
  65.88,
  63.209999999999994,
  65.88],
 [65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001,
  65.96,
  65.96000000000001,
  65.92,
  65.37999999999998,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.37999999999998,
  65.96000000000001,
  65.96,
  65.96,
  65.92,
  65.92,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.175000000000004,
 55.915,
 59.26,
 54.955,
 52.2,
 53.495000000000005,
 53.15499999999999,
 37.059999999999995,
 44.64000000000001,
 30.359999999999996,
 47.745,
 50.824999999999996,
 46.36,
 52.394999999999996,
 55.96499999999999,
 37.22,
 51.465,
 49.09,
 46.114999999999995,
 42.010000000000005,
 34.800000000000004,
 55.51,
 52.78]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.3775
Upper: 54.225
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.38,
 65.215,
 61.83,
 57.39,
 57.34,
 55.77499999999998,
 65.6,
 63.120000000000005,
 65.215,
 54.9,
 54.78999999999999,
 51.4,
 59.485,
 57.98,
 61.83,
 56.56999999999999,
 50.255,
 50.72000000000001,
 58.30499999999999,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.16999999999999
Upper: 62.475
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 11, 12, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.62,
 67.19,
 65.71000000000001,
 58.73,
 61.725,
 61.56,
 65.62,
 65.62,
 67.03999999999999,
 65.71000000000001,
 66.94999999999999,
 65.71,
 65.62,
 62.61,
 61.349999999999994,
 58.730000000000004,
 61.650000000000006,
 67.01500000000001,
 65.71,
 61.269999999999996,
 61.53999999999999,
 61.53999999999999,
 61.64999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.55
Upper: 65.71000000000001
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 15, 19, 20, 21]
lower threshold: []
....................................
upper threshold: []
upper:           [1, 8, 10, 17, 2, 9]
====================================
cloned = 1
killed = 3
cloned = 8
killed = 14
cloned = 10
killed = 15
cloned = 17
killed = 19
cloned = 2
killed = 20
cloned = 9
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.61999999999999,
 65.83999999999999,
 65.74,
 63.495,
 63.60000000000001,
 65.68,
 65.67999999999999,
 65.84,
 65.84,
 65.47,
 65.83999999999997,
 65.68,
 62.27999999999999,
 65.69000000000001,
 65.7,
 62.27999999999999,
 65.82,
 65.83999999999997,
 65.735,
 65.83999999999999,
 65.84,
 62.27999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.54499999999999
Upper: 65.83999999999997
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 10, 13, 16, 22]
lower threshold: []
....................................
upper threshold: [11, 18]
upper:           [2, 8, 9, 20, 21]
====================================
cloned = 2
killed = 4
cloned = 8
killed = 5
cloned = 9
killed = 10
cloned = 20
killed = 13
cloned = 21
killed = 16
######################################
~~~ Scores: ~~~
[65.68,
 65.38999999999997,
 65.83999999999999,
 65.38999999999999,
 65.83999999999997,
 65.38999999999999,
 65.68,
 65.68,
 65.38999999999999,
 65.84,
 65.84,
 65.83999999999997,
 65.68,
 65.83999999999999,
 65.38999999999999,
 65.39,
 65.83999999999999,
 65.39,
 65.83999999999999,
 65.39,
 65.83999999999999,
 65.83999999999999,
 62.27999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.38999999999999
Upper: 65.83999999999999
====================================
lower list size: 2
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [1, 22, 8, 3, 5]
lower threshold: [14]
....................................
upper threshold: [16, 21]
upper:           [9, 10, 18, 2, 20, 13]
====================================
cloned = 9
killed = 1
cloned = 10
killed = 22
cloned = 18
killed = 8
cloned = 2
killed = 3
cloned = 20
killed = 5
######################################
~~~ Scores: ~~~
[65.84,
 65.92,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.92,
 65.84,
 65.84,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.91999999999999,
 65.84,
 65.92,
 65.29999999999998,
 65.29999999999998,
 65.91999999999999,
 65.29999999999998,
 65.91999999999999,
 65.29999999999998,
 65.92,
 65.91999999999999,
 65.91999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.84
Upper: 65.91999999999999
====================================
lower list size: 4
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [14, 15, 17, 19, 6]
lower threshold: [0, 7, 12]
....................................
upper threshold: [2, 4, 8, 9, 10, 11, 16, 18, 22]
upper:           [1, 5, 13, 20, 21, 3]
====================================
cloned = 1
killed = 14
cloned = 5
killed = 15
cloned = 13
killed = 17
cloned = 20
killed = 19
cloned = 21
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 3, 14, 4, 13]
lower threshold: [0, 1, 7, 9, 11, 12, 16, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 8, 10, 5, 6, 2]
====================================
cloned = 20
killed = 15
cloned = 8
killed = 3
cloned = 10
killed = 14
cloned = 5
killed = 4
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 4, 12, 3]
lower threshold: [1, 2, 6, 8, 11, 13, 14, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 5, 20, 18, 10, 0]
====================================
cloned = 7
killed = 9
cloned = 5
killed = 15
cloned = 20
killed = 4
cloned = 18
killed = 12
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 13, 7, 9, 0]
lower threshold: [1, 2, 3, 8, 11, 12, 14, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 10, 6, 15, 5, 16]
====================================
cloned = 4
killed = 17
cloned = 10
killed = 13
cloned = 6
killed = 7
cloned = 15
killed = 9
cloned = 5
killed = 0
Trial run 13/seed 318:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8,
          'Tit For Tat': 6,
          'Evolved FSM 6': 4,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 4,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.175000000000004,
  55.915,
  59.26,
  54.955,
  52.2,
  53.495000000000005,
  53.15499999999999,
  37.059999999999995,
  44.64000000000001,
  30.359999999999996,
  47.745,
  50.824999999999996,
  46.36,
  52.394999999999996,
  55.96499999999999,
  37.22,
  51.465,
  49.09,
  46.114999999999995,
  42.010000000000005,
  34.800000000000004,
  55.51,
  52.78],
 [65.60000000000001,
  63.38,
  65.215,
  61.83,
  57.39,
  57.34,
  55.77499999999998,
  65.6,
  63.120000000000005,
  65.215,
  54.9,
  54.78999999999999,
  51.4,
  59.485,
  57.98,
  61.83,
  56.56999999999999,
  50.255,
  50.72000000000001,
  58.30499999999999,
  60.44,
  60.44,
  56.565],
 [65.62,
  67.19,
  65.71000000000001,
  58.73,
  61.725,
  61.56,
  65.62,
  65.62,
  67.03999999999999,
  65.71000000000001,
  66.94999999999999,
  65.71,
  65.62,
  62.61,
  61.349999999999994,
  58.730000000000004,
  61.650000000000006,
  67.01500000000001,
  65.71,
  61.269999999999996,
  61.53999999999999,
  61.53999999999999,
  61.64999999999999],
 [65.68,
  65.61999999999999,
  65.83999999999999,
  65.74,
  63.495,
  63.60000000000001,
  65.68,
  65.67999999999999,
  65.84,
  65.84,
  65.47,
  65.83999999999997,
  65.68,
  62.27999999999999,
  65.69000000000001,
  65.7,
  62.27999999999999,
  65.82,
  65.83999999999997,
  65.735,
  65.83999999999999,
  65.84,
  62.27999999999999],
 [65.68,
  65.38999999999997,
  65.83999999999999,
  65.38999999999999,
  65.83999999999997,
  65.38999999999999,
  65.68,
  65.68,
  65.38999999999999,
  65.84,
  65.84,
  65.83999999999997,
  65.68,
  65.83999999999999,
  65.38999999999999,
  65.39,
  65.83999999999999,
  65.39,
  65.83999999999999,
  65.39,
  65.83999999999999,
  65.83999999999999,
  62.27999999999999],
 [65.84,
  65.92,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.92,
  65.84,
  65.84,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.91999999999999,
  65.84,
  65.92,
  65.29999999999998,
  65.29999999999998,
  65.91999999999999,
  65.29999999999998,
  65.91999999999999,
  65.29999999999998,
  65.92,
  65.91999999999999,
  65.91999999999999],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.470000000000006,
 57.475,
 59.254999999999995,
 54.485,
 52.54,
 53.65,
 52.06499999999998,
 36.96000000000001,
 44.835,
 32.65499999999999,
 47.63,
 50.76499999999999,
 45.60499999999999,
 52.445,
 56.434999999999995,
 37.080000000000005,
 51.57,
 47.115,
 45.69,
 42.07000000000001,
 34.865,
 55.584999999999994,
 52.769999999999996]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.22
Upper: 54.067499999999995
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.230000000000004,
 65.215,
 61.83,
 57.81000000000001,
 57.34,
 57.104999999999976,
 65.6,
 63.230000000000004,
 65.215,
 54.9,
 54.78999999999999,
 51.13999999999999,
 59.485,
 57.87,
 61.83,
 56.56999999999999,
 52.235,
 50.76000000000001,
 57.87,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.53
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 66.255,
 65.69500000000001,
 58.714999999999996,
 61.495,
 61.545,
 60.104999999999976,
 65.605,
 65.02,
 65.695,
 65.605,
 64.86999999999999,
 65.69500000000001,
 62.595,
 59.06499999999999,
 58.715,
 61.635000000000005,
 65.605,
 64.72,
 58.84,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.50999999999999
Upper: 65.605
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 6, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [0, 7, 10, 17]
upper:           [1, 2, 9, 12, 22]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 4
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
######################################
~~~ Scores: ~~~
[65.69,
 66.41,
 65.795,
 66.41,
 65.79499999999999,
 62.88,
 65.795,
 65.69,
 66.40999999999998,
 65.79499999999999,
 65.69,
 66.41,
 65.795,
 62.91,
 65.79499999999999,
 65.79499999999999,
 62.42999999999999,
 65.69,
 66.41000000000001,
 62.615000000000016,
 62.374999999999986,
 62.375,
 65.795]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 64.3
Upper: 65.795
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [5, 13, 16, 19, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 6, 12, 22]
upper:           [1, 3, 8, 11, 18]
====================================
cloned = 1
killed = 5
cloned = 3
killed = 13
cloned = 8
killed = 16
cloned = 11
killed = 19
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27,
 65.79999999999998,
 65.27,
 65.8,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.79999999999998,
 65.27,
 65.60000000000001,
 65.27000000000001,
 65.27,
 65.27000000000001,
 61.349999999999994,
 65.79999999999998]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 11, 16, 5]
lower threshold: [3, 8, 19]
....................................
upper threshold: [14, 22]
upper:           [4, 12, 15, 6, 9, 2]
====================================
cloned = 4
killed = 21
cloned = 12
killed = 1
cloned = 15
killed = 11
cloned = 6
killed = 16
cloned = 9
killed = 5
######################################
~~~ Scores: ~~~
[65.76,
 65.88,
 65.88,
 65.17999999999998,
 65.88,
 65.88,
 65.88,
 65.76,
 65.17999999999999,
 65.88,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.88,
 65.76,
 65.17999999999999,
 65.17999999999998,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 13, 18, 19, 20]
lower threshold: []
....................................
upper threshold: [5, 9, 12, 14, 15, 21, 22]
upper:           [1, 2, 11, 16, 4, 6]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 8
cloned = 11
killed = 13
cloned = 16
killed = 18
cloned = 4
killed = 19
cloned = 6
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 16, 12, 6, 10]
lower threshold: [3, 4, 5, 7, 8, 9, 13, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 11, 2, 14, 0, 19]
====================================
cloned = 17
killed = 1
cloned = 11
killed = 16
cloned = 2
killed = 12
cloned = 14
killed = 6
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 14, 18, 19]
lower threshold: [1, 2, 3, 5, 6, 7, 13, 15, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 0, 12, 20, 8, 9]
====================================
cloned = 10
killed = 4
cloned = 0
killed = 11
cloned = 12
killed = 14
cloned = 20
killed = 18
cloned = 8
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 18, 11, 21, 14]
lower threshold: [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 15, 0, 17, 19, 1]
====================================
cloned = 3
killed = 20
cloned = 15
killed = 18
cloned = 0
killed = 11
cloned = 17
killed = 21
cloned = 19
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 6, 12, 9, 7]
lower threshold: [0, 1, 3, 4, 8, 11, 13, 14, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 5, 19, 10, 18, 2]
====================================
cloned = 16
killed = 17
cloned = 5
killed = 6
cloned = 19
killed = 12
cloned = 10
killed = 9
cloned = 18
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 21, 4, 17]
lower threshold: [0, 2, 3, 6, 8, 11, 12, 14, 15, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 9, 5, 7, 18, 16]
====================================
cloned = 13
killed = 10
cloned = 9
killed = 1
cloned = 5
killed = 21
cloned = 7
killed = 4
cloned = 18
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 12, 4, 18, 10]
lower threshold: [1, 2, 3, 5, 8, 9, 11, 13, 15, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 20, 17, 7, 14, 16]
====================================
cloned = 0
killed = 6
cloned = 20
killed = 12
cloned = 17
killed = 4
cloned = 7
killed = 18
cloned = 14
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 8, 16, 5, 1]
lower threshold: [0, 2, 4, 6, 7, 10, 11, 14, 15, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 9, 3, 18, 12, 21]
====================================
cloned = 17
killed = 13
cloned = 9
killed = 8
cloned = 3
killed = 16
cloned = 18
killed = 5
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 14, 12, 10, 20]
lower threshold: [3, 4, 5, 6, 9, 13, 16, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 7, 0, 8, 15, 1]
====================================
cloned = 2
killed = 11
cloned = 7
killed = 14
cloned = 0
killed = 12
cloned = 8
killed = 10
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 20, 10, 6]
lower threshold: [1, 2, 3, 5, 8, 9, 11, 14, 15, 16, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 21, 7, 17, 19]
====================================
cloned = 12
killed = 4
cloned = 0
killed = 13
cloned = 21
killed = 20
cloned = 7
killed = 10
cloned = 17
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 6, 21, 17]
lower threshold: [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 13, 0, 18, 8, 10]
====================================
cloned = 12
killed = 3
cloned = 13
killed = 20
cloned = 0
killed = 6
cloned = 18
killed = 21
cloned = 8
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 10, 8, 0, 17]
lower threshold: [2, 4, 5, 6, 7, 9, 13, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 1, 19, 12, 16, 3]
====================================
cloned = 11
killed = 14
cloned = 1
killed = 10
cloned = 19
killed = 8
cloned = 12
killed = 0
cloned = 16
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 14, 3, 20]
lower threshold: [0, 1, 2, 5, 9, 11, 13, 16, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 6, 12, 19, 10, 8]
====================================
cloned = 15
killed = 7
cloned = 6
killed = 4
cloned = 12
killed = 14
cloned = 19
killed = 3
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 7, 11, 19, 4]
lower threshold: [2, 3, 6, 8, 10, 13, 14, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 9, 1, 0, 12]
====================================
cloned = 18
killed = 15
cloned = 5
killed = 7
cloned = 9
killed = 11
cloned = 1
killed = 19
cloned = 0
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 0, 8, 11]
lower threshold: [1, 2, 4, 5, 9, 10, 14, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 21, 6, 15, 13, 12]
====================================
cloned = 19
killed = 3
cloned = 21
killed = 7
cloned = 6
killed = 0
cloned = 15
killed = 8
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 9, 18, 12]
lower threshold: [1, 2, 5, 6, 8, 10, 13, 14, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 17, 7, 15, 21, 3]
====================================
cloned = 0
killed = 11
cloned = 17
killed = 4
cloned = 7
killed = 9
cloned = 15
killed = 18
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 16, 12, 15]
lower threshold: [2, 3, 4, 5, 6, 8, 13, 14, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 1, 11, 7, 17, 21]
====================================
cloned = 10
killed = 0
cloned = 1
killed = 9
cloned = 11
killed = 16
cloned = 7
killed = 12
cloned = 17
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 20, 17, 7, 12]
lower threshold: [0, 3, 4, 5, 8, 11, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 9, 1, 13, 10, 21]
====================================
cloned = 6
killed = 2
cloned = 9
killed = 20
cloned = 1
killed = 17
cloned = 13
killed = 7
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 21, 19, 12]
lower threshold: [2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 18, 6, 17, 1, 0]
====================================
cloned = 5
killed = 4
cloned = 18
killed = 16
cloned = 6
killed = 21
cloned = 17
killed = 19
cloned = 1
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 18, 13, 20]
lower threshold: [0, 1, 4, 5, 6, 8, 10, 15, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 12, 7, 11, 9]
====================================
cloned = 14
killed = 16
cloned = 2
killed = 3
cloned = 12
killed = 18
cloned = 7
killed = 13
cloned = 11
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 6, 14, 20]
lower threshold: [1, 2, 5, 9, 10, 11, 12, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 7, 21, 4, 8, 15]
====================================
cloned = 13
killed = 0
cloned = 7
killed = 3
cloned = 21
killed = 6
cloned = 4
killed = 14
cloned = 8
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 17, 21, 19, 1]
lower threshold: [2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 16, 8, 18, 3, 20]
====================================
cloned = 0
killed = 14
cloned = 16
killed = 17
cloned = 8
killed = 21
cloned = 18
killed = 19
cloned = 3
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 13, 18, 15, 10]
lower threshold: [0, 1, 3, 4, 5, 9, 11, 14, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 12, 2, 17, 8, 20]
====================================
cloned = 6
killed = 7
cloned = 12
killed = 13
cloned = 2
killed = 18
cloned = 17
killed = 15
cloned = 8
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 8, 12, 5, 6]
lower threshold: [2, 4, 7, 9, 11, 13, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 0, 10, 3, 1, 18]
====================================
cloned = 19
killed = 14
cloned = 0
killed = 8
cloned = 10
killed = 12
cloned = 3
killed = 5
cloned = 1
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 21, 13, 14]
lower threshold: [1, 2, 6, 8, 10, 11, 12, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 4, 5, 16, 18, 0]
====================================
cloned = 3
killed = 9
cloned = 4
killed = 7
cloned = 5
killed = 21
cloned = 16
killed = 13
cloned = 18
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 8, 4, 15, 13]
lower threshold: [0, 1, 2, 5, 9, 10, 12, 14, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 11, 21, 7, 18, 3]
====================================
cloned = 6
killed = 20
cloned = 11
killed = 8
cloned = 21
killed = 4
cloned = 7
killed = 15
cloned = 18
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 11, 17, 3, 19]
lower threshold: [0, 1, 2, 7, 8, 9, 14, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 6, 10, 18, 12, 5]
====================================
cloned = 4
killed = 13
cloned = 6
killed = 11
cloned = 10
killed = 17
cloned = 18
killed = 3
cloned = 12
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 19, 1, 20, 11]
lower threshold: [0, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 4, 5, 10, 2]
====================================
cloned = 12
killed = 21
cloned = 6
killed = 19
cloned = 4
killed = 1
cloned = 5
killed = 20
cloned = 10
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 14, 11, 9]
lower threshold: [0, 2, 4, 6, 8, 12, 15, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 13, 1, 21, 10, 5]
====================================
cloned = 17
killed = 3
cloned = 13
killed = 7
cloned = 1
killed = 14
cloned = 21
killed = 11
cloned = 10
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 8, 19, 13]
lower threshold: [2, 3, 5, 7, 9, 10, 11, 14, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 18, 20, 15, 4, 6]
====================================
cloned = 0
killed = 1
cloned = 18
killed = 12
cloned = 20
killed = 8
cloned = 15
killed = 19
cloned = 4
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 2, 17, 10, 4]
lower threshold: [0, 5, 6, 9, 11, 12, 13, 14, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 3, 7, 1, 21, 15]
====================================
cloned = 8
killed = 18
cloned = 3
killed = 2
cloned = 7
killed = 17
cloned = 1
killed = 10
cloned = 21
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 15, 18, 9, 19]
lower threshold: [0, 3, 4, 8, 10, 12, 13, 14, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 2, 6, 1, 7, 20]
====================================
cloned = 11
killed = 5
cloned = 2
killed = 15
cloned = 6
killed = 18
cloned = 1
killed = 9
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 5, 15, 19]
lower threshold: [3, 4, 7, 8, 9, 10, 13, 14, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 1, 2, 6, 11, 0]
====================================
cloned = 18
killed = 16
cloned = 1
killed = 12
cloned = 2
killed = 5
cloned = 6
killed = 15
cloned = 11
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 1, 19, 10]
lower threshold: [0, 3, 6, 7, 8, 9, 11, 12, 14, 15, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 18, 20, 13, 17, 5]
====================================
cloned = 16
killed = 4
cloned = 18
killed = 2
cloned = 20
killed = 1
cloned = 13
killed = 19
cloned = 17
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 14, 21, 4]
lower threshold: [0, 5, 6, 7, 8, 10, 11, 12, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 2, 16, 18, 1, 15]
====================================
cloned = 13
killed = 9
cloned = 2
killed = 3
cloned = 16
killed = 14
cloned = 18
killed = 21
cloned = 1
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 6, 16, 1]
lower threshold: [0, 5, 7, 8, 11, 12, 14, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 13, 20, 9, 4, 15]
====================================
cloned = 2
killed = 10
cloned = 13
killed = 3
cloned = 20
killed = 6
cloned = 9
killed = 16
cloned = 4
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 17, 12, 7]
lower threshold: [2, 3, 4, 5, 9, 11, 13, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 0, 6, 1, 14, 21]
====================================
cloned = 18
killed = 10
cloned = 0
killed = 8
cloned = 6
killed = 17
cloned = 1
killed = 12
cloned = 14
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 21, 20, 2]
lower threshold: [1, 5, 6, 8, 9, 11, 14, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 13, 0, 3, 18]
====================================
cloned = 12
killed = 10
cloned = 4
killed = 7
cloned = 13
killed = 21
cloned = 0
killed = 20
cloned = 3
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 21, 13, 1, 3]
lower threshold: [0, 4, 5, 7, 10, 12, 14, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 20, 8, 9, 11, 6]
====================================
cloned = 19
killed = 2
cloned = 20
killed = 21
cloned = 8
killed = 13
cloned = 9
killed = 1
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 0, 13, 16]
lower threshold: [1, 4, 6, 8, 10, 11, 12, 14, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 15, 5, 3, 2, 19]
====================================
cloned = 21
killed = 7
cloned = 15
killed = 9
cloned = 5
killed = 0
cloned = 3
killed = 13
cloned = 2
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 19, 8, 10, 11]
lower threshold: [1, 2, 4, 5, 7, 9, 13, 14, 15, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 16, 20, 17, 3]
====================================
cloned = 0
killed = 12
cloned = 6
killed = 19
cloned = 16
killed = 8
cloned = 20
killed = 10
cloned = 17
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 7, 14, 19]
lower threshold: [4, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 3, 0, 2, 8, 11]
====================================
cloned = 1
killed = 20
cloned = 3
killed = 21
cloned = 0
killed = 7
cloned = 2
killed = 14
cloned = 8
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 11, 19, 1, 13]
lower threshold: [0, 3, 4, 5, 6, 7, 9, 12, 14, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 16, 15, 2, 10, 20]
====================================
cloned = 8
killed = 17
cloned = 16
killed = 11
cloned = 15
killed = 19
cloned = 2
killed = 1
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 4, 2, 16]
lower threshold: [1, 8, 9, 10, 11, 13, 14, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 12, 19, 3, 17, 5]
====================================
cloned = 6
killed = 7
cloned = 12
killed = 0
cloned = 19
killed = 4
cloned = 3
killed = 2
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 17, 21, 0, 18]
lower threshold: [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 16, 9, 19, 12, 15]
====================================
cloned = 20
killed = 4
cloned = 16
killed = 17
cloned = 9
killed = 21
cloned = 19
killed = 0
cloned = 12
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 19, 11, 3, 0]
lower threshold: [2, 4, 7, 9, 13, 15, 16, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 1, 6, 12, 5, 8]
====================================
cloned = 10
killed = 14
cloned = 1
killed = 19
cloned = 6
killed = 11
cloned = 12
killed = 3
cloned = 5
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 9, 1, 7]
lower threshold: [0, 2, 3, 4, 6, 8, 11, 12, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 14, 13, 5, 19, 21]
====================================
cloned = 15
killed = 16
cloned = 14
killed = 10
cloned = 13
killed = 9
cloned = 5
killed = 1
cloned = 19
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 5, 11, 21]
lower threshold: [1, 2, 7, 8, 9, 12, 14, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 4, 15, 20, 13, 6]
====================================
cloned = 0
killed = 10
cloned = 4
killed = 3
cloned = 15
killed = 5
cloned = 20
killed = 11
cloned = 13
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 21, 2, 4]
lower threshold: [1, 3, 5, 6, 12, 13, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 10, 0, 7, 14, 18]
====================================
cloned = 8
killed = 11
cloned = 10
killed = 9
cloned = 0
killed = 21
cloned = 7
killed = 2
cloned = 14
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 11, 5, 7, 17]
lower threshold: [1, 2, 4, 8, 12, 13, 14, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 10, 9, 0, 18, 3]
====================================
cloned = 6
killed = 19
cloned = 10
killed = 11
cloned = 9
killed = 5
cloned = 0
killed = 7
cloned = 18
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 17, 14, 3, 10]
lower threshold: [1, 4, 7, 9, 11, 12, 13, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 5, 19, 6, 0, 2]
====================================
cloned = 8
killed = 18
cloned = 5
killed = 17
cloned = 19
killed = 14
cloned = 6
killed = 3
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 0, 9, 7, 17]
lower threshold: [1, 3, 5, 6, 11, 13, 14, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 4, 18, 12, 8, 21]
====================================
cloned = 2
killed = 10
cloned = 4
killed = 0
cloned = 18
killed = 9
cloned = 12
killed = 7
cloned = 8
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 4, 12, 9, 11]
lower threshold: [0, 1, 2, 5, 6, 10, 15, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 3, 14, 16, 8, 20]
====================================
cloned = 7
killed = 13
cloned = 3
killed = 4
cloned = 14
killed = 12
cloned = 16
killed = 9
cloned = 8
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 16, 10, 2]
lower threshold: [1, 3, 4, 7, 9, 12, 14, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 13, 11, 8, 18, 21]
====================================
cloned = 0
killed = 6
cloned = 13
killed = 5
cloned = 11
killed = 16
cloned = 8
killed = 10
cloned = 18
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 19, 17, 21, 11]
lower threshold: [0, 2, 3, 5, 6, 9, 10, 13, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 15, 7, 14, 1, 12]
====================================
cloned = 4
killed = 8
cloned = 15
killed = 19
cloned = 7
killed = 17
cloned = 14
killed = 21
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 17, 4, 11, 0]
lower threshold: [1, 3, 5, 7, 9, 10, 12, 13, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 15, 21, 8, 6, 2]
====================================
cloned = 16
killed = 14
cloned = 15
killed = 17
cloned = 21
killed = 4
cloned = 8
killed = 11
cloned = 6
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 18, 5, 21]
lower threshold: [2, 4, 6, 9, 11, 13, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 7, 12, 8, 3, 10]
====================================
cloned = 14
killed = 1
cloned = 7
killed = 0
cloned = 12
killed = 18
cloned = 8
killed = 5
cloned = 3
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 6, 13, 1, 4]
lower threshold: [0, 7, 8, 9, 10, 11, 12, 14, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 15, 19, 3, 17, 2]
====================================
cloned = 5
killed = 16
cloned = 15
killed = 6
cloned = 19
killed = 13
cloned = 3
killed = 1
cloned = 17
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 20, 3, 13, 2]
lower threshold: [0, 5, 7, 8, 11, 15, 16, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 14, 1, 10, 9, 6]
====================================
cloned = 12
killed = 4
cloned = 14
killed = 20
cloned = 1
killed = 3
cloned = 10
killed = 13
cloned = 9
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 11, 10, 2, 16]
lower threshold: [0, 1, 3, 4, 5, 9, 12, 15, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 20, 6, 7, 14]
====================================
cloned = 8
killed = 17
cloned = 13
killed = 11
cloned = 20
killed = 10
cloned = 6
killed = 2
cloned = 7
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 1, 21, 18, 20]
lower threshold: [0, 2, 3, 4, 7, 8, 10, 12, 13, 15, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 11, 9, 5, 17, 6]
====================================
cloned = 14
killed = 16
cloned = 11
killed = 1
cloned = 9
killed = 21
cloned = 5
killed = 18
cloned = 17
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 17, 14, 16, 15]
lower threshold: [0, 1, 4, 6, 7, 8, 9, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 13, 5, 12, 10, 3]
====================================
cloned = 2
killed = 11
cloned = 13
killed = 17
cloned = 5
killed = 14
cloned = 12
killed = 16
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 15, 5, 14]
lower threshold: [1, 2, 3, 4, 6, 9, 10, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 7, 20, 0, 13, 16]
====================================
cloned = 8
killed = 11
cloned = 7
killed = 12
cloned = 20
killed = 15
cloned = 0
killed = 5
cloned = 13
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 3, 4, 13, 16]
lower threshold: [0, 2, 5, 6, 8, 10, 11, 12, 14, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 20, 9, 7, 1, 17]
====================================
cloned = 15
killed = 19
cloned = 20
killed = 3
cloned = 9
killed = 4
cloned = 7
killed = 13
cloned = 1
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 0, 4, 12]
lower threshold: [1, 5, 7, 9, 10, 13, 14, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 16, 11, 3, 15]
====================================
cloned = 6
killed = 2
cloned = 18
killed = 8
cloned = 16
killed = 0
cloned = 11
killed = 4
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 1, 8, 4, 16]
lower threshold: [0, 3, 5, 7, 11, 13, 14, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 18, 12, 21, 9, 6]
====================================
cloned = 10
killed = 2
cloned = 18
killed = 1
cloned = 12
killed = 8
cloned = 21
killed = 4
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 15, 4, 8, 13]
lower threshold: [0, 1, 3, 6, 9, 12, 14, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 17, 10, 20, 7, 5]
====================================
cloned = 2
killed = 11
cloned = 17
killed = 15
cloned = 10
killed = 4
cloned = 20
killed = 8
cloned = 7
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 14, 19, 1]
lower threshold: [0, 2, 3, 8, 9, 12, 13, 15, 16, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 6, 10, 7, 5, 11]
====================================
cloned = 4
killed = 20
cloned = 6
killed = 21
cloned = 10
killed = 14
cloned = 7
killed = 19
cloned = 5
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 17, 11, 3, 16]
lower threshold: [0, 1, 4, 5, 8, 9, 10, 12, 14, 15, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 18, 21, 7, 2, 19]
====================================
cloned = 13
killed = 6
cloned = 18
killed = 17
cloned = 21
killed = 11
cloned = 7
killed = 3
cloned = 2
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 15, 0, 14, 1]
lower threshold: [3, 5, 6, 8, 9, 11, 13, 16, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 4, 20, 7, 10, 12]
====================================
cloned = 19
killed = 2
cloned = 4
killed = 15
cloned = 20
killed = 0
cloned = 7
killed = 14
cloned = 10
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 12, 10, 4]
lower threshold: [0, 1, 2, 6, 9, 11, 14, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 7, 16, 20, 13, 3]
====================================
cloned = 15
killed = 5
cloned = 7
killed = 8
cloned = 16
killed = 12
cloned = 20
killed = 10
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 15, 18, 3, 9]
lower threshold: [0, 1, 2, 4, 5, 6, 11, 12, 13, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 16, 7, 10, 8, 14]
====================================
cloned = 17
killed = 21
cloned = 16
killed = 15
cloned = 7
killed = 18
cloned = 10
killed = 3
cloned = 8
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 14, 5, 21, 20]
lower threshold: [0, 1, 3, 4, 6, 7, 10, 13, 15, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 16, 9, 18, 8, 2]
====================================
cloned = 11
killed = 12
cloned = 16
killed = 14
cloned = 9
killed = 5
cloned = 18
killed = 21
cloned = 8
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 4, 6, 1, 16]
lower threshold: [0, 2, 3, 8, 9, 10, 11, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 5, 13, 19, 17, 12]
====================================
cloned = 7
killed = 14
cloned = 5
killed = 4
cloned = 13
killed = 6
cloned = 19
killed = 1
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 18, 10, 17, 8]
lower threshold: [0, 2, 3, 4, 7, 9, 11, 12, 15, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 5, 13, 14, 21, 1]
====================================
cloned = 19
killed = 6
cloned = 5
killed = 18
cloned = 13
killed = 10
cloned = 14
killed = 17
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 12, 15, 2, 19]
lower threshold: [0, 1, 5, 7, 8, 9, 11, 13, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 20, 14, 3, 10, 17]
====================================
cloned = 4
killed = 6
cloned = 20
killed = 12
cloned = 14
killed = 15
cloned = 3
killed = 2
cloned = 10
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 6, 17, 10, 7]
lower threshold: [2, 3, 4, 5, 8, 9, 12, 13, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 16, 11, 0, 19, 1]
====================================
cloned = 14
killed = 15
cloned = 16
killed = 6
cloned = 11
killed = 17
cloned = 0
killed = 10
cloned = 19
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 18, 0, 10, 6]
lower threshold: [1, 5, 8, 11, 12, 13, 14, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 4, 9, 16, 7]
====================================
cloned = 2
killed = 3
cloned = 15
killed = 18
cloned = 4
killed = 0
cloned = 9
killed = 10
cloned = 16
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 21, 19, 3, 12]
lower threshold: [1, 2, 5, 6, 7, 9, 11, 13, 14, 15, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 8, 20, 18, 4, 0]
====================================
cloned = 16
killed = 10
cloned = 8
killed = 21
cloned = 20
killed = 19
cloned = 18
killed = 3
cloned = 4
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 16, 7, 14, 10]
lower threshold: [0, 2, 4, 6, 8, 11, 13, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 1, 17, 12, 3, 5]
====================================
cloned = 9
killed = 19
cloned = 1
killed = 16
cloned = 17
killed = 7
cloned = 12
killed = 14
cloned = 3
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 14, 6, 21]
lower threshold: [0, 3, 5, 7, 9, 10, 13, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 8, 16, 2, 1, 12]
====================================
cloned = 11
killed = 4
cloned = 8
killed = 15
cloned = 16
killed = 14
cloned = 2
killed = 6
cloned = 1
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 19, 1, 7, 8]
lower threshold: [2, 3, 4, 5, 6, 10, 13, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 14, 9, 0, 17, 11]
====================================
cloned = 12
killed = 20
cloned = 14
killed = 19
cloned = 9
killed = 1
cloned = 0
killed = 7
cloned = 17
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 7, 10, 5]
lower threshold: [1, 2, 8, 11, 13, 14, 15, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 0, 12, 6, 17, 3]
====================================
cloned = 18
killed = 4
cloned = 0
killed = 9
cloned = 12
killed = 7
cloned = 6
killed = 10
cloned = 17
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 18, 13, 20]
lower threshold: [0, 1, 2, 3, 4, 7, 15, 16, 17, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 12, 11, 8, 10, 9]
====================================
cloned = 14
killed = 6
cloned = 12
killed = 5
cloned = 11
killed = 18
cloned = 8
killed = 13
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 17, 2, 1, 12]
lower threshold: [4, 5, 7, 8, 9, 10, 11, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 13, 14, 0, 21, 3]
====================================
cloned = 6
killed = 16
cloned = 13
killed = 17
cloned = 14
killed = 2
cloned = 0
killed = 1
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 19, 11, 13, 20]
lower threshold: [0, 1, 2, 5, 6, 9, 14, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 4, 7, 10, 16, 12]
====================================
cloned = 3
killed = 8
cloned = 4
killed = 19
cloned = 7
killed = 11
cloned = 10
killed = 13
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 13, 1, 11, 21]
lower threshold: [3, 5, 7, 8, 9, 10, 14, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 20, 12, 2, 4, 17]
====================================
cloned = 6
killed = 0
cloned = 20
killed = 13
cloned = 12
killed = 1
cloned = 2
killed = 11
cloned = 4
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 10, 4, 5, 15]
lower threshold: [0, 6, 8, 9, 11, 12, 13, 14, 16, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 3, 17, 1, 18, 7]
====================================
cloned = 2
killed = 20
cloned = 3
killed = 10
cloned = 17
killed = 4
cloned = 1
killed = 5
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 1, 9, 18]
lower threshold: [2, 5, 6, 7, 10, 11, 14, 15, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 19, 13, 3, 12, 0]
====================================
cloned = 20
killed = 8
cloned = 19
killed = 4
cloned = 13
killed = 1
cloned = 3
killed = 9
cloned = 12
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 14, 1, 3, 17]
lower threshold: [4, 5, 6, 7, 9, 11, 12, 13, 15, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 20, 2, 16, 8, 10]
====================================
cloned = 0
killed = 19
cloned = 20
killed = 14
cloned = 2
killed = 1
cloned = 16
killed = 3
cloned = 8
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 17, 19, 8, 11]
lower threshold: [1, 2, 3, 5, 7, 9, 13, 14, 15, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 12, 20, 0, 16, 6]
====================================
cloned = 10
killed = 4
cloned = 12
killed = 17
cloned = 20
killed = 19
cloned = 0
killed = 8
cloned = 16
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 21, 14, 2, 4]
lower threshold: [0, 1, 3, 5, 8, 12, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 7, 6, 9, 10, 18]
====================================
cloned = 13
killed = 11
cloned = 7
killed = 21
cloned = 6
killed = 14
cloned = 9
killed = 2
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 6, 2, 21, 20]
lower threshold: [0, 3, 4, 7, 8, 10, 13, 15, 16, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 9, 5, 17, 11, 12]
====================================
cloned = 1
killed = 14
cloned = 9
killed = 6
cloned = 5
killed = 2
cloned = 17
killed = 21
cloned = 11
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 0, 1, 15, 17]
lower threshold: [4, 5, 7, 9, 10, 12, 13, 14, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 8, 2, 11, 16, 3]
====================================
cloned = 6
killed = 18
cloned = 8
killed = 0
cloned = 2
killed = 1
cloned = 11
killed = 15
cloned = 16
killed = 17
Trial run 14/seed 319:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Evolved ANN 5 Noise 05': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 20, 'Tit For Tat': 3}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.470000000000006,
  57.475,
  59.254999999999995,
  54.485,
  52.54,
  53.65,
  52.06499999999998,
  36.96000000000001,
  44.835,
  32.65499999999999,
  47.63,
  50.76499999999999,
  45.60499999999999,
  52.445,
  56.434999999999995,
  37.080000000000005,
  51.57,
  47.115,
  45.69,
  42.07000000000001,
  34.865,
  55.584999999999994,
  52.769999999999996],
 [65.60000000000001,
  63.230000000000004,
  65.215,
  61.83,
  57.81000000000001,
  57.34,
  57.104999999999976,
  65.6,
  63.230000000000004,
  65.215,
  54.9,
  54.78999999999999,
  51.13999999999999,
  59.485,
  57.87,
  61.83,
  56.56999999999999,
  52.235,
  50.76000000000001,
  57.87,
  60.44,
  60.44,
  56.565],
 [65.605,
  66.255,
  65.69500000000001,
  58.714999999999996,
  61.495,
  61.545,
  60.104999999999976,
  65.605,
  65.02,
  65.695,
  65.605,
  64.86999999999999,
  65.69500000000001,
  62.595,
  59.06499999999999,
  58.715,
  61.635000000000005,
  65.605,
  64.72,
  58.84,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.69,
  66.41,
  65.795,
  66.41,
  65.79499999999999,
  62.88,
  65.795,
  65.69,
  66.40999999999998,
  65.79499999999999,
  65.69,
  66.41,
  65.795,
  62.91,
  65.79499999999999,
  65.79499999999999,
  62.42999999999999,
  65.69,
  66.41000000000001,
  62.615000000000016,
  62.374999999999986,
  62.375,
  65.795],
 [65.60000000000001,
  65.27,
  65.79999999999998,
  65.27,
  65.8,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.79999999999998,
  65.27,
  65.60000000000001,
  65.27000000000001,
  65.27,
  65.27000000000001,
  61.349999999999994,
  65.79999999999998],
 [65.76,
  65.88,
  65.88,
  65.17999999999998,
  65.88,
  65.88,
  65.88,
  65.76,
  65.17999999999999,
  65.88,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.88,
  65.76,
  65.17999999999999,
  65.17999999999998,
  65.17999999999999,
  65.88,
  65.88],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.205000000000005,
 56.35,
 59.275,
 54.745,
 52.39000000000001,
 54.370000000000005,
 53.234999999999985,
 37.0,
 44.775000000000006,
 31.25500000000001,
 47.885,
 50.80499999999999,
 45.734999999999985,
 52.37,
 56.419999999999995,
 36.94,
 51.760000000000005,
 47.005,
 45.419999999999995,
 43.99500000000001,
 35.16000000000001,
 55.48,
 52.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.0975
Upper: 54.557500000000005
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.120000000000005,
 65.215,
 61.83,
 57.815000000000005,
 57.34,
 55.464999999999975,
 65.6,
 63.14,
 65.215,
 54.9,
 54.78999999999999,
 51.279999999999994,
 59.485,
 58.184999999999995,
 61.83,
 56.56999999999999,
 50.265,
 50.53500000000001,
 57.9,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.014999999999986
Upper: 62.475
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 11, 12, 17, 18]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 17
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[65.62,
 67.07,
 65.71000000000001,
 58.73,
 61.82,
 61.56,
 65.62,
 65.62,
 67.20499999999998,
 65.71000000000001,
 67.16,
 65.71,
 65.62,
 62.61,
 61.33,
 58.730000000000004,
 61.650000000000006,
 67.17000000000002,
 65.71,
 61.24999999999999,
 61.53999999999999,
 61.53999999999999,
 61.64999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.55
Upper: 65.71000000000001
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 15, 19, 20, 21]
lower threshold: []
....................................
upper threshold: []
upper:           [1, 8, 10, 17, 2, 9]
====================================
cloned = 1
killed = 3
cloned = 8
killed = 14
cloned = 10
killed = 15
cloned = 17
killed = 19
cloned = 2
killed = 20
cloned = 9
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.77499999999999,
 65.83999999999999,
 65.77499999999999,
 63.425,
 63.60000000000001,
 65.68,
 65.67999999999999,
 65.64999999999999,
 65.84,
 65.66,
 65.83999999999997,
 65.68,
 62.27999999999999,
 65.67,
 65.67,
 62.27999999999999,
 65.605,
 65.83999999999997,
 65.78999999999999,
 65.83999999999999,
 65.84,
 62.27999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.6275
Upper: 65.81499999999998
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 17, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [2, 9, 11, 18, 20, 21]
====================================
cloned = 2
killed = 4
cloned = 9
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 20
killed = 17
cloned = 21
killed = 22
######################################
~~~ Scores: ~~~
[65.72,
 65.11999999999998,
 65.85999999999999,
 65.11999999999998,
 65.85999999999999,
 65.85999999999999,
 65.72,
 65.72,
 65.11999999999999,
 65.85999999999999,
 65.11999999999999,
 65.85999999999999,
 65.72,
 65.86,
 65.12,
 65.11999999999999,
 65.85999999999999,
 65.85999999999999,
 65.85999999999999,
 65.11999999999999,
 65.85999999999999,
 65.85999999999999,
 65.86]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.12
Upper: 65.85999999999999
====================================
lower list size: 6
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 8, 10, 15, 19]
lower threshold: [14]
....................................
upper threshold: [2, 5, 11, 16, 20, 21]
upper:           [13, 22, 4, 17, 18, 9]
====================================
cloned = 13
killed = 1
cloned = 22
killed = 3
cloned = 4
killed = 8
cloned = 17
killed = 10
cloned = 18
killed = 15
cloned = 9
killed = 19
######################################
~~~ Scores: ~~~
[65.96000000000001,
 65.98,
 65.97999999999999,
 65.97999999999999,
 65.97999999999999,
 65.98,
 65.96000000000001,
 65.96000000000001,
 65.97999999999999,
 65.98,
 65.97999999999999,
 65.98,
 65.96000000000001,
 65.98,
 65.47999999999998,
 65.98,
 65.97999999999999,
 65.98,
 65.97999999999999,
 65.98,
 65.98,
 65.98,
 65.98]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.97999999999999
Upper: 65.98
====================================
lower list size: 5
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 7, 12, 14]
lower threshold: [2, 3, 4, 8, 10, 16, 18]
....................................
upper threshold: [11, 13, 15, 21, 22]
upper:           [19, 5, 1, 20, 17, 9]
====================================
cloned = 19
killed = 0
cloned = 5
killed = 6
cloned = 1
killed = 7
cloned = 20
killed = 12
cloned = 17
killed = 14
Trial run 15/seed 320:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8,
          'Tit For Tat': 6,
          'Evolved FSM 6': 4,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 12,
          'Second by RichardHufford': 7,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.205000000000005,
  56.35,
  59.275,
  54.745,
  52.39000000000001,
  54.370000000000005,
  53.234999999999985,
  37.0,
  44.775000000000006,
  31.25500000000001,
  47.885,
  50.80499999999999,
  45.734999999999985,
  52.37,
  56.419999999999995,
  36.94,
  51.760000000000005,
  47.005,
  45.419999999999995,
  43.99500000000001,
  35.16000000000001,
  55.48,
  52.89999999999999],
 [65.60000000000001,
  63.120000000000005,
  65.215,
  61.83,
  57.815000000000005,
  57.34,
  55.464999999999975,
  65.6,
  63.14,
  65.215,
  54.9,
  54.78999999999999,
  51.279999999999994,
  59.485,
  58.184999999999995,
  61.83,
  56.56999999999999,
  50.265,
  50.53500000000001,
  57.9,
  60.44,
  60.44,
  56.565],
 [65.62,
  67.07,
  65.71000000000001,
  58.73,
  61.82,
  61.56,
  65.62,
  65.62,
  67.20499999999998,
  65.71000000000001,
  67.16,
  65.71,
  65.62,
  62.61,
  61.33,
  58.730000000000004,
  61.650000000000006,
  67.17000000000002,
  65.71,
  61.24999999999999,
  61.53999999999999,
  61.53999999999999,
  61.64999999999999],
 [65.68,
  65.77499999999999,
  65.83999999999999,
  65.77499999999999,
  63.425,
  63.60000000000001,
  65.68,
  65.67999999999999,
  65.64999999999999,
  65.84,
  65.66,
  65.83999999999997,
  65.68,
  62.27999999999999,
  65.67,
  65.67,
  62.27999999999999,
  65.605,
  65.83999999999997,
  65.78999999999999,
  65.83999999999999,
  65.84,
  62.27999999999999],
 [65.72,
  65.11999999999998,
  65.85999999999999,
  65.11999999999998,
  65.85999999999999,
  65.85999999999999,
  65.72,
  65.72,
  65.11999999999999,
  65.85999999999999,
  65.11999999999999,
  65.85999999999999,
  65.72,
  65.86,
  65.12,
  65.11999999999999,
  65.85999999999999,
  65.85999999999999,
  65.85999999999999,
  65.11999999999999,
  65.85999999999999,
  65.85999999999999,
  65.86],
 [65.96000000000001,
  65.98,
  65.97999999999999,
  65.97999999999999,
  65.97999999999999,
  65.98,
  65.96000000000001,
  65.96000000000001,
  65.97999999999999,
  65.98,
  65.97999999999999,
  65.98,
  65.96000000000001,
  65.98,
  65.47999999999998,
  65.98,
  65.97999999999999,
  65.98,
  65.97999999999999,
  65.98,
  65.98,
  65.98,
  65.98]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.555,
 55.825,
 59.25,
 54.71,
 51.86999999999999,
 54.13,
 53.01499999999999,
 37.120000000000005,
 44.730000000000004,
 30.175000000000004,
 47.685,
 50.88499999999999,
 47.69499999999999,
 52.37,
 56.56999999999999,
 36.78,
 51.405,
 47.15,
 46.175,
 41.885000000000005,
 34.69500000000001,
 55.61,
 53.41]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.4525
Upper: 54.42
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.040000000000006,
 65.215,
 61.83,
 57.50999999999999,
 57.34,
 58.37499999999998,
 65.6,
 64.81,
 65.215,
 54.9,
 54.78999999999999,
 51.379999999999995,
 59.485,
 57.89,
 61.83,
 56.56999999999999,
 52.235,
 50.640000000000015,
 57.86,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.435
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.92,
 65.69500000000001,
 58.714999999999996,
 61.790000000000006,
 61.545,
 60.129999999999974,
 65.605,
 66.25,
 65.695,
 65.605,
 64.78499999999998,
 65.69500000000001,
 62.595,
 58.809999999999995,
 58.715,
 61.635000000000005,
 65.605,
 65.60000000000001,
 58.9,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [2, 8, 9, 12, 22]
====================================
cloned = 2
killed = 3
cloned = 8
killed = 6
cloned = 9
killed = 14
cloned = 12
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.285,
 65.9,
 65.89999999999999,
 64.565,
 64.5,
 66.13,
 65.8,
 66.24,
 65.89999999999999,
 65.80000000000001,
 66.27999999999999,
 65.89999999999999,
 63.675,
 65.89999999999999,
 65.89999999999999,
 63.67499999999998,
 65.80000000000001,
 66.17999999999999,
 65.89999999999999,
 63.675,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.1825
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2]
upper:           [1, 6, 8, 11, 18]
====================================
cloned = 1
killed = 4
cloned = 6
killed = 5
cloned = 8
killed = 13
cloned = 11
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27000000000001,
 65.8,
 65.79999999999998,
 65.27,
 65.27,
 65.27000000000001,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.79999999999998,
 65.27,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.27000000000001,
 61.349999999999994,
 65.8]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 16, 11, 5, 4]
lower threshold: [8, 18]
....................................
upper threshold: [14, 15, 19]
upper:           [2, 12, 22, 3, 9]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 16
cloned = 22
killed = 11
cloned = 3
killed = 5
cloned = 9
killed = 4
######################################
~~~ Scores: ~~~
[65.76,
 65.17999999999999,
 65.88,
 65.88,
 65.88,
 65.88,
 65.17999999999999,
 65.76,
 65.17999999999998,
 65.88,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.88,
 65.88,
 65.76,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 8, 13, 18, 20]
lower threshold: []
....................................
upper threshold: [3, 4, 11, 12, 15, 19, 22]
upper:           [16, 14, 21, 5, 2, 9]
====================================
cloned = 16
killed = 1
cloned = 14
killed = 6
cloned = 21
killed = 8
cloned = 5
killed = 13
cloned = 2
killed = 18
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 11, 9, 13, 12]
lower threshold: [0, 1, 2, 3, 4, 6, 14, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 8, 18, 5, 21, 10]
====================================
cloned = 7
killed = 20
cloned = 8
killed = 11
cloned = 18
killed = 9
cloned = 5
killed = 13
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 13, 14, 16, 2]
lower threshold: [0, 3, 4, 7, 8, 10, 11, 12, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 9, 5, 1, 17, 6]
====================================
cloned = 19
killed = 18
cloned = 9
killed = 13
cloned = 5
killed = 14
cloned = 1
killed = 16
cloned = 17
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 15, 16, 21, 8]
lower threshold: [2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 1, 18, 10, 17, 9]
====================================
cloned = 19
killed = 0
cloned = 1
killed = 15
cloned = 18
killed = 16
cloned = 10
killed = 21
cloned = 17
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 3, 16, 12]
lower threshold: [4, 6, 7, 8, 10, 11, 14, 15, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 2, 0, 13, 19, 20]
====================================
cloned = 9
killed = 5
cloned = 2
killed = 1
cloned = 0
killed = 3
cloned = 13
killed = 16
cloned = 19
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 3, 12, 13, 1]
lower threshold: [0, 2, 5, 6, 7, 8, 10, 15, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 16, 4, 11, 17]
====================================
cloned = 14
killed = 19
cloned = 9
killed = 3
cloned = 16
killed = 12
cloned = 4
killed = 13
cloned = 11
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 5, 21, 12, 11]
lower threshold: [0, 4, 8, 9, 10, 13, 15, 16, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 3, 7, 2, 1]
====================================
cloned = 6
killed = 20
cloned = 14
killed = 5
cloned = 3
killed = 21
cloned = 7
killed = 12
cloned = 2
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 19, 17, 5, 10]
lower threshold: [0, 1, 6, 7, 11, 14, 15, 16, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 3, 12, 4, 9, 8]
====================================
cloned = 13
killed = 2
cloned = 3
killed = 19
cloned = 12
killed = 17
cloned = 4
killed = 5
cloned = 9
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 13, 18, 8, 2]
lower threshold: [0, 3, 4, 9, 11, 14, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 6, 12, 5, 1, 7]
====================================
cloned = 10
killed = 19
cloned = 6
killed = 13
cloned = 12
killed = 18
cloned = 5
killed = 8
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 18, 0, 6]
lower threshold: [2, 4, 5, 7, 10, 15, 16, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 9, 13, 14, 1]
====================================
cloned = 8
killed = 11
cloned = 12
killed = 3
cloned = 9
killed = 18
cloned = 13
killed = 0
cloned = 14
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 15, 13, 4, 17]
lower threshold: [0, 1, 2, 5, 6, 7, 12, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 11, 8, 9, 14]
====================================
cloned = 3
killed = 10
cloned = 18
killed = 15
cloned = 11
killed = 13
cloned = 8
killed = 4
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 9, 12, 19]
lower threshold: [1, 2, 5, 7, 8, 10, 11, 14, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 4, 20, 15, 6, 13]
====================================
cloned = 18
killed = 3
cloned = 4
killed = 0
cloned = 20
killed = 9
cloned = 15
killed = 12
cloned = 6
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 16, 19, 9]
lower threshold: [0, 5, 7, 11, 12, 13, 15, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 6, 2, 14, 4, 1]
====================================
cloned = 8
killed = 3
cloned = 6
killed = 10
cloned = 2
killed = 16
cloned = 14
killed = 19
cloned = 4
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 17, 4, 11, 1]
lower threshold: [6, 7, 8, 10, 12, 13, 15, 16, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 14, 21, 3, 5, 2]
====================================
cloned = 0
killed = 9
cloned = 14
killed = 17
cloned = 21
killed = 4
cloned = 3
killed = 11
cloned = 5
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 0, 20, 4, 2]
lower threshold: [1, 3, 7, 8, 10, 11, 13, 15, 16, 17, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 6, 9, 12, 14, 18]
====================================
cloned = 5
killed = 21
cloned = 6
killed = 0
cloned = 9
killed = 20
cloned = 12
killed = 4
cloned = 14
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 19, 0, 5]
lower threshold: [1, 2, 6, 7, 11, 15, 16, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 10, 12, 8, 4, 14]
====================================
cloned = 9
killed = 3
cloned = 10
killed = 13
cloned = 12
killed = 19
cloned = 8
killed = 0
cloned = 4
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 13, 6, 17, 10]
lower threshold: [1, 2, 4, 5, 7, 8, 12, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 11, 20, 0, 3, 9]
====================================
cloned = 15
killed = 14
cloned = 11
killed = 13
cloned = 20
killed = 6
cloned = 0
killed = 17
cloned = 3
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 16, 13, 1]
lower threshold: [2, 4, 5, 8, 9, 11, 15, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 7, 3, 12, 17]
====================================
cloned = 6
killed = 0
cloned = 14
killed = 10
cloned = 7
killed = 16
cloned = 3
killed = 13
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 15, 6, 14, 3]
lower threshold: [0, 1, 2, 5, 7, 9, 10, 16, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 18, 13, 11, 17]
====================================
cloned = 12
killed = 8
cloned = 4
killed = 15
cloned = 18
killed = 6
cloned = 13
killed = 14
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 3, 5, 20]
lower threshold: [1, 2, 6, 7, 10, 13, 14, 15, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 16, 11, 9, 21]
====================================
cloned = 8
killed = 0
cloned = 4
killed = 12
cloned = 16
killed = 3
cloned = 11
killed = 5
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 19, 10, 7, 13]
lower threshold: [0, 2, 3, 6, 8, 11, 12, 14, 15, 17, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 4, 20, 21, 1]
====================================
cloned = 9
killed = 16
cloned = 5
killed = 19
cloned = 4
killed = 10
cloned = 20
killed = 7
cloned = 21
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 13, 5, 7, 1]
lower threshold: [2, 3, 4, 9, 10, 14, 17, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 12, 11, 6, 16]
====================================
cloned = 15
killed = 0
cloned = 8
killed = 13
cloned = 12
killed = 5
cloned = 11
killed = 7
cloned = 6
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 13, 21, 1, 17]
lower threshold: [3, 4, 5, 9, 11, 12, 14, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 10, 7, 2, 6, 8]
====================================
cloned = 16
killed = 0
cloned = 10
killed = 13
cloned = 7
killed = 21
cloned = 2
killed = 1
cloned = 6
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 13, 3, 19, 14]
lower threshold: [0, 1, 2, 4, 7, 8, 9, 10, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 15, 16, 11, 18]
====================================
cloned = 12
killed = 5
cloned = 6
killed = 13
cloned = 15
killed = 3
cloned = 16
killed = 19
cloned = 11
killed = 14
Trial run 16/seed 321:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.555,
  55.825,
  59.25,
  54.71,
  51.86999999999999,
  54.13,
  53.01499999999999,
  37.120000000000005,
  44.730000000000004,
  30.175000000000004,
  47.685,
  50.88499999999999,
  47.69499999999999,
  52.37,
  56.56999999999999,
  36.78,
  51.405,
  47.15,
  46.175,
  41.885000000000005,
  34.69500000000001,
  55.61,
  53.41],
 [65.60000000000001,
  63.040000000000006,
  65.215,
  61.83,
  57.50999999999999,
  57.34,
  58.37499999999998,
  65.6,
  64.81,
  65.215,
  54.9,
  54.78999999999999,
  51.379999999999995,
  59.485,
  57.89,
  61.83,
  56.56999999999999,
  52.235,
  50.640000000000015,
  57.86,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.92,
  65.69500000000001,
  58.714999999999996,
  61.790000000000006,
  61.545,
  60.129999999999974,
  65.605,
  66.25,
  65.695,
  65.605,
  64.78499999999998,
  65.69500000000001,
  62.595,
  58.809999999999995,
  58.715,
  61.635000000000005,
  65.605,
  65.60000000000001,
  58.9,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.285,
  65.9,
  65.89999999999999,
  64.565,
  64.5,
  66.13,
  65.8,
  66.24,
  65.89999999999999,
  65.80000000000001,
  66.27999999999999,
  65.89999999999999,
  63.675,
  65.89999999999999,
  65.89999999999999,
  63.67499999999998,
  65.80000000000001,
  66.17999999999999,
  65.89999999999999,
  63.675,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27000000000001,
  65.8,
  65.79999999999998,
  65.27,
  65.27,
  65.27000000000001,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.79999999999998,
  65.27,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.27000000000001,
  61.349999999999994,
  65.8],
 [65.76,
  65.17999999999999,
  65.88,
  65.88,
  65.88,
  65.88,
  65.17999999999999,
  65.76,
  65.17999999999998,
  65.88,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.88,
  65.88,
  65.76,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.88,
  65.88],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.42000000000001,
 56.71,
 59.349999999999994,
 54.655,
 52.175000000000004,
 53.895,
 51.44499999999999,
 36.78,
 44.835,
 28.28000000000001,
 47.845000000000006,
 50.53499999999999,
 46.3,
 52.47,
 56.06499999999999,
 37.00000000000001,
 51.644999999999996,
 47.11,
 46.28999999999999,
 41.98500000000001,
 34.93000000000001,
 55.459999999999994,
 53.33]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.5625
Upper: 54.275000000000006
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 64.905,
 65.215,
 61.83,
 57.605,
 57.34,
 58.564999999999976,
 65.6,
 63.14,
 65.215,
 54.9,
 54.78999999999999,
 51.4,
 59.485,
 57.79,
 61.83,
 56.56999999999999,
 52.265,
 50.640000000000015,
 57.9,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.485
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 64.9,
 65.69500000000001,
 58.714999999999996,
 61.714999999999996,
 61.545,
 60.00999999999998,
 65.605,
 64.85,
 65.695,
 65.605,
 65.33499999999998,
 65.69500000000001,
 62.595,
 58.76,
 58.715,
 61.635000000000005,
 65.605,
 66.76500000000001,
 58.76,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.52499999999999
Upper: 65.605
====================================
lower list size: 5
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 7, 10, 17]
upper:           [2, 9, 12, 18, 22]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 18
killed = 15
cloned = 22
killed = 19
######################################
~~~ Scores: ~~~
[65.80000000000001,
 66.16000000000001,
 65.9,
 65.89999999999999,
 64.335,
 64.5,
 65.9,
 65.8,
 66.095,
 65.89999999999999,
 65.80000000000001,
 66.05,
 65.89999999999999,
 63.67499999999998,
 65.89999999999999,
 66.25,
 63.675,
 65.80000000000001,
 66.23,
 65.89999999999999,
 63.67499999999998,
 63.675,
 65.89999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.15
Upper: 65.9
====================================
lower list size: 6
upper list size: 5
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 6]
upper:           [1, 8, 11, 15, 18]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 15
killed = 16
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 65.27,
 65.8,
 65.79999999999998,
 65.27,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.79999999999998,
 65.60000000000001,
 65.27,
 65.8,
 65.27000000000001,
 65.79999999999998,
 65.27,
 65.27,
 65.60000000000001,
 65.27000000000001,
 65.8,
 65.27000000000001,
 61.349999999999994,
 65.79999999999998]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.27
Upper: 65.79999999999998
====================================
lower list size: 1
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [21, 11, 8, 1, 4]
lower threshold: [5, 15, 16]
....................................
upper threshold: [3, 6, 22]
upper:           [2, 12, 19, 14, 9]
====================================
cloned = 2
killed = 21
cloned = 12
killed = 11
cloned = 19
killed = 8
cloned = 14
killed = 1
cloned = 9
killed = 4
######################################
~~~ Scores: ~~~
[65.76,
 65.88,
 65.88,
 65.88,
 65.88,
 65.17999999999998,
 65.88,
 65.76,
 65.88,
 65.88,
 65.76,
 65.88,
 65.88,
 65.17999999999999,
 65.88,
 65.17999999999999,
 65.17999999999998,
 65.76,
 65.17999999999999,
 65.88000000000001,
 65.17999999999999,
 65.88,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [5, 13, 15, 16, 18, 20]
lower threshold: []
....................................
upper threshold: [3, 6, 8, 9, 11, 12, 21, 22]
upper:           [19, 4, 2, 14, 1]
====================================
cloned = 19
killed = 5
cloned = 4
killed = 13
cloned = 2
killed = 15
cloned = 14
killed = 16
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[65.96000000000001,
 65.97999999999999,
 65.98,
 65.98,
 65.98,
 65.97999999999999,
 65.98,
 65.96000000000001,
 65.98,
 65.97999999999999,
 65.96000000000001,
 65.97999999999999,
 65.98,
 65.97999999999999,
 65.98,
 65.97999999999999,
 65.98,
 65.96000000000001,
 65.97999999999999,
 65.98,
 65.47999999999998,
 65.97999999999999,
 65.98]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.97999999999999
Upper: 65.98
====================================
lower list size: 5
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 10, 17, 20]
lower threshold: [1, 5, 9, 11, 13, 15, 18, 21]
....................................
upper threshold: [6, 12, 19, 22]
upper:           [2, 16, 8, 3, 4, 14]
====================================
cloned = 2
killed = 0
cloned = 16
killed = 7
cloned = 8
killed = 10
cloned = 3
killed = 17
cloned = 4
killed = 20
Trial run 17/seed 322:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 5,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Second by RichardHufford': 10,
          'Tit For Tat': 8,
          'Evolved FSM 6': 4,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 13,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.42000000000001,
  56.71,
  59.349999999999994,
  54.655,
  52.175000000000004,
  53.895,
  51.44499999999999,
  36.78,
  44.835,
  28.28000000000001,
  47.845000000000006,
  50.53499999999999,
  46.3,
  52.47,
  56.06499999999999,
  37.00000000000001,
  51.644999999999996,
  47.11,
  46.28999999999999,
  41.98500000000001,
  34.93000000000001,
  55.459999999999994,
  53.33],
 [65.60000000000001,
  64.905,
  65.215,
  61.83,
  57.605,
  57.34,
  58.564999999999976,
  65.6,
  63.14,
  65.215,
  54.9,
  54.78999999999999,
  51.4,
  59.485,
  57.79,
  61.83,
  56.56999999999999,
  52.265,
  50.640000000000015,
  57.9,
  60.44,
  60.44,
  56.565],
 [65.605,
  64.9,
  65.69500000000001,
  58.714999999999996,
  61.714999999999996,
  61.545,
  60.00999999999998,
  65.605,
  64.85,
  65.695,
  65.605,
  65.33499999999998,
  65.69500000000001,
  62.595,
  58.76,
  58.715,
  61.635000000000005,
  65.605,
  66.76500000000001,
  58.76,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.80000000000001,
  66.16000000000001,
  65.9,
  65.89999999999999,
  64.335,
  64.5,
  65.9,
  65.8,
  66.095,
  65.89999999999999,
  65.80000000000001,
  66.05,
  65.89999999999999,
  63.67499999999998,
  65.89999999999999,
  66.25,
  63.675,
  65.80000000000001,
  66.23,
  65.89999999999999,
  63.67499999999998,
  63.675,
  65.89999999999999],
 [65.60000000000001,
  65.27,
  65.8,
  65.79999999999998,
  65.27,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.79999999999998,
  65.60000000000001,
  65.27,
  65.8,
  65.27000000000001,
  65.79999999999998,
  65.27,
  65.27,
  65.60000000000001,
  65.27000000000001,
  65.8,
  65.27000000000001,
  61.349999999999994,
  65.79999999999998],
 [65.76,
  65.88,
  65.88,
  65.88,
  65.88,
  65.17999999999998,
  65.88,
  65.76,
  65.88,
  65.88,
  65.76,
  65.88,
  65.88,
  65.17999999999999,
  65.88,
  65.17999999999999,
  65.17999999999998,
  65.76,
  65.17999999999999,
  65.88000000000001,
  65.17999999999999,
  65.88,
  65.88],
 [65.96000000000001,
  65.97999999999999,
  65.98,
  65.98,
  65.98,
  65.97999999999999,
  65.98,
  65.96000000000001,
  65.98,
  65.97999999999999,
  65.96000000000001,
  65.97999999999999,
  65.98,
  65.97999999999999,
  65.98,
  65.97999999999999,
  65.98,
  65.96000000000001,
  65.97999999999999,
  65.98,
  65.47999999999998,
  65.97999999999999,
  65.98]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.205000000000005,
 55.919999999999995,
 59.425,
 54.74,
 52.445,
 53.995000000000005,
 53.77499999999999,
 36.74,
 44.88,
 30.285000000000007,
 48.085,
 50.94499999999999,
 47.629999999999995,
 52.464999999999996,
 56.62499999999999,
 36.98,
 50.97,
 47.12,
 46.455,
 41.875,
 34.82000000000001,
 55.589999999999996,
 53.36]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.667500000000004
Upper: 54.36750000000001
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.60000000000001,
 63.790000000000006,
 65.215,
 61.83,
 57.589999999999996,
 57.34,
 58.604999999999976,
 65.6,
 63.89,
 65.215,
 54.9,
 54.78999999999999,
 51.36,
 59.485,
 57.86,
 61.83,
 56.56999999999999,
 52.245,
 50.66000000000001,
 58.059999999999995,
 60.44,
 60.44,
 56.565]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.567499999999995
Upper: 62.81
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.605,
 65.255,
 65.69500000000001,
 58.714999999999996,
 61.605000000000004,
 61.545,
 61.69999999999998,
 65.605,
 66.795,
 65.695,
 65.605,
 66.55,
 65.69500000000001,
 62.595,
 58.91,
 58.715,
 61.635000000000005,
 65.605,
 65.165,
 58.85,
 61.52499999999999,
 61.52499999999999,
 65.695]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.535
Upper: 65.65
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 15, 19, 20, 21]
lower threshold: []
....................................
upper threshold: []
upper:           [2, 8, 9, 11, 12, 22]
====================================
cloned = 2
killed = 3
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 11
killed = 19
cloned = 12
killed = 20
cloned = 22
killed = 21
######################################
~~~ Scores: ~~~
[65.745,
 63.864999999999995,
 65.865,
 65.86499999999998,
 63.935,
 64.185,
 61.69999999999998,
 65.745,
 63.71,
 65.865,
 65.745,
 64.95499999999998,
 65.865,
 63.19499999999999,
 63.49,
 65.86499999999998,
 63.19499999999999,
 65.745,
 64.965,
 64.905,
 65.865,
 65.865,
 65.865]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 63.9
Upper: 65.86499999999998
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 8, 13, 14, 16]
lower threshold: []
....................................
upper threshold: [3, 15]
upper:           [2, 9, 12, 20, 21, 22]
====================================
cloned = 2
killed = 1
cloned = 9
killed = 6
cloned = 12
killed = 8
cloned = 20
killed = 13
cloned = 21
killed = 14
cloned = 22
killed = 16
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.005,
 65.1,
 65.94,
 65.88,
 65.94,
 65.94,
 65.88,
 64.99999999999999,
 65.94,
 65.94,
 65.94,
 65.94,
 65.94,
 65.88,
 65.13999999999997,
 64.96499999999999,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 5
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 11, 18, 19]
lower threshold: [0, 7, 10, 17]
....................................
upper threshold: [2, 3, 8, 12, 15, 20, 21, 22]
upper:           [14, 9, 1, 6, 13, 16]
====================================
cloned = 14
killed = 4
cloned = 9
killed = 5
cloned = 1
killed = 11
cloned = 6
killed = 18
cloned = 13
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 11, 3, 15, 0]
lower threshold: [1, 2, 6, 7, 9, 10, 12, 13, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 8, 16, 19, 5]
====================================
cloned = 14
killed = 20
cloned = 4
killed = 11
cloned = 8
killed = 3
cloned = 16
killed = 15
cloned = 19
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 18, 21, 11]
lower threshold: [1, 4, 6, 8, 9, 13, 14, 15, 16, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 12, 2, 10, 17, 7]
====================================
cloned = 3
killed = 0
cloned = 12
killed = 5
cloned = 2
killed = 18
cloned = 10
killed = 21
cloned = 17
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 20, 9, 5, 6]
lower threshold: [0, 1, 2, 7, 8, 10, 13, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 11, 17, 4, 3, 12]
====================================
cloned = 15
killed = 14
cloned = 11
killed = 20
cloned = 17
killed = 9
cloned = 4
killed = 5
cloned = 3
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 14, 19, 20]
lower threshold: [0, 1, 3, 4, 8, 10, 11, 12, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 18, 2, 21, 9, 7]
====================================
cloned = 13
killed = 5
cloned = 18
killed = 6
cloned = 2
killed = 14
cloned = 21
killed = 19
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 21, 11, 15]
lower threshold: [0, 2, 3, 4, 5, 8, 9, 13, 14, 16, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 12, 6, 1, 18, 17]
====================================
cloned = 19
killed = 10
cloned = 12
killed = 7
cloned = 6
killed = 21
cloned = 1
killed = 11
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 14, 20, 6]
lower threshold: [1, 2, 3, 4, 5, 8, 12, 13, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 16, 0, 10, 11, 7]
====================================
cloned = 15
killed = 9
cloned = 16
killed = 19
cloned = 0
killed = 14
cloned = 10
killed = 20
cloned = 11
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 14, 2, 12]
lower threshold: [0, 1, 4, 8, 9, 10, 11, 13, 15, 16, 17, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 6, 21, 7, 19, 18]
====================================
cloned = 5
killed = 20
cloned = 6
killed = 3
cloned = 21
killed = 14
cloned = 7
killed = 2
cloned = 19
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 20, 16, 17, 9]
lower threshold: [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 18, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 4, 13, 14, 21, 19]
====================================
cloned = 15
killed = 0
cloned = 4
killed = 20
cloned = 13
killed = 16
cloned = 14
killed = 17
cloned = 21
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 4, 2, 20]
lower threshold: [1, 3, 6, 8, 9, 11, 12, 13, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 0, 14, 16, 10, 15]
====================================
cloned = 19
killed = 5
cloned = 0
killed = 7
cloned = 14
killed = 4
cloned = 16
killed = 2
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 20, 0, 1, 11]
lower threshold: [4, 6, 7, 8, 9, 10, 13, 15, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 21, 3, 14, 16, 12]
====================================
cloned = 2
killed = 5
cloned = 21
killed = 20
cloned = 3
killed = 0
cloned = 14
killed = 1
cloned = 16
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 13, 9, 17]
lower threshold: [0, 1, 3, 4, 5, 6, 12, 14, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 11, 19, 10, 18, 7]
====================================
cloned = 16
killed = 2
cloned = 11
killed = 8
cloned = 19
killed = 13
cloned = 10
killed = 9
cloned = 18
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 3, 5, 4]
lower threshold: [2, 7, 9, 10, 12, 13, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 18, 0, 14, 6, 21]
====================================
cloned = 8
killed = 1
cloned = 18
killed = 11
cloned = 0
killed = 3
cloned = 14
killed = 5
cloned = 6
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 19, 0, 13, 17]
lower threshold: [1, 2, 3, 4, 5, 6, 9, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 11, 10, 7, 14, 12]
====================================
cloned = 18
killed = 8
cloned = 11
killed = 19
cloned = 10
killed = 0
cloned = 7
killed = 13
cloned = 14
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 0, 13, 21]
lower threshold: [2, 3, 4, 6, 7, 10, 11, 12, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 1, 5, 16, 8, 14]
====================================
cloned = 20
killed = 9
cloned = 1
killed = 15
cloned = 5
killed = 0
cloned = 16
killed = 13
cloned = 8
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 5, 7, 11]
lower threshold: [0, 1, 2, 3, 6, 12, 14, 15, 16, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 20, 19, 8, 10, 4]
====================================
cloned = 13
killed = 17
cloned = 20
killed = 9
cloned = 19
killed = 5
cloned = 8
killed = 7
cloned = 10
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 17, 3, 4, 7]
lower threshold: [0, 1, 2, 5, 6, 11, 12, 13, 15, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 14, 18, 21, 10, 9]
====================================
cloned = 8
killed = 16
cloned = 14
killed = 17
cloned = 18
killed = 3
cloned = 21
killed = 4
cloned = 10
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 14, 6, 0, 8]
lower threshold: [2, 3, 5, 9, 10, 12, 13, 17, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 15, 4, 11, 16, 21]
====================================
cloned = 7
killed = 1
cloned = 15
killed = 14
cloned = 4
killed = 6
cloned = 11
killed = 0
cloned = 16
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 11, 17, 3]
lower threshold: [0, 2, 5, 6, 10, 12, 14, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 20, 15, 9, 4, 8]
====================================
cloned = 13
killed = 1
cloned = 20
killed = 7
cloned = 15
killed = 11
cloned = 9
killed = 17
cloned = 4
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 18, 14, 5]
lower threshold: [0, 1, 2, 7, 9, 13, 15, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 11, 6, 12, 10, 4]
====================================
cloned = 19
killed = 8
cloned = 11
killed = 3
cloned = 6
killed = 18
cloned = 12
killed = 14
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 19, 17, 15, 18]
lower threshold: [0, 1, 2, 4, 7, 9, 11, 13, 14, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 10, 12, 8, 6, 16]
====================================
cloned = 3
killed = 5
cloned = 10
killed = 19
cloned = 12
killed = 17
cloned = 8
killed = 15
cloned = 6
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 21, 20, 7, 10]
lower threshold: [0, 2, 3, 4, 8, 11, 12, 13, 14, 15, 16, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 1, 6, 5, 19, 18]
====================================
cloned = 17
killed = 9
cloned = 1
killed = 21
cloned = 6
killed = 20
cloned = 5
killed = 7
cloned = 19
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 4, 10, 2, 7]
lower threshold: [3, 6, 8, 9, 11, 12, 13, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 14, 1, 18, 21, 0]
====================================
cloned = 5
killed = 16
cloned = 14
killed = 4
cloned = 1
killed = 10
cloned = 18
killed = 2
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 10, 18, 5]
lower threshold: [0, 1, 2, 4, 7, 9, 13, 15, 16, 17, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 12, 3, 19, 8]
====================================
cloned = 6
killed = 11
cloned = 14
killed = 20
cloned = 12
killed = 10
cloned = 3
killed = 18
cloned = 19
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 18, 1, 0, 15]
lower threshold: [3, 4, 5, 11, 12, 13, 14, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 7, 9, 19, 2, 6]
====================================
cloned = 8
killed = 10
cloned = 7
killed = 18
cloned = 9
killed = 1
cloned = 19
killed = 0
cloned = 2
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 21, 3, 15]
lower threshold: [2, 4, 6, 7, 8, 11, 12, 13, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 10, 17, 9, 16, 0]
====================================
cloned = 1
killed = 5
cloned = 10
killed = 14
cloned = 17
killed = 21
cloned = 9
killed = 3
cloned = 16
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 21, 8, 0, 2]
lower threshold: [1, 3, 7, 9, 10, 13, 15, 16, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 14, 5, 18, 6, 4]
====================================
cloned = 11
killed = 12
cloned = 14
killed = 21
cloned = 5
killed = 8
cloned = 18
killed = 0
cloned = 6
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 19, 12, 14, 6]
lower threshold: [0, 4, 7, 8, 9, 11, 13, 16, 17, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 2, 1, 20, 3, 15]
====================================
cloned = 5
killed = 10
cloned = 2
killed = 19
cloned = 1
killed = 12
cloned = 20
killed = 14
cloned = 3
killed = 6
Trial run 18/seed 323:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Second by RichardHufford': 6,
          'Evolved FSM 6': 4,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 14,
          'Evolved FSM 6': 4,
          'Second by RichardHufford': 3,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.205000000000005,
  55.919999999999995,
  59.425,
  54.74,
  52.445,
  53.995000000000005,
  53.77499999999999,
  36.74,
  44.88,
  30.285000000000007,
  48.085,
  50.94499999999999,
  47.629999999999995,
  52.464999999999996,
  56.62499999999999,
  36.98,
  50.97,
  47.12,
  46.455,
  41.875,
  34.82000000000001,
  55.589999999999996,
  53.36],
 [65.60000000000001,
  63.790000000000006,
  65.215,
  61.83,
  57.589999999999996,
  57.34,
  58.604999999999976,
  65.6,
  63.89,
  65.215,
  54.9,
  54.78999999999999,
  51.36,
  59.485,
  57.86,
  61.83,
  56.56999999999999,
  52.245,
  50.66000000000001,
  58.059999999999995,
  60.44,
  60.44,
  56.565],
 [65.605,
  65.255,
  65.69500000000001,
  58.714999999999996,
  61.605000000000004,
  61.545,
  61.69999999999998,
  65.605,
  66.795,
  65.695,
  65.605,
  66.55,
  65.69500000000001,
  62.595,
  58.91,
  58.715,
  61.635000000000005,
  65.605,
  65.165,
  58.85,
  61.52499999999999,
  61.52499999999999,
  65.695],
 [65.745,
  63.864999999999995,
  65.865,
  65.86499999999998,
  63.935,
  64.185,
  61.69999999999998,
  65.745,
  63.71,
  65.865,
  65.745,
  64.95499999999998,
  65.865,
  63.19499999999999,
  63.49,
  65.86499999999998,
  63.19499999999999,
  65.745,
  64.965,
  64.905,
  65.865,
  65.865,
  65.865],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.005,
  65.1,
  65.94,
  65.88,
  65.94,
  65.94,
  65.88,
  64.99999999999999,
  65.94,
  65.94,
  65.94,
  65.94,
  65.94,
  65.88,
  65.13999999999997,
  64.96499999999999,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.26500000000001,
 55.815000000000005,
 59.294999999999995,
 54.815,
 52.515,
 53.470000000000006,
 56.644999999999996,
 36.74,
 44.910000000000004,
 32.324999999999996,
 47.755,
 51.03499999999999,
 47.75999999999999,
 52.43,
 56.46499999999999,
 36.86,
 51.269999999999996,
 49.050000000000004,
 45.654999999999994,
 43.965,
 34.910000000000004,
 55.504999999999995,
 53.41499999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.2825
Upper: 55.16
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 60.92,
 65.2,
 61.815,
 57.695,
 57.325,
 60.52999999999999,
 65.585,
 63.135000000000005,
 65.2,
 54.885,
 54.77499999999999,
 53.555,
 59.47,
 57.125,
 59.219999999999985,
 56.55499999999999,
 52.595,
 49.05500000000001,
 56.915,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 61.3675
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 2
killed = 11
cloned = 3
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.63,
 63.419999999999995,
 65.7,
 60.769999999999996,
 61.885,
 61.83,
 60.434999999999974,
 65.63,
 63.97,
 65.69999999999999,
 65.63,
 65.7,
 60.77,
 63.045,
 57.389999999999986,
 60.21999999999998,
 62.084999999999994,
 65.63,
 63.005,
 57.255,
 61.974999999999994,
 61.974999999999994,
 65.7]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.3
Upper: 65.63
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 12, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [10, 17]
upper:           [2, 9, 11, 22, 0, 7]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 11
killed = 12
cloned = 22
killed = 14
cloned = 0
killed = 15
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[65.88,
 66.42999999999999,
 65.94,
 65.94,
 65.03,
 65.1,
 65.94,
 65.88,
 66.21,
 65.94,
 65.88,
 65.94,
 65.94,
 64.60499999999999,
 65.94,
 65.88,
 64.60499999999999,
 65.88,
 66.28,
 65.88,
 64.60499999999999,
 64.605,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.49
Upper: 65.94
====================================
lower list size: 6
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [2, 3, 6, 11, 14, 22]
upper:           [1, 8, 18, 9, 12]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 18
killed = 13
cloned = 9
killed = 16
cloned = 12
killed = 20
######################################
~~~ Scores: ~~~
[65.76,
 65.46999999999998,
 65.88,
 65.88,
 65.47,
 65.46999999999998,
 65.88,
 65.76,
 65.47,
 65.88,
 65.76,
 65.88,
 65.88,
 65.47,
 65.88,
 65.76,
 65.88,
 65.76,
 65.46999999999998,
 65.76,
 65.88,
 63.209999999999994,
 65.88]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.47
Upper: 65.88
====================================
lower list size: 4
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 18, 21, 8]
lower threshold: [4, 13]
....................................
upper threshold: [3, 9, 20, 22]
upper:           [6, 2, 12, 11, 16, 14]
====================================
cloned = 6
killed = 1
cloned = 2
killed = 5
cloned = 12
killed = 18
cloned = 11
killed = 21
cloned = 16
killed = 8
######################################
~~~ Scores: ~~~
[65.92,
 65.96,
 65.96000000000001,
 65.96000000000001,
 65.37999999999998,
 65.96,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.37999999999998,
 65.96000000000001,
 65.92,
 65.96,
 65.92,
 65.96000000000001,
 65.92,
 65.96000000000001,
 65.96000000000001,
 65.96000000000001]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.92
Upper: 65.96000000000001
====================================
lower list size: 2
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 10, 7, 17]
lower threshold: [0, 15, 19]
....................................
upper threshold: [3, 8, 14, 18, 20, 22]
upper:           [9, 11, 2, 12, 6, 21]
====================================
cloned = 9
killed = 4
cloned = 11
killed = 13
cloned = 2
killed = 10
cloned = 12
killed = 7
cloned = 6
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 2, 9, 14]
lower threshold: [3, 5, 8, 10, 13, 15, 16, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 12, 6, 4, 17, 11]
====================================
cloned = 0
killed = 7
cloned = 12
killed = 1
cloned = 6
killed = 2
cloned = 4
killed = 9
cloned = 17
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 14, 18, 2, 20]
lower threshold: [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 15, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 17, 12, 21, 13, 10]
====================================
cloned = 16
killed = 19
cloned = 17
killed = 14
cloned = 12
killed = 18
cloned = 21
killed = 2
cloned = 13
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 18, 13, 14, 2]
lower threshold: [1, 3, 5, 7, 8, 9, 11, 12, 15, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 6, 10, 19, 0, 17]
====================================
cloned = 16
killed = 4
cloned = 6
killed = 18
cloned = 10
killed = 13
cloned = 19
killed = 14
cloned = 0
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 14, 5, 20, 4]
lower threshold: [0, 1, 3, 7, 9, 10, 15, 17, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 16, 8, 12, 2, 6]
====================================
cloned = 11
killed = 13
cloned = 16
killed = 14
cloned = 8
killed = 5
cloned = 12
killed = 20
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 4, 20, 10]
lower threshold: [2, 3, 7, 8, 9, 13, 14, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 6, 5, 17, 0]
====================================
cloned = 12
killed = 11
cloned = 15
killed = 1
cloned = 6
killed = 4
cloned = 5
killed = 20
cloned = 17
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 12, 0, 17]
lower threshold: [2, 3, 5, 9, 10, 11, 13, 15, 18, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 4, 16, 1, 21]
====================================
cloned = 6
killed = 8
cloned = 14
killed = 7
cloned = 4
killed = 12
cloned = 16
killed = 0
cloned = 1
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 6, 18, 12]
lower threshold: [2, 3, 7, 8, 9, 11, 13, 15, 16, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 0, 19, 17, 14]
====================================
cloned = 5
killed = 10
cloned = 4
killed = 1
cloned = 0
killed = 6
cloned = 19
killed = 18
cloned = 17
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 16, 18, 10]
lower threshold: [1, 4, 7, 8, 9, 13, 14, 17, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 5, 3, 0, 2]
====================================
cloned = 12
killed = 15
cloned = 6
killed = 11
cloned = 5
killed = 16
cloned = 3
killed = 18
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 2, 10, 19]
lower threshold: [0, 1, 4, 7, 9, 11, 14, 17, 18, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 3, 15, 6, 16, 13]
====================================
cloned = 5
killed = 12
cloned = 3
killed = 8
cloned = 15
killed = 2
cloned = 6
killed = 10
cloned = 16
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 21, 13, 1, 2]
lower threshold: [0, 4, 5, 6, 8, 10, 11, 12, 16, 17, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 14, 3, 15, 19, 18]
====================================
cloned = 9
killed = 7
cloned = 14
killed = 21
cloned = 3
killed = 13
cloned = 15
killed = 1
cloned = 19
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 14, 9, 15, 3]
lower threshold: [0, 1, 5, 7, 10, 12, 13, 16, 18, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 11, 17, 8, 6, 20]
====================================
cloned = 2
killed = 4
cloned = 11
killed = 14
cloned = 17
killed = 9
cloned = 8
killed = 15
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 17, 7, 16, 18]
lower threshold: [0, 1, 2, 3, 4, 8, 11, 12, 13, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 6, 14, 15, 5]
====================================
cloned = 10
killed = 9
cloned = 19
killed = 17
cloned = 6
killed = 7
cloned = 14
killed = 16
cloned = 15
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 7, 2, 11, 20]
lower threshold: [0, 3, 4, 6, 8, 9, 10, 12, 14, 16, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 1, 15, 18, 17]
====================================
cloned = 5
killed = 19
cloned = 13
killed = 7
cloned = 1
killed = 2
cloned = 15
killed = 11
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 2, 16, 9]
lower threshold: [1, 3, 4, 5, 6, 8, 10, 12, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 13, 15, 11, 7, 19]
====================================
cloned = 21
killed = 14
cloned = 13
killed = 0
cloned = 15
killed = 2
cloned = 11
killed = 16
cloned = 7
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 4, 3, 15]
lower threshold: [2, 6, 8, 10, 11, 13, 14, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 18, 5, 19, 1]
====================================
cloned = 12
killed = 9
cloned = 0
killed = 7
cloned = 18
killed = 4
cloned = 5
killed = 3
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 12, 9, 14, 21]
lower threshold: [0, 1, 3, 4, 6, 7, 10, 16, 17, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 19, 13, 8, 11, 2]
====================================
cloned = 15
killed = 5
cloned = 19
killed = 12
cloned = 13
killed = 9
cloned = 8
killed = 14
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 16, 7, 2, 4]
lower threshold: [0, 3, 6, 8, 9, 10, 11, 15, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 1, 14, 18, 5, 12]
====================================
cloned = 13
killed = 19
cloned = 1
killed = 16
cloned = 14
killed = 7
cloned = 18
killed = 2
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 17, 2, 18, 13]
lower threshold: [0, 1, 3, 4, 7, 10, 11, 12, 15, 19, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 6, 5, 20, 9, 14]
====================================
cloned = 8
killed = 16
cloned = 6
killed = 17
cloned = 5
killed = 2
cloned = 20
killed = 18
cloned = 9
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 17, 11, 5, 0]
lower threshold: [1, 2, 6, 7, 10, 13, 15, 18, 19, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 4, 3, 12, 8]
====================================
cloned = 14
killed = 16
cloned = 9
killed = 17
cloned = 4
killed = 11
cloned = 3
killed = 5
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 16, 13, 9]
lower threshold: [1, 3, 5, 7, 8, 10, 12, 15, 17, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 21, 20, 14, 2, 6]
====================================
cloned = 0
killed = 4
cloned = 21
killed = 11
cloned = 20
killed = 16
cloned = 14
killed = 13
cloned = 2
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 15, 14, 8, 13]
lower threshold: [0, 1, 2, 4, 5, 6, 10, 11, 12, 18, 19, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 16, 17, 9, 21, 7]
====================================
cloned = 20
killed = 3
cloned = 16
killed = 15
cloned = 17
killed = 14
cloned = 9
killed = 8
cloned = 21
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 17, 11, 12, 21]
lower threshold: [1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 19, 0, 9, 10, 14]
====================================
cloned = 13
killed = 15
cloned = 19
killed = 17
cloned = 0
killed = 11
cloned = 9
killed = 12
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 7, 13, 5, 1]
lower threshold: [0, 2, 3, 8, 9, 11, 14, 15, 17, 19, 20, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 10, 4, 12, 16, 6]
====================================
cloned = 21
killed = 18
cloned = 10
killed = 7
cloned = 4
killed = 13
cloned = 12
killed = 5
cloned = 16
killed = 1
Trial run 19/seed 324:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Second by RichardHufford': 3,
          'Evolved FSM 16': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 3,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 6,
          'Evolved ANN 5': 1}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 6,
          'Second by RichardHufford': 2}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 21, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.26500000000001,
  55.815000000000005,
  59.294999999999995,
  54.815,
  52.515,
  53.470000000000006,
  56.644999999999996,
  36.74,
  44.910000000000004,
  32.324999999999996,
  47.755,
  51.03499999999999,
  47.75999999999999,
  52.43,
  56.46499999999999,
  36.86,
  51.269999999999996,
  49.050000000000004,
  45.654999999999994,
  43.965,
  34.910000000000004,
  55.504999999999995,
  53.41499999999999],
 [65.58500000000001,
  60.92,
  65.2,
  61.815,
  57.695,
  57.325,
  60.52999999999999,
  65.585,
  63.135000000000005,
  65.2,
  54.885,
  54.77499999999999,
  53.555,
  59.47,
  57.125,
  59.219999999999985,
  56.55499999999999,
  52.595,
  49.05500000000001,
  56.915,
  60.425,
  60.425,
  56.55],
 [65.63,
  63.419999999999995,
  65.7,
  60.769999999999996,
  61.885,
  61.83,
  60.434999999999974,
  65.63,
  63.97,
  65.69999999999999,
  65.63,
  65.7,
  60.77,
  63.045,
  57.389999999999986,
  60.21999999999998,
  62.084999999999994,
  65.63,
  63.005,
  57.255,
  61.974999999999994,
  61.974999999999994,
  65.7],
 [65.88,
  66.42999999999999,
  65.94,
  65.94,
  65.03,
  65.1,
  65.94,
  65.88,
  66.21,
  65.94,
  65.88,
  65.94,
  65.94,
  64.60499999999999,
  65.94,
  65.88,
  64.60499999999999,
  65.88,
  66.28,
  65.88,
  64.60499999999999,
  64.605,
  65.94],
 [65.76,
  65.46999999999998,
  65.88,
  65.88,
  65.47,
  65.46999999999998,
  65.88,
  65.76,
  65.47,
  65.88,
  65.76,
  65.88,
  65.88,
  65.47,
  65.88,
  65.76,
  65.88,
  65.76,
  65.46999999999998,
  65.76,
  65.88,
  63.209999999999994,
  65.88],
 [65.92,
  65.96,
  65.96000000000001,
  65.96000000000001,
  65.37999999999998,
  65.96,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.37999999999998,
  65.96000000000001,
  65.92,
  65.96,
  65.92,
  65.96000000000001,
  65.92,
  65.96000000000001,
  65.96000000000001,
  65.96000000000001],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.29,
 56.08,
 59.25,
 54.765,
 52.175,
 53.785000000000004,
 55.03999999999999,
 37.06,
 44.595000000000006,
 29.244999999999997,
 47.89,
 50.67499999999999,
 48.469999999999985,
 52.29,
 56.455,
 36.795,
 51.725,
 49.15,
 45.605,
 41.915000000000006,
 34.830000000000005,
 55.379999999999995,
 53.41499999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 45.1
Upper: 54.902499999999996
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 15, 19, 20]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 6, 14, 21]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 19
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[65.58500000000001,
 62.77,
 65.2,
 61.815,
 57.605,
 57.325,
 60.41999999999999,
 65.585,
 63.50500000000001,
 65.2,
 54.885,
 54.77499999999999,
 51.645,
 59.47,
 57.135,
 57.33499999999998,
 56.55499999999999,
 50.614999999999995,
 49.050000000000004,
 56.845,
 60.425,
 60.425,
 56.55]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 56.552499999999995
Upper: 62.292500000000004
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 12, 17, 18, 22]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 7, 8, 9]
====================================
cloned = 0
killed = 10
cloned = 1
killed = 11
cloned = 2
killed = 12
cloned = 7
killed = 17
cloned = 8
killed = 18
cloned = 9
killed = 22
######################################
~~~ Scores: ~~~
[65.59,
 64.055,
 65.68,
 58.699999999999996,
 61.745000000000005,
 61.53,
 59.18499999999998,
 65.59,
 63.47500000000001,
 65.67999999999999,
 65.59,
 62.73499999999999,
 65.68,
 62.58,
 57.834999999999994,
 60.23999999999998,
 61.620000000000005,
 65.59,
 63.275,
 57.980000000000004,
 61.50999999999999,
 61.50999999999999,
 65.67999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 61.50999999999999
Upper: 65.59
====================================
lower list size: 5
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 15, 19]
lower threshold: [20, 21]
....................................
upper threshold: [0, 17]
upper:           [2, 9, 12, 22, 7, 10]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 6
cloned = 12
killed = 14
cloned = 22
killed = 15
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 66.15,
 65.92,
 65.91999999999999,
 64.625,
 64.80000000000001,
 65.91999999999999,
 65.84,
 66.295,
 65.91999999999999,
 65.84,
 66.095,
 65.92,
 64.13999999999999,
 65.91999999999999,
 65.91999999999999,
 64.13999999999999,
 65.84,
 66.195,
 65.84,
 64.13999999999999,
 64.14,
 65.92]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.32000000000001
Upper: 65.92
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 13, 16, 20, 21]
lower threshold: []
....................................
upper threshold: [22]
upper:           [1, 8, 11, 18, 2, 12]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 13
cloned = 18
killed = 16
cloned = 2
killed = 20
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[65.68,
 65.03999999999999,
 65.83999999999999,
 65.83999999999997,
 65.03999999999999,
 65.03999999999999,
 65.84,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.68,
 65.03999999999999,
 65.83999999999999,
 65.04,
 65.83999999999997,
 65.83999999999999,
 65.03999999999999,
 65.68,
 65.03999999999999,
 65.68,
 65.83999999999997,
 65.83999999999999,
 65.83999999999999]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.03999999999999
Upper: 65.83999999999999
====================================
lower list size: 0
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 16, 4, 8]
lower threshold: [5, 18]
....................................
upper threshold: [21, 22]
upper:           [6, 15, 12, 2, 9]
====================================
cloned = 6
killed = 11
cloned = 15
killed = 1
cloned = 12
killed = 16
cloned = 2
killed = 4
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[65.88,
 65.94,
 65.94,
 65.94,
 65.94,
 65.33999999999997,
 65.94,
 65.88,
 65.94,
 65.94,
 65.88,
 65.94,
 65.94,
 65.33999999999999,
 65.94,
 65.94,
 65.94,
 65.88,
 65.33999999999997,
 65.88,
 65.94,
 65.94,
 65.94]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 65.88
Upper: 65.94
====================================
lower list size: 3
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 13, 18, 7, 0]
lower threshold: [10, 17, 19]
....................................
upper threshold: [1, 6, 8, 11, 12, 15, 16, 20, 22]
upper:           [21, 3, 14, 2, 9, 4]
====================================
cloned = 21
killed = 5
cloned = 3
killed = 13
cloned = 14
killed = 18
cloned = 2
killed = 7
cloned = 9
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 7, 17, 19, 0]
lower threshold: [1, 2, 3, 4, 5, 6, 8, 10, 13, 18, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 12, 16, 9, 11]
====================================
cloned = 20
killed = 15
cloned = 14
killed = 7
cloned = 12
killed = 17
cloned = 16
killed = 19
cloned = 9
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 25%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 15, 19, 11]
lower threshold: [1, 3, 5, 6, 8, 12, 14, 16, 17, 20, 21, 22]
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 9, 0, 13, 2, 18]
====================================
cloned = 7
killed = 10
cloned = 9
killed = 4
cloned = 0
killed = 15
cloned = 13
killed = 19
cloned = 2
killed = 11
Trial run 20/seed 325:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Michaelos: (D,)': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 4,
          'Evolved ANN 5': 2,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Tit For 2 Tats': 1,
          'Revised Downing': 1}),
 Counter({'Tit For Tat': 10,
          'Second by RichardHufford': 8,
          'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 15,
          'Evolved FSM 6': 5,
          'Second by RichardHufford': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.29,
  56.08,
  59.25,
  54.765,
  52.175,
  53.785000000000004,
  55.03999999999999,
  37.06,
  44.595000000000006,
  29.244999999999997,
  47.89,
  50.67499999999999,
  48.469999999999985,
  52.29,
  56.455,
  36.795,
  51.725,
  49.15,
  45.605,
  41.915000000000006,
  34.830000000000005,
  55.379999999999995,
  53.41499999999999],
 [65.58500000000001,
  62.77,
  65.2,
  61.815,
  57.605,
  57.325,
  60.41999999999999,
  65.585,
  63.50500000000001,
  65.2,
  54.885,
  54.77499999999999,
  51.645,
  59.47,
  57.135,
  57.33499999999998,
  56.55499999999999,
  50.614999999999995,
  49.050000000000004,
  56.845,
  60.425,
  60.425,
  56.55],
 [65.59,
  64.055,
  65.68,
  58.699999999999996,
  61.745000000000005,
  61.53,
  59.18499999999998,
  65.59,
  63.47500000000001,
  65.67999999999999,
  65.59,
  62.73499999999999,
  65.68,
  62.58,
  57.834999999999994,
  60.23999999999998,
  61.620000000000005,
  65.59,
  63.275,
  57.980000000000004,
  61.50999999999999,
  61.50999999999999,
  65.67999999999999],
 [65.84,
  66.15,
  65.92,
  65.91999999999999,
  64.625,
  64.80000000000001,
  65.91999999999999,
  65.84,
  66.295,
  65.91999999999999,
  65.84,
  66.095,
  65.92,
  64.13999999999999,
  65.91999999999999,
  65.91999999999999,
  64.13999999999999,
  65.84,
  66.195,
  65.84,
  64.13999999999999,
  64.14,
  65.92],
 [65.68,
  65.03999999999999,
  65.83999999999999,
  65.83999999999997,
  65.03999999999999,
  65.03999999999999,
  65.84,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.68,
  65.03999999999999,
  65.83999999999999,
  65.04,
  65.83999999999997,
  65.83999999999999,
  65.03999999999999,
  65.68,
  65.03999999999999,
  65.68,
  65.83999999999997,
  65.83999999999999,
  65.83999999999999],
 [65.88,
  65.94,
  65.94,
  65.94,
  65.94,
  65.33999999999997,
  65.94,
  65.88,
  65.94,
  65.94,
  65.88,
  65.94,
  65.94,
  65.33999999999999,
  65.94,
  65.94,
  65.94,
  65.88,
  65.33999999999997,
  65.88,
  65.94,
  65.94,
  65.94],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
