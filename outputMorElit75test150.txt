>>> Output of Elitist Selection (Modified) Moran Process <<<
------------------------------------------------------------
Experiment parameters:
1. Player Agents: 14
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
2. newFileNameNumber for plot:           75
3. (Number of) turns:                    20
4. Starting seed (firstSeed):            12901
5. iterations:                           20
6. splitThresholdPercentile:             50%
7. ConvergeScoreGenLimit:                100
8. displayOutput:                        True
9. createPlot:                           2
10.PlotFileType:                         PNG
11.(use) csv (as output's file format):  False
------------------------------------------------------------
######################################
~~~ Scores: ~~~
[36.0,
 37.00000000000001,
 35.70000000000001,
 35.5,
 33.949999999999996,
 36.400000000000006,
 37.55000000000001,
 27.999999999999996,
 31.650000000000002,
 21.500000000000004,
 35.0,
 35.15,
 32.6,
 33.75]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 35.075
Upper: 35.075
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 3, 5, 4, 2, 8]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 0, 9, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 3
cloned = 12
killed = 5
cloned = 0
killed = 4
cloned = 9
killed = 2
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.900000000000006,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.900000000000006,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 4, 8, 9, 10, 7]
lower threshold: []
....................................
upper threshold: [3, 5, 6, 7, 11, 13]
upper:           [1, 12, 11, 5, 6, 3, 13]
====================================
cloned = 1
killed = 0
cloned = 12
killed = 2
cloned = 11
killed = 4
cloned = 5
killed = 8
cloned = 6
killed = 9
cloned = 3
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 5, 2, 8, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 0, 1, 9, 12, 13]
====================================
cloned = 4
killed = 3
cloned = 7
killed = 10
cloned = 0
killed = 5
cloned = 1
killed = 2
cloned = 9
killed = 8
cloned = 12
killed = 6
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 2, 3, 7, 6, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 9, 1, 11, 4, 0, 13]
====================================
cloned = 12
killed = 5
cloned = 9
killed = 10
cloned = 1
killed = 2
cloned = 11
killed = 3
cloned = 4
killed = 7
cloned = 0
killed = 6
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 3, 12, 8, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 10, 7, 0, 2, 5, 13]
====================================
cloned = 1
killed = 6
cloned = 10
killed = 4
cloned = 7
killed = 3
cloned = 0
killed = 12
cloned = 2
killed = 8
cloned = 5
killed = 11
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 7, 1, 9, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 10, 11, 0, 2, 13]
====================================
cloned = 6
killed = 5
cloned = 12
killed = 4
cloned = 10
killed = 7
cloned = 11
killed = 1
cloned = 0
killed = 9
cloned = 2
killed = 8
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 6, 11, 0, 7, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 12, 10, 5, 1, 4, 13]
====================================
cloned = 9
killed = 2
cloned = 12
killed = 3
cloned = 10
killed = 6
cloned = 5
killed = 11
cloned = 1
killed = 0
cloned = 4
killed = 7
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 5, 4, 1, 2, 3, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 10, 11, 8, 6, 0, 13]
====================================
cloned = 12
killed = 7
cloned = 10
killed = 5
cloned = 11
killed = 4
cloned = 8
killed = 1
cloned = 6
killed = 2
cloned = 0
killed = 3
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 11, 3, 12, 1, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 8, 7, 10, 0, 6, 13]
====================================
cloned = 9
killed = 5
cloned = 8
killed = 11
cloned = 7
killed = 3
cloned = 10
killed = 12
cloned = 0
killed = 1
cloned = 6
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 9, 2, 10, 4, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 12, 1, 0, 6, 13]
====================================
cloned = 7
killed = 11
cloned = 3
killed = 5
cloned = 12
killed = 9
cloned = 1
killed = 2
cloned = 0
killed = 10
cloned = 6
killed = 4
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 5, 6, 10, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 8, 4, 12, 1, 13]
====================================
cloned = 7
killed = 2
cloned = 3
killed = 9
cloned = 8
killed = 5
cloned = 4
killed = 6
cloned = 12
killed = 10
cloned = 1
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 3, 12, 2, 11, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 0, 5, 9, 4, 6, 13]
====================================
cloned = 10
killed = 8
cloned = 0
killed = 1
cloned = 5
killed = 3
cloned = 9
killed = 12
cloned = 4
killed = 2
cloned = 6
killed = 11
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 8, 11, 10, 9, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 3, 12, 2, 4, 0, 13]
====================================
cloned = 1
killed = 6
cloned = 3
killed = 5
cloned = 12
killed = 8
cloned = 2
killed = 11
cloned = 4
killed = 10
cloned = 0
killed = 9
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 12, 10, 0, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 6, 11, 2, 1, 3, 13]
====================================
cloned = 5
killed = 4
cloned = 6
killed = 9
cloned = 11
killed = 12
cloned = 2
killed = 10
cloned = 1
killed = 0
cloned = 3
killed = 8
cloned = 13
killed = 7
Trial run 1/seed 12901:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.0,
  37.00000000000001,
  35.70000000000001,
  35.5,
  33.949999999999996,
  36.400000000000006,
  37.55000000000001,
  27.999999999999996,
  31.650000000000002,
  21.500000000000004,
  35.0,
  35.15,
  32.6,
  33.75],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.900000000000006,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.900000000000006,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.4,
 36.85000000000001,
 35.55000000000001,
 35.4,
 34.1,
 34.95,
 36.80000000000001,
 28.2,
 31.500000000000004,
 25.9,
 34.75,
 34.949999999999996,
 32.05,
 33.25]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.849999999999994
Upper: 34.849999999999994
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 2, 5, 8, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 0, 9, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 2
cloned = 12
killed = 5
cloned = 0
killed = 8
cloned = 9
killed = 4
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 4, 8, 9, 10, 5]
lower threshold: []
....................................
upper threshold: [1, 2, 5, 6, 7, 11, 12, 13]
upper:           [1, 7, 6, 11, 2, 12, 13]
====================================
cloned = 1
killed = 0
cloned = 7
killed = 3
cloned = 6
killed = 4
cloned = 11
killed = 8
cloned = 2
killed = 9
cloned = 12
killed = 10
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 5, 12, 7, 4, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 9, 6, 3, 10, 8, 13]
====================================
cloned = 2
killed = 1
cloned = 9
killed = 11
cloned = 6
killed = 5
cloned = 3
killed = 12
cloned = 10
killed = 7
cloned = 8
killed = 4
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 6, 1, 8, 4, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 11, 0, 3, 12, 7, 13]
====================================
cloned = 5
killed = 9
cloned = 11
killed = 10
cloned = 0
killed = 6
cloned = 3
killed = 1
cloned = 12
killed = 8
cloned = 7
killed = 4
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 8, 12, 9, 0, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 11, 7, 1, 10, 2, 13]
====================================
cloned = 5
killed = 6
cloned = 11
killed = 8
cloned = 7
killed = 12
cloned = 1
killed = 9
cloned = 10
killed = 0
cloned = 2
killed = 3
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 6, 7, 11, 8, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 5, 10, 9, 2, 12, 13]
====================================
cloned = 3
killed = 1
cloned = 5
killed = 0
cloned = 10
killed = 6
cloned = 9
killed = 7
cloned = 2
killed = 11
cloned = 12
killed = 8
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 12, 7, 11, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 4, 6, 9, 10, 8, 13]
====================================
cloned = 5
killed = 2
cloned = 4
killed = 3
cloned = 6
killed = 12
cloned = 9
killed = 7
cloned = 10
killed = 11
cloned = 8
killed = 1
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 5, 9, 1, 3, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 8, 2, 4, 0, 6, 13]
====================================
cloned = 7
killed = 10
cloned = 8
killed = 12
cloned = 2
killed = 5
cloned = 4
killed = 9
cloned = 0
killed = 1
cloned = 6
killed = 3
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 3, 7, 9, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 6, 12, 2, 1, 4, 13]
====================================
cloned = 5
killed = 0
cloned = 6
killed = 10
cloned = 12
killed = 3
cloned = 2
killed = 7
cloned = 1
killed = 9
cloned = 4
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 11, 12, 7, 3, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 0, 4, 1, 10, 13]
====================================
cloned = 8
killed = 5
cloned = 2
killed = 6
cloned = 0
killed = 11
cloned = 4
killed = 12
cloned = 1
killed = 7
cloned = 10
killed = 3
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 12, 1, 2, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 11, 0, 7, 8, 10, 13]
====================================
cloned = 5
killed = 4
cloned = 11
killed = 6
cloned = 0
killed = 12
cloned = 7
killed = 1
cloned = 8
killed = 2
cloned = 10
killed = 9
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 3, 2, 0, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 8, 4, 5, 7, 13]
====================================
cloned = 1
killed = 9
cloned = 12
killed = 6
cloned = 8
killed = 3
cloned = 4
killed = 2
cloned = 5
killed = 0
cloned = 7
killed = 10
cloned = 13
killed = 11
Trial run 2/seed 12902:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved FSM 16': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.4,
  36.85000000000001,
  35.55000000000001,
  35.4,
  34.1,
  34.95,
  36.80000000000001,
  28.2,
  31.500000000000004,
  25.9,
  34.75,
  34.949999999999996,
  32.05,
  33.25],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[34.800000000000004,
 37.20000000000001,
 36.05000000000001,
 35.8,
 34.45,
 36.25,
 38.000000000000014,
 27.599999999999994,
 31.35,
 25.75,
 34.25,
 35.15,
 32.25,
 33.5]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.625
Upper: 34.625
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 5, 3, 9, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 0, 8, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 5
cloned = 12
killed = 3
cloned = 0
killed = 9
cloned = 8
killed = 2
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.900000000000006,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.900000000000006,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 4, 8, 9, 10, 6]
lower threshold: []
....................................
upper threshold: [3, 5, 6, 7, 11, 13]
upper:           [1, 12, 7, 11, 5, 3, 13]
====================================
cloned = 1
killed = 0
cloned = 12
killed = 2
cloned = 7
killed = 4
cloned = 11
killed = 8
cloned = 5
killed = 9
cloned = 3
killed = 10
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 2, 9, 4, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 3, 11, 5, 10, 7, 13]
====================================
cloned = 1
killed = 0
cloned = 3
killed = 12
cloned = 11
killed = 2
cloned = 5
killed = 9
cloned = 10
killed = 4
cloned = 7
killed = 8
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 2, 9, 12, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 0, 7, 5, 11, 1, 13]
====================================
cloned = 8
killed = 10
cloned = 0
killed = 4
cloned = 7
killed = 2
cloned = 5
killed = 9
cloned = 11
killed = 12
cloned = 1
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 11, 3, 6, 4, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 0, 7, 12, 9, 10, 13]
====================================
cloned = 1
killed = 5
cloned = 0
killed = 2
cloned = 7
killed = 11
cloned = 12
killed = 3
cloned = 9
killed = 6
cloned = 10
killed = 4
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 6, 9, 5, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 8, 1, 11, 0, 12, 13]
====================================
cloned = 4
killed = 3
cloned = 8
killed = 10
cloned = 1
killed = 6
cloned = 11
killed = 9
cloned = 0
killed = 5
cloned = 12
killed = 7
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 4, 3, 11, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 8, 9, 6, 5, 0, 13]
====================================
cloned = 7
killed = 2
cloned = 8
killed = 10
cloned = 9
killed = 4
cloned = 6
killed = 3
cloned = 5
killed = 11
cloned = 0
killed = 1
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 12, 6, 11, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 10, 4, 5, 0, 8, 13]
====================================
cloned = 9
killed = 2
cloned = 10
killed = 7
cloned = 4
killed = 12
cloned = 5
killed = 6
cloned = 0
killed = 11
cloned = 8
killed = 3
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 11, 2, 6, 12, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 5, 10, 4, 1, 9, 13]
====================================
cloned = 0
killed = 8
cloned = 5
killed = 7
cloned = 10
killed = 11
cloned = 4
killed = 2
cloned = 1
killed = 6
cloned = 9
killed = 12
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 12, 2, 3, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 9, 5, 11, 4, 8, 13]
====================================
cloned = 1
killed = 7
cloned = 9
killed = 0
cloned = 5
killed = 12
cloned = 11
killed = 2
cloned = 4
killed = 3
cloned = 8
killed = 6
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 1, 12, 0, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 10, 11, 3, 8, 9, 13]
====================================
cloned = 7
killed = 5
cloned = 10
killed = 2
cloned = 11
killed = 1
cloned = 3
killed = 12
cloned = 8
killed = 0
cloned = 9
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 5, 9, 3, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 0, 4, 7, 6, 10, 13]
====================================
cloned = 1
killed = 12
cloned = 0
killed = 11
cloned = 4
killed = 5
cloned = 7
killed = 9
cloned = 6
killed = 3
cloned = 10
killed = 8
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 7, 8, 10, 6, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 0, 11, 9, 12, 13]
====================================
cloned = 4
killed = 1
cloned = 3
killed = 5
cloned = 0
killed = 7
cloned = 11
killed = 8
cloned = 9
killed = 10
cloned = 12
killed = 6
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 8, 4, 6, 5, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 2, 1, 9, 7, 0, 13]
====================================
cloned = 10
killed = 3
cloned = 2
killed = 11
cloned = 1
killed = 8
cloned = 9
killed = 4
cloned = 7
killed = 6
cloned = 0
killed = 5
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 8, 7, 2, 6, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 0, 4, 3, 11, 13]
====================================
cloned = 1
killed = 9
cloned = 12
killed = 8
cloned = 0
killed = 7
cloned = 4
killed = 2
cloned = 3
killed = 6
cloned = 11
killed = 5
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 8, 0, 7, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 9, 10, 11, 12, 3, 13]
====================================
cloned = 2
killed = 5
cloned = 9
killed = 1
cloned = 10
killed = 8
cloned = 11
killed = 0
cloned = 12
killed = 7
cloned = 3
killed = 6
cloned = 13
killed = 4
Trial run 3/seed 12903:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[34.800000000000004,
  37.20000000000001,
  36.05000000000001,
  35.8,
  34.45,
  36.25,
  38.000000000000014,
  27.599999999999994,
  31.35,
  25.75,
  34.25,
  35.15,
  32.25,
  33.5],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.900000000000006,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.900000000000006,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.25,
 37.25000000000001,
 36.00000000000001,
 35.75,
 33.0,
 35.25,
 37.60000000000001,
 27.599999999999994,
 31.650000000000002,
 26.9,
 34.05,
 34.75,
 32.35,
 33.5]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.4
Upper: 34.4
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 4, 0, 3, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 9, 2, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 4
cloned = 12
killed = 0
cloned = 9
killed = 3
cloned = 2
killed = 5
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 5, 8, 9, 10, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 4, 6, 7, 11, 12, 13]
upper:           [6, 11, 0, 4, 12, 7, 13]
====================================
cloned = 6
killed = 2
cloned = 11
killed = 3
cloned = 0
killed = 5
cloned = 4
killed = 8
cloned = 12
killed = 9
cloned = 7
killed = 10
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 2, 12, 10, 4, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 7, 0, 8, 5, 9, 13]
====================================
cloned = 6
killed = 3
cloned = 7
killed = 1
cloned = 0
killed = 2
cloned = 8
killed = 12
cloned = 5
killed = 10
cloned = 9
killed = 4
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 6, 4, 5, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 9, 2, 12, 7, 10, 13]
====================================
cloned = 0
killed = 3
cloned = 9
killed = 1
cloned = 2
killed = 6
cloned = 12
killed = 4
cloned = 7
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 7, 3, 0, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 5, 12, 9, 4, 10, 13]
====================================
cloned = 8
killed = 1
cloned = 5
killed = 6
cloned = 12
killed = 7
cloned = 9
killed = 3
cloned = 4
killed = 0
cloned = 10
killed = 11
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 6, 1, 8, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 9, 5, 10, 0, 7, 13]
====================================
cloned = 11
killed = 2
cloned = 9
killed = 12
cloned = 5
killed = 6
cloned = 10
killed = 1
cloned = 0
killed = 8
cloned = 7
killed = 3
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 11, 0, 2, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 12, 8, 6, 3, 5, 13]
====================================
cloned = 10
killed = 7
cloned = 12
killed = 9
cloned = 8
killed = 11
cloned = 6
killed = 0
cloned = 3
killed = 2
cloned = 5
killed = 4
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 4, 0, 8, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 12, 2, 11, 1, 3, 13]
====================================
cloned = 9
killed = 7
cloned = 12
killed = 10
cloned = 2
killed = 4
cloned = 11
killed = 0
cloned = 1
killed = 8
cloned = 3
killed = 5
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 7, 1, 2, 3, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 8, 4, 0, 9, 13]
====================================
cloned = 6
killed = 5
cloned = 12
killed = 10
cloned = 8
killed = 7
cloned = 4
killed = 1
cloned = 0
killed = 2
cloned = 9
killed = 3
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 2, 7, 0, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 9, 11, 6, 8, 12, 13]
====================================
cloned = 4
killed = 10
cloned = 9
killed = 3
cloned = 11
killed = 2
cloned = 6
killed = 7
cloned = 8
killed = 0
cloned = 12
killed = 5
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 7, 6, 8, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 2, 4, 1, 0, 12, 13]
====================================
cloned = 9
killed = 3
cloned = 2
killed = 5
cloned = 4
killed = 7
cloned = 1
killed = 6
cloned = 0
killed = 8
cloned = 12
killed = 11
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 5, 10, 11, 4, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 0, 7, 1, 3, 13]
====================================
cloned = 9
killed = 8
cloned = 6
killed = 12
cloned = 0
killed = 5
cloned = 7
killed = 10
cloned = 1
killed = 11
cloned = 3
killed = 4
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 2, 11, 9, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 7, 1, 12, 5, 0, 13]
====================================
cloned = 3
killed = 4
cloned = 7
killed = 10
cloned = 1
killed = 2
cloned = 12
killed = 11
cloned = 5
killed = 9
cloned = 0
killed = 8
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 3, 12, 9, 11, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 6, 8, 2, 4, 10, 13]
====================================
cloned = 0
killed = 5
cloned = 6
killed = 7
cloned = 8
killed = 3
cloned = 2
killed = 12
cloned = 4
killed = 9
cloned = 10
killed = 11
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 3, 4, 9, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 5, 2, 11, 8, 0, 13]
====================================
cloned = 6
killed = 12
cloned = 5
killed = 1
cloned = 2
killed = 3
cloned = 11
killed = 4
cloned = 8
killed = 9
cloned = 0
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 9, 8, 1, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 10, 0, 6, 11, 13]
====================================
cloned = 4
killed = 2
cloned = 7
killed = 12
cloned = 10
killed = 9
cloned = 0
killed = 8
cloned = 6
killed = 1
cloned = 11
killed = 5
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 2, 12, 3, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 8, 1, 0, 6, 7, 13]
====================================
cloned = 10
killed = 9
cloned = 8
killed = 4
cloned = 1
killed = 2
cloned = 0
killed = 12
cloned = 6
killed = 3
cloned = 7
killed = 5
cloned = 13
killed = 11
Trial run 4/seed 12904:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Michaelos: (D,)': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.25,
  37.25000000000001,
  36.00000000000001,
  35.75,
  33.0,
  35.25,
  37.60000000000001,
  27.599999999999994,
  31.650000000000002,
  26.9,
  34.05,
  34.75,
  32.35,
  33.5],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.2,
 37.300000000000004,
 35.50000000000001,
 35.3,
 34.00000000000001,
 36.300000000000004,
 36.65000000000001,
 27.599999999999998,
 31.35,
 23.2,
 34.45,
 35.35,
 32.7,
 33.65]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.875
Upper: 34.875
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 0, 9, 2, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 8, 4, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 0
cloned = 12
killed = 9
cloned = 8
killed = 2
cloned = 4
killed = 5
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.900000000000006,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 4, 5, 8, 10, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 6, 9, 11, 12, 13]
upper:           [7, 12, 11, 0, 9, 6, 13]
====================================
cloned = 7
killed = 2
cloned = 12
killed = 3
cloned = 11
killed = 4
cloned = 0
killed = 5
cloned = 9
killed = 8
cloned = 6
killed = 10
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 0, 1, 8, 9, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 6, 10, 3, 5, 12, 13]
====================================
cloned = 4
killed = 11
cloned = 6
killed = 2
cloned = 10
killed = 0
cloned = 3
killed = 1
cloned = 5
killed = 8
cloned = 12
killed = 9
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 9, 10, 6, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 5, 2, 3, 7, 1, 13]
====================================
cloned = 12
killed = 0
cloned = 5
killed = 4
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 7
killed = 6
cloned = 1
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 1, 8, 7, 3, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 2, 4, 11, 0, 13]
====================================
cloned = 6
killed = 10
cloned = 12
killed = 9
cloned = 2
killed = 1
cloned = 4
killed = 8
cloned = 11
killed = 7
cloned = 0
killed = 3
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 12, 8, 10, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 3, 4, 2, 5, 11, 13]
====================================
cloned = 1
killed = 9
cloned = 3
killed = 0
cloned = 4
killed = 12
cloned = 2
killed = 8
cloned = 5
killed = 10
cloned = 11
killed = 6
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 12, 10, 8, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 4, 3, 6, 9, 1, 13]
====================================
cloned = 5
killed = 7
cloned = 4
killed = 2
cloned = 3
killed = 12
cloned = 6
killed = 10
cloned = 9
killed = 8
cloned = 1
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 12, 11, 4, 0, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 9, 10, 5, 3, 6, 13]
====================================
cloned = 8
killed = 1
cloned = 9
killed = 7
cloned = 10
killed = 12
cloned = 5
killed = 11
cloned = 3
killed = 4
cloned = 6
killed = 0
cloned = 13
killed = 2
Trial run 5/seed 12905:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Tit For Tat': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved FSM 6': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.2,
  37.300000000000004,
  35.50000000000001,
  35.3,
  34.00000000000001,
  36.300000000000004,
  36.65000000000001,
  27.599999999999998,
  31.35,
  23.2,
  34.45,
  35.35,
  32.7,
  33.65],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.900000000000006,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.5,
 36.50000000000001,
 35.45000000000001,
 35.4,
 33.6,
 35.35,
 37.750000000000014,
 28.2,
 31.35,
 26.649999999999995,
 33.95,
 34.449999999999996,
 32.1,
 33.3]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.2
Upper: 34.2
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 9, 0, 2, 3, 5]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 8, 4, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 9
cloned = 12
killed = 0
cloned = 8
killed = 2
cloned = 4
killed = 3
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.900000000000006,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 4, 5, 8, 10, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 6, 9, 11, 12, 13]
upper:           [7, 6, 11, 0, 9, 1, 13]
====================================
cloned = 7
killed = 2
cloned = 6
killed = 3
cloned = 11
killed = 4
cloned = 0
killed = 5
cloned = 9
killed = 8
cloned = 1
killed = 10
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 6, 5, 1, 12, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 9, 2, 8, 3, 13]
====================================
cloned = 10
killed = 11
cloned = 4
killed = 0
cloned = 9
killed = 6
cloned = 2
killed = 5
cloned = 8
killed = 1
cloned = 3
killed = 12
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 5, 8, 0, 9, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 10, 11, 12, 2, 4, 13]
====================================
cloned = 3
killed = 7
cloned = 10
killed = 5
cloned = 11
killed = 8
cloned = 12
killed = 0
cloned = 2
killed = 9
cloned = 4
killed = 6
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 4, 1, 8, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 2, 12, 0, 6, 13]
====================================
cloned = 7
killed = 5
cloned = 9
killed = 3
cloned = 2
killed = 4
cloned = 12
killed = 1
cloned = 0
killed = 8
cloned = 6
killed = 11
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 4, 11, 2, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 7, 12, 0, 10, 1, 13]
====================================
cloned = 5
killed = 6
cloned = 7
killed = 3
cloned = 12
killed = 4
cloned = 0
killed = 11
cloned = 10
killed = 2
cloned = 1
killed = 9
cloned = 13
killed = 8
Trial run 6/seed 12906:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Michaelos: (D,)': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 2,
          'Evolved FSM 6': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.5,
  36.50000000000001,
  35.45000000000001,
  35.4,
  33.6,
  35.35,
  37.750000000000014,
  28.2,
  31.35,
  26.649999999999995,
  33.95,
  34.449999999999996,
  32.1,
  33.3],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.900000000000006,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.300000000000004,
 36.550000000000004,
 35.75000000000001,
 36.45,
 34.300000000000004,
 35.800000000000004,
 35.60000000000001,
 27.599999999999998,
 31.35,
 24.95,
 34.75,
 34.35,
 30.850000000000005,
 33.45]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.55
Upper: 34.55
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 10]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 11
cloned = 6
killed = 12
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 4, 5, 2, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 3, 0, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 4
cloned = 12
killed = 5
cloned = 3
killed = 2
cloned = 0
killed = 9
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 3, 8, 9, 10, 7]
lower threshold: []
....................................
upper threshold: [1, 4, 5, 6, 7, 11, 12, 13]
upper:           [4, 1, 11, 5, 6, 12, 13]
====================================
cloned = 4
killed = 0
cloned = 1
killed = 2
cloned = 11
killed = 3
cloned = 5
killed = 8
cloned = 6
killed = 9
cloned = 12
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 0, 1, 2, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 11, 9, 3, 5, 13]
====================================
cloned = 10
killed = 8
cloned = 4
killed = 7
cloned = 11
killed = 0
cloned = 9
killed = 1
cloned = 3
killed = 2
cloned = 5
killed = 6
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 9, 5, 11, 3, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 0, 4, 2, 12, 6, 13]
====================================
cloned = 10
killed = 8
cloned = 0
killed = 9
cloned = 4
killed = 5
cloned = 2
killed = 11
cloned = 12
killed = 3
cloned = 6
killed = 7
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 6, 0, 1, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 8, 7, 10, 9, 12, 13]
====================================
cloned = 11
killed = 3
cloned = 8
killed = 4
cloned = 7
killed = 6
cloned = 10
killed = 0
cloned = 9
killed = 1
cloned = 12
killed = 5
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 8, 11, 9, 2, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 1, 7, 12, 0, 3, 13]
====================================
cloned = 10
killed = 4
cloned = 1
killed = 6
cloned = 7
killed = 8
cloned = 12
killed = 11
cloned = 0
killed = 9
cloned = 3
killed = 2
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 3, 6, 9, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 12, 2, 8, 7, 11, 13]
====================================
cloned = 4
killed = 10
cloned = 12
killed = 1
cloned = 2
killed = 3
cloned = 8
killed = 6
cloned = 7
killed = 9
cloned = 11
killed = 5
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 4, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 3, 11, 5, 2, 10, 13]
====================================
cloned = 0
killed = 1
cloned = 3
killed = 7
cloned = 11
killed = 8
cloned = 5
killed = 9
cloned = 2
killed = 4
cloned = 10
killed = 6
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 7, 8, 1, 3, 9, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 6, 4, 2, 12, 0, 13]
====================================
cloned = 10
killed = 11
cloned = 6
killed = 7
cloned = 4
killed = 8
cloned = 2
killed = 1
cloned = 12
killed = 3
cloned = 0
killed = 9
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 9, 4, 6, 12, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 8, 1, 2, 0, 13]
====================================
cloned = 5
killed = 10
cloned = 3
killed = 11
cloned = 8
killed = 9
cloned = 1
killed = 4
cloned = 2
killed = 6
cloned = 0
killed = 12
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 1, 10, 5, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 8, 12, 3, 0, 6, 13]
====================================
cloned = 11
killed = 2
cloned = 8
killed = 7
cloned = 12
killed = 1
cloned = 3
killed = 10
cloned = 0
killed = 5
cloned = 6
killed = 4
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 2, 10, 5, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 9, 1, 12, 4, 8, 13]
====================================
cloned = 11
killed = 6
cloned = 9
killed = 7
cloned = 1
killed = 2
cloned = 12
killed = 10
cloned = 4
killed = 5
cloned = 8
killed = 0
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 9, 4, 2, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 5, 7, 12, 10, 8, 13]
====================================
cloned = 0
killed = 11
cloned = 5
killed = 1
cloned = 7
killed = 9
cloned = 12
killed = 4
cloned = 10
killed = 2
cloned = 8
killed = 6
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 12, 10, 9, 6, 1, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 0, 8, 2, 11, 3, 13]
====================================
cloned = 7
killed = 5
cloned = 0
killed = 12
cloned = 8
killed = 10
cloned = 2
killed = 9
cloned = 11
killed = 6
cloned = 3
killed = 1
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 3, 9, 1, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 8, 0, 10, 4, 12, 13]
====================================
cloned = 7
killed = 11
cloned = 8
killed = 2
cloned = 0
killed = 3
cloned = 10
killed = 9
cloned = 4
killed = 1
cloned = 12
killed = 5
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 4, 10, 0, 12, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 1, 5, 9, 3, 11, 13]
====================================
cloned = 2
killed = 7
cloned = 1
killed = 8
cloned = 5
killed = 4
cloned = 9
killed = 10
cloned = 3
killed = 0
cloned = 11
killed = 12
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 7, 8, 5, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 1, 10, 9, 2, 3, 13]
====================================
cloned = 6
killed = 11
cloned = 1
killed = 4
cloned = 10
killed = 7
cloned = 9
killed = 8
cloned = 2
killed = 5
cloned = 3
killed = 12
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 3, 8, 1, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 6, 12, 2, 11, 7, 13]
====================================
cloned = 5
killed = 4
cloned = 6
killed = 9
cloned = 12
killed = 3
cloned = 2
killed = 8
cloned = 11
killed = 1
cloned = 7
killed = 10
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 1, 9, 10, 6, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 7, 0, 8, 12, 13]
====================================
cloned = 5
killed = 4
cloned = 3
killed = 11
cloned = 7
killed = 1
cloned = 0
killed = 9
cloned = 8
killed = 10
cloned = 12
killed = 6
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 9, 1, 10, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 6, 11, 8, 4, 12, 13]
====================================
cloned = 2
killed = 0
cloned = 6
killed = 3
cloned = 11
killed = 9
cloned = 8
killed = 1
cloned = 4
killed = 10
cloned = 12
killed = 5
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 5, 2, 11, 12, 9, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 8, 10, 4, 0, 6, 13]
====================================
cloned = 3
killed = 7
cloned = 8
killed = 5
cloned = 10
killed = 2
cloned = 4
killed = 11
cloned = 0
killed = 12
cloned = 6
killed = 9
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 6, 8, 0, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 12, 4, 3, 11, 2, 13]
====================================
cloned = 10
killed = 1
cloned = 12
killed = 9
cloned = 4
killed = 6
cloned = 3
killed = 8
cloned = 11
killed = 0
cloned = 2
killed = 7
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 7, 10, 6, 9, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 3, 1, 4, 11, 0, 13]
====================================
cloned = 2
killed = 12
cloned = 3
killed = 7
cloned = 1
killed = 10
cloned = 4
killed = 6
cloned = 11
killed = 9
cloned = 0
killed = 5
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 9, 8, 10, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 4, 0, 2, 7, 12, 13]
====================================
cloned = 5
killed = 11
cloned = 4
killed = 1
cloned = 0
killed = 9
cloned = 2
killed = 8
cloned = 7
killed = 10
cloned = 12
killed = 6
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 5, 8, 3, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 9, 7, 10, 11, 1, 13]
====================================
cloned = 4
killed = 6
cloned = 9
killed = 2
cloned = 7
killed = 5
cloned = 10
killed = 8
cloned = 11
killed = 3
cloned = 1
killed = 12
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 12, 7, 6, 4, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 9, 5, 10, 8, 11, 13]
====================================
cloned = 1
killed = 3
cloned = 9
killed = 0
cloned = 5
killed = 12
cloned = 10
killed = 7
cloned = 8
killed = 6
cloned = 11
killed = 4
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 0, 3, 10, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 9, 6, 11, 7, 13]
====================================
cloned = 1
killed = 8
cloned = 12
killed = 5
cloned = 9
killed = 0
cloned = 6
killed = 3
cloned = 11
killed = 10
cloned = 7
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 3, 11, 8, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 12, 5, 9, 6, 1, 13]
====================================
cloned = 10
killed = 0
cloned = 12
killed = 2
cloned = 5
killed = 3
cloned = 9
killed = 11
cloned = 6
killed = 8
cloned = 1
killed = 7
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 3, 4, 11, 10, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 0, 2, 5, 6, 7, 13]
====================================
cloned = 1
killed = 8
cloned = 0
killed = 12
cloned = 2
killed = 3
cloned = 5
killed = 4
cloned = 6
killed = 11
cloned = 7
killed = 10
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 5, 10, 11, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 2, 8, 1, 7, 9, 13]
====================================
cloned = 12
killed = 0
cloned = 2
killed = 6
cloned = 8
killed = 5
cloned = 1
killed = 10
cloned = 7
killed = 11
cloned = 9
killed = 4
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 8, 1, 9, 0, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 6, 4, 2, 11, 13]
====================================
cloned = 7
killed = 12
cloned = 3
killed = 10
cloned = 6
killed = 8
cloned = 4
killed = 1
cloned = 2
killed = 9
cloned = 11
killed = 0
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 2, 8, 7, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 6, 9, 11, 10, 5, 13]
====================================
cloned = 12
killed = 0
cloned = 6
killed = 4
cloned = 9
killed = 2
cloned = 11
killed = 8
cloned = 10
killed = 7
cloned = 5
killed = 3
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 12, 2, 11, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 6, 4, 10, 9, 13]
====================================
cloned = 5
killed = 7
cloned = 3
killed = 0
cloned = 6
killed = 12
cloned = 4
killed = 2
cloned = 10
killed = 11
cloned = 9
killed = 8
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 1, 11, 5, 9, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 2, 6, 12, 10, 13]
====================================
cloned = 4
killed = 0
cloned = 3
killed = 1
cloned = 2
killed = 11
cloned = 6
killed = 5
cloned = 12
killed = 9
cloned = 10
killed = 8
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 0, 4, 10, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 11, 5, 2, 8, 13]
====================================
cloned = 7
killed = 6
cloned = 9
killed = 1
cloned = 11
killed = 0
cloned = 5
killed = 4
cloned = 2
killed = 10
cloned = 8
killed = 3
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 3, 8, 1, 0, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 4, 12, 11, 5, 13]
====================================
cloned = 7
killed = 2
cloned = 6
killed = 10
cloned = 4
killed = 3
cloned = 12
killed = 8
cloned = 11
killed = 1
cloned = 5
killed = 0
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 12, 7, 10, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 11, 5, 3, 6, 0, 13]
====================================
cloned = 9
killed = 8
cloned = 11
killed = 4
cloned = 5
killed = 12
cloned = 3
killed = 7
cloned = 6
killed = 10
cloned = 0
killed = 2
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 2, 0, 12, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 1, 5, 11, 6, 7, 13]
====================================
cloned = 8
killed = 3
cloned = 1
killed = 4
cloned = 5
killed = 2
cloned = 11
killed = 0
cloned = 6
killed = 12
cloned = 7
killed = 9
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 2, 11, 12, 6, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 0, 3, 9, 10, 1, 13]
====================================
cloned = 5
killed = 4
cloned = 0
killed = 7
cloned = 3
killed = 2
cloned = 9
killed = 11
cloned = 10
killed = 12
cloned = 1
killed = 6
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 0, 10, 3, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 4, 9, 2, 8, 13]
====================================
cloned = 6
killed = 11
cloned = 12
killed = 5
cloned = 4
killed = 0
cloned = 9
killed = 10
cloned = 2
killed = 3
cloned = 8
killed = 1
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 3, 2, 8, 5, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 9, 6, 11, 7, 0, 13]
====================================
cloned = 4
killed = 10
cloned = 9
killed = 1
cloned = 6
killed = 3
cloned = 11
killed = 2
cloned = 7
killed = 8
cloned = 0
killed = 5
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 8, 4, 11, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 6, 5, 9, 10, 0, 13]
====================================
cloned = 12
killed = 2
cloned = 6
killed = 3
cloned = 5
killed = 8
cloned = 9
killed = 4
cloned = 10
killed = 11
cloned = 0
killed = 7
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 11, 12, 5, 8, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 1, 2, 9, 10, 13]
====================================
cloned = 4
killed = 0
cloned = 3
killed = 11
cloned = 1
killed = 12
cloned = 2
killed = 5
cloned = 9
killed = 8
cloned = 10
killed = 6
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 1, 2, 8, 11, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 7, 9, 12, 5, 10, 13]
====================================
cloned = 0
killed = 3
cloned = 7
killed = 4
cloned = 9
killed = 1
cloned = 12
killed = 2
cloned = 5
killed = 8
cloned = 10
killed = 11
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 1, 6, 3, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 11, 0, 9, 8, 5, 13]
====================================
cloned = 12
killed = 4
cloned = 11
killed = 10
cloned = 0
killed = 1
cloned = 9
killed = 6
cloned = 8
killed = 3
cloned = 5
killed = 7
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 8, 7, 2, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 5, 3, 1, 0, 4, 13]
====================================
cloned = 12
killed = 11
cloned = 5
killed = 9
cloned = 3
killed = 8
cloned = 1
killed = 7
cloned = 0
killed = 2
cloned = 4
killed = 6
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 5, 6, 12, 7, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 4, 0, 1, 3, 13]
====================================
cloned = 8
killed = 9
cloned = 2
killed = 5
cloned = 4
killed = 6
cloned = 0
killed = 12
cloned = 1
killed = 7
cloned = 3
killed = 11
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 4, 7, 6, 2, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 11, 3, 1, 10, 12, 13]
====================================
cloned = 9
killed = 0
cloned = 11
killed = 5
cloned = 3
killed = 4
cloned = 1
killed = 7
cloned = 10
killed = 6
cloned = 12
killed = 2
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 1, 6, 5, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 12, 11, 8, 0, 7, 13]
====================================
cloned = 10
killed = 9
cloned = 12
killed = 4
cloned = 11
killed = 1
cloned = 8
killed = 6
cloned = 0
killed = 5
cloned = 7
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 1, 3, 12, 9, 0, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 11, 10, 7, 6, 8, 13]
====================================
cloned = 4
killed = 2
cloned = 11
killed = 1
cloned = 10
killed = 3
cloned = 7
killed = 12
cloned = 6
killed = 9
cloned = 8
killed = 0
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 11, 1, 4, 6, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 9, 2, 7, 3, 5, 13]
====================================
cloned = 0
killed = 12
cloned = 9
killed = 10
cloned = 2
killed = 11
cloned = 7
killed = 1
cloned = 3
killed = 4
cloned = 5
killed = 6
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 4, 2, 8, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 10, 1, 7, 0, 9, 13]
====================================
cloned = 12
killed = 5
cloned = 10
killed = 3
cloned = 1
killed = 4
cloned = 7
killed = 2
cloned = 0
killed = 8
cloned = 9
killed = 6
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 12, 1, 0, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 7, 10, 8, 6, 4, 13]
====================================
cloned = 11
killed = 3
cloned = 7
killed = 5
cloned = 10
killed = 12
cloned = 8
killed = 1
cloned = 6
killed = 0
cloned = 4
killed = 9
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 2, 11, 12, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 10, 6, 4, 8, 1, 13]
====================================
cloned = 5
killed = 0
cloned = 10
killed = 7
cloned = 6
killed = 2
cloned = 4
killed = 11
cloned = 8
killed = 12
cloned = 1
killed = 9
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 12, 11, 1, 4, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 0, 7, 8, 9, 2, 13]
====================================
cloned = 10
killed = 6
cloned = 0
killed = 3
cloned = 7
killed = 12
cloned = 8
killed = 11
cloned = 9
killed = 1
cloned = 2
killed = 4
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 6, 4, 8, 2, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 5, 0, 12, 7, 11, 13]
====================================
cloned = 1
killed = 9
cloned = 5
killed = 3
cloned = 0
killed = 6
cloned = 12
killed = 4
cloned = 7
killed = 8
cloned = 11
killed = 2
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 0, 9, 3, 4, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 6, 5, 10, 11, 2, 13]
====================================
cloned = 12
killed = 8
cloned = 6
killed = 0
cloned = 5
killed = 9
cloned = 10
killed = 3
cloned = 11
killed = 4
cloned = 2
killed = 7
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 8, 2, 5, 10, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 4, 11, 3, 12, 7, 13]
====================================
cloned = 9
killed = 0
cloned = 4
killed = 8
cloned = 11
killed = 2
cloned = 3
killed = 5
cloned = 12
killed = 10
cloned = 7
killed = 1
cloned = 13
killed = 6
Trial run 7/seed 12907:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Win-Stay Lose-Shift': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'Evolved FSM 16': 2,
          'Win-Stay Lose-Shift': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.300000000000004,
  36.550000000000004,
  35.75000000000001,
  36.45,
  34.300000000000004,
  35.800000000000004,
  35.60000000000001,
  27.599999999999998,
  31.35,
  24.95,
  34.75,
  34.35,
  30.850000000000005,
  33.45],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.9,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.2,
 37.650000000000006,
 35.85000000000001,
 35.95,
 34.3,
 35.150000000000006,
 36.35000000000001,
 28.4,
 31.35,
 26.7,
 34.1,
 34.949999999999996,
 31.1,
 33.5]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.625
Upper: 34.625
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 0, 5, 9, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 8, 2, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 0
cloned = 12
killed = 5
cloned = 8
killed = 9
cloned = 2
killed = 3
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.900000000000006,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 4, 8, 9, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 5, 6, 11, 12, 13]
upper:           [7, 11, 5, 12, 1, 0, 13]
====================================
cloned = 7
killed = 2
cloned = 11
killed = 3
cloned = 5
killed = 4
cloned = 12
killed = 8
cloned = 1
killed = 9
cloned = 0
killed = 10
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 2, 9, 10, 4, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 12, 11, 0, 1, 8, 13]
====================================
cloned = 3
killed = 6
cloned = 12
killed = 7
cloned = 11
killed = 2
cloned = 0
killed = 9
cloned = 1
killed = 10
cloned = 8
killed = 4
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 0, 6, 8, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 4, 12, 11, 7, 10, 13]
====================================
cloned = 2
killed = 1
cloned = 4
killed = 3
cloned = 12
killed = 0
cloned = 11
killed = 6
cloned = 7
killed = 8
cloned = 10
killed = 5
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 7, 4, 1, 2, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 6, 0, 3, 10, 12, 13]
====================================
cloned = 5
killed = 11
cloned = 6
killed = 9
cloned = 0
killed = 7
cloned = 3
killed = 4
cloned = 10
killed = 1
cloned = 12
killed = 2
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 2, 5, 1, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 4, 12, 11, 0, 8, 13]
====================================
cloned = 3
killed = 10
cloned = 4
killed = 6
cloned = 12
killed = 2
cloned = 11
killed = 5
cloned = 0
killed = 1
cloned = 8
killed = 7
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 8, 4, 2, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 12, 11, 9, 6, 1, 13]
====================================
cloned = 7
killed = 3
cloned = 12
killed = 5
cloned = 11
killed = 8
cloned = 9
killed = 4
cloned = 6
killed = 2
cloned = 1
killed = 0
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 12, 4, 7, 0, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 11, 3, 5, 1, 9, 13]
====================================
cloned = 2
killed = 6
cloned = 11
killed = 12
cloned = 3
killed = 4
cloned = 5
killed = 7
cloned = 1
killed = 0
cloned = 9
killed = 8
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 0, 9, 12, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 3, 7, 10, 5, 4, 13]
====================================
cloned = 1
killed = 11
cloned = 3
killed = 8
cloned = 7
killed = 0
cloned = 10
killed = 9
cloned = 5
killed = 12
cloned = 4
killed = 2
cloned = 13
killed = 6
Trial run 8/seed 12908:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Michaelos: (D,)': 4,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.2,
  37.650000000000006,
  35.85000000000001,
  35.95,
  34.3,
  35.150000000000006,
  36.35000000000001,
  28.4,
  31.35,
  26.7,
  34.1,
  34.949999999999996,
  31.1,
  33.5],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.900000000000006,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.2,
 37.75000000000001,
 35.60000000000001,
 35.25,
 33.9,
 36.45,
 36.55000000000001,
 27.999999999999996,
 31.950000000000003,
 20.200000000000003,
 35.150000000000006,
 35.35,
 31.1,
 33.45]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 35.2
Upper: 35.2
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 3, 8, 9, 0, 5]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 2, 4, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 3
cloned = 12
killed = 8
cloned = 2
killed = 9
cloned = 4
killed = 0
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[37.80000000000001,
 38.900000000000006,
 37.800000000000004,
 38.9,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.900000000000006,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 4, 5, 9, 10, 11]
lower threshold: []
....................................
upper threshold: [3, 6, 7, 8, 11, 13]
upper:           [1, 12, 7, 3, 6, 8, 13]
====================================
cloned = 1
killed = 0
cloned = 12
killed = 2
cloned = 7
killed = 4
cloned = 3
killed = 5
cloned = 6
killed = 9
cloned = 8
killed = 10
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 2, 1, 3, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 5, 0, 8, 6, 9, 13]
====================================
cloned = 7
killed = 10
cloned = 5
killed = 11
cloned = 0
killed = 2
cloned = 8
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 12
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 7, 12, 0, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 10, 1, 2, 11, 13]
====================================
cloned = 4
killed = 5
cloned = 3
killed = 8
cloned = 10
killed = 7
cloned = 1
killed = 12
cloned = 2
killed = 0
cloned = 11
killed = 9
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 0, 7, 11, 9, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 2, 12, 10, 3, 1, 13]
====================================
cloned = 4
killed = 6
cloned = 2
killed = 0
cloned = 12
killed = 7
cloned = 10
killed = 11
cloned = 3
killed = 9
cloned = 1
killed = 5
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 2, 12, 5, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 1, 6, 11, 10, 0, 13]
====================================
cloned = 3
killed = 7
cloned = 1
killed = 8
cloned = 6
killed = 9
cloned = 11
killed = 2
cloned = 10
killed = 12
cloned = 0
killed = 5
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 12, 10, 4, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 7, 2, 0, 9, 11, 13]
====================================
cloned = 6
killed = 3
cloned = 7
killed = 5
cloned = 2
killed = 12
cloned = 0
killed = 10
cloned = 9
killed = 4
cloned = 11
killed = 8
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 1, 12, 11, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 8, 4, 7, 5, 6, 13]
====================================
cloned = 2
killed = 10
cloned = 8
killed = 9
cloned = 4
killed = 1
cloned = 7
killed = 12
cloned = 5
killed = 11
cloned = 6
killed = 0
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 6, 12, 7, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 11, 9, 8, 5, 1, 13]
====================================
cloned = 0
killed = 2
cloned = 11
killed = 10
cloned = 9
killed = 6
cloned = 8
killed = 12
cloned = 5
killed = 7
cloned = 1
killed = 3
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 11, 2, 10, 5, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 9, 1, 7, 3, 8, 13]
====================================
cloned = 0
killed = 4
cloned = 9
killed = 6
cloned = 1
killed = 11
cloned = 7
killed = 2
cloned = 3
killed = 10
cloned = 8
killed = 5
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 8, 1, 5, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 4, 2, 6, 7, 10, 13]
====================================
cloned = 3
killed = 9
cloned = 4
killed = 12
cloned = 2
killed = 8
cloned = 6
killed = 1
cloned = 7
killed = 5
cloned = 10
killed = 0
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 11, 7, 12, 0, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 5, 6, 3, 2, 10, 13]
====================================
cloned = 8
killed = 1
cloned = 5
killed = 4
cloned = 6
killed = 11
cloned = 3
killed = 7
cloned = 2
killed = 12
cloned = 10
killed = 0
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 7, 2, 10, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 9, 1, 5, 12, 3, 13]
====================================
cloned = 8
killed = 6
cloned = 9
killed = 4
cloned = 1
killed = 7
cloned = 5
killed = 2
cloned = 12
killed = 10
cloned = 3
killed = 11
cloned = 13
killed = 0
Trial run 9/seed 12909:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.2,
  37.75000000000001,
  35.60000000000001,
  35.25,
  33.9,
  36.45,
  36.55000000000001,
  27.999999999999996,
  31.950000000000003,
  20.200000000000003,
  35.150000000000006,
  35.35,
  31.1,
  33.45],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.80000000000001,
  38.900000000000006,
  37.800000000000004,
  38.9,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.900000000000006,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.15,
 36.25000000000001,
 35.900000000000006,
 35.7,
 33.349999999999994,
 35.45,
 36.95000000000001,
 27.999999999999996,
 31.200000000000003,
 27.499999999999996,
 33.85,
 35.15,
 32.75,
 33.3]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.5
Upper: 34.5
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 2, 9, 5, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 0, 4, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 2
cloned = 12
killed = 9
cloned = 0
killed = 5
cloned = 4
killed = 8
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 4, 5, 8, 10, 12]
lower threshold: []
....................................
upper threshold: [1, 2, 6, 7, 9, 11, 12, 13]
upper:           [6, 9, 1, 2, 11, 7, 13]
====================================
cloned = 6
killed = 0
cloned = 9
killed = 3
cloned = 1
killed = 4
cloned = 2
killed = 5
cloned = 11
killed = 8
cloned = 7
killed = 10
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 8, 7, 12, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 9, 5, 10, 0, 3, 13]
====================================
cloned = 4
killed = 1
cloned = 9
killed = 2
cloned = 5
killed = 8
cloned = 10
killed = 7
cloned = 0
killed = 12
cloned = 3
killed = 6
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 2, 1, 5, 11, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 10, 8, 4, 3, 13]
====================================
cloned = 9
killed = 0
cloned = 6
killed = 12
cloned = 10
killed = 2
cloned = 8
killed = 1
cloned = 4
killed = 5
cloned = 3
killed = 11
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 1, 0, 5, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 10, 11, 7, 9, 12, 13]
====================================
cloned = 8
killed = 3
cloned = 10
killed = 2
cloned = 11
killed = 1
cloned = 7
killed = 0
cloned = 9
killed = 5
cloned = 12
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 0, 7, 9, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 11, 8, 5, 4, 2, 13]
====================================
cloned = 10
killed = 12
cloned = 11
killed = 6
cloned = 8
killed = 0
cloned = 5
killed = 7
cloned = 4
killed = 9
cloned = 2
killed = 3
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 2, 10, 12, 7, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 0, 1, 4, 5, 8, 13]
====================================
cloned = 6
killed = 9
cloned = 0
killed = 11
cloned = 1
killed = 2
cloned = 4
killed = 10
cloned = 5
killed = 12
cloned = 8
killed = 7
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 8, 1, 11, 12, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 2, 7, 3, 0, 10, 13]
====================================
cloned = 4
killed = 6
cloned = 2
killed = 8
cloned = 7
killed = 1
cloned = 3
killed = 11
cloned = 0
killed = 12
cloned = 10
killed = 5
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 9, 6, 12, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 0, 7, 5, 3, 4, 13]
====================================
cloned = 2
killed = 1
cloned = 0
killed = 11
cloned = 7
killed = 9
cloned = 5
killed = 6
cloned = 3
killed = 12
cloned = 4
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 5, 10, 1, 7, 2, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 0, 8, 11, 4, 6, 13]
====================================
cloned = 9
killed = 12
cloned = 0
killed = 5
cloned = 8
killed = 10
cloned = 11
killed = 1
cloned = 4
killed = 7
cloned = 6
killed = 2
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 9, 10, 11, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 5, 7, 4, 2, 1, 13]
====================================
cloned = 0
killed = 8
cloned = 5
killed = 12
cloned = 7
killed = 9
cloned = 4
killed = 10
cloned = 2
killed = 11
cloned = 1
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 4, 8, 2, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 3, 6, 12, 11, 1, 13]
====================================
cloned = 0
killed = 5
cloned = 3
killed = 9
cloned = 6
killed = 4
cloned = 12
killed = 8
cloned = 11
killed = 2
cloned = 1
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 11, 4, 9, 2, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 0, 5, 8, 10, 7, 13]
====================================
cloned = 12
killed = 6
cloned = 0
killed = 1
cloned = 5
killed = 11
cloned = 8
killed = 4
cloned = 10
killed = 9
cloned = 7
killed = 2
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 8, 4, 0, 10, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 12, 6, 5, 7, 11, 13]
====================================
cloned = 3
killed = 9
cloned = 12
killed = 2
cloned = 6
killed = 8
cloned = 5
killed = 4
cloned = 7
killed = 0
cloned = 11
killed = 10
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 7, 8, 3, 6, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 12, 1, 0, 11, 2, 13]
====================================
cloned = 10
killed = 4
cloned = 12
killed = 5
cloned = 1
killed = 7
cloned = 0
killed = 8
cloned = 11
killed = 3
cloned = 2
killed = 6
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 11, 8, 4, 3, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 2, 0, 9, 12, 6, 13]
====================================
cloned = 10
killed = 5
cloned = 2
killed = 11
cloned = 0
killed = 8
cloned = 9
killed = 4
cloned = 12
killed = 3
cloned = 6
killed = 7
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 9, 11, 12, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 10, 5, 6, 2, 4, 13]
====================================
cloned = 0
killed = 8
cloned = 10
killed = 3
cloned = 5
killed = 9
cloned = 6
killed = 11
cloned = 2
killed = 12
cloned = 4
killed = 1
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 8, 7, 1, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 10, 6, 9, 5, 4, 13]
====================================
cloned = 0
killed = 11
cloned = 10
killed = 3
cloned = 6
killed = 8
cloned = 9
killed = 7
cloned = 5
killed = 1
cloned = 4
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 10, 0, 2, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 7, 11, 12, 8, 13]
====================================
cloned = 4
killed = 6
cloned = 3
killed = 1
cloned = 7
killed = 10
cloned = 11
killed = 0
cloned = 12
killed = 2
cloned = 8
killed = 5
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 1, 10, 9, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 3, 8, 2, 7, 13]
====================================
cloned = 11
killed = 6
cloned = 12
killed = 5
cloned = 3
killed = 1
cloned = 8
killed = 10
cloned = 2
killed = 9
cloned = 7
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 4, 10, 0, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 8, 1, 9, 12, 7, 13]
====================================
cloned = 6
killed = 3
cloned = 8
killed = 2
cloned = 1
killed = 4
cloned = 9
killed = 10
cloned = 12
killed = 0
cloned = 7
killed = 5
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 10, 2, 11, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 3, 9, 5, 1, 13]
====================================
cloned = 6
killed = 7
cloned = 12
killed = 8
cloned = 3
killed = 10
cloned = 9
killed = 2
cloned = 5
killed = 11
cloned = 1
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 5, 1, 3, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 4, 10, 0, 12, 8, 13]
====================================
cloned = 7
killed = 11
cloned = 4
killed = 2
cloned = 10
killed = 5
cloned = 0
killed = 1
cloned = 12
killed = 3
cloned = 8
killed = 9
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 11, 3, 7, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 1, 9, 8, 4, 10, 13]
====================================
cloned = 0
killed = 2
cloned = 1
killed = 12
cloned = 9
killed = 11
cloned = 8
killed = 3
cloned = 4
killed = 7
cloned = 10
killed = 5
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 10, 9, 0, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 8, 4, 5, 1, 6, 13]
====================================
cloned = 7
killed = 12
cloned = 8
killed = 11
cloned = 4
killed = 10
cloned = 5
killed = 9
cloned = 1
killed = 0
cloned = 6
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 8, 5, 4, 7, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 6, 2, 9, 11, 1, 13]
====================================
cloned = 0
killed = 12
cloned = 6
killed = 3
cloned = 2
killed = 8
cloned = 9
killed = 5
cloned = 11
killed = 4
cloned = 1
killed = 7
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 6, 4, 1, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 8, 7, 5, 3, 0, 13]
====================================
cloned = 11
killed = 2
cloned = 8
killed = 10
cloned = 7
killed = 6
cloned = 5
killed = 4
cloned = 3
killed = 1
cloned = 0
killed = 12
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 1, 2, 10, 7, 12, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 8, 4, 11, 5, 9, 13]
====================================
cloned = 3
killed = 0
cloned = 8
killed = 1
cloned = 4
killed = 2
cloned = 11
killed = 10
cloned = 5
killed = 7
cloned = 9
killed = 12
cloned = 13
killed = 6
Trial run 10/seed 12910:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.15,
  36.25000000000001,
  35.900000000000006,
  35.7,
  33.349999999999994,
  35.45,
  36.95000000000001,
  27.999999999999996,
  31.200000000000003,
  27.499999999999996,
  33.85,
  35.15,
  32.75,
  33.3],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.95,
 37.25000000000001,
 36.05000000000001,
 35.4,
 34.1,
 35.900000000000006,
 36.10000000000001,
 27.599999999999994,
 31.650000000000002,
 25.949999999999996,
 33.7,
 34.65,
 30.7,
 33.45]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.375
Upper: 34.375
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 5, 9, 0, 2, 3]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 8, 4, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 5
cloned = 12
killed = 9
cloned = 8
killed = 0
cloned = 4
killed = 2
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.900000000000006,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.900000000000006,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 3, 4, 8, 10, 1]
lower threshold: []
....................................
upper threshold: [1, 5, 6, 9, 11, 13]
upper:           [7, 12, 9, 5, 6, 11, 13]
====================================
cloned = 7
killed = 0
cloned = 12
killed = 2
cloned = 9
killed = 3
cloned = 5
killed = 4
cloned = 6
killed = 8
cloned = 11
killed = 10
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 9, 0, 8, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 7, 10, 5, 6, 3, 13]
====================================
cloned = 1
killed = 2
cloned = 7
killed = 11
cloned = 10
killed = 9
cloned = 5
killed = 0
cloned = 6
killed = 8
cloned = 3
killed = 12
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 2, 1, 4, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 5, 12, 6, 9, 11, 13]
====================================
cloned = 10
killed = 8
cloned = 5
killed = 7
cloned = 12
killed = 2
cloned = 6
killed = 1
cloned = 9
killed = 4
cloned = 11
killed = 0
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 0, 6, 1, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 11, 8, 2, 9, 3, 13]
====================================
cloned = 12
killed = 4
cloned = 11
killed = 10
cloned = 8
killed = 0
cloned = 2
killed = 6
cloned = 9
killed = 1
cloned = 3
killed = 5
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 7, 10, 8, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 1, 12, 4, 9, 5, 13]
====================================
cloned = 6
killed = 0
cloned = 1
killed = 3
cloned = 12
killed = 7
cloned = 4
killed = 10
cloned = 9
killed = 8
cloned = 5
killed = 2
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 1, 12, 9, 0, 11, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 3, 8, 7, 2, 6, 13]
====================================
cloned = 10
killed = 4
cloned = 3
killed = 1
cloned = 8
killed = 12
cloned = 7
killed = 9
cloned = 2
killed = 0
cloned = 6
killed = 11
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 2, 3, 1, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 10, 7, 11, 12, 13]
====================================
cloned = 9
killed = 5
cloned = 6
killed = 8
cloned = 10
killed = 2
cloned = 7
killed = 3
cloned = 11
killed = 1
cloned = 12
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 6, 11, 8, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 7, 9, 3, 2, 10, 13]
====================================
cloned = 5
killed = 1
cloned = 7
killed = 4
cloned = 9
killed = 6
cloned = 3
killed = 11
cloned = 2
killed = 8
cloned = 10
killed = 0
cloned = 13
killed = 12
Trial run 11/seed 12911:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Tit For Tat': 2,
          'Evolved FSM 6': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.95,
  37.25000000000001,
  36.05000000000001,
  35.4,
  34.1,
  35.900000000000006,
  36.10000000000001,
  27.599999999999994,
  31.650000000000002,
  25.949999999999996,
  33.7,
  34.65,
  30.7,
  33.45],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.900000000000006,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.900000000000006,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.1,
 38.050000000000004,
 35.650000000000006,
 34.4,
 34.050000000000004,
 35.2,
 37.40000000000001,
 27.399999999999995,
 32.1,
 24.950000000000003,
 33.55,
 35.949999999999996,
 32.7,
 33.15]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.225
Upper: 34.225
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 0, 9, 8, 2, 5]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 4, 3, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 0
cloned = 12
killed = 9
cloned = 4
killed = 8
cloned = 3
killed = 2
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.900000000000006,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 1
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 4, 5, 8, 10, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 6, 9, 11, 12, 13]
upper:           [7, 11, 1, 6, 12, 0, 13]
====================================
cloned = 7
killed = 2
cloned = 11
killed = 3
cloned = 1
killed = 4
cloned = 6
killed = 5
cloned = 12
killed = 8
cloned = 0
killed = 10
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 5, 3, 8, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 4, 6, 10, 0, 9, 13]
====================================
cloned = 12
killed = 2
cloned = 4
killed = 7
cloned = 6
killed = 5
cloned = 10
killed = 3
cloned = 0
killed = 8
cloned = 9
killed = 1
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 10, 3, 5, 6, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 9, 8, 12, 7, 2, 13]
====================================
cloned = 11
killed = 1
cloned = 9
killed = 10
cloned = 8
killed = 3
cloned = 12
killed = 5
cloned = 7
killed = 6
cloned = 2
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 7, 2, 3, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 9, 4, 6, 11, 5, 13]
====================================
cloned = 10
killed = 1
cloned = 9
killed = 12
cloned = 4
killed = 7
cloned = 6
killed = 2
cloned = 11
killed = 3
cloned = 5
killed = 0
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 3, 6, 1, 12, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 10, 9, 8, 5, 0, 13]
====================================
cloned = 4
killed = 11
cloned = 10
killed = 2
cloned = 9
killed = 3
cloned = 8
killed = 6
cloned = 5
killed = 1
cloned = 0
killed = 12
cloned = 13
killed = 7
Trial run 12/seed 12912:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 16': 2,
          'Evolved FSM 6': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.1,
  38.050000000000004,
  35.650000000000006,
  34.4,
  34.050000000000004,
  35.2,
  37.40000000000001,
  27.399999999999995,
  32.1,
  24.950000000000003,
  33.55,
  35.949999999999996,
  32.7,
  33.15],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.900000000000006,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.25,
 37.20000000000001,
 35.50000000000001,
 35.8,
 34.1,
 35.7,
 37.35000000000001,
 28.4,
 31.500000000000004,
 22.5,
 34.8,
 34.15,
 34.2,
 33.45]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.5
Upper: 34.5
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 10]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 11
cloned = 6
killed = 12
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 8, 2, 4, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 5, 0, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 8
cloned = 12
killed = 2
cloned = 5
killed = 4
cloned = 0
killed = 9
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.900000000000006,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.900000000000006]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 4, 5, 9, 10, 2]
lower threshold: []
....................................
upper threshold: [1, 2, 7, 8, 11, 12]
upper:           [6, 13, 1, 11, 7, 8, 12]
====================================
cloned = 6
killed = 0
cloned = 13
killed = 3
cloned = 1
killed = 4
cloned = 11
killed = 5
cloned = 7
killed = 9
cloned = 8
killed = 10
cloned = 12
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 7, 2, 8, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 5, 6, 9, 3, 12, 13]
====================================
cloned = 4
killed = 1
cloned = 5
killed = 11
cloned = 6
killed = 7
cloned = 9
killed = 2
cloned = 3
killed = 8
cloned = 12
killed = 10
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 0, 12, 4, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 5, 7, 8, 9, 1, 13]
====================================
cloned = 3
killed = 2
cloned = 5
killed = 11
cloned = 7
killed = 0
cloned = 8
killed = 12
cloned = 9
killed = 4
cloned = 1
killed = 10
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 9, 4, 11, 6, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 7, 8, 0, 5, 12, 13]
====================================
cloned = 10
killed = 1
cloned = 7
killed = 3
cloned = 8
killed = 9
cloned = 0
killed = 4
cloned = 5
killed = 11
cloned = 12
killed = 6
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 9, 0, 7, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 1, 12, 8, 3, 11, 13]
====================================
cloned = 4
killed = 2
cloned = 1
killed = 10
cloned = 12
killed = 9
cloned = 8
killed = 0
cloned = 3
killed = 7
cloned = 11
killed = 5
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 7, 4, 2, 9, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 11, 10, 0, 6, 1, 13]
====================================
cloned = 3
killed = 8
cloned = 11
killed = 12
cloned = 10
killed = 7
cloned = 0
killed = 4
cloned = 6
killed = 2
cloned = 1
killed = 9
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 5, 9, 4, 0, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 12, 8, 3, 10, 7, 13]
====================================
cloned = 2
killed = 1
cloned = 12
killed = 11
cloned = 8
killed = 5
cloned = 3
killed = 9
cloned = 10
killed = 4
cloned = 7
killed = 0
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 2, 10, 4, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 11, 0, 9, 1, 12, 13]
====================================
cloned = 3
killed = 6
cloned = 11
killed = 5
cloned = 0
killed = 2
cloned = 9
killed = 10
cloned = 1
killed = 4
cloned = 12
killed = 8
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 5, 9, 1, 6, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 4, 11, 2, 0, 13]
====================================
cloned = 7
killed = 12
cloned = 3
killed = 5
cloned = 4
killed = 9
cloned = 11
killed = 1
cloned = 2
killed = 6
cloned = 0
killed = 8
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 8, 3, 5, 9, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 2, 1, 0, 4, 11, 13]
====================================
cloned = 7
killed = 6
cloned = 2
killed = 10
cloned = 1
killed = 8
cloned = 0
killed = 3
cloned = 4
killed = 5
cloned = 11
killed = 9
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 6, 2, 0, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 9, 11, 7, 5, 3, 13]
====================================
cloned = 8
killed = 10
cloned = 9
killed = 4
cloned = 11
killed = 6
cloned = 7
killed = 2
cloned = 5
killed = 0
cloned = 3
killed = 1
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 11, 0, 12, 10, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 4, 5, 3, 9, 8, 13]
====================================
cloned = 2
killed = 6
cloned = 4
killed = 7
cloned = 5
killed = 11
cloned = 3
killed = 0
cloned = 9
killed = 12
cloned = 8
killed = 10
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 9, 8, 5, 2, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 6, 1, 7, 3, 13]
====================================
cloned = 11
killed = 10
cloned = 12
killed = 4
cloned = 6
killed = 9
cloned = 1
killed = 8
cloned = 7
killed = 5
cloned = 3
killed = 2
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 2, 3, 12, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 11, 9, 0, 10, 4, 13]
====================================
cloned = 8
killed = 5
cloned = 11
killed = 6
cloned = 9
killed = 2
cloned = 0
killed = 3
cloned = 10
killed = 12
cloned = 4
killed = 7
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 9, 7, 5, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 6, 10, 4, 2, 12, 13]
====================================
cloned = 11
killed = 0
cloned = 6
killed = 3
cloned = 10
killed = 9
cloned = 4
killed = 7
cloned = 2
killed = 5
cloned = 12
killed = 1
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 0, 2, 5, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 6, 7, 4, 10, 9, 13]
====================================
cloned = 3
killed = 8
cloned = 6
killed = 11
cloned = 7
killed = 0
cloned = 4
killed = 2
cloned = 10
killed = 5
cloned = 9
killed = 12
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 0, 1, 9, 4, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 8, 12, 3, 5, 10, 13]
====================================
cloned = 7
killed = 6
cloned = 8
killed = 0
cloned = 12
killed = 1
cloned = 3
killed = 9
cloned = 5
killed = 4
cloned = 10
killed = 2
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 4, 12, 8, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 11, 2, 1, 3, 7, 13]
====================================
cloned = 10
killed = 9
cloned = 11
killed = 6
cloned = 2
killed = 4
cloned = 1
killed = 12
cloned = 3
killed = 8
cloned = 7
killed = 5
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 6, 5, 12, 11, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 10, 1, 7, 0, 3, 13]
====================================
cloned = 8
killed = 2
cloned = 10
killed = 6
cloned = 1
killed = 5
cloned = 7
killed = 12
cloned = 0
killed = 11
cloned = 3
killed = 4
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 3, 6, 9, 0, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 8, 12, 5, 11, 4, 13]
====================================
cloned = 7
killed = 10
cloned = 8
killed = 2
cloned = 12
killed = 3
cloned = 5
killed = 6
cloned = 11
killed = 9
cloned = 4
killed = 0
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 11, 3, 4, 12, 1, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 9, 8, 10, 7, 6, 13]
====================================
cloned = 5
killed = 0
cloned = 9
killed = 11
cloned = 8
killed = 3
cloned = 10
killed = 4
cloned = 7
killed = 12
cloned = 6
killed = 1
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 4, 0, 12, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 5, 3, 7, 11, 9, 13]
====================================
cloned = 2
killed = 10
cloned = 5
killed = 8
cloned = 3
killed = 4
cloned = 7
killed = 0
cloned = 11
killed = 12
cloned = 9
killed = 1
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 1, 5, 12, 4, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 0, 10, 8, 3, 13]
====================================
cloned = 7
killed = 2
cloned = 9
killed = 1
cloned = 0
killed = 5
cloned = 10
killed = 12
cloned = 8
killed = 4
cloned = 3
killed = 6
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 0, 10, 8, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 2, 4, 9, 6, 5, 13]
====================================
cloned = 7
killed = 3
cloned = 2
killed = 11
cloned = 4
killed = 0
cloned = 9
killed = 10
cloned = 6
killed = 8
cloned = 5
killed = 12
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 0, 12, 10, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 5, 9, 11, 7, 13]
====================================
cloned = 4
killed = 2
cloned = 3
killed = 8
cloned = 5
killed = 0
cloned = 9
killed = 12
cloned = 11
killed = 10
cloned = 7
killed = 6
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 2, 5, 11, 9, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 0, 3, 1, 4, 10, 13]
====================================
cloned = 6
killed = 12
cloned = 0
killed = 8
cloned = 3
killed = 2
cloned = 1
killed = 5
cloned = 4
killed = 11
cloned = 10
killed = 9
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 11, 8, 12, 9, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 2, 7, 4, 5, 10, 13]
====================================
cloned = 1
killed = 6
cloned = 2
killed = 3
cloned = 7
killed = 11
cloned = 4
killed = 8
cloned = 5
killed = 12
cloned = 10
killed = 9
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 6, 10, 4, 9, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 11, 7, 2, 1, 3, 13]
====================================
cloned = 12
killed = 5
cloned = 11
killed = 8
cloned = 7
killed = 6
cloned = 2
killed = 10
cloned = 1
killed = 4
cloned = 3
killed = 9
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 1, 6, 11, 3, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 9, 0, 4, 7, 13]
====================================
cloned = 8
killed = 12
cloned = 2
killed = 10
cloned = 9
killed = 1
cloned = 0
killed = 6
cloned = 4
killed = 11
cloned = 7
killed = 3
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 11, 8, 12, 1, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 2, 7, 0, 3, 4, 13]
====================================
cloned = 9
killed = 5
cloned = 2
killed = 6
cloned = 7
killed = 11
cloned = 0
killed = 8
cloned = 3
killed = 12
cloned = 4
killed = 1
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 8, 3, 7, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 11, 4, 2, 10, 12, 13]
====================================
cloned = 6
killed = 9
cloned = 11
killed = 0
cloned = 4
killed = 8
cloned = 2
killed = 3
cloned = 10
killed = 7
cloned = 12
killed = 5
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 7, 9, 2, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 1, 0, 11, 8, 4, 13]
====================================
cloned = 3
killed = 10
cloned = 1
killed = 12
cloned = 0
killed = 7
cloned = 11
killed = 9
cloned = 8
killed = 2
cloned = 4
killed = 5
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 10, 3, 4, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 11, 6, 1, 12, 8, 13]
====================================
cloned = 5
killed = 0
cloned = 11
killed = 9
cloned = 6
killed = 10
cloned = 1
killed = 3
cloned = 12
killed = 4
cloned = 8
killed = 7
cloned = 13
killed = 2
Trial run 13/seed 12913:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Win-Stay Lose-Shift': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'Win-Stay Lose-Shift': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.25,
  37.20000000000001,
  35.50000000000001,
  35.8,
  34.1,
  35.7,
  37.35000000000001,
  28.4,
  31.500000000000004,
  22.5,
  34.8,
  34.15,
  34.2,
  33.45],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.900000000000006,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.900000000000006],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.050000000000004,
 37.60000000000001,
 35.85000000000001,
 34.599999999999994,
 33.800000000000004,
 35.2,
 37.80000000000001,
 27.999999999999996,
 31.35,
 24.85,
 35.05,
 34.35,
 32.050000000000004,
 33.349999999999994]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.474999999999994
Upper: 34.474999999999994
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 10]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 11
cloned = 6
killed = 12
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 2, 0, 4, 3, 5]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 9, 8, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 2
cloned = 12
killed = 0
cloned = 9
killed = 4
cloned = 8
killed = 3
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[38.9,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 5, 8, 9, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 6, 7, 11, 12, 13]
upper:           [11, 12, 6, 2, 0, 1, 13]
====================================
cloned = 11
killed = 3
cloned = 12
killed = 4
cloned = 6
killed = 5
cloned = 2
killed = 8
cloned = 0
killed = 9
cloned = 1
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 3, 4, 6, 12, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 9, 10, 2, 1, 5, 13]
====================================
cloned = 8
killed = 0
cloned = 9
killed = 7
cloned = 10
killed = 3
cloned = 2
killed = 4
cloned = 1
killed = 6
cloned = 5
killed = 12
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 9, 8, 4, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 0, 7, 10, 12, 1, 13]
====================================
cloned = 5
killed = 6
cloned = 0
killed = 3
cloned = 7
killed = 9
cloned = 10
killed = 8
cloned = 12
killed = 4
cloned = 1
killed = 2
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 0, 1, 9, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 2, 4, 8, 7, 5, 13]
====================================
cloned = 12
killed = 11
cloned = 2
killed = 3
cloned = 4
killed = 0
cloned = 8
killed = 1
cloned = 7
killed = 9
cloned = 5
killed = 6
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 1, 0, 4, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 11, 2, 5, 12, 7, 13]
====================================
cloned = 3
killed = 9
cloned = 11
killed = 6
cloned = 2
killed = 1
cloned = 5
killed = 0
cloned = 12
killed = 4
cloned = 7
killed = 8
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 8, 3, 12, 0, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 4, 2, 11, 7, 9, 13]
====================================
cloned = 1
killed = 6
cloned = 4
killed = 8
cloned = 2
killed = 3
cloned = 11
killed = 12
cloned = 7
killed = 0
cloned = 9
killed = 5
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 0, 2, 8, 7, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 10, 9, 6, 1, 13]
====================================
cloned = 11
killed = 5
cloned = 12
killed = 4
cloned = 10
killed = 0
cloned = 9
killed = 2
cloned = 6
killed = 8
cloned = 1
killed = 7
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 0, 9, 5, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 8, 2, 3, 4, 12, 13]
====================================
cloned = 10
killed = 7
cloned = 8
killed = 1
cloned = 2
killed = 0
cloned = 3
killed = 9
cloned = 4
killed = 5
cloned = 12
killed = 6
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 1, 6, 3, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 10, 9, 2, 12, 0, 13]
====================================
cloned = 5
killed = 4
cloned = 10
killed = 7
cloned = 9
killed = 1
cloned = 2
killed = 6
cloned = 12
killed = 3
cloned = 0
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 0, 12, 3, 4, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 1, 10, 9, 5, 6, 13]
====================================
cloned = 11
killed = 7
cloned = 1
killed = 8
cloned = 10
killed = 0
cloned = 9
killed = 12
cloned = 5
killed = 3
cloned = 6
killed = 4
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 1, 11, 8, 4, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 10, 6, 3, 9, 12, 13]
====================================
cloned = 0
killed = 2
cloned = 10
killed = 5
cloned = 6
killed = 1
cloned = 3
killed = 11
cloned = 9
killed = 8
cloned = 12
killed = 4
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 7, 11, 0, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 3, 2, 4, 12, 6, 13]
====================================
cloned = 10
killed = 5
cloned = 3
killed = 9
cloned = 2
killed = 7
cloned = 4
killed = 11
cloned = 12
killed = 0
cloned = 6
killed = 8
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 1, 8, 0, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 7, 11, 5, 6, 9, 13]
====================================
cloned = 10
killed = 3
cloned = 7
killed = 2
cloned = 11
killed = 1
cloned = 5
killed = 8
cloned = 6
killed = 0
cloned = 9
killed = 4
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 10, 6, 7, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 9, 4, 2, 11, 0, 13]
====================================
cloned = 1
killed = 8
cloned = 9
killed = 12
cloned = 4
killed = 10
cloned = 2
killed = 6
cloned = 11
killed = 7
cloned = 0
killed = 5
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 5, 7, 2, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 1, 0, 10, 9, 12, 13]
====================================
cloned = 8
killed = 4
cloned = 1
killed = 11
cloned = 0
killed = 5
cloned = 10
killed = 7
cloned = 9
killed = 2
cloned = 12
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 3, 12, 0, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 1, 7, 6, 2, 9, 13]
====================================
cloned = 8
killed = 10
cloned = 1
killed = 5
cloned = 7
killed = 3
cloned = 6
killed = 12
cloned = 2
killed = 0
cloned = 9
killed = 11
cloned = 13
killed = 4
Trial run 14/seed 12914:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Win-Stay Lose-Shift': 2}),
 Counter({'Michaelos: (D,)': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Win-Stay Lose-Shift': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.050000000000004,
  37.60000000000001,
  35.85000000000001,
  34.599999999999994,
  33.800000000000004,
  35.2,
  37.80000000000001,
  27.999999999999996,
  31.35,
  24.85,
  35.05,
  34.35,
  32.050000000000004,
  33.349999999999994],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [38.9,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.6,
 37.45000000000001,
 36.20000000000001,
 34.599999999999994,
 34.35000000000001,
 35.800000000000004,
 35.70000000000001,
 28.599999999999994,
 31.05,
 25.650000000000002,
 35.35,
 35.25,
 31.150000000000002,
 33.75]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.925
Upper: 34.925
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 7, 8, 9, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 5, 6, 10, 11]
====================================
cloned = 0
killed = 3
cloned = 1
killed = 4
cloned = 2
killed = 7
cloned = 5
killed = 8
cloned = 6
killed = 9
cloned = 10
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.4,
 38.4,
 39.7,
 38.4,
 39.70000000000001,
 38.4,
 38.400000000000006,
 39.7,
 38.400000000000006,
 38.4,
 38.400000000000006,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 6
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 5, 7, 11, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 8, 10, 12]
upper:           [1, 4, 6, 9, 0, 10, 12]
====================================
cloned = 1
killed = 2
cloned = 4
killed = 3
cloned = 6
killed = 5
cloned = 9
killed = 7
cloned = 0
killed = 11
cloned = 10
killed = 13
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 38.9,
 38.9,
 38.9,
 38.9,
 38.9,
 38.9,
 37.800000000000004,
 38.89999999999999,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.89999999999999
Upper: 38.89999999999999
====================================
lower list size: 6
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [0, 8, 10, 11, 12, 13, 9]
lower threshold: []
....................................
upper threshold: [9]
upper:           [1, 2, 3, 4, 5, 6, 7]
====================================
cloned = 1
killed = 0
cloned = 2
killed = 8
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 13
cloned = 7
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 9, 5, 10, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 3, 4, 6, 0, 2, 13]
====================================
cloned = 12
killed = 8
cloned = 3
killed = 11
cloned = 4
killed = 9
cloned = 6
killed = 5
cloned = 0
killed = 10
cloned = 2
killed = 1
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 8, 12, 11, 9, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 0, 10, 4, 6, 5, 13]
====================================
cloned = 2
killed = 3
cloned = 0
killed = 1
cloned = 10
killed = 8
cloned = 4
killed = 12
cloned = 6
killed = 11
cloned = 5
killed = 9
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 7, 2, 6, 4, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 11, 1, 3, 9, 12, 13]
====================================
cloned = 5
killed = 0
cloned = 11
killed = 10
cloned = 1
killed = 7
cloned = 3
killed = 2
cloned = 9
killed = 6
cloned = 12
killed = 4
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 6, 10, 9, 8, 0, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 5, 4, 3, 7, 13]
====================================
cloned = 11
killed = 2
cloned = 12
killed = 6
cloned = 5
killed = 10
cloned = 4
killed = 9
cloned = 3
killed = 8
cloned = 7
killed = 0
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 4, 10, 12, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 1, 5, 3, 11, 7, 13]
====================================
cloned = 9
killed = 6
cloned = 1
killed = 2
cloned = 5
killed = 4
cloned = 3
killed = 10
cloned = 11
killed = 12
cloned = 7
killed = 0
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 7, 0, 12, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 6, 11, 10, 4, 1, 13]
====================================
cloned = 8
killed = 3
cloned = 6
killed = 2
cloned = 11
killed = 7
cloned = 10
killed = 0
cloned = 4
killed = 12
cloned = 1
killed = 5
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 2, 8, 12, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 5, 6, 1, 10, 4, 13]
====================================
cloned = 3
killed = 7
cloned = 5
killed = 9
cloned = 6
killed = 2
cloned = 1
killed = 8
cloned = 10
killed = 12
cloned = 4
killed = 0
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 3, 12, 10, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 2, 4, 5, 11, 13]
====================================
cloned = 7
killed = 1
cloned = 6
killed = 9
cloned = 2
killed = 3
cloned = 4
killed = 12
cloned = 5
killed = 10
cloned = 11
killed = 0
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 5, 1, 2, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 8, 6, 7, 3, 13]
====================================
cloned = 11
killed = 0
cloned = 12
killed = 10
cloned = 8
killed = 5
cloned = 6
killed = 1
cloned = 7
killed = 2
cloned = 3
killed = 4
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 0, 1, 6, 2, 8, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 10, 9, 7, 12, 3, 13]
====================================
cloned = 11
killed = 4
cloned = 10
killed = 0
cloned = 9
killed = 1
cloned = 7
killed = 6
cloned = 12
killed = 2
cloned = 3
killed = 8
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 8, 11, 1, 5, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 6, 10, 2, 12, 13]
====================================
cloned = 7
killed = 0
cloned = 9
killed = 8
cloned = 6
killed = 11
cloned = 10
killed = 1
cloned = 2
killed = 5
cloned = 12
killed = 3
cloned = 13
killed = 4
Trial run 15/seed 12915:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Win-Stay Lose-Shift': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Win-Stay Lose-Shift': 4,
          'Evolved FSM 6': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.6,
  37.45000000000001,
  36.20000000000001,
  34.599999999999994,
  34.35000000000001,
  35.800000000000004,
  35.70000000000001,
  28.599999999999994,
  31.05,
  25.650000000000002,
  35.35,
  35.25,
  31.150000000000002,
  33.75],
 [38.400000000000006,
  39.7,
  38.4,
  38.4,
  39.7,
  38.4,
  39.70000000000001,
  38.4,
  38.400000000000006,
  39.7,
  38.400000000000006,
  38.4,
  38.400000000000006,
  38.4],
 [37.800000000000004,
  38.9,
  38.9,
  38.9,
  38.9,
  38.9,
  38.9,
  38.9,
  37.800000000000004,
  38.89999999999999,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.300000000000004,
 36.800000000000004,
 36.05000000000001,
 34.75,
 33.8,
 35.6,
 37.95000000000001,
 27.4,
 31.500000000000004,
 23.899999999999995,
 34.05,
 35.15,
 32.15,
 33.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.4
Upper: 34.4
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 2, 4, 3, 9, 5]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 0, 8, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 2
cloned = 12
killed = 4
cloned = 0
killed = 3
cloned = 8
killed = 9
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 38.900000000000006,
 37.800000000000004,
 38.900000000000006,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.900000000000006]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 5, 8, 9, 10, 1]
lower threshold: []
....................................
upper threshold: [1, 2, 7, 11, 12]
upper:           [4, 6, 13, 2, 11, 7, 12]
====================================
cloned = 4
killed = 0
cloned = 6
killed = 3
cloned = 13
killed = 5
cloned = 2
killed = 8
cloned = 11
killed = 9
cloned = 7
killed = 10
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 10, 11, 0, 1, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 9, 7, 8, 12, 5, 13]
====================================
cloned = 4
killed = 6
cloned = 9
killed = 2
cloned = 7
killed = 10
cloned = 8
killed = 11
cloned = 12
killed = 0
cloned = 5
killed = 1
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 10, 0, 4, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 8, 9, 12, 5, 11, 13]
====================================
cloned = 7
killed = 6
cloned = 8
killed = 1
cloned = 9
killed = 10
cloned = 12
killed = 0
cloned = 5
killed = 4
cloned = 11
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 9, 10, 2, 3, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 5, 12, 11, 8, 4, 13]
====================================
cloned = 0
killed = 6
cloned = 5
killed = 1
cloned = 12
killed = 9
cloned = 11
killed = 10
cloned = 8
killed = 2
cloned = 4
killed = 3
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 7, 1, 8, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 4, 5, 11, 10, 9, 13]
====================================
cloned = 6
killed = 2
cloned = 4
killed = 12
cloned = 5
killed = 7
cloned = 11
killed = 1
cloned = 10
killed = 8
cloned = 9
killed = 0
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 2, 10, 11, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 4, 0, 5, 8, 1, 13]
====================================
cloned = 12
killed = 7
cloned = 4
killed = 9
cloned = 0
killed = 2
cloned = 5
killed = 10
cloned = 8
killed = 11
cloned = 1
killed = 6
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 9, 2, 11, 8, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 6, 5, 10, 12, 0, 13]
====================================
cloned = 1
killed = 3
cloned = 6
killed = 9
cloned = 5
killed = 2
cloned = 10
killed = 11
cloned = 12
killed = 8
cloned = 0
killed = 7
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 0, 11, 6, 12, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 10, 5, 2, 7, 9, 13]
====================================
cloned = 1
killed = 8
cloned = 10
killed = 0
cloned = 5
killed = 11
cloned = 2
killed = 6
cloned = 7
killed = 12
cloned = 9
killed = 4
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 1, 3, 5, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 0, 4, 12, 11, 13]
====================================
cloned = 7
killed = 9
cloned = 6
killed = 2
cloned = 0
killed = 1
cloned = 4
killed = 3
cloned = 12
killed = 5
cloned = 11
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 4, 5, 2, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 6, 3, 8, 1, 11, 13]
====================================
cloned = 0
killed = 10
cloned = 6
killed = 9
cloned = 3
killed = 4
cloned = 8
killed = 5
cloned = 1
killed = 2
cloned = 11
killed = 7
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 7, 3, 8, 2, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 11, 12, 4, 5, 0, 13]
====================================
cloned = 10
killed = 1
cloned = 11
killed = 6
cloned = 12
killed = 7
cloned = 4
killed = 3
cloned = 5
killed = 8
cloned = 0
killed = 2
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 12, 7, 9, 8, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 3, 0, 5, 6, 2, 13]
====================================
cloned = 10
killed = 1
cloned = 3
killed = 11
cloned = 0
killed = 12
cloned = 5
killed = 7
cloned = 6
killed = 9
cloned = 2
killed = 8
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 3, 6, 12, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 4, 11, 10, 5, 13]
====================================
cloned = 7
killed = 8
cloned = 9
killed = 2
cloned = 4
killed = 3
cloned = 11
killed = 6
cloned = 10
killed = 12
cloned = 5
killed = 1
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 2, 12, 11, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 1, 9, 6, 3, 10, 13]
====================================
cloned = 8
killed = 7
cloned = 1
killed = 4
cloned = 9
killed = 2
cloned = 6
killed = 12
cloned = 3
killed = 11
cloned = 10
killed = 5
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 5, 10, 12, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 0, 1, 6, 2, 11, 13]
====================================
cloned = 8
killed = 7
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 6
killed = 10
cloned = 2
killed = 12
cloned = 11
killed = 9
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 8, 3, 10, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 0, 2, 11, 6, 7, 13]
====================================
cloned = 12
killed = 5
cloned = 0
killed = 9
cloned = 2
killed = 8
cloned = 11
killed = 3
cloned = 6
killed = 10
cloned = 7
killed = 4
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 11, 6, 10, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 9, 8, 4, 3, 5, 13]
====================================
cloned = 12
killed = 2
cloned = 9
killed = 7
cloned = 8
killed = 11
cloned = 4
killed = 6
cloned = 3
killed = 10
cloned = 5
killed = 1
cloned = 13
killed = 0
Trial run 16/seed 12916:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Tit For Tat': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.300000000000004,
  36.800000000000004,
  36.05000000000001,
  34.75,
  33.8,
  35.6,
  37.95000000000001,
  27.4,
  31.500000000000004,
  23.899999999999995,
  34.05,
  35.15,
  32.15,
  33.4],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  38.900000000000006,
  37.800000000000004,
  38.900000000000006,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.900000000000006],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.4,
 36.85000000000001,
 35.75000000000001,
 35.099999999999994,
 33.400000000000006,
 36.050000000000004,
 35.95000000000001,
 27.799999999999997,
 31.500000000000004,
 23.75,
 34.55,
 34.35,
 30.500000000000004,
 33.65]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.45
Upper: 34.45
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 10]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 11
cloned = 6
killed = 12
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 9, 5, 2, 8, 0]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 4, 3, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 9
cloned = 12
killed = 5
cloned = 4
killed = 2
cloned = 3
killed = 8
cloned = 10
killed = 0
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.900000000000006,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.900000000000006,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 2
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 3, 4, 8, 10, 6]
lower threshold: []
....................................
upper threshold: [1, 5, 6, 9, 11, 13]
upper:           [7, 12, 1, 11, 9, 5, 13]
====================================
cloned = 7
killed = 0
cloned = 12
killed = 2
cloned = 1
killed = 3
cloned = 11
killed = 4
cloned = 9
killed = 8
cloned = 5
killed = 10
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 4, 0, 7, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 3, 1, 2, 8, 11, 13]
====================================
cloned = 9
killed = 12
cloned = 3
killed = 6
cloned = 1
killed = 4
cloned = 2
killed = 0
cloned = 8
killed = 7
cloned = 11
killed = 5
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 10, 8, 4, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 12, 6, 1, 7, 11, 13]
====================================
cloned = 0
killed = 5
cloned = 12
killed = 9
cloned = 6
killed = 10
cloned = 1
killed = 8
cloned = 7
killed = 4
cloned = 11
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 9, 4, 11, 10, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 12, 0, 1, 8, 3, 13]
====================================
cloned = 7
killed = 5
cloned = 12
killed = 6
cloned = 0
killed = 9
cloned = 1
killed = 4
cloned = 8
killed = 11
cloned = 3
killed = 10
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 0, 8, 4, 7, 1, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 12, 10, 11, 5, 2, 13]
====================================
cloned = 3
killed = 6
cloned = 12
killed = 0
cloned = 10
killed = 8
cloned = 11
killed = 4
cloned = 5
killed = 7
cloned = 2
killed = 1
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 9, 2, 10, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 8, 7, 6, 0, 5, 13]
====================================
cloned = 3
killed = 1
cloned = 8
killed = 12
cloned = 7
killed = 9
cloned = 6
killed = 2
cloned = 0
killed = 10
cloned = 5
killed = 11
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 10, 11, 4, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 12, 1, 3, 0, 9, 13]
====================================
cloned = 2
killed = 6
cloned = 12
killed = 7
cloned = 1
killed = 10
cloned = 3
killed = 11
cloned = 0
killed = 4
cloned = 9
killed = 5
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 0, 1, 3, 11, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 4, 7, 8, 5, 10, 13]
====================================
cloned = 2
killed = 9
cloned = 4
killed = 6
cloned = 7
killed = 0
cloned = 8
killed = 1
cloned = 5
killed = 3
cloned = 10
killed = 11
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 10, 3, 11, 0, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 6, 7, 4, 8, 5, 13]
====================================
cloned = 2
killed = 9
cloned = 6
killed = 12
cloned = 7
killed = 10
cloned = 4
killed = 3
cloned = 8
killed = 11
cloned = 5
killed = 0
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 8, 9, 2, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 10, 11, 6, 0, 5, 13]
====================================
cloned = 7
killed = 1
cloned = 10
killed = 4
cloned = 11
killed = 8
cloned = 6
killed = 9
cloned = 0
killed = 2
cloned = 5
killed = 3
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 12, 3, 10, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 11, 6, 2, 1, 7, 13]
====================================
cloned = 8
killed = 5
cloned = 11
killed = 0
cloned = 6
killed = 12
cloned = 2
killed = 3
cloned = 1
killed = 10
cloned = 7
killed = 4
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 8, 1, 0, 11, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 2, 5, 4, 9, 7, 13]
====================================
cloned = 10
killed = 12
cloned = 2
killed = 6
cloned = 5
killed = 8
cloned = 4
killed = 1
cloned = 9
killed = 0
cloned = 7
killed = 11
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 0, 9, 7, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 8, 5, 2, 1, 12, 13]
====================================
cloned = 11
killed = 10
cloned = 8
killed = 3
cloned = 5
killed = 0
cloned = 2
killed = 9
cloned = 1
killed = 7
cloned = 12
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 7, 6, 10, 3, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 0, 5, 2, 1, 4, 13]
====================================
cloned = 11
killed = 12
cloned = 0
killed = 7
cloned = 5
killed = 6
cloned = 2
killed = 10
cloned = 1
killed = 3
cloned = 4
killed = 9
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 11, 2, 1, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 12, 10, 5, 7, 4, 13]
====================================
cloned = 8
killed = 9
cloned = 12
killed = 0
cloned = 10
killed = 11
cloned = 5
killed = 2
cloned = 7
killed = 1
cloned = 4
killed = 6
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 7, 5, 6, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 11, 9, 2, 3, 8, 13]
====================================
cloned = 12
killed = 10
cloned = 11
killed = 1
cloned = 9
killed = 7
cloned = 2
killed = 5
cloned = 3
killed = 6
cloned = 8
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 10, 7, 8, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 11, 5, 1, 3, 2, 13]
====================================
cloned = 4
killed = 9
cloned = 11
killed = 6
cloned = 5
killed = 10
cloned = 1
killed = 7
cloned = 3
killed = 8
cloned = 2
killed = 0
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 9, 7, 0, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 10, 8, 4, 11, 13]
====================================
cloned = 5
killed = 6
cloned = 3
killed = 2
cloned = 10
killed = 9
cloned = 8
killed = 7
cloned = 4
killed = 0
cloned = 11
killed = 12
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 1, 2, 5, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 11, 10, 7, 8, 9, 13]
====================================
cloned = 12
killed = 4
cloned = 11
killed = 6
cloned = 10
killed = 1
cloned = 7
killed = 2
cloned = 8
killed = 5
cloned = 9
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 11, 4, 7, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 6, 2, 10, 8, 0, 13]
====================================
cloned = 3
killed = 9
cloned = 6
killed = 1
cloned = 2
killed = 11
cloned = 10
killed = 4
cloned = 8
killed = 7
cloned = 0
killed = 12
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 7, 9, 10, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 12, 11, 1, 5, 3, 13]
====================================
cloned = 0
killed = 4
cloned = 12
killed = 8
cloned = 11
killed = 7
cloned = 1
killed = 9
cloned = 5
killed = 10
cloned = 3
killed = 2
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 0, 4, 3, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 6, 7, 10, 9, 1, 13]
====================================
cloned = 8
killed = 2
cloned = 6
killed = 12
cloned = 7
killed = 0
cloned = 10
killed = 4
cloned = 9
killed = 3
cloned = 1
killed = 5
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 7, 1, 8, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 12, 9, 5, 6, 0, 13]
====================================
cloned = 3
killed = 4
cloned = 12
killed = 2
cloned = 9
killed = 7
cloned = 5
killed = 1
cloned = 6
killed = 8
cloned = 0
killed = 10
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 1, 12, 9, 2, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 6, 7, 0, 11, 10, 13]
====================================
cloned = 4
killed = 8
cloned = 6
killed = 5
cloned = 7
killed = 1
cloned = 0
killed = 12
cloned = 11
killed = 9
cloned = 10
killed = 2
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 11, 8, 7, 6, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 5, 10, 1, 4, 0, 13]
====================================
cloned = 2
killed = 3
cloned = 5
killed = 12
cloned = 10
killed = 11
cloned = 1
killed = 8
cloned = 4
killed = 7
cloned = 0
killed = 6
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 1, 7, 0, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 10, 5, 12, 6, 3, 13]
====================================
cloned = 4
killed = 2
cloned = 10
killed = 11
cloned = 5
killed = 1
cloned = 12
killed = 7
cloned = 6
killed = 0
cloned = 3
killed = 9
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 12, 8, 7, 1, 2, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 0, 4, 9, 6, 11, 13]
====================================
cloned = 3
killed = 5
cloned = 0
killed = 12
cloned = 4
killed = 8
cloned = 9
killed = 7
cloned = 6
killed = 1
cloned = 11
killed = 2
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 0, 5, 11, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 4, 12, 2, 1, 3, 13]
====================================
cloned = 7
killed = 6
cloned = 4
killed = 10
cloned = 12
killed = 0
cloned = 2
killed = 5
cloned = 1
killed = 11
cloned = 3
killed = 8
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 7, 9, 6, 4, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 1, 3, 5, 8, 11, 13]
====================================
cloned = 0
killed = 2
cloned = 1
killed = 12
cloned = 3
killed = 7
cloned = 5
killed = 9
cloned = 8
killed = 6
cloned = 11
killed = 4
cloned = 13
killed = 10
Trial run 17/seed 12917:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Win-Stay Lose-Shift': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Win-Stay Lose-Shift': 2,
          'Evolved FSM 6': 2,
          'Evolved FSM 16': 2}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 12, 'Michaelos: (D,)': 2}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.4,
  36.85000000000001,
  35.75000000000001,
  35.099999999999994,
  33.400000000000006,
  36.050000000000004,
  35.95000000000001,
  27.799999999999997,
  31.500000000000004,
  23.75,
  34.55,
  34.35,
  30.500000000000004,
  33.65],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.900000000000006,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.900000000000006,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.15,
 36.800000000000004,
 35.70000000000001,
 35.5,
 34.25,
 35.1,
 36.45000000000001,
 26.599999999999994,
 31.650000000000002,
 25.300000000000004,
 34.6,
 34.949999999999996,
 30.250000000000004,
 33.5]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.775
Upper: 34.775
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 0, 8, 9, 5, 4]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 2, 3, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 0
cloned = 12
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 5
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[38.89999999999999,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.89999999999999
Upper: 38.89999999999999
====================================
lower list size: 6
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 4, 5, 9, 10, 0]
lower threshold: []
....................................
upper threshold: [0]
upper:           [1, 6, 7, 8, 11, 12, 13]
====================================
cloned = 1
killed = 2
cloned = 6
killed = 3
cloned = 7
killed = 4
cloned = 8
killed = 5
cloned = 11
killed = 9
cloned = 12
killed = 10
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 6, 10, 2, 0, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 1, 4, 3, 9, 12, 13]
====================================
cloned = 5
killed = 7
cloned = 1
killed = 6
cloned = 4
killed = 10
cloned = 3
killed = 2
cloned = 9
killed = 0
cloned = 12
killed = 8
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 9, 8, 7, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 3, 5, 2, 0, 1, 13]
====================================
cloned = 11
killed = 10
cloned = 3
killed = 12
cloned = 5
killed = 9
cloned = 2
killed = 8
cloned = 0
killed = 7
cloned = 1
killed = 4
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 3, 0, 9, 10, 1, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 6, 12, 5, 8, 7, 13]
====================================
cloned = 11
killed = 4
cloned = 6
killed = 3
cloned = 12
killed = 0
cloned = 5
killed = 9
cloned = 8
killed = 10
cloned = 7
killed = 1
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 8, 1, 3, 0, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 7, 4, 2, 9, 12, 13]
====================================
cloned = 5
killed = 6
cloned = 7
killed = 8
cloned = 4
killed = 1
cloned = 2
killed = 3
cloned = 9
killed = 0
cloned = 12
killed = 11
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 0, 3, 1, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 2, 10, 5, 7, 13]
====================================
cloned = 6
killed = 8
cloned = 12
killed = 4
cloned = 2
killed = 0
cloned = 10
killed = 3
cloned = 5
killed = 1
cloned = 7
killed = 11
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 9, 7, 10, 4, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 2, 1, 11, 6, 12, 13]
====================================
cloned = 5
killed = 8
cloned = 2
killed = 3
cloned = 1
killed = 9
cloned = 11
killed = 7
cloned = 6
killed = 10
cloned = 12
killed = 4
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 2, 6, 4, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 10, 1, 0, 3, 9, 13]
====================================
cloned = 11
killed = 5
cloned = 10
killed = 8
cloned = 1
killed = 2
cloned = 0
killed = 6
cloned = 3
killed = 4
cloned = 9
killed = 7
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 8, 9, 2, 1, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 0, 12, 3, 5, 6, 13]
====================================
cloned = 7
killed = 11
cloned = 0
killed = 4
cloned = 12
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 2
cloned = 6
killed = 1
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 9, 4, 6, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 3, 5, 8, 11, 1, 13]
====================================
cloned = 12
killed = 0
cloned = 3
killed = 10
cloned = 5
killed = 9
cloned = 8
killed = 4
cloned = 11
killed = 6
cloned = 1
killed = 7
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 2, 9, 10, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 8, 3, 11, 6, 0, 13]
====================================
cloned = 4
killed = 5
cloned = 8
killed = 1
cloned = 3
killed = 2
cloned = 11
killed = 9
cloned = 6
killed = 10
cloned = 0
killed = 7
cloned = 13
killed = 12
Trial run 18/seed 12918:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.15,
  36.800000000000004,
  35.70000000000001,
  35.5,
  34.25,
  35.1,
  36.45000000000001,
  26.599999999999994,
  31.650000000000002,
  25.300000000000004,
  34.6,
  34.949999999999996,
  30.250000000000004,
  33.5],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [38.89999999999999,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.4,
 36.70000000000001,
 35.650000000000006,
 35.25,
 33.6,
 35.6,
 37.95000000000001,
 28.599999999999994,
 31.8,
 22.65,
 34.55,
 34.949999999999996,
 32.95,
 33.15]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.75
Upper: 34.75
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 4, 0, 5, 3, 8]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 2, 9, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 4
cloned = 12
killed = 0
cloned = 2
killed = 5
cloned = 9
killed = 3
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 38.9,
 37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.9]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 5, 8, 9, 10, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 4, 6, 7, 11, 12, 13]
upper:           [12, 6, 7, 0, 1, 11, 13]
====================================
cloned = 12
killed = 2
cloned = 6
killed = 3
cloned = 7
killed = 5
cloned = 0
killed = 8
cloned = 1
killed = 9
cloned = 11
killed = 10
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 10, 0, 4, 3, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 9, 6, 5, 11, 12, 13]
====================================
cloned = 2
killed = 8
cloned = 9
killed = 10
cloned = 6
killed = 0
cloned = 5
killed = 4
cloned = 11
killed = 3
cloned = 12
killed = 7
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 10, 3, 11, 0, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 7, 12, 4, 5, 6, 13]
====================================
cloned = 9
killed = 8
cloned = 7
killed = 10
cloned = 12
killed = 3
cloned = 4
killed = 11
cloned = 5
killed = 0
cloned = 6
killed = 2
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 3, 8, 5, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 12, 2, 1, 11, 13]
====================================
cloned = 10
killed = 9
cloned = 4
killed = 0
cloned = 12
killed = 3
cloned = 2
killed = 8
cloned = 1
killed = 5
cloned = 11
killed = 7
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 3, 9, 7, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 1, 2, 0, 8, 6, 13]
====================================
cloned = 11
killed = 5
cloned = 1
killed = 4
cloned = 2
killed = 3
cloned = 0
killed = 9
cloned = 8
killed = 7
cloned = 6
killed = 12
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 2, 12, 3, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 7, 10, 0, 11, 6, 13]
====================================
cloned = 5
killed = 1
cloned = 7
killed = 4
cloned = 10
killed = 2
cloned = 0
killed = 12
cloned = 11
killed = 3
cloned = 6
killed = 8
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 4, 11, 10, 5, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 9, 7, 8, 2, 3, 13]
====================================
cloned = 0
killed = 12
cloned = 9
killed = 4
cloned = 7
killed = 11
cloned = 8
killed = 10
cloned = 2
killed = 5
cloned = 3
killed = 1
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 1, 5, 8, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 11, 4, 0, 9, 7, 13]
====================================
cloned = 10
killed = 2
cloned = 11
killed = 12
cloned = 4
killed = 1
cloned = 0
killed = 5
cloned = 9
killed = 8
cloned = 7
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 7, 12, 9, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 1, 3, 11, 10, 8, 13]
====================================
cloned = 2
killed = 5
cloned = 1
killed = 0
cloned = 3
killed = 7
cloned = 11
killed = 12
cloned = 10
killed = 9
cloned = 8
killed = 6
cloned = 13
killed = 4
Trial run 19/seed 12919:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Michaelos: (D,)': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.4,
  36.70000000000001,
  35.650000000000006,
  35.25,
  33.6,
  35.6,
  37.95000000000001,
  28.599999999999994,
  31.8,
  22.65,
  34.55,
  34.949999999999996,
  32.95,
  33.15],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  38.9,
  37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.9],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[35.1,
 37.45000000000001,
 35.85000000000001,
 35.8,
 34.45,
 35.650000000000006,
 35.85000000000001,
 27.799999999999997,
 31.500000000000004,
 23.799999999999997,
 34.55,
 34.75,
 30.900000000000002,
 33.349999999999994]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 34.65
Upper: 34.65
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.400000000000006,
 39.7,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 39.7,
 39.70000000000001,
 38.400000000000006,
 38.400000000000006,
 38.400000000000006,
 38.4,
 39.7,
 38.4]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 2
upper list size: 4
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 4, 2, 0, 3, 8]
lower threshold: []
....................................
upper threshold: [0, 2, 3, 4, 5, 8, 9, 10]
upper:           [1, 6, 7, 12, 9, 5, 10]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 13
cloned = 7
killed = 4
cloned = 12
killed = 2
cloned = 9
killed = 0
cloned = 5
killed = 3
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[37.800000000000004,
 38.9,
 38.9,
 37.800000000000004,
 38.900000000000006,
 37.800000000000004,
 38.900000000000006,
 38.9,
 37.800000000000004,
 37.800000000000004,
 37.800000000000004,
 38.9,
 38.9,
 38.900000000000006]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.9
Upper: 38.9
====================================
lower list size: 6
upper list size: 3
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 5, 8, 9, 10, 7]
lower threshold: []
....................................
upper threshold: [1, 2, 7, 11, 12]
upper:           [4, 6, 13, 1, 2, 11, 12]
====================================
cloned = 4
killed = 0
cloned = 6
killed = 3
cloned = 13
killed = 5
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 11
killed = 10
cloned = 12
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 7, 5, 2, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 4, 11, 10, 3, 13]
====================================
cloned = 6
killed = 0
cloned = 12
killed = 9
cloned = 4
killed = 7
cloned = 11
killed = 5
cloned = 10
killed = 2
cloned = 3
killed = 8
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 2, 5, 0, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 9, 8, 11, 12, 7, 13]
====================================
cloned = 1
killed = 4
cloned = 9
killed = 10
cloned = 8
killed = 2
cloned = 11
killed = 5
cloned = 12
killed = 0
cloned = 7
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 10, 4, 6, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 11, 5, 0, 2, 12, 13]
====================================
cloned = 8
killed = 9
cloned = 11
killed = 3
cloned = 5
killed = 10
cloned = 0
killed = 4
cloned = 2
killed = 6
cloned = 12
killed = 1
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 0, 6, 7, 12, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 5, 8, 1, 11, 10, 13]
====================================
cloned = 4
killed = 9
cloned = 5
killed = 3
cloned = 8
killed = 0
cloned = 1
killed = 6
cloned = 11
killed = 7
cloned = 10
killed = 12
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 4, 0, 1, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 11, 8, 2, 10, 12, 13]
====================================
cloned = 7
killed = 6
cloned = 11
killed = 9
cloned = 8
killed = 4
cloned = 2
killed = 0
cloned = 10
killed = 1
cloned = 12
killed = 5
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 9, 0, 7, 1, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 5, 12, 6, 4, 10, 13]
====================================
cloned = 11
killed = 3
cloned = 5
killed = 8
cloned = 12
killed = 9
cloned = 6
killed = 0
cloned = 4
killed = 7
cloned = 10
killed = 1
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 12, 1, 8, 2, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 10, 6, 3, 9, 13]
====================================
cloned = 11
killed = 0
cloned = 4
killed = 5
cloned = 10
killed = 12
cloned = 6
killed = 1
cloned = 3
killed = 8
cloned = 9
killed = 2
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 4, 3, 5, 12, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 7, 1, 6, 0, 9, 13]
====================================
cloned = 11
killed = 2
cloned = 7
killed = 4
cloned = 1
killed = 3
cloned = 6
killed = 5
cloned = 0
killed = 12
cloned = 9
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 2, 0, 5, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 12, 9, 7, 4, 11, 13]
====================================
cloned = 3
killed = 1
cloned = 12
killed = 6
cloned = 9
killed = 2
cloned = 7
killed = 0
cloned = 4
killed = 5
cloned = 11
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 0, 10, 5, 2, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 3, 6, 11, 1, 7, 13]
====================================
cloned = 12
killed = 4
cloned = 3
killed = 0
cloned = 6
killed = 10
cloned = 11
killed = 5
cloned = 1
killed = 2
cloned = 7
killed = 9
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 5, 4, 1, 3, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 11, 2, 9, 6, 10, 13]
====================================
cloned = 0
killed = 12
cloned = 11
killed = 8
cloned = 2
killed = 5
cloned = 9
killed = 4
cloned = 6
killed = 1
cloned = 10
killed = 3
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 11, 6, 3, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 8, 1, 4, 0, 7, 13]
====================================
cloned = 2
killed = 10
cloned = 8
killed = 9
cloned = 1
killed = 11
cloned = 4
killed = 6
cloned = 0
killed = 3
cloned = 7
killed = 12
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 6, 11, 10, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 7, 0, 5, 9, 12, 13]
====================================
cloned = 8
killed = 2
cloned = 7
killed = 3
cloned = 0
killed = 6
cloned = 5
killed = 11
cloned = 9
killed = 10
cloned = 12
killed = 4
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 6, 3, 0, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 4, 9, 11, 10, 12, 13]
====================================
cloned = 5
killed = 7
cloned = 4
killed = 1
cloned = 9
killed = 6
cloned = 11
killed = 3
cloned = 10
killed = 0
cloned = 12
killed = 8
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 11, 3, 8, 12, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 1, 9, 10, 0, 7, 13]
====================================
cloned = 5
killed = 6
cloned = 1
killed = 11
cloned = 9
killed = 3
cloned = 10
killed = 8
cloned = 0
killed = 12
cloned = 7
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 7, 0, 6, 2, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 10, 12, 1, 5, 9, 13]
====================================
cloned = 8
killed = 4
cloned = 10
killed = 11
cloned = 12
killed = 7
cloned = 1
killed = 0
cloned = 5
killed = 6
cloned = 9
killed = 2
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 6, 5, 4, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 7, 2, 12, 0, 11, 13]
====================================
cloned = 1
killed = 10
cloned = 7
killed = 3
cloned = 2
killed = 6
cloned = 12
killed = 5
cloned = 0
killed = 4
cloned = 11
killed = 8
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 9, 7, 5, 3, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 0, 1, 4, 10, 6, 13]
====================================
cloned = 12
killed = 11
cloned = 0
killed = 2
cloned = 1
killed = 9
cloned = 4
killed = 7
cloned = 10
killed = 5
cloned = 6
killed = 3
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 3, 0, 2, 10, 12, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 8, 7, 9, 6, 5, 13]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 3
cloned = 7
killed = 0
cloned = 9
killed = 2
cloned = 6
killed = 10
cloned = 5
killed = 12
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 3, 7, 9, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 8, 0, 2, 6, 11, 13]
====================================
cloned = 10
killed = 5
cloned = 8
killed = 4
cloned = 0
killed = 3
cloned = 2
killed = 7
cloned = 6
killed = 9
cloned = 11
killed = 1
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 5, 7, 4, 10, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 6, 3, 0, 1, 11, 13]
====================================
cloned = 8
killed = 2
cloned = 6
killed = 12
cloned = 3
killed = 5
cloned = 0
killed = 7
cloned = 1
killed = 4
cloned = 11
killed = 10
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 1, 5, 7, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 9, 6, 4, 3, 2, 13]
====================================
cloned = 12
killed = 8
cloned = 9
killed = 11
cloned = 6
killed = 1
cloned = 4
killed = 5
cloned = 3
killed = 7
cloned = 2
killed = 10
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 5, 2, 8, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 4, 0, 11, 3, 1, 13]
====================================
cloned = 12
killed = 9
cloned = 4
killed = 10
cloned = 0
killed = 5
cloned = 11
killed = 2
cloned = 3
killed = 8
cloned = 1
killed = 6
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 1, 3, 5, 7, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 2, 9, 11, 12, 8, 13]
====================================
cloned = 10
killed = 0
cloned = 2
killed = 1
cloned = 9
killed = 3
cloned = 11
killed = 5
cloned = 12
killed = 7
cloned = 8
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999,
 37.69999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 37.69999999999999
Upper: 37.69999999999999
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 9, 10, 7, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 5, 2, 11, 8, 0, 13]
====================================
cloned = 4
killed = 3
cloned = 5
killed = 6
cloned = 2
killed = 9
cloned = 11
killed = 10
cloned = 8
killed = 7
cloned = 0
killed = 12
cloned = 13
killed = 1
Trial run 20/seed 12920:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Second by RichardHufford': 4,
          'Michaelos: (D,)': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 16': 2}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 10, 'Michaelos: (D,)': 4}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 8, 'Second by RichardHufford': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Second by RichardHufford': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 12, 'Second by RichardHufford': 2}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 10, 'Second by RichardHufford': 4}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[35.1,
  37.45000000000001,
  35.85000000000001,
  35.8,
  34.45,
  35.650000000000006,
  35.85000000000001,
  27.799999999999997,
  31.500000000000004,
  23.799999999999997,
  34.55,
  34.75,
  30.900000000000002,
  33.349999999999994],
 [38.400000000000006,
  39.7,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  39.7,
  39.70000000000001,
  38.400000000000006,
  38.400000000000006,
  38.400000000000006,
  38.4,
  39.7,
  38.4],
 [37.800000000000004,
  38.9,
  38.9,
  37.800000000000004,
  38.900000000000006,
  37.800000000000004,
  38.900000000000006,
  38.9,
  37.800000000000004,
  37.800000000000004,
  37.800000000000004,
  38.9,
  38.9,
  38.900000000000006],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999],
 [37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999,
  37.69999999999999]]
***************************************************
***************************************************
