>>> Output of Elitist Selection (Modified) Moran Process <<<
>>> Experiment number 121 <<<
------------------------------------------------------------
Experiment parameters:
1. Player Agents: 14
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
2. newFileNameNumber for plot:           121
3. (Number of) turns:                    200
4. Starting seed (firstSeed):            856
5. iterations:                           20
6. splitThresholdPercentile:             50%
7. ConvergeScoreGenLimit:                100
8. displayOutput:                        True
9. createPlot:                           2
10.PlotFileType:                         PNG
11.(use) csv (as output's file format):  False
12.testing (mode):                       False
13.experimentBatchNum(ber):              121
14.(Does) playerKnowsTurnLim(it):        False
------------------------------------------------------------
######################################
~~~ Scores: ~~~
[36.405,
 33.255,
 36.245,
 33.959999999999994,
 33.655,
 36.055,
 33.35,
 26.4,
 31.125,
 20.959999999999997,
 33.105000000000004,
 33.74999999999999,
 30.090000000000007,
 33.364999999999995]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.3575
Upper: 33.3575
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 7, 8, 9, 10, 12]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 11, 13]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 6
cloned = 3
killed = 7
cloned = 4
killed = 8
cloned = 5
killed = 9
cloned = 11
killed = 10
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 9, 10, 7, 4, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 3, 5, 6, 2, 11, 13]
====================================
cloned = 8
killed = 12
cloned = 3
killed = 1
cloned = 5
killed = 9
cloned = 6
killed = 10
cloned = 2
killed = 7
cloned = 11
killed = 4
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 12, 3, 0, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 11, 7, 6, 9, 1, 13]
====================================
cloned = 2
killed = 8
cloned = 11
killed = 4
cloned = 7
killed = 12
cloned = 6
killed = 3
cloned = 9
killed = 0
cloned = 1
killed = 10
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 8, 3, 12, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 1, 11, 0, 6, 10, 13]
====================================
cloned = 9
killed = 2
cloned = 1
killed = 5
cloned = 11
killed = 8
cloned = 0
killed = 3
cloned = 6
killed = 12
cloned = 10
killed = 7
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 10, 8, 4, 9, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 3, 1, 2, 12, 0, 13]
====================================
cloned = 11
killed = 6
cloned = 3
killed = 5
cloned = 1
killed = 10
cloned = 2
killed = 8
cloned = 12
killed = 4
cloned = 0
killed = 9
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 2, 1, 8, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 5, 4, 12, 3, 0, 13]
====================================
cloned = 11
killed = 7
cloned = 5
killed = 9
cloned = 4
killed = 2
cloned = 12
killed = 1
cloned = 3
killed = 8
cloned = 0
killed = 6
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 3, 1, 2, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 4, 5, 0, 11, 13]
====================================
cloned = 9
killed = 12
cloned = 6
killed = 8
cloned = 4
killed = 3
cloned = 5
killed = 1
cloned = 0
killed = 2
cloned = 11
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 1, 0, 8, 3, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 6, 12, 9, 10, 5, 13]
====================================
cloned = 11
killed = 4
cloned = 6
killed = 1
cloned = 12
killed = 0
cloned = 9
killed = 8
cloned = 10
killed = 3
cloned = 5
killed = 7
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 1, 3, 2, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 11, 4, 8, 7, 5, 13]
====================================
cloned = 6
killed = 10
cloned = 11
killed = 9
cloned = 4
killed = 1
cloned = 8
killed = 3
cloned = 7
killed = 2
cloned = 5
killed = 12
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 2, 10, 6, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 4, 9, 5, 7, 8, 13]
====================================
cloned = 1
killed = 3
cloned = 4
killed = 11
cloned = 9
killed = 2
cloned = 5
killed = 10
cloned = 7
killed = 6
cloned = 8
killed = 12
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 2, 9, 6, 5, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 3, 7, 4, 10, 8, 13]
====================================
cloned = 0
killed = 12
cloned = 3
killed = 2
cloned = 7
killed = 9
cloned = 4
killed = 6
cloned = 10
killed = 5
cloned = 8
killed = 1
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 1, 12, 7, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 4, 8, 10, 3, 0, 13]
====================================
cloned = 2
killed = 6
cloned = 4
killed = 9
cloned = 8
killed = 1
cloned = 10
killed = 12
cloned = 3
killed = 7
cloned = 0
killed = 5
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 12, 9, 10, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 11, 6, 4, 3, 2, 13]
====================================
cloned = 7
killed = 5
cloned = 11
killed = 1
cloned = 6
killed = 12
cloned = 4
killed = 9
cloned = 3
killed = 10
cloned = 2
killed = 0
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 6, 3, 9, 10, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 7, 8, 4, 1, 12, 13]
====================================
cloned = 5
killed = 11
cloned = 7
killed = 0
cloned = 8
killed = 6
cloned = 4
killed = 3
cloned = 1
killed = 9
cloned = 12
killed = 10
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 11, 5, 9, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 0, 2, 1, 7, 6, 13]
====================================
cloned = 4
killed = 12
cloned = 0
killed = 10
cloned = 2
killed = 11
cloned = 1
killed = 5
cloned = 7
killed = 9
cloned = 6
killed = 8
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 11, 6, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 4, 12, 10, 5, 2, 13]
====================================
cloned = 9
killed = 1
cloned = 4
killed = 7
cloned = 12
killed = 8
cloned = 10
killed = 11
cloned = 5
killed = 6
cloned = 2
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 12, 0, 10, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 11, 2, 7, 8, 3, 13]
====================================
cloned = 4
killed = 1
cloned = 11
killed = 5
cloned = 2
killed = 12
cloned = 7
killed = 0
cloned = 8
killed = 10
cloned = 3
killed = 9
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 6, 0, 1, 10, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 4, 5, 12, 9, 3, 13]
====================================
cloned = 7
killed = 11
cloned = 4
killed = 8
cloned = 5
killed = 6
cloned = 12
killed = 0
cloned = 9
killed = 1
cloned = 3
killed = 10
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 11, 0, 2, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 4, 10, 3, 1, 9, 13]
====================================
cloned = 5
killed = 8
cloned = 4
killed = 12
cloned = 10
killed = 11
cloned = 3
killed = 0
cloned = 1
killed = 2
cloned = 9
killed = 7
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 11, 8, 9, 1, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 6, 5, 10, 2, 7, 13]
====================================
cloned = 12
killed = 0
cloned = 6
killed = 4
cloned = 5
killed = 11
cloned = 10
killed = 8
cloned = 2
killed = 9
cloned = 7
killed = 1
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 11, 2, 6, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 8, 5, 10, 1, 7, 13]
====================================
cloned = 9
killed = 0
cloned = 8
killed = 3
cloned = 5
killed = 11
cloned = 10
killed = 2
cloned = 1
killed = 6
cloned = 7
killed = 12
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 6, 2, 0, 4, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 11, 7, 9, 1, 5, 13]
====================================
cloned = 3
killed = 8
cloned = 11
killed = 6
cloned = 7
killed = 2
cloned = 9
killed = 0
cloned = 1
killed = 4
cloned = 5
killed = 12
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 4, 7, 11, 6, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 9, 12, 3, 8, 1, 13]
====================================
cloned = 2
killed = 0
cloned = 9
killed = 10
cloned = 12
killed = 4
cloned = 3
killed = 7
cloned = 8
killed = 11
cloned = 1
killed = 6
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 8, 12, 11, 4, 2, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 1, 5, 0, 10, 13]
====================================
cloned = 7
killed = 6
cloned = 3
killed = 8
cloned = 1
killed = 12
cloned = 5
killed = 11
cloned = 0
killed = 4
cloned = 10
killed = 2
cloned = 13
killed = 9
Trial run 1/seed 856:
..................................................
winner: Tit For 2 Tats
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Grudger': 2,
          'Tit For 2 Tats': 2}),
 Counter({'Tit For Tat': 4,
          'Tit For 2 Tats': 2,
          'Evolved FSM 16': 2,
          'Grudger': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved HMM 5': 2}),
 Counter({'Tit For Tat': 6,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved FSM 16': 2,
          'Grudger': 2,
          'Tit For 2 Tats': 2}),
 Counter({'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 2,
          'Tit For Tat': 2,
          'Grudger': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6,
          'Evolved FSM 16': 2,
          'Tit For Tat': 2,
          'Grudger': 2,
          'Tit For 2 Tats': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6,
          'Tit For Tat': 4,
          'Grudger': 2,
          'Tit For 2 Tats': 2}),
 Counter({'EvolvedLookerUp2_2_2': 8,
          'Tit For Tat': 2,
          'Tit For 2 Tats': 2,
          'Grudger': 2}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 4, 'Tit For 2 Tats': 2}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 4, 'Tit For 2 Tats': 2}),
 Counter({'Grudger': 6, 'EvolvedLookerUp2_2_2': 6, 'Tit For 2 Tats': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6, 'Tit For 2 Tats': 4, 'Grudger': 4}),
 Counter({'Grudger': 6, 'Tit For 2 Tats': 4, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 10, 'Tit For 2 Tats': 4}),
 Counter({'Grudger': 8, 'Tit For 2 Tats': 6}),
 Counter({'Tit For 2 Tats': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'Tit For 2 Tats': 6}),
 Counter({'Grudger': 8, 'Tit For 2 Tats': 6}),
 Counter({'Tit For 2 Tats': 8, 'Grudger': 6}),
 Counter({'Tit For 2 Tats': 10, 'Grudger': 4}),
 Counter({'Tit For 2 Tats': 10, 'Grudger': 4}),
 Counter({'Tit For 2 Tats': 12, 'Grudger': 2}),
 Counter({'Tit For 2 Tats': 10, 'Grudger': 4}),
 Counter({'Tit For 2 Tats': 12, 'Grudger': 2}),
 Counter({'Tit For 2 Tats': 14})]
--------------------------------------------------
Score:
[[36.405,
  33.255,
  36.245,
  33.959999999999994,
  33.655,
  36.055,
  33.35,
  26.4,
  31.125,
  20.959999999999997,
  33.105000000000004,
  33.74999999999999,
  30.090000000000007,
  33.364999999999995],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.21,
 33.18,
 36.269999999999996,
 34.055,
 33.765,
 36.195,
 33.61,
 26.239999999999995,
 31.065,
 20.115,
 32.32,
 33.63999999999999,
 29.835000000000004,
 33.385]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.4975
Upper: 33.4975
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 12, 6, 1, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 11, 5, 0, 10, 9, 13]
====================================
cloned = 2
killed = 7
cloned = 11
killed = 8
cloned = 5
killed = 12
cloned = 0
killed = 6
cloned = 10
killed = 1
cloned = 9
killed = 4
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 5, 0, 1, 2, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 3, 8, 7, 6, 13]
====================================
cloned = 10
killed = 12
cloned = 4
killed = 11
cloned = 3
killed = 5
cloned = 8
killed = 0
cloned = 7
killed = 1
cloned = 6
killed = 2
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 3, 9, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 5, 4, 10, 2, 11, 13]
====================================
cloned = 0
killed = 1
cloned = 5
killed = 7
cloned = 4
killed = 8
cloned = 10
killed = 3
cloned = 2
killed = 9
cloned = 11
killed = 6
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 11, 2, 6, 0, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 10, 4, 5, 9, 12, 13]
====================================
cloned = 7
killed = 8
cloned = 10
killed = 3
cloned = 4
killed = 11
cloned = 5
killed = 2
cloned = 9
killed = 6
cloned = 12
killed = 0
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 4, 7, 3, 9, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 8, 10, 11, 0, 6, 13]
====================================
cloned = 2
killed = 5
cloned = 8
killed = 1
cloned = 10
killed = 4
cloned = 11
killed = 7
cloned = 0
killed = 3
cloned = 6
killed = 9
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 9, 0, 7, 12, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 10, 3, 4, 1, 8, 13]
====================================
cloned = 11
killed = 6
cloned = 10
killed = 5
cloned = 3
killed = 9
cloned = 4
killed = 0
cloned = 1
killed = 7
cloned = 8
killed = 12
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 12, 7, 6, 2, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 5, 11, 3, 9, 1, 13]
====================================
cloned = 10
killed = 4
cloned = 5
killed = 8
cloned = 11
killed = 12
cloned = 3
killed = 7
cloned = 9
killed = 6
cloned = 1
killed = 2
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 1, 9, 6, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 8, 12, 5, 11, 2, 13]
====================================
cloned = 10
killed = 7
cloned = 8
killed = 4
cloned = 12
killed = 1
cloned = 5
killed = 9
cloned = 11
killed = 6
cloned = 2
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 1, 2, 8, 7, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 6, 5, 4, 9, 0, 13]
====================================
cloned = 10
killed = 11
cloned = 6
killed = 12
cloned = 5
killed = 1
cloned = 4
killed = 2
cloned = 9
killed = 8
cloned = 0
killed = 7
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 1, 12, 4, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 9, 3, 5, 2, 13]
====================================
cloned = 7
killed = 10
cloned = 6
killed = 8
cloned = 9
killed = 1
cloned = 3
killed = 12
cloned = 5
killed = 4
cloned = 2
killed = 0
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 3, 6, 8, 0, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 11, 5, 4, 12, 2, 13]
====================================
cloned = 10
killed = 9
cloned = 11
killed = 7
cloned = 5
killed = 3
cloned = 4
killed = 6
cloned = 12
killed = 8
cloned = 2
killed = 0
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 3, 7, 5, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 1, 4, 9, 10, 0, 13]
====================================
cloned = 11
killed = 2
cloned = 1
killed = 8
cloned = 4
killed = 3
cloned = 9
killed = 7
cloned = 10
killed = 5
cloned = 0
killed = 6
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 5, 9, 6, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 11, 4, 12, 7, 8, 13]
====================================
cloned = 1
killed = 10
cloned = 11
killed = 2
cloned = 4
killed = 5
cloned = 12
killed = 9
cloned = 7
killed = 6
cloned = 8
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 6, 5, 0, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 4, 1, 3, 9, 13]
====================================
cloned = 11
killed = 7
cloned = 12
killed = 2
cloned = 4
killed = 6
cloned = 1
killed = 5
cloned = 3
killed = 0
cloned = 9
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 10, 0, 4, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 12, 3, 6, 5, 2, 13]
====================================
cloned = 8
killed = 7
cloned = 12
killed = 1
cloned = 3
killed = 10
cloned = 6
killed = 0
cloned = 5
killed = 4
cloned = 2
killed = 9
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 9, 5, 8, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 1, 3, 12, 2, 0, 13]
====================================
cloned = 7
killed = 4
cloned = 1
killed = 6
cloned = 3
killed = 9
cloned = 12
killed = 5
cloned = 2
killed = 8
cloned = 0
killed = 11
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 8, 4, 6, 7, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 9, 11, 2, 3, 12, 13]
====================================
cloned = 1
killed = 0
cloned = 9
killed = 5
cloned = 11
killed = 8
cloned = 2
killed = 4
cloned = 3
killed = 6
cloned = 12
killed = 7
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 4, 7, 6, 10, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 5, 0, 3, 11, 1, 13]
====================================
cloned = 8
killed = 2
cloned = 5
killed = 4
cloned = 0
killed = 7
cloned = 3
killed = 6
cloned = 11
killed = 10
cloned = 1
killed = 12
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 6, 9, 12, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 10, 2, 0, 8, 3, 13]
====================================
cloned = 7
killed = 4
cloned = 10
killed = 11
cloned = 2
killed = 6
cloned = 0
killed = 9
cloned = 8
killed = 12
cloned = 3
killed = 1
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 7, 6, 1, 4, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 11, 2, 9, 3, 8, 13]
====================================
cloned = 5
killed = 0
cloned = 11
killed = 12
cloned = 2
killed = 7
cloned = 9
killed = 6
cloned = 3
killed = 1
cloned = 8
killed = 4
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 4, 7, 3, 2, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 9, 11, 10, 8, 1, 13]
====================================
cloned = 0
killed = 12
cloned = 9
killed = 6
cloned = 11
killed = 4
cloned = 10
killed = 7
cloned = 8
killed = 3
cloned = 1
killed = 2
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 11, 4, 0, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 12, 10, 5, 8, 13]
====================================
cloned = 7
killed = 3
cloned = 9
killed = 1
cloned = 12
killed = 11
cloned = 10
killed = 4
cloned = 5
killed = 0
cloned = 8
killed = 2
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 4, 7, 12, 11, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 8, 1, 10, 0, 5, 13]
====================================
cloned = 6
killed = 9
cloned = 8
killed = 2
cloned = 1
killed = 4
cloned = 10
killed = 7
cloned = 0
killed = 12
cloned = 5
killed = 11
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 3, 0, 10, 6, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 4, 2, 11, 1, 12, 13]
====================================
cloned = 9
killed = 7
cloned = 4
killed = 3
cloned = 2
killed = 0
cloned = 11
killed = 10
cloned = 1
killed = 6
cloned = 12
killed = 5
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 3, 2, 6, 7, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 12, 11, 9, 0, 1, 13]
====================================
cloned = 8
killed = 4
cloned = 12
killed = 5
cloned = 11
killed = 3
cloned = 9
killed = 2
cloned = 0
killed = 6
cloned = 1
killed = 7
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 4, 8, 0, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 1, 10, 11, 9, 13]
====================================
cloned = 7
killed = 2
cloned = 6
killed = 3
cloned = 1
killed = 4
cloned = 10
killed = 8
cloned = 11
killed = 0
cloned = 9
killed = 12
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 11, 12, 10, 8, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 1, 6, 2, 0, 5, 13]
====================================
cloned = 9
killed = 3
cloned = 1
killed = 7
cloned = 6
killed = 11
cloned = 2
killed = 12
cloned = 0
killed = 10
cloned = 5
killed = 8
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 3, 6, 9, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 8, 1, 2, 4, 13]
====================================
cloned = 11
killed = 0
cloned = 12
killed = 7
cloned = 8
killed = 3
cloned = 1
killed = 6
cloned = 2
killed = 9
cloned = 4
killed = 5
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 2, 12, 6, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 5, 0, 1, 10, 8, 13]
====================================
cloned = 3
killed = 4
cloned = 5
killed = 11
cloned = 0
killed = 2
cloned = 1
killed = 12
cloned = 10
killed = 6
cloned = 8
killed = 7
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 8, 12, 10, 1, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 7, 5, 3, 2, 0, 13]
====================================
cloned = 11
killed = 9
cloned = 7
killed = 8
cloned = 5
killed = 12
cloned = 3
killed = 10
cloned = 2
killed = 1
cloned = 0
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 10, 4, 8, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 2, 12, 7, 5, 9, 13]
====================================
cloned = 0
killed = 3
cloned = 2
killed = 11
cloned = 12
killed = 10
cloned = 7
killed = 4
cloned = 5
killed = 8
cloned = 9
killed = 6
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 6, 12, 4, 5, 7, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 2, 9, 1, 3, 0, 13]
====================================
cloned = 10
killed = 11
cloned = 2
killed = 6
cloned = 9
killed = 12
cloned = 1
killed = 4
cloned = 3
killed = 5
cloned = 0
killed = 7
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 2, 8, 10, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 11, 5, 1, 0, 13]
====================================
cloned = 9
killed = 3
cloned = 6
killed = 12
cloned = 11
killed = 2
cloned = 5
killed = 8
cloned = 1
killed = 10
cloned = 0
killed = 7
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 11, 7, 1, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 4, 9, 8, 2, 0, 13]
====================================
cloned = 12
killed = 10
cloned = 4
killed = 6
cloned = 9
killed = 11
cloned = 8
killed = 7
cloned = 2
killed = 1
cloned = 0
killed = 5
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 11, 0, 3, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 8, 2, 7, 4, 5, 13]
====================================
cloned = 12
killed = 10
cloned = 8
killed = 1
cloned = 2
killed = 11
cloned = 7
killed = 0
cloned = 4
killed = 3
cloned = 5
killed = 9
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 5, 8, 9, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 7, 10, 2, 1, 11, 13]
====================================
cloned = 3
killed = 4
cloned = 7
killed = 6
cloned = 10
killed = 5
cloned = 2
killed = 8
cloned = 1
killed = 9
cloned = 11
killed = 12
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 0, 6, 2, 5, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 11, 8, 10, 9, 1, 13]
====================================
cloned = 7
killed = 4
cloned = 11
killed = 0
cloned = 8
killed = 6
cloned = 10
killed = 2
cloned = 9
killed = 5
cloned = 1
killed = 3
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 8, 7, 11, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 1, 4, 5, 12, 2, 13]
====================================
cloned = 9
killed = 0
cloned = 1
killed = 10
cloned = 4
killed = 8
cloned = 5
killed = 7
cloned = 12
killed = 11
cloned = 2
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 6, 3, 0, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 4, 8, 1, 12, 13]
====================================
cloned = 7
killed = 10
cloned = 9
killed = 11
cloned = 4
killed = 6
cloned = 8
killed = 3
cloned = 1
killed = 0
cloned = 12
killed = 5
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 5, 3, 6, 1, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 2, 8, 4, 0, 11, 13]
====================================
cloned = 10
killed = 7
cloned = 2
killed = 5
cloned = 8
killed = 3
cloned = 4
killed = 6
cloned = 0
killed = 1
cloned = 11
killed = 12
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 0, 11, 8, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 3, 7, 6, 2, 4, 13]
====================================
cloned = 10
killed = 9
cloned = 3
killed = 12
cloned = 7
killed = 0
cloned = 6
killed = 11
cloned = 2
killed = 8
cloned = 4
killed = 1
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 4, 8, 11, 7, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 1, 2, 3, 6, 5, 13]
====================================
cloned = 12
killed = 9
cloned = 1
killed = 0
cloned = 2
killed = 4
cloned = 3
killed = 8
cloned = 6
killed = 11
cloned = 5
killed = 7
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 1, 9, 0, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 7, 8, 5, 12, 6, 13]
====================================
cloned = 3
killed = 10
cloned = 7
killed = 4
cloned = 8
killed = 1
cloned = 5
killed = 9
cloned = 12
killed = 0
cloned = 6
killed = 11
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 7, 1, 2, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 5, 3, 8, 12, 13]
====================================
cloned = 9
killed = 11
cloned = 6
killed = 10
cloned = 5
killed = 7
cloned = 3
killed = 1
cloned = 8
killed = 2
cloned = 12
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 4, 11, 0, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 5, 12, 8, 3, 6, 13]
====================================
cloned = 9
killed = 10
cloned = 5
killed = 1
cloned = 12
killed = 4
cloned = 8
killed = 11
cloned = 3
killed = 0
cloned = 6
killed = 7
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 9, 11, 12, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 2, 3, 8, 10, 0, 13]
====================================
cloned = 5
killed = 4
cloned = 2
killed = 6
cloned = 3
killed = 9
cloned = 8
killed = 11
cloned = 10
killed = 12
cloned = 0
killed = 1
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 4, 3, 1, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 8, 6, 11, 7, 10, 13]
====================================
cloned = 2
killed = 0
cloned = 8
killed = 9
cloned = 6
killed = 4
cloned = 11
killed = 3
cloned = 7
killed = 1
cloned = 10
killed = 12
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 12, 1, 4, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 10, 2, 8, 11, 3, 13]
====================================
cloned = 7
killed = 0
cloned = 10
killed = 5
cloned = 2
killed = 12
cloned = 8
killed = 1
cloned = 11
killed = 4
cloned = 3
killed = 9
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 0, 1, 5, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 4, 7, 2, 11, 12, 13]
====================================
cloned = 9
killed = 3
cloned = 4
killed = 10
cloned = 7
killed = 0
cloned = 2
killed = 1
cloned = 11
killed = 5
cloned = 12
killed = 8
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 5, 6, 11, 2, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 8, 12, 0, 3, 7, 13]
====================================
cloned = 10
killed = 1
cloned = 8
killed = 4
cloned = 12
killed = 5
cloned = 0
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 2
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 5, 1, 2, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 10, 8, 7, 4, 13]
====================================
cloned = 9
killed = 12
cloned = 6
killed = 3
cloned = 10
killed = 5
cloned = 8
killed = 1
cloned = 7
killed = 2
cloned = 4
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 12, 8, 7, 6, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 10, 11, 5, 1, 13]
====================================
cloned = 4
killed = 9
cloned = 3
killed = 0
cloned = 10
killed = 12
cloned = 11
killed = 8
cloned = 5
killed = 7
cloned = 1
killed = 6
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 8, 3, 5, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 12, 9, 10, 2, 11, 13]
====================================
cloned = 4
killed = 0
cloned = 12
killed = 7
cloned = 9
killed = 8
cloned = 10
killed = 3
cloned = 2
killed = 5
cloned = 11
killed = 1
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 10, 8, 1, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 5, 0, 12, 3, 13]
====================================
cloned = 7
killed = 11
cloned = 6
killed = 2
cloned = 5
killed = 10
cloned = 0
killed = 8
cloned = 12
killed = 1
cloned = 3
killed = 4
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 8, 12, 7, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 6, 1, 11, 3, 9, 13]
====================================
cloned = 4
killed = 0
cloned = 6
killed = 2
cloned = 1
killed = 8
cloned = 11
killed = 12
cloned = 3
killed = 7
cloned = 9
killed = 10
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 12, 11, 2, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 7, 0, 10, 6, 9, 13]
====================================
cloned = 3
killed = 8
cloned = 7
killed = 4
cloned = 0
killed = 12
cloned = 10
killed = 11
cloned = 6
killed = 2
cloned = 9
killed = 5
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 4, 7, 1, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 10, 6, 5, 9, 2, 13]
====================================
cloned = 12
killed = 3
cloned = 10
killed = 8
cloned = 6
killed = 4
cloned = 5
killed = 7
cloned = 9
killed = 1
cloned = 2
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 0, 6, 9, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 7, 12, 1, 11, 3, 13]
====================================
cloned = 8
killed = 4
cloned = 7
killed = 10
cloned = 12
killed = 0
cloned = 1
killed = 6
cloned = 11
killed = 9
cloned = 3
killed = 5
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 11, 6, 0, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 1, 8, 12, 3, 13]
====================================
cloned = 4
killed = 9
cloned = 7
killed = 2
cloned = 1
killed = 11
cloned = 8
killed = 6
cloned = 12
killed = 0
cloned = 3
killed = 10
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 2, 4, 6, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 1, 12, 8, 7, 10, 13]
====================================
cloned = 3
killed = 11
cloned = 1
killed = 9
cloned = 12
killed = 2
cloned = 8
killed = 4
cloned = 7
killed = 6
cloned = 10
killed = 5
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 8, 9, 2, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 12, 7, 0, 5, 3, 13]
====================================
cloned = 10
killed = 1
cloned = 12
killed = 6
cloned = 7
killed = 8
cloned = 0
killed = 9
cloned = 5
killed = 2
cloned = 3
killed = 11
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 9, 1, 8, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 6, 5, 7, 3, 13]
====================================
cloned = 10
killed = 2
cloned = 4
killed = 12
cloned = 6
killed = 9
cloned = 5
killed = 1
cloned = 7
killed = 8
cloned = 3
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 0, 7, 2, 11, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 1, 8, 6, 5, 9, 13]
====================================
cloned = 4
killed = 3
cloned = 1
killed = 10
cloned = 8
killed = 0
cloned = 6
killed = 7
cloned = 5
killed = 2
cloned = 9
killed = 11
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 11, 6, 3, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 10, 4, 7, 2, 1, 13]
====================================
cloned = 12
killed = 9
cloned = 10
killed = 0
cloned = 4
killed = 11
cloned = 7
killed = 6
cloned = 2
killed = 3
cloned = 1
killed = 5
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 2, 10, 8, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 11, 9, 7, 3, 1, 13]
====================================
cloned = 5
killed = 4
cloned = 11
killed = 6
cloned = 9
killed = 2
cloned = 7
killed = 10
cloned = 3
killed = 8
cloned = 1
killed = 12
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 5, 1, 11, 12, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 10, 7, 6, 9, 0, 13]
====================================
cloned = 4
killed = 2
cloned = 10
killed = 3
cloned = 7
killed = 5
cloned = 6
killed = 1
cloned = 9
killed = 11
cloned = 0
killed = 12
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 9, 6, 11, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 0, 8, 4, 1, 2, 13]
====================================
cloned = 3
killed = 12
cloned = 0
killed = 10
cloned = 8
killed = 9
cloned = 4
killed = 6
cloned = 1
killed = 11
cloned = 2
killed = 5
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 11, 7, 4, 8, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 2, 6, 10, 9, 0, 13]
====================================
cloned = 1
killed = 5
cloned = 2
killed = 3
cloned = 6
killed = 11
cloned = 10
killed = 7
cloned = 9
killed = 4
cloned = 0
killed = 8
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 11, 3, 5, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 10, 12, 8, 2, 1, 13]
====================================
cloned = 9
killed = 0
cloned = 10
killed = 7
cloned = 12
killed = 11
cloned = 8
killed = 3
cloned = 2
killed = 5
cloned = 1
killed = 4
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 5, 6, 9, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 1, 4, 7, 12, 3, 13]
====================================
cloned = 11
killed = 0
cloned = 1
killed = 2
cloned = 4
killed = 5
cloned = 7
killed = 6
cloned = 12
killed = 9
cloned = 3
killed = 8
cloned = 13
killed = 10
Trial run 2/seed 857:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'EvolvedLookerUp2_2_2': 4,
          'Grudger': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved HMM 5': 2}),
 Counter({'Grudger': 6,
          'Tit For Tat': 2,
          'Evolved FSM 6': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 6,
          'Evolved HMM 5': 4,
          'Evolved FSM 6': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 8,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved HMM 5': 2,
          'Evolved FSM 6': 2}),
 Counter({'Grudger': 8,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved FSM 6': 2,
          'Evolved HMM 5': 2}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 4, 'Evolved HMM 5': 2}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 4, 'Evolved HMM 5': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6, 'Grudger': 4, 'Evolved HMM 5': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 4, 'Evolved HMM 5': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6, 'Grudger': 6, 'Evolved HMM 5': 2}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Grudger': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Grudger': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Grudger': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Grudger': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.21,
  33.18,
  36.269999999999996,
  34.055,
  33.765,
  36.195,
  33.61,
  26.239999999999995,
  31.065,
  20.115,
  32.32,
  33.63999999999999,
  29.835000000000004,
  33.385],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.13,
 33.790000000000006,
 36.15,
 33.845,
 33.644999999999996,
 35.480000000000004,
 35.915,
 26.18,
 31.065,
 20.319999999999997,
 32.83,
 33.89999999999999,
 32.335,
 33.355]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.7175
Upper: 33.7175
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.92,
 31.935000000000006,
 38.96,
 34.86,
 38.92,
 38.4,
 36.25,
 31.935000000000002,
 38.96,
 34.86,
 38.4,
 36.25,
 36.9,
 36.25]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 36.575
Upper: 36.575
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 6, 7, 9, 11, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 4, 5, 8, 10, 12]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 3
cloned = 4
killed = 6
cloned = 5
killed = 7
cloned = 8
killed = 9
cloned = 10
killed = 11
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 8, 7, 3, 0, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 9, 5, 2, 1, 13]
====================================
cloned = 11
killed = 4
cloned = 12
killed = 10
cloned = 9
killed = 8
cloned = 5
killed = 7
cloned = 2
killed = 3
cloned = 1
killed = 0
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 3, 7, 10, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 6, 0, 1, 8, 5, 13]
====================================
cloned = 2
killed = 4
cloned = 6
killed = 12
cloned = 0
killed = 3
cloned = 1
killed = 7
cloned = 8
killed = 10
cloned = 5
killed = 11
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 9, 3, 10, 1, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 6, 11, 2, 0, 7, 13]
====================================
cloned = 12
killed = 5
cloned = 6
killed = 8
cloned = 11
killed = 9
cloned = 2
killed = 3
cloned = 0
killed = 10
cloned = 7
killed = 1
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 9, 1, 3, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 5, 7, 12, 0, 13]
====================================
cloned = 10
killed = 8
cloned = 4
killed = 2
cloned = 5
killed = 9
cloned = 7
killed = 1
cloned = 12
killed = 3
cloned = 0
killed = 6
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 1, 6, 12, 3, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 9, 4, 10, 11, 13]
====================================
cloned = 8
killed = 0
cloned = 2
killed = 7
cloned = 9
killed = 1
cloned = 4
killed = 6
cloned = 10
killed = 12
cloned = 11
killed = 3
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 12, 8, 1, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 0, 2, 5, 10, 7, 13]
====================================
cloned = 4
killed = 11
cloned = 0
killed = 3
cloned = 2
killed = 12
cloned = 5
killed = 8
cloned = 10
killed = 1
cloned = 7
killed = 9
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 10, 11, 12, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 4, 9, 5, 6, 3, 13]
====================================
cloned = 8
killed = 7
cloned = 4
killed = 0
cloned = 9
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 12
cloned = 3
killed = 2
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 4, 8, 6, 1, 0, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 2, 7, 9, 10, 11, 13]
====================================
cloned = 3
killed = 12
cloned = 2
killed = 4
cloned = 7
killed = 8
cloned = 9
killed = 6
cloned = 10
killed = 1
cloned = 11
killed = 0
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 5, 1, 2, 7, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 10, 12, 11, 4, 9, 13]
====================================
cloned = 0
killed = 6
cloned = 10
killed = 3
cloned = 12
killed = 5
cloned = 11
killed = 1
cloned = 4
killed = 2
cloned = 9
killed = 7
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 11, 0, 3, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 1, 12, 4, 6, 13]
====================================
cloned = 8
killed = 9
cloned = 2
killed = 10
cloned = 1
killed = 11
cloned = 12
killed = 0
cloned = 4
killed = 3
cloned = 6
killed = 7
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 3, 4, 11, 0, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 9, 8, 12, 6, 10, 13]
====================================
cloned = 5
killed = 1
cloned = 9
killed = 7
cloned = 8
killed = 3
cloned = 12
killed = 4
cloned = 6
killed = 11
cloned = 10
killed = 0
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 3, 0, 12, 4, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 5, 2, 10, 6, 11, 13]
====================================
cloned = 9
killed = 1
cloned = 5
killed = 7
cloned = 2
killed = 3
cloned = 10
killed = 0
cloned = 6
killed = 12
cloned = 11
killed = 4
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 6, 8, 2, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 10, 12, 1, 9, 13]
====================================
cloned = 7
killed = 4
cloned = 3
killed = 11
cloned = 10
killed = 6
cloned = 12
killed = 8
cloned = 1
killed = 2
cloned = 9
killed = 5
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 10, 12, 3, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 1, 11, 5, 8, 7, 13]
====================================
cloned = 0
killed = 2
cloned = 1
killed = 9
cloned = 11
killed = 10
cloned = 5
killed = 12
cloned = 8
killed = 3
cloned = 7
killed = 4
cloned = 13
killed = 6
Trial run 3/seed 858:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Michaelos: (D,)': 4,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Michaelos: (D,)': 6,
          'Evolved FSM 6': 4,
          'Tit For Tat': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Michaelos: (D,)': 8, 'Evolved FSM 6': 6}),
 Counter({'Michaelos: (D,)': 10, 'Evolved FSM 6': 4}),
 Counter({'Michaelos: (D,)': 10, 'Evolved FSM 6': 4}),
 Counter({'Michaelos: (D,)': 12, 'Evolved FSM 6': 2}),
 Counter({'Michaelos: (D,)': 10, 'Evolved FSM 6': 4}),
 Counter({'Michaelos: (D,)': 10, 'Evolved FSM 6': 4}),
 Counter({'Michaelos: (D,)': 8, 'Evolved FSM 6': 6}),
 Counter({'Michaelos: (D,)': 10, 'Evolved FSM 6': 4}),
 Counter({'Michaelos: (D,)': 12, 'Evolved FSM 6': 2}),
 Counter({'Michaelos: (D,)': 12, 'Evolved FSM 6': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.13,
  33.790000000000006,
  36.15,
  33.845,
  33.644999999999996,
  35.480000000000004,
  35.915,
  26.18,
  31.065,
  20.319999999999997,
  32.83,
  33.89999999999999,
  32.335,
  33.355],
 [38.92,
  31.935000000000006,
  38.96,
  34.86,
  38.92,
  38.4,
  36.25,
  31.935000000000002,
  38.96,
  34.86,
  38.4,
  36.25,
  36.9,
  36.25],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.205000000000005,
 33.17,
 36.175,
 33.765,
 33.605,
 35.54,
 35.83,
 26.139999999999997,
 30.96,
 20.480000000000004,
 32.769999999999996,
 33.63999999999999,
 32.555,
 33.30499999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.455
Upper: 33.455
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 6, 12, 2, 3, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 4, 5, 9, 10, 7, 13]
====================================
cloned = 8
killed = 11
cloned = 4
killed = 6
cloned = 5
killed = 12
cloned = 9
killed = 2
cloned = 10
killed = 3
cloned = 7
killed = 1
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 2, 5, 12, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 6, 11, 1, 9, 10, 13]
====================================
cloned = 8
killed = 0
cloned = 6
killed = 3
cloned = 11
killed = 2
cloned = 1
killed = 5
cloned = 9
killed = 12
cloned = 10
killed = 7
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 7, 11, 8, 1, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 0, 2, 12, 6, 5, 13]
====================================
cloned = 9
killed = 3
cloned = 0
killed = 4
cloned = 2
killed = 7
cloned = 12
killed = 11
cloned = 6
killed = 8
cloned = 5
killed = 1
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 4, 6, 7, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 1, 3, 2, 12, 11, 13]
====================================
cloned = 8
killed = 0
cloned = 1
killed = 5
cloned = 3
killed = 4
cloned = 2
killed = 6
cloned = 12
killed = 7
cloned = 11
killed = 9
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 4, 12, 11, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 7, 6, 2, 9, 10, 13]
====================================
cloned = 8
killed = 5
cloned = 7
killed = 1
cloned = 6
killed = 4
cloned = 2
killed = 12
cloned = 9
killed = 11
cloned = 10
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 12, 5, 8, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 10, 6, 1, 7, 4, 13]
====================================
cloned = 2
killed = 0
cloned = 10
killed = 3
cloned = 6
killed = 12
cloned = 1
killed = 5
cloned = 7
killed = 8
cloned = 4
killed = 11
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 6, 0, 4, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 10, 9, 11, 7, 13]
====================================
cloned = 1
killed = 3
cloned = 12
killed = 5
cloned = 10
killed = 6
cloned = 9
killed = 0
cloned = 11
killed = 4
cloned = 7
killed = 8
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 0, 6, 11, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 9, 8, 3, 12, 5, 13]
====================================
cloned = 1
killed = 4
cloned = 9
killed = 2
cloned = 8
killed = 0
cloned = 3
killed = 6
cloned = 12
killed = 11
cloned = 5
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 9, 2, 10, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 0, 6, 11, 4, 5, 13]
====================================
cloned = 7
killed = 3
cloned = 0
killed = 8
cloned = 6
killed = 9
cloned = 11
killed = 2
cloned = 4
killed = 10
cloned = 5
killed = 12
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 0, 5, 11, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 8, 4, 12, 3, 13]
====================================
cloned = 7
killed = 10
cloned = 9
killed = 1
cloned = 8
killed = 0
cloned = 4
killed = 5
cloned = 12
killed = 11
cloned = 3
killed = 2
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 9, 4, 8, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 11, 1, 12, 7, 0, 13]
====================================
cloned = 6
killed = 3
cloned = 11
killed = 10
cloned = 1
killed = 9
cloned = 12
killed = 4
cloned = 7
killed = 8
cloned = 0
killed = 5
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 7, 0, 11, 6, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 1, 12, 2, 4, 3, 13]
====================================
cloned = 10
killed = 5
cloned = 1
killed = 9
cloned = 12
killed = 7
cloned = 2
killed = 0
cloned = 4
killed = 11
cloned = 3
killed = 6
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 7, 3, 9, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 10, 11, 5, 1, 12, 13]
====================================
cloned = 6
killed = 8
cloned = 10
killed = 2
cloned = 11
killed = 7
cloned = 5
killed = 3
cloned = 1
killed = 9
cloned = 12
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 1, 8, 11, 4, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 2, 6, 5, 9, 0, 13]
====================================
cloned = 10
killed = 12
cloned = 2
killed = 3
cloned = 6
killed = 1
cloned = 5
killed = 8
cloned = 9
killed = 11
cloned = 0
killed = 4
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 9, 11, 1, 2, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 4, 7, 3, 12, 0, 13]
====================================
cloned = 8
killed = 10
cloned = 4
killed = 6
cloned = 7
killed = 9
cloned = 3
killed = 11
cloned = 12
killed = 1
cloned = 0
killed = 2
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 2, 9, 12, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 8, 5, 6, 11, 7, 13]
====================================
cloned = 4
killed = 10
cloned = 8
killed = 1
cloned = 5
killed = 2
cloned = 6
killed = 9
cloned = 11
killed = 12
cloned = 7
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 12, 9, 2, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 1, 8, 5, 3, 6, 13]
====================================
cloned = 7
killed = 4
cloned = 1
killed = 10
cloned = 8
killed = 12
cloned = 5
killed = 9
cloned = 3
killed = 2
cloned = 6
killed = 0
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 10, 1, 0, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 4, 3, 8, 11, 6, 13]
====================================
cloned = 9
killed = 5
cloned = 4
killed = 7
cloned = 3
killed = 10
cloned = 8
killed = 1
cloned = 11
killed = 0
cloned = 6
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 0, 6, 7, 10, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 2, 1, 9, 5, 4, 13]
====================================
cloned = 11
killed = 12
cloned = 2
killed = 8
cloned = 1
killed = 0
cloned = 9
killed = 6
cloned = 5
killed = 7
cloned = 4
killed = 10
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 0, 5, 11, 1, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 7, 10, 9, 2, 4, 13]
====================================
cloned = 6
killed = 12
cloned = 7
killed = 0
cloned = 10
killed = 5
cloned = 9
killed = 11
cloned = 2
killed = 1
cloned = 4
killed = 8
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 8, 7, 1, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 2, 5, 11, 3, 9, 13]
====================================
cloned = 12
killed = 6
cloned = 2
killed = 10
cloned = 5
killed = 8
cloned = 11
killed = 7
cloned = 3
killed = 1
cloned = 9
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 8, 11, 1, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 5, 6, 0, 3, 9, 13]
====================================
cloned = 4
killed = 10
cloned = 5
killed = 2
cloned = 6
killed = 8
cloned = 0
killed = 11
cloned = 3
killed = 1
cloned = 9
killed = 7
cloned = 13
killed = 12
Trial run 4/seed 859:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Evolved HMM 5': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Grudger': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2}),
 Counter({'Evolved FSM 16': 4,
          'Evolved HMM 5': 4,
          'Tit For Tat': 2,
          'Grudger': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 6,
          'Evolved FSM 16': 4,
          'Tit For Tat': 2,
          'Grudger': 2}),
 Counter({'Evolved HMM 5': 8,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Grudger': 2}),
 Counter({'Evolved HMM 5': 6, 'Grudger': 4, 'Evolved FSM 16': 4}),
 Counter({'Evolved FSM 16': 6, 'Evolved HMM 5': 4, 'Grudger': 4}),
 Counter({'Grudger': 6, 'Evolved HMM 5': 4, 'Evolved FSM 16': 4}),
 Counter({'Evolved HMM 5': 6, 'Grudger': 4, 'Evolved FSM 16': 4}),
 Counter({'Evolved HMM 5': 6, 'Grudger': 4, 'Evolved FSM 16': 4}),
 Counter({'Evolved HMM 5': 6, 'Grudger': 6, 'Evolved FSM 16': 2}),
 Counter({'Grudger': 6, 'Evolved HMM 5': 4, 'Evolved FSM 16': 4}),
 Counter({'Grudger': 6, 'Evolved FSM 16': 6, 'Evolved HMM 5': 2}),
 Counter({'Evolved FSM 16': 8, 'Grudger': 4, 'Evolved HMM 5': 2}),
 Counter({'Evolved FSM 16': 8, 'Grudger': 4, 'Evolved HMM 5': 2}),
 Counter({'Evolved FSM 16': 10, 'Grudger': 4}),
 Counter({'Evolved FSM 16': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'Evolved FSM 16': 6}),
 Counter({'Grudger': 10, 'Evolved FSM 16': 4}),
 Counter({'Grudger': 10, 'Evolved FSM 16': 4}),
 Counter({'Grudger': 12, 'Evolved FSM 16': 2}),
 Counter({'Grudger': 12, 'Evolved FSM 16': 2}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.205000000000005,
  33.17,
  36.175,
  33.765,
  33.605,
  35.54,
  35.83,
  26.139999999999997,
  30.96,
  20.480000000000004,
  32.769999999999996,
  33.63999999999999,
  32.555,
  33.30499999999999],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.230000000000004,
 33.84,
 36.15,
 33.93,
 33.69500000000001,
 35.94,
 33.77,
 26.039999999999996,
 30.78,
 20.8,
 32.855000000000004,
 33.50999999999999,
 29.835000000000004,
 33.385]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.6025
Upper: 33.6025
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 4, 5, 6]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[38.92,
 37.18,
 38.96,
 34.86,
 38.315,
 38.400000000000006,
 37.405,
 38.92,
 35.245,
 38.96,
 34.86,
 38.379999999999995,
 38.4,
 37.730000000000004]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.3475
Upper: 38.3475
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 4, 6, 8, 10, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 5, 7, 9, 11, 12]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 3
cloned = 5
killed = 4
cloned = 7
killed = 6
cloned = 9
killed = 8
cloned = 11
killed = 10
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 12, 11, 4, 8, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 7, 1, 9, 5, 6, 13]
====================================
cloned = 2
killed = 3
cloned = 7
killed = 10
cloned = 1
killed = 12
cloned = 9
killed = 11
cloned = 5
killed = 4
cloned = 6
killed = 8
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 9, 2, 12, 8, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 6, 7, 10, 5, 1, 13]
====================================
cloned = 0
killed = 3
cloned = 6
killed = 9
cloned = 7
killed = 2
cloned = 10
killed = 12
cloned = 5
killed = 8
cloned = 1
killed = 11
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 9, 7, 4, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 12, 11, 5, 2, 1, 13]
====================================
cloned = 8
killed = 6
cloned = 12
killed = 3
cloned = 11
killed = 9
cloned = 5
killed = 7
cloned = 2
killed = 4
cloned = 1
killed = 0
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 8, 0, 4, 1, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 7, 6, 12, 2, 5, 13]
====================================
cloned = 3
killed = 9
cloned = 7
killed = 11
cloned = 6
killed = 8
cloned = 12
killed = 0
cloned = 2
killed = 4
cloned = 5
killed = 1
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 3, 0, 6, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 2, 1, 5, 7, 13]
====================================
cloned = 11
killed = 12
cloned = 4
killed = 9
cloned = 2
killed = 3
cloned = 1
killed = 0
cloned = 5
killed = 6
cloned = 7
killed = 8
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 11, 12, 1, 2, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 7, 8, 10, 3, 9, 13]
====================================
cloned = 5
killed = 6
cloned = 7
killed = 11
cloned = 8
killed = 12
cloned = 10
killed = 1
cloned = 3
killed = 2
cloned = 9
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 2, 7, 10, 1, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 0, 5, 8, 12, 13]
====================================
cloned = 9
killed = 11
cloned = 6
killed = 4
cloned = 0
killed = 2
cloned = 5
killed = 7
cloned = 8
killed = 10
cloned = 12
killed = 1
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 11, 3, 10, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 8, 12, 9, 6, 7, 13]
====================================
cloned = 0
killed = 2
cloned = 8
killed = 5
cloned = 12
killed = 11
cloned = 9
killed = 3
cloned = 6
killed = 10
cloned = 7
killed = 4
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 10, 0, 8, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 5, 7, 3, 12, 2, 13]
====================================
cloned = 4
killed = 9
cloned = 5
killed = 11
cloned = 7
killed = 10
cloned = 3
killed = 0
cloned = 12
killed = 8
cloned = 2
killed = 6
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 6, 10, 5, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 7, 3, 11, 2, 13]
====================================
cloned = 1
killed = 9
cloned = 12
killed = 4
cloned = 7
killed = 6
cloned = 3
killed = 10
cloned = 11
killed = 5
cloned = 2
killed = 0
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 4, 11, 12, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 2, 7, 8, 3, 10, 13]
====================================
cloned = 6
killed = 9
cloned = 2
killed = 1
cloned = 7
killed = 4
cloned = 8
killed = 11
cloned = 3
killed = 12
cloned = 10
killed = 5
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 3, 5, 12, 7, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 11, 9, 6, 2, 1, 13]
====================================
cloned = 8
killed = 10
cloned = 11
killed = 4
cloned = 9
killed = 3
cloned = 6
killed = 5
cloned = 2
killed = 12
cloned = 1
killed = 7
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 9, 6, 10, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 4, 5, 2, 12, 8, 13]
====================================
cloned = 7
killed = 3
cloned = 4
killed = 0
cloned = 5
killed = 9
cloned = 2
killed = 6
cloned = 12
killed = 10
cloned = 8
killed = 1
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 10, 0, 9, 12, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 5, 1, 3, 2, 6, 13]
====================================
cloned = 7
killed = 4
cloned = 5
killed = 11
cloned = 1
killed = 10
cloned = 3
killed = 0
cloned = 2
killed = 9
cloned = 6
killed = 12
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 0, 5, 6, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 9, 3, 4, 2, 10, 13]
====================================
cloned = 11
killed = 1
cloned = 9
killed = 12
cloned = 3
killed = 0
cloned = 4
killed = 5
cloned = 2
killed = 6
cloned = 10
killed = 8
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 8, 9, 10, 4, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 11, 0, 12, 6, 13]
====================================
cloned = 5
killed = 1
cloned = 3
killed = 2
cloned = 11
killed = 8
cloned = 0
killed = 9
cloned = 12
killed = 10
cloned = 6
killed = 4
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 6, 8, 9, 0, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 12, 2, 5, 10, 13]
====================================
cloned = 11
killed = 3
cloned = 4
killed = 1
cloned = 12
killed = 6
cloned = 2
killed = 8
cloned = 5
killed = 9
cloned = 10
killed = 0
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 10, 6, 4, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 1, 11, 12, 8, 13]
====================================
cloned = 5
killed = 0
cloned = 3
killed = 9
cloned = 1
killed = 10
cloned = 11
killed = 6
cloned = 12
killed = 4
cloned = 8
killed = 7
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 7, 2, 11, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 5, 12, 0, 1, 3, 13]
====================================
cloned = 6
killed = 10
cloned = 5
killed = 4
cloned = 12
killed = 7
cloned = 0
killed = 2
cloned = 1
killed = 11
cloned = 3
killed = 8
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 10, 9, 6, 11, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 0, 1, 3, 5, 4, 13]
====================================
cloned = 2
killed = 7
cloned = 0
killed = 8
cloned = 1
killed = 10
cloned = 3
killed = 9
cloned = 5
killed = 6
cloned = 4
killed = 11
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 0, 12, 6, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 1, 9, 11, 2, 3, 13]
====================================
cloned = 10
killed = 5
cloned = 1
killed = 4
cloned = 9
killed = 0
cloned = 11
killed = 12
cloned = 2
killed = 6
cloned = 3
killed = 8
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 8, 6, 2, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 1, 4, 3, 9, 7, 13]
====================================
cloned = 11
killed = 5
cloned = 1
killed = 10
cloned = 4
killed = 8
cloned = 3
killed = 6
cloned = 9
killed = 2
cloned = 7
killed = 0
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 5, 12, 1, 4, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 8, 3, 7, 11, 2, 13]
====================================
cloned = 9
killed = 10
cloned = 8
killed = 6
cloned = 3
killed = 5
cloned = 7
killed = 12
cloned = 11
killed = 1
cloned = 2
killed = 4
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 0, 1, 8, 6, 10, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 9, 7, 5, 11, 13]
====================================
cloned = 4
killed = 12
cloned = 3
killed = 0
cloned = 9
killed = 1
cloned = 7
killed = 8
cloned = 5
killed = 6
cloned = 11
killed = 10
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 5, 2, 6, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 8, 3, 4, 0, 7, 13]
====================================
cloned = 1
killed = 9
cloned = 8
killed = 12
cloned = 3
killed = 5
cloned = 4
killed = 2
cloned = 0
killed = 6
cloned = 7
killed = 11
cloned = 13
killed = 10
Trial run 5/seed 860:
..................................................
winner: EvolvedLookerUp2_2_2
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved HMM 5': 2}),
 Counter({'Evolved FSM 6': 6, 'EvolvedLookerUp2_2_2': 4, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 12, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 14})]
--------------------------------------------------
Score:
[[36.230000000000004,
  33.84,
  36.15,
  33.93,
  33.69500000000001,
  35.94,
  33.77,
  26.039999999999996,
  30.78,
  20.8,
  32.855000000000004,
  33.50999999999999,
  29.835000000000004,
  33.385],
 [38.92,
  37.18,
  38.96,
  34.86,
  38.315,
  38.400000000000006,
  37.405,
  38.92,
  35.245,
  38.96,
  34.86,
  38.379999999999995,
  38.4,
  37.730000000000004],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.17,
 34.79,
 36.315,
 33.839999999999996,
 33.79,
 35.925,
 34.974999999999994,
 26.439999999999998,
 30.975,
 20.074999999999996,
 32.805,
 33.269999999999996,
 30.55,
 33.44]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.614999999999995
Upper: 33.614999999999995
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 4, 5, 6]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[38.92,
 37.25,
 38.96,
 34.86,
 38.42,
 38.400000000000006,
 36.9,
 38.92,
 35.86,
 38.96,
 34.86,
 38.515,
 38.4,
 38.355000000000004]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.400000000000006
Upper: 38.400000000000006
====================================
lower list size: 7
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 6, 8, 10, 12, 13]
lower threshold: []
....................................
upper threshold: [5]
upper:           [0, 2, 4, 7, 9, 11, 5]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 3
cloned = 4
killed = 6
cloned = 7
killed = 8
cloned = 9
killed = 10
cloned = 11
killed = 12
cloned = 5
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 2, 0, 3, 10, 7, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 6, 1, 5, 9, 11, 13]
====================================
cloned = 4
killed = 12
cloned = 6
killed = 2
cloned = 1
killed = 0
cloned = 5
killed = 3
cloned = 9
killed = 10
cloned = 11
killed = 7
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 5, 11, 2, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 10, 12, 3, 4, 6, 13]
====================================
cloned = 0
killed = 9
cloned = 10
killed = 7
cloned = 12
killed = 5
cloned = 3
killed = 11
cloned = 4
killed = 2
cloned = 6
killed = 1
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 4, 9, 7, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 11, 0, 2, 5, 10, 13]
====================================
cloned = 12
killed = 6
cloned = 11
killed = 3
cloned = 0
killed = 4
cloned = 2
killed = 9
cloned = 5
killed = 7
cloned = 10
killed = 1
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 9, 2, 6, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 12, 10, 1, 7, 5, 13]
====================================
cloned = 0
killed = 8
cloned = 12
killed = 11
cloned = 10
killed = 9
cloned = 1
killed = 2
cloned = 7
killed = 6
cloned = 5
killed = 3
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 12, 9, 3, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 6, 2, 7, 0, 11, 13]
====================================
cloned = 1
killed = 4
cloned = 6
killed = 8
cloned = 2
killed = 12
cloned = 7
killed = 9
cloned = 0
killed = 3
cloned = 11
killed = 10
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 4, 8, 6, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 9, 5, 12, 1, 11, 13]
====================================
cloned = 10
killed = 7
cloned = 9
killed = 0
cloned = 5
killed = 4
cloned = 12
killed = 8
cloned = 1
killed = 6
cloned = 11
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 1, 9, 6, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 11, 5, 12, 8, 7, 13]
====================================
cloned = 0
killed = 10
cloned = 11
killed = 4
cloned = 5
killed = 1
cloned = 12
killed = 9
cloned = 8
killed = 6
cloned = 7
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 0, 4, 5, 11, 12, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 7, 9, 8, 6, 3, 13]
====================================
cloned = 1
killed = 10
cloned = 7
killed = 0
cloned = 9
killed = 4
cloned = 8
killed = 5
cloned = 6
killed = 11
cloned = 3
killed = 12
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 3, 0, 6, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 11, 12, 2, 7, 4, 13]
====================================
cloned = 8
killed = 1
cloned = 11
killed = 9
cloned = 12
killed = 3
cloned = 2
killed = 0
cloned = 7
killed = 6
cloned = 4
killed = 5
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 12, 2, 4, 9, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 8, 10, 11, 3, 7, 13]
====================================
cloned = 1
killed = 6
cloned = 8
killed = 12
cloned = 10
killed = 2
cloned = 11
killed = 4
cloned = 3
killed = 9
cloned = 7
killed = 5
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 12, 11, 0, 7, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 1, 8, 10, 3, 9, 13]
====================================
cloned = 6
killed = 5
cloned = 1
killed = 12
cloned = 8
killed = 11
cloned = 10
killed = 0
cloned = 3
killed = 7
cloned = 9
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 8, 0, 10, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 1, 6, 9, 5, 2, 13]
====================================
cloned = 3
killed = 7
cloned = 1
killed = 11
cloned = 6
killed = 8
cloned = 9
killed = 0
cloned = 5
killed = 10
cloned = 2
killed = 12
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 11, 10, 5, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 3, 9, 1, 0, 12, 13]
====================================
cloned = 6
killed = 8
cloned = 3
killed = 2
cloned = 9
killed = 11
cloned = 1
killed = 10
cloned = 0
killed = 5
cloned = 12
killed = 7
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 6, 1, 11, 10, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 7, 12, 5, 9, 8, 13]
====================================
cloned = 2
killed = 3
cloned = 7
killed = 0
cloned = 12
killed = 6
cloned = 5
killed = 1
cloned = 9
killed = 11
cloned = 8
killed = 10
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 0, 4, 1, 3, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 8, 5, 2, 12, 9, 13]
====================================
cloned = 6
killed = 10
cloned = 8
killed = 7
cloned = 5
killed = 0
cloned = 2
killed = 4
cloned = 12
killed = 1
cloned = 9
killed = 3
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 2, 7, 12, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 10, 11, 8, 1, 9, 13]
====================================
cloned = 6
killed = 5
cloned = 10
killed = 0
cloned = 11
killed = 2
cloned = 8
killed = 7
cloned = 1
killed = 12
cloned = 9
killed = 4
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 0, 5, 3, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 11, 1, 7, 6, 9, 13]
====================================
cloned = 4
killed = 2
cloned = 11
killed = 8
cloned = 1
killed = 0
cloned = 7
killed = 5
cloned = 6
killed = 3
cloned = 9
killed = 12
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 9, 2, 3, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 11, 1, 5, 4, 13]
====================================
cloned = 7
killed = 10
cloned = 6
killed = 8
cloned = 11
killed = 9
cloned = 1
killed = 2
cloned = 5
killed = 3
cloned = 4
killed = 0
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 5, 3, 0, 1, 11, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 9, 8, 2, 7, 13]
====================================
cloned = 10
killed = 12
cloned = 4
killed = 5
cloned = 9
killed = 3
cloned = 8
killed = 0
cloned = 2
killed = 1
cloned = 7
killed = 11
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 1, 6, 9, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 4, 5, 11, 10, 8, 13]
====================================
cloned = 2
killed = 7
cloned = 4
killed = 0
cloned = 5
killed = 1
cloned = 11
killed = 6
cloned = 10
killed = 9
cloned = 8
killed = 3
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 12, 2, 10, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 1, 6, 8, 7, 5, 13]
====================================
cloned = 9
killed = 0
cloned = 1
killed = 3
cloned = 6
killed = 12
cloned = 8
killed = 2
cloned = 7
killed = 10
cloned = 5
killed = 11
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 3, 10, 9, 11, 0, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 7, 8, 2, 1, 12, 13]
====================================
cloned = 5
killed = 4
cloned = 7
killed = 3
cloned = 8
killed = 10
cloned = 2
killed = 9
cloned = 1
killed = 11
cloned = 12
killed = 0
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 11, 1, 3, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 8, 9, 7, 0, 10, 13]
====================================
cloned = 12
killed = 5
cloned = 8
killed = 6
cloned = 9
killed = 11
cloned = 7
killed = 1
cloned = 0
killed = 3
cloned = 10
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 0, 3, 10, 5, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 7, 9, 1, 2, 13]
====================================
cloned = 11
killed = 8
cloned = 12
killed = 0
cloned = 7
killed = 3
cloned = 9
killed = 10
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 12, 9, 10, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 1, 6, 8, 4, 11, 13]
====================================
cloned = 5
killed = 2
cloned = 1
killed = 7
cloned = 6
killed = 12
cloned = 8
killed = 9
cloned = 4
killed = 10
cloned = 11
killed = 0
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 12, 11, 3, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 6, 0, 5, 1, 7, 13]
====================================
cloned = 10
killed = 4
cloned = 6
killed = 8
cloned = 0
killed = 12
cloned = 5
killed = 11
cloned = 1
killed = 3
cloned = 7
killed = 9
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 1, 2, 8, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 11, 3, 12, 5, 0, 13]
====================================
cloned = 4
killed = 6
cloned = 11
killed = 9
cloned = 3
killed = 1
cloned = 12
killed = 2
cloned = 5
killed = 8
cloned = 0
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 8, 1, 4, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 5, 2, 0, 9, 3, 13]
====================================
cloned = 6
killed = 12
cloned = 5
killed = 11
cloned = 2
killed = 8
cloned = 0
killed = 1
cloned = 9
killed = 4
cloned = 3
killed = 10
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 8, 4, 11, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 9, 12, 0, 3, 7, 13]
====================================
cloned = 10
killed = 5
cloned = 9
killed = 2
cloned = 12
killed = 8
cloned = 0
killed = 4
cloned = 3
killed = 11
cloned = 7
killed = 6
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 12, 1, 0, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 10, 7, 9, 8, 4, 13]
====================================
cloned = 3
killed = 6
cloned = 10
killed = 2
cloned = 7
killed = 12
cloned = 9
killed = 1
cloned = 8
killed = 0
cloned = 4
killed = 5
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 6, 12, 10, 11, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 9, 7, 0, 1, 2, 13]
====================================
cloned = 4
killed = 5
cloned = 9
killed = 8
cloned = 7
killed = 6
cloned = 0
killed = 12
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 10, 4, 9, 6, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 0, 3, 1, 12, 7, 13]
====================================
cloned = 11
killed = 2
cloned = 0
killed = 8
cloned = 3
killed = 10
cloned = 1
killed = 4
cloned = 12
killed = 9
cloned = 7
killed = 6
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 6, 0, 7, 3, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 8, 12, 4, 11, 1, 13]
====================================
cloned = 5
killed = 2
cloned = 8
killed = 9
cloned = 12
killed = 6
cloned = 4
killed = 0
cloned = 11
killed = 7
cloned = 1
killed = 3
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 3, 1, 6, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 10, 9, 8, 4, 12, 13]
====================================
cloned = 7
killed = 11
cloned = 10
killed = 0
cloned = 9
killed = 3
cloned = 8
killed = 1
cloned = 4
killed = 6
cloned = 12
killed = 5
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 5, 6, 9, 2, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 8, 11, 4, 1, 7, 13]
====================================
cloned = 12
killed = 10
cloned = 8
killed = 3
cloned = 11
killed = 5
cloned = 4
killed = 6
cloned = 1
killed = 9
cloned = 7
killed = 2
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 8, 2, 4, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 5, 12, 0, 9, 10, 13]
====================================
cloned = 11
killed = 7
cloned = 5
killed = 1
cloned = 12
killed = 8
cloned = 0
killed = 2
cloned = 9
killed = 4
cloned = 10
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 5, 0, 8, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 11, 1, 10, 12, 3, 13]
====================================
cloned = 9
killed = 2
cloned = 11
killed = 7
cloned = 1
killed = 5
cloned = 10
killed = 0
cloned = 12
killed = 8
cloned = 3
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 10, 11, 0, 4, 12, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 7, 2, 5, 6, 9, 13]
====================================
cloned = 3
killed = 1
cloned = 7
killed = 10
cloned = 2
killed = 11
cloned = 5
killed = 0
cloned = 6
killed = 4
cloned = 9
killed = 12
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 2, 1, 7, 4, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 5, 6, 10, 12, 9, 13]
====================================
cloned = 0
killed = 3
cloned = 5
killed = 11
cloned = 6
killed = 2
cloned = 10
killed = 1
cloned = 12
killed = 7
cloned = 9
killed = 4
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 11, 12, 4, 6, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 9, 2, 1, 3, 7, 13]
====================================
cloned = 5
killed = 10
cloned = 9
killed = 8
cloned = 2
killed = 11
cloned = 1
killed = 12
cloned = 3
killed = 4
cloned = 7
killed = 6
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 2, 1, 9, 4, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 6, 3, 12, 8, 5, 13]
====================================
cloned = 0
killed = 7
cloned = 6
killed = 11
cloned = 3
killed = 2
cloned = 12
killed = 1
cloned = 8
killed = 9
cloned = 5
killed = 4
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 0, 10, 9, 1, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 12, 4, 7, 3, 5, 13]
====================================
cloned = 2
killed = 6
cloned = 12
killed = 0
cloned = 4
killed = 10
cloned = 7
killed = 9
cloned = 3
killed = 1
cloned = 5
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 12, 7, 9, 1, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 3, 0, 8, 11, 4, 13]
====================================
cloned = 6
killed = 2
cloned = 3
killed = 5
cloned = 0
killed = 12
cloned = 8
killed = 7
cloned = 11
killed = 9
cloned = 4
killed = 1
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 4, 9, 12, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 1, 0, 3, 11, 7, 13]
====================================
cloned = 2
killed = 5
cloned = 1
killed = 8
cloned = 0
killed = 4
cloned = 3
killed = 9
cloned = 11
killed = 12
cloned = 7
killed = 10
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 6, 7, 4, 1, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 5, 8, 12, 9, 10, 13]
====================================
cloned = 11
killed = 0
cloned = 5
killed = 2
cloned = 8
killed = 6
cloned = 12
killed = 7
cloned = 9
killed = 4
cloned = 10
killed = 1
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 3, 5, 10, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 4, 12, 11, 9, 8, 13]
====================================
cloned = 1
killed = 0
cloned = 4
killed = 7
cloned = 12
killed = 3
cloned = 11
killed = 5
cloned = 9
killed = 10
cloned = 8
killed = 2
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 7, 1, 11, 6, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 5, 0, 2, 8, 4, 13]
====================================
cloned = 10
killed = 12
cloned = 5
killed = 3
cloned = 0
killed = 7
cloned = 2
killed = 1
cloned = 8
killed = 11
cloned = 4
killed = 6
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 10, 8, 9, 12, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 0, 3, 1, 11, 4, 13]
====================================
cloned = 6
killed = 5
cloned = 0
killed = 2
cloned = 3
killed = 10
cloned = 1
killed = 8
cloned = 11
killed = 9
cloned = 4
killed = 12
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 0, 7, 9, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 2, 12, 3, 8, 6, 13]
====================================
cloned = 5
killed = 1
cloned = 2
killed = 4
cloned = 12
killed = 0
cloned = 3
killed = 7
cloned = 8
killed = 9
cloned = 6
killed = 11
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 11, 1, 2, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 4, 0, 5, 9, 8, 13]
====================================
cloned = 12
killed = 10
cloned = 4
killed = 3
cloned = 0
killed = 11
cloned = 5
killed = 1
cloned = 9
killed = 2
cloned = 8
killed = 7
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 6, 0, 3, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 7, 8, 4, 9, 5, 13]
====================================
cloned = 12
killed = 10
cloned = 7
killed = 11
cloned = 8
killed = 6
cloned = 4
killed = 0
cloned = 9
killed = 3
cloned = 5
killed = 2
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 5, 12, 0, 7, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 1, 3, 4, 6, 11, 13]
====================================
cloned = 9
killed = 10
cloned = 1
killed = 2
cloned = 3
killed = 5
cloned = 4
killed = 12
cloned = 6
killed = 0
cloned = 11
killed = 7
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 7, 9, 2, 5, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 4, 3, 0, 10, 12, 13]
====================================
cloned = 8
killed = 11
cloned = 4
killed = 7
cloned = 3
killed = 9
cloned = 0
killed = 2
cloned = 10
killed = 5
cloned = 12
killed = 1
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 0, 7, 2, 8, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 5, 9, 1, 3, 13]
====================================
cloned = 11
killed = 10
cloned = 4
killed = 6
cloned = 5
killed = 0
cloned = 9
killed = 7
cloned = 1
killed = 2
cloned = 3
killed = 8
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 3, 10, 8, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 6, 9, 5, 4, 1, 13]
====================================
cloned = 12
killed = 7
cloned = 6
killed = 2
cloned = 9
killed = 3
cloned = 5
killed = 10
cloned = 4
killed = 8
cloned = 1
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 3, 10, 12, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 4, 7, 6, 8, 9, 13]
====================================
cloned = 0
killed = 1
cloned = 4
killed = 11
cloned = 7
killed = 3
cloned = 6
killed = 10
cloned = 8
killed = 12
cloned = 9
killed = 5
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 4, 8, 10, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 11, 2, 12, 5, 6, 13]
====================================
cloned = 0
killed = 9
cloned = 11
killed = 7
cloned = 2
killed = 4
cloned = 12
killed = 8
cloned = 5
killed = 10
cloned = 6
killed = 3
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 11, 9, 8, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 7, 6, 12, 0, 4, 13]
====================================
cloned = 3
killed = 2
cloned = 7
killed = 10
cloned = 6
killed = 11
cloned = 12
killed = 9
cloned = 0
killed = 8
cloned = 4
killed = 5
cloned = 13
killed = 1
Trial run 6/seed 861:
..................................................
winner: EvolvedLookerUp2_2_2
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Evolved HMM 5': 4,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 6,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2}),
 Counter({'Evolved HMM 5': 6,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2}),
 Counter({'Evolved HMM 5': 6,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2}),
 Counter({'Evolved HMM 5': 6,
          'Tit For Tat': 4,
          'Evolved FSM 6': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 6,
          'Tit For Tat': 4,
          'Evolved FSM 6': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 6, 'Tit For Tat': 4, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 6, 'EvolvedLookerUp2_2_2': 4, 'Tit For Tat': 4}),
 Counter({'Tit For Tat': 6, 'Evolved HMM 5': 4, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Tit For Tat': 6, 'EvolvedLookerUp2_2_2': 4, 'Evolved HMM 5': 4}),
 Counter({'Tit For Tat': 6, 'EvolvedLookerUp2_2_2': 4, 'Evolved HMM 5': 4}),
 Counter({'Tit For Tat': 6, 'EvolvedLookerUp2_2_2': 4, 'Evolved HMM 5': 4}),
 Counter({'Evolved HMM 5': 6, 'Tit For Tat': 6, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 8, 'Tit For Tat': 4, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 2, 'Tit For Tat': 2}),
 Counter({'Evolved HMM 5': 10, 'Tit For Tat': 2, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 8, 'EvolvedLookerUp2_2_2': 4, 'Tit For Tat': 2}),
 Counter({'Evolved HMM 5': 8, 'EvolvedLookerUp2_2_2': 4, 'Tit For Tat': 2}),
 Counter({'Evolved HMM 5': 6, 'Tit For Tat': 4, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 6, 'EvolvedLookerUp2_2_2': 4, 'Tit For Tat': 4}),
 Counter({'Evolved HMM 5': 8, 'Tit For Tat': 4, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 8, 'Tit For Tat': 4, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 10, 'Tit For Tat': 2, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 8, 'Tit For Tat': 4, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 10, 'Tit For Tat': 2, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved HMM 5': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved HMM 5': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved HMM 5': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved HMM 5': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved HMM 5': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved HMM 5': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved HMM 5': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved HMM 5': 4}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved HMM 5': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved HMM 5': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved HMM 5': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved HMM 5': 6}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved HMM 5': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved HMM 5': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved HMM 5': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved HMM 5': 4}),
 Counter({'EvolvedLookerUp2_2_2': 12, 'Evolved HMM 5': 2}),
 Counter({'EvolvedLookerUp2_2_2': 12, 'Evolved HMM 5': 2}),
 Counter({'EvolvedLookerUp2_2_2': 14})]
--------------------------------------------------
Score:
[[36.17,
  34.79,
  36.315,
  33.839999999999996,
  33.79,
  35.925,
  34.974999999999994,
  26.439999999999998,
  30.975,
  20.074999999999996,
  32.805,
  33.269999999999996,
  30.55,
  33.44],
 [38.92,
  37.25,
  38.96,
  34.86,
  38.42,
  38.400000000000006,
  36.9,
  38.92,
  35.86,
  38.96,
  34.86,
  38.515,
  38.4,
  38.355000000000004],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.330000000000005,
 33.28,
 36.144999999999996,
 33.769999999999996,
 33.800000000000004,
 35.55,
 33.78,
 26.019999999999996,
 31.05,
 19.805,
 32.629999999999995,
 33.85999999999999,
 30.570000000000004,
 33.449999999999996]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.61
Upper: 33.61
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 6, 8, 0, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 12, 3, 7, 5, 2, 13]
====================================
cloned = 4
killed = 10
cloned = 12
killed = 1
cloned = 3
killed = 6
cloned = 7
killed = 8
cloned = 5
killed = 0
cloned = 2
killed = 9
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 2, 1, 8, 9, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 10, 4, 0, 5, 13]
====================================
cloned = 7
killed = 12
cloned = 3
killed = 2
cloned = 10
killed = 1
cloned = 4
killed = 8
cloned = 0
killed = 9
cloned = 5
killed = 6
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 7, 10, 4, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 3, 2, 12, 11, 0, 13]
====================================
cloned = 1
killed = 5
cloned = 3
killed = 9
cloned = 2
killed = 7
cloned = 12
killed = 10
cloned = 11
killed = 4
cloned = 0
killed = 8
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 7, 0, 9, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 12, 8, 11, 1, 13]
====================================
cloned = 5
killed = 4
cloned = 3
killed = 10
cloned = 12
killed = 7
cloned = 8
killed = 0
cloned = 11
killed = 9
cloned = 1
killed = 2
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 11, 0, 4, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 2, 8, 9, 5, 6, 13]
====================================
cloned = 7
killed = 1
cloned = 2
killed = 3
cloned = 8
killed = 11
cloned = 9
killed = 0
cloned = 5
killed = 4
cloned = 6
killed = 12
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 1, 7, 5, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 2, 9, 4, 10, 3, 13]
====================================
cloned = 11
killed = 0
cloned = 2
killed = 12
cloned = 9
killed = 1
cloned = 4
killed = 7
cloned = 10
killed = 5
cloned = 3
killed = 8
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 5, 10, 0, 9, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 8, 4, 11, 2, 6, 13]
====================================
cloned = 3
killed = 7
cloned = 8
killed = 1
cloned = 4
killed = 5
cloned = 11
killed = 10
cloned = 2
killed = 0
cloned = 6
killed = 9
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 12, 4, 10, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 6, 11, 0, 5, 9, 13]
====================================
cloned = 1
killed = 3
cloned = 6
killed = 2
cloned = 11
killed = 12
cloned = 0
killed = 4
cloned = 5
killed = 10
cloned = 9
killed = 8
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 0, 2, 4, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 9, 6, 12, 11, 13]
====================================
cloned = 5
killed = 7
cloned = 3
killed = 10
cloned = 9
killed = 0
cloned = 6
killed = 2
cloned = 12
killed = 4
cloned = 11
killed = 1
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 8, 10, 0, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 3, 11, 9, 12, 4, 13]
====================================
cloned = 1
killed = 7
cloned = 3
killed = 2
cloned = 11
killed = 8
cloned = 9
killed = 10
cloned = 12
killed = 0
cloned = 4
killed = 5
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 8, 12, 1, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 9, 10, 6, 7, 4, 13]
====================================
cloned = 5
killed = 2
cloned = 9
killed = 11
cloned = 10
killed = 8
cloned = 6
killed = 12
cloned = 7
killed = 1
cloned = 4
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 4, 7, 2, 3, 8, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 10, 0, 1, 9, 6, 13]
====================================
cloned = 11
killed = 12
cloned = 10
killed = 4
cloned = 0
killed = 7
cloned = 1
killed = 2
cloned = 9
killed = 3
cloned = 6
killed = 8
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 0, 6, 12, 11, 9, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 7, 3, 10, 1, 5, 13]
====================================
cloned = 8
killed = 2
cloned = 7
killed = 0
cloned = 3
killed = 6
cloned = 10
killed = 12
cloned = 1
killed = 11
cloned = 5
killed = 9
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 8, 12, 9, 0, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 3, 11, 2, 4, 7, 13]
====================================
cloned = 6
killed = 1
cloned = 3
killed = 8
cloned = 11
killed = 12
cloned = 2
killed = 9
cloned = 4
killed = 0
cloned = 7
killed = 5
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 5, 11, 7, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 1, 2, 0, 3, 8, 13]
====================================
cloned = 9
killed = 6
cloned = 1
killed = 10
cloned = 2
killed = 5
cloned = 0
killed = 11
cloned = 3
killed = 7
cloned = 8
killed = 12
cloned = 13
killed = 4
Trial run 7/seed 862:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'Grudger': 2}),
 Counter({'EvolvedLookerUp2_2_2': 4,
          'Evolved HMM 5': 4,
          'Evolved FSM 16': 2,
          'Tit For Tat': 2,
          'Grudger': 2}),
 Counter({'Evolved FSM 16': 4,
          'Grudger': 4,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved HMM 5': 2,
          'Tit For Tat': 2}),
 Counter({'Evolved HMM 5': 4,
          'Grudger': 4,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved FSM 16': 2,
          'Tit For Tat': 2}),
 Counter({'Grudger': 6,
          'Evolved HMM 5': 4,
          'Tit For Tat': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 6, 'Evolved HMM 5': 6, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 8, 'Grudger': 4, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved HMM 5': 6, 'Grudger': 6, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 6, 'EvolvedLookerUp2_2_2': 4, 'Evolved HMM 5': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 4, 'Evolved HMM 5': 2}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.330000000000005,
  33.28,
  36.144999999999996,
  33.769999999999996,
  33.800000000000004,
  35.55,
  33.78,
  26.019999999999996,
  31.05,
  19.805,
  32.629999999999995,
  33.85999999999999,
  30.570000000000004,
  33.449999999999996],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.31,
 35.465,
 36.295,
 33.785,
 33.80499999999999,
 35.769999999999996,
 35.29,
 26.22,
 31.23,
 21.825,
 32.455,
 33.60999999999999,
 29.755,
 33.42999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.69749999999999
Upper: 33.69749999999999
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 4, 5, 6]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[38.92,
 34.835,
 38.96,
 34.86,
 38.27,
 38.400000000000006,
 36.25,
 38.92,
 34.64,
 38.96,
 34.86,
 38.385,
 38.4,
 36.25]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.3275
Upper: 38.3275
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 4, 6, 8, 10, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 5, 7, 9, 11, 12]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 3
cloned = 5
killed = 4
cloned = 7
killed = 6
cloned = 9
killed = 8
cloned = 11
killed = 10
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 11, 10, 12, 7, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 3, 4, 1, 5, 9, 13]
====================================
cloned = 6
killed = 8
cloned = 3
killed = 2
cloned = 4
killed = 11
cloned = 1
killed = 10
cloned = 5
killed = 12
cloned = 9
killed = 7
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 5, 4, 9, 7, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 10, 2, 0, 12, 8, 13]
====================================
cloned = 3
killed = 6
cloned = 10
killed = 1
cloned = 2
killed = 5
cloned = 0
killed = 4
cloned = 12
killed = 9
cloned = 8
killed = 7
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 1, 5, 2, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 8, 6, 0, 12, 10, 13]
====================================
cloned = 11
killed = 3
cloned = 8
killed = 4
cloned = 6
killed = 1
cloned = 0
killed = 5
cloned = 12
killed = 2
cloned = 10
killed = 7
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 5, 2, 10, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 1, 3, 8, 7, 0, 13]
====================================
cloned = 11
killed = 12
cloned = 1
killed = 9
cloned = 3
killed = 5
cloned = 8
killed = 2
cloned = 7
killed = 10
cloned = 0
killed = 4
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 10, 0, 8, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 7, 9, 3, 6, 4, 13]
====================================
cloned = 1
killed = 2
cloned = 7
killed = 12
cloned = 9
killed = 10
cloned = 3
killed = 0
cloned = 6
killed = 8
cloned = 4
killed = 5
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 5, 1, 4, 8, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 2, 3, 12, 11, 10, 13]
====================================
cloned = 6
killed = 9
cloned = 2
killed = 7
cloned = 3
killed = 5
cloned = 12
killed = 1
cloned = 11
killed = 4
cloned = 10
killed = 8
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 10, 2, 6, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 11, 0, 3, 5, 1, 13]
====================================
cloned = 7
killed = 12
cloned = 11
killed = 8
cloned = 0
killed = 10
cloned = 3
killed = 2
cloned = 5
killed = 6
cloned = 1
killed = 4
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 0, 4, 1, 5, 10, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 8, 3, 11, 7, 2, 13]
====================================
cloned = 6
killed = 12
cloned = 8
killed = 0
cloned = 3
killed = 4
cloned = 11
killed = 1
cloned = 7
killed = 5
cloned = 2
killed = 10
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 7, 4, 3, 2, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 1, 5, 10, 9, 6, 13]
====================================
cloned = 0
killed = 12
cloned = 1
killed = 7
cloned = 5
killed = 4
cloned = 10
killed = 3
cloned = 9
killed = 2
cloned = 6
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 6, 4, 5, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 2, 9, 8, 10, 12, 13]
====================================
cloned = 0
killed = 3
cloned = 2
killed = 7
cloned = 9
killed = 6
cloned = 8
killed = 4
cloned = 10
killed = 5
cloned = 12
killed = 1
cloned = 13
killed = 11
Trial run 8/seed 863:
..................................................
winner: EvolvedLookerUp2_2_2
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved HMM 5': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6, 'Evolved FSM 6': 4, 'Tit For Tat': 4}),
 Counter({'EvolvedLookerUp2_2_2': 6, 'Evolved FSM 6': 4, 'Tit For Tat': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 4, 'Tit For Tat': 2}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 4, 'Tit For Tat': 2}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Tit For Tat': 4, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Tit For Tat': 4, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 2, 'Tit For Tat': 2}),
 Counter({'EvolvedLookerUp2_2_2': 12, 'Tit For Tat': 2}),
 Counter({'EvolvedLookerUp2_2_2': 12, 'Tit For Tat': 2}),
 Counter({'EvolvedLookerUp2_2_2': 14})]
--------------------------------------------------
Score:
[[36.31,
  35.465,
  36.295,
  33.785,
  33.80499999999999,
  35.769999999999996,
  35.29,
  26.22,
  31.23,
  21.825,
  32.455,
  33.60999999999999,
  29.755,
  33.42999999999999],
 [38.92,
  34.835,
  38.96,
  34.86,
  38.27,
  38.400000000000006,
  36.25,
  38.92,
  34.64,
  38.96,
  34.86,
  38.385,
  38.4,
  36.25],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.24,
 35.365,
 36.26,
 33.87,
 33.41,
 35.875,
 36.85,
 26.08,
 31.020000000000003,
 19.445000000000004,
 32.46,
 33.809999999999995,
 32.995,
 33.31999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.61
Upper: 33.61
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.92,
 31.610000000000007,
 38.96,
 34.86,
 38.92,
 38.4,
 36.25,
 32.915000000000006,
 38.96,
 34.86,
 38.4,
 36.25,
 37.405,
 36.25]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 36.8275
Upper: 36.8275
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 6, 7, 9, 11, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 4, 5, 8, 10, 12]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 3
cloned = 4
killed = 6
cloned = 5
killed = 7
cloned = 8
killed = 9
cloned = 10
killed = 11
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 4, 6, 7, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 3, 1, 9, 2, 0, 13]
====================================
cloned = 12
killed = 10
cloned = 3
killed = 5
cloned = 1
killed = 4
cloned = 9
killed = 6
cloned = 2
killed = 7
cloned = 0
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 4, 0, 5, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 7, 1, 8, 10, 12, 13]
====================================
cloned = 9
killed = 3
cloned = 7
killed = 11
cloned = 1
killed = 4
cloned = 8
killed = 0
cloned = 10
killed = 5
cloned = 12
killed = 2
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 1, 3, 0, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 4, 6, 2, 8, 7, 13]
====================================
cloned = 12
killed = 11
cloned = 4
killed = 9
cloned = 6
killed = 1
cloned = 2
killed = 3
cloned = 8
killed = 0
cloned = 7
killed = 10
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 3, 8, 1, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 7, 0, 2, 4, 12, 13]
====================================
cloned = 9
killed = 11
cloned = 7
killed = 5
cloned = 0
killed = 3
cloned = 2
killed = 8
cloned = 4
killed = 1
cloned = 12
killed = 10
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 10, 11, 1, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 5, 7, 12, 0, 3, 13]
====================================
cloned = 6
killed = 4
cloned = 5
killed = 2
cloned = 7
killed = 10
cloned = 12
killed = 11
cloned = 0
killed = 1
cloned = 3
killed = 8
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 7, 0, 5, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 8, 11, 12, 4, 9, 13]
====================================
cloned = 2
killed = 10
cloned = 8
killed = 3
cloned = 11
killed = 7
cloned = 12
killed = 0
cloned = 4
killed = 5
cloned = 9
killed = 1
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 12, 5, 2, 11, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 10, 0, 8, 7, 9, 13]
====================================
cloned = 4
killed = 6
cloned = 10
killed = 12
cloned = 0
killed = 5
cloned = 8
killed = 2
cloned = 7
killed = 11
cloned = 9
killed = 3
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 3, 5, 6, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 0, 12, 4, 2, 1, 13]
====================================
cloned = 10
killed = 11
cloned = 0
killed = 8
cloned = 12
killed = 3
cloned = 4
killed = 5
cloned = 2
killed = 6
cloned = 1
killed = 7
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 4, 7, 5, 12, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 8, 10, 1, 3, 2, 13]
====================================
cloned = 11
killed = 0
cloned = 8
killed = 9
cloned = 10
killed = 4
cloned = 1
killed = 7
cloned = 3
killed = 5
cloned = 2
killed = 12
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 11, 2, 0, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 12, 5, 4, 8, 10, 13]
====================================
cloned = 9
killed = 3
cloned = 12
killed = 6
cloned = 5
killed = 11
cloned = 4
killed = 2
cloned = 8
killed = 0
cloned = 10
killed = 7
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 0, 9, 11, 10, 12, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 5, 6, 3, 1, 8, 13]
====================================
cloned = 7
killed = 4
cloned = 5
killed = 0
cloned = 6
killed = 9
cloned = 3
killed = 11
cloned = 1
killed = 10
cloned = 8
killed = 12
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 7, 1, 3, 12, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 8, 11, 9, 2, 0, 13]
====================================
cloned = 4
killed = 5
cloned = 8
killed = 10
cloned = 11
killed = 7
cloned = 9
killed = 1
cloned = 2
killed = 3
cloned = 0
killed = 12
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 5, 12, 8, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 10, 2, 11, 1, 3, 13]
====================================
cloned = 4
killed = 0
cloned = 10
killed = 6
cloned = 2
killed = 5
cloned = 11
killed = 12
cloned = 1
killed = 8
cloned = 3
killed = 7
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 11, 3, 5, 0, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 9, 12, 6, 7, 10, 13]
====================================
cloned = 1
killed = 4
cloned = 9
killed = 8
cloned = 12
killed = 11
cloned = 6
killed = 3
cloned = 7
killed = 5
cloned = 10
killed = 0
cloned = 13
killed = 2
Trial run 9/seed 864:
..................................................
winner: Michaelos: (D,)
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 6, 'Evolved FSM 6': 4, 'Michaelos: (D,)': 4}),
 Counter({'Michaelos: (D,)': 8, 'Tit For Tat': 4, 'Evolved FSM 6': 2}),
 Counter({'Michaelos: (D,)': 10, 'Evolved FSM 6': 2, 'Tit For Tat': 2}),
 Counter({'Michaelos: (D,)': 8, 'Evolved FSM 6': 4, 'Tit For Tat': 2}),
 Counter({'Michaelos: (D,)': 10, 'Tit For Tat': 4}),
 Counter({'Michaelos: (D,)': 12, 'Tit For Tat': 2}),
 Counter({'Michaelos: (D,)': 12, 'Tit For Tat': 2}),
 Counter({'Michaelos: (D,)': 10, 'Tit For Tat': 4}),
 Counter({'Michaelos: (D,)': 8, 'Tit For Tat': 6}),
 Counter({'Michaelos: (D,)': 8, 'Tit For Tat': 6}),
 Counter({'Michaelos: (D,)': 10, 'Tit For Tat': 4}),
 Counter({'Michaelos: (D,)': 10, 'Tit For Tat': 4}),
 Counter({'Michaelos: (D,)': 12, 'Tit For Tat': 2}),
 Counter({'Michaelos: (D,)': 14})]
--------------------------------------------------
Score:
[[36.24,
  35.365,
  36.26,
  33.87,
  33.41,
  35.875,
  36.85,
  26.08,
  31.020000000000003,
  19.445000000000004,
  32.46,
  33.809999999999995,
  32.995,
  33.31999999999999],
 [38.92,
  31.610000000000007,
  38.96,
  34.86,
  38.92,
  38.4,
  36.25,
  32.915000000000006,
  38.96,
  34.86,
  38.4,
  36.25,
  37.405,
  36.25],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.120000000000005,
 33.81,
 36.235,
 34.084999999999994,
 33.504999999999995,
 36.315,
 34.32,
 26.359999999999996,
 31.17,
 20.270000000000003,
 32.489999999999995,
 33.69,
 29.745,
 33.405]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.5975
Upper: 33.5975
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 5, 6, 11]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 7
cloned = 2
killed = 8
cloned = 3
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[38.92,
 31.935000000000006,
 38.96,
 34.86,
 38.92,
 38.4,
 36.9,
 31.935000000000006,
 38.96,
 34.86,
 38.4,
 36.25,
 36.25,
 36.25]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 36.575
Upper: 36.575
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 7, 9, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 4, 5, 6, 8, 10]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 3
cloned = 4
killed = 7
cloned = 5
killed = 9
cloned = 6
killed = 11
cloned = 8
killed = 12
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 9, 6, 11, 2, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 4, 1, 12, 3, 10, 13]
====================================
cloned = 5
killed = 8
cloned = 4
killed = 7
cloned = 1
killed = 9
cloned = 12
killed = 6
cloned = 3
killed = 11
cloned = 10
killed = 2
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 2, 10, 1, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 5, 11, 9, 6, 0, 13]
====================================
cloned = 8
killed = 7
cloned = 5
killed = 12
cloned = 11
killed = 2
cloned = 9
killed = 10
cloned = 6
killed = 1
cloned = 0
killed = 4
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 0, 7, 2, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 8, 11, 6, 3, 10, 13]
====================================
cloned = 1
killed = 5
cloned = 8
killed = 4
cloned = 11
killed = 0
cloned = 6
killed = 7
cloned = 3
killed = 2
cloned = 10
killed = 12
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 11, 7, 6, 2, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 1, 4, 3, 5, 9, 13]
====================================
cloned = 12
killed = 0
cloned = 1
killed = 11
cloned = 4
killed = 7
cloned = 3
killed = 6
cloned = 5
killed = 2
cloned = 9
killed = 8
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 7, 5, 6, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 0, 12, 2, 8, 3, 13]
====================================
cloned = 1
killed = 4
cloned = 0
killed = 10
cloned = 12
killed = 7
cloned = 2
killed = 5
cloned = 8
killed = 6
cloned = 3
killed = 11
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 6, 1, 9, 3, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 2, 4, 10, 0, 13]
====================================
cloned = 11
killed = 7
cloned = 12
killed = 6
cloned = 2
killed = 1
cloned = 4
killed = 9
cloned = 10
killed = 3
cloned = 0
killed = 5
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 0, 9, 6, 3, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 12, 8, 2, 7, 10, 13]
====================================
cloned = 5
killed = 4
cloned = 12
killed = 0
cloned = 8
killed = 9
cloned = 2
killed = 6
cloned = 7
killed = 3
cloned = 10
killed = 1
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 11, 6, 8, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 12, 7, 10, 4, 9, 13]
====================================
cloned = 5
killed = 2
cloned = 12
killed = 3
cloned = 7
killed = 11
cloned = 10
killed = 6
cloned = 4
killed = 8
cloned = 9
killed = 1
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 0, 11, 5, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 6, 7, 10, 12, 4, 13]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 7
killed = 0
cloned = 10
killed = 11
cloned = 12
killed = 5
cloned = 4
killed = 8
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 12, 10, 7, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 5, 11, 8, 0, 4, 13]
====================================
cloned = 1
killed = 3
cloned = 5
killed = 6
cloned = 11
killed = 12
cloned = 8
killed = 10
cloned = 0
killed = 7
cloned = 4
killed = 9
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 5, 2, 3, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 4, 1, 10, 8, 11, 13]
====================================
cloned = 0
killed = 9
cloned = 4
killed = 12
cloned = 1
killed = 5
cloned = 10
killed = 2
cloned = 8
killed = 3
cloned = 11
killed = 7
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 0, 4, 1, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 9, 5, 10, 12, 11, 13]
====================================
cloned = 8
killed = 3
cloned = 9
killed = 2
cloned = 5
killed = 0
cloned = 10
killed = 4
cloned = 12
killed = 1
cloned = 11
killed = 7
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 5, 9, 12, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 6, 3, 1, 10, 2, 13]
====================================
cloned = 4
killed = 7
cloned = 6
killed = 8
cloned = 3
killed = 5
cloned = 1
killed = 9
cloned = 10
killed = 12
cloned = 2
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 4, 0, 10, 8, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 7, 12, 6, 3, 1, 13]
====================================
cloned = 11
killed = 2
cloned = 7
killed = 9
cloned = 12
killed = 4
cloned = 6
killed = 0
cloned = 3
killed = 10
cloned = 1
killed = 8
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 6, 1, 11, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 8, 9, 3, 7, 13]
====================================
cloned = 10
killed = 0
cloned = 4
killed = 5
cloned = 8
killed = 6
cloned = 9
killed = 1
cloned = 3
killed = 11
cloned = 7
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 2, 9, 1, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 4, 0, 10, 11, 6, 13]
====================================
cloned = 8
killed = 3
cloned = 4
killed = 12
cloned = 0
killed = 2
cloned = 10
killed = 9
cloned = 11
killed = 1
cloned = 6
killed = 5
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 8, 6, 5, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 1, 9, 0, 10, 13]
====================================
cloned = 4
killed = 3
cloned = 7
killed = 11
cloned = 1
killed = 8
cloned = 9
killed = 6
cloned = 0
killed = 5
cloned = 10
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 0, 9, 6, 10, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 11, 2, 4, 5, 7, 13]
====================================
cloned = 1
killed = 8
cloned = 11
killed = 3
cloned = 2
killed = 0
cloned = 4
killed = 9
cloned = 5
killed = 6
cloned = 7
killed = 10
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 10, 12, 0, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 2, 11, 8, 4, 3, 13]
====================================
cloned = 5
killed = 7
cloned = 2
killed = 9
cloned = 11
killed = 10
cloned = 8
killed = 12
cloned = 4
killed = 0
cloned = 3
killed = 6
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 9, 8, 0, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 4, 5, 7, 12, 1, 13]
====================================
cloned = 3
killed = 10
cloned = 4
killed = 6
cloned = 5
killed = 9
cloned = 7
killed = 8
cloned = 12
killed = 0
cloned = 1
killed = 2
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 12, 10, 0, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 1, 4, 11, 9, 13]
====================================
cloned = 8
killed = 3
cloned = 2
killed = 5
cloned = 1
killed = 12
cloned = 4
killed = 10
cloned = 11
killed = 0
cloned = 9
killed = 7
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 7, 3, 2, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 4, 10, 11, 5, 12, 13]
====================================
cloned = 9
killed = 0
cloned = 4
killed = 6
cloned = 10
killed = 7
cloned = 11
killed = 3
cloned = 5
killed = 2
cloned = 12
killed = 8
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 1, 9, 11, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 10, 6, 12, 2, 7, 13]
====================================
cloned = 4
killed = 3
cloned = 10
killed = 0
cloned = 6
killed = 1
cloned = 12
killed = 9
cloned = 2
killed = 11
cloned = 7
killed = 5
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 11, 3, 10, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 7, 2, 0, 4, 6, 13]
====================================
cloned = 12
killed = 1
cloned = 7
killed = 5
cloned = 2
killed = 11
cloned = 0
killed = 3
cloned = 4
killed = 10
cloned = 6
killed = 8
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 1, 2, 9, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 8, 4, 6, 7, 12, 13]
====================================
cloned = 5
killed = 11
cloned = 8
killed = 10
cloned = 4
killed = 1
cloned = 6
killed = 2
cloned = 7
killed = 9
cloned = 12
killed = 0
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 10, 3, 4, 6, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 11, 8, 9, 7, 12, 13]
====================================
cloned = 0
killed = 1
cloned = 11
killed = 5
cloned = 8
killed = 10
cloned = 9
killed = 3
cloned = 7
killed = 4
cloned = 12
killed = 6
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 4, 8, 12, 1, 7, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 5, 0, 9, 10, 6, 13]
====================================
cloned = 11
killed = 2
cloned = 5
killed = 4
cloned = 0
killed = 8
cloned = 9
killed = 12
cloned = 10
killed = 1
cloned = 6
killed = 7
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 9, 10, 4, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 8, 1, 5, 11, 12, 13]
====================================
cloned = 2
killed = 0
cloned = 8
killed = 7
cloned = 1
killed = 9
cloned = 5
killed = 10
cloned = 11
killed = 4
cloned = 12
killed = 6
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 5, 10, 1, 3, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 11, 2, 7, 9, 12, 13]
====================================
cloned = 6
killed = 0
cloned = 11
killed = 4
cloned = 2
killed = 5
cloned = 7
killed = 10
cloned = 9
killed = 1
cloned = 12
killed = 3
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 8, 3, 0, 4, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 7, 1, 12, 10, 11, 13]
====================================
cloned = 9
killed = 5
cloned = 7
killed = 6
cloned = 1
killed = 8
cloned = 12
killed = 3
cloned = 10
killed = 0
cloned = 11
killed = 4
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 8, 4, 2, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 6, 7, 9, 5, 10, 13]
====================================
cloned = 12
killed = 11
cloned = 6
killed = 0
cloned = 7
killed = 8
cloned = 9
killed = 4
cloned = 5
killed = 2
cloned = 10
killed = 3
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 6, 12, 10, 0, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 7, 5, 4, 1, 3, 13]
====================================
cloned = 2
killed = 11
cloned = 7
killed = 6
cloned = 5
killed = 12
cloned = 4
killed = 10
cloned = 1
killed = 0
cloned = 3
killed = 9
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 12, 7, 10, 0, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 11, 4, 8, 5, 1, 13]
====================================
cloned = 9
killed = 3
cloned = 11
killed = 6
cloned = 4
killed = 12
cloned = 8
killed = 7
cloned = 5
killed = 10
cloned = 1
killed = 0
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 1, 0, 6, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 4, 9, 5, 3, 12, 13]
====================================
cloned = 7
killed = 2
cloned = 4
killed = 11
cloned = 9
killed = 1
cloned = 5
killed = 0
cloned = 3
killed = 6
cloned = 12
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 3, 5, 8, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 4, 0, 9, 6, 13]
====================================
cloned = 1
killed = 10
cloned = 12
killed = 7
cloned = 4
killed = 3
cloned = 0
killed = 5
cloned = 9
killed = 8
cloned = 6
killed = 2
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 0, 9, 7, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 3, 1, 6, 2, 5, 13]
====================================
cloned = 12
killed = 10
cloned = 3
killed = 4
cloned = 1
killed = 0
cloned = 6
killed = 9
cloned = 2
killed = 7
cloned = 5
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 0, 2, 9, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 6, 1, 8, 12, 5, 13]
====================================
cloned = 10
killed = 7
cloned = 6
killed = 11
cloned = 1
killed = 0
cloned = 8
killed = 2
cloned = 12
killed = 9
cloned = 5
killed = 3
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 7, 0, 2, 8, 11, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 9, 6, 5, 3, 13]
====================================
cloned = 10
killed = 12
cloned = 4
killed = 7
cloned = 9
killed = 0
cloned = 6
killed = 2
cloned = 5
killed = 8
cloned = 3
killed = 11
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 6, 9, 12, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 8, 5, 11, 4, 7, 13]
====================================
cloned = 10
killed = 3
cloned = 8
killed = 2
cloned = 5
killed = 6
cloned = 11
killed = 9
cloned = 4
killed = 12
cloned = 7
killed = 1
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 6, 12, 3, 7, 4, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 9, 8, 1, 10, 5, 13]
====================================
cloned = 2
killed = 11
cloned = 9
killed = 6
cloned = 8
killed = 12
cloned = 1
killed = 3
cloned = 10
killed = 7
cloned = 5
killed = 4
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 6, 12, 9, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 8, 1, 3, 2, 11, 13]
====================================
cloned = 4
killed = 10
cloned = 8
killed = 7
cloned = 1
killed = 6
cloned = 3
killed = 12
cloned = 2
killed = 9
cloned = 11
killed = 5
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 9, 8, 10, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 0, 1, 6, 5, 13]
====================================
cloned = 7
killed = 11
cloned = 3
killed = 4
cloned = 0
killed = 9
cloned = 1
killed = 8
cloned = 6
killed = 10
cloned = 5
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 11, 3, 5, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 1, 12, 2, 0, 10, 13]
====================================
cloned = 8
killed = 4
cloned = 1
killed = 9
cloned = 12
killed = 11
cloned = 2
killed = 3
cloned = 0
killed = 5
cloned = 10
killed = 7
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 3, 1, 9, 8, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 7, 6, 2, 12, 13]
====================================
cloned = 11
killed = 5
cloned = 4
killed = 10
cloned = 7
killed = 3
cloned = 6
killed = 1
cloned = 2
killed = 9
cloned = 12
killed = 8
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 2, 5, 12, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 0, 10, 1, 4, 8, 13]
====================================
cloned = 3
killed = 6
cloned = 0
killed = 7
cloned = 10
killed = 2
cloned = 1
killed = 5
cloned = 4
killed = 12
cloned = 8
killed = 11
cloned = 13
killed = 9
Trial run 10/seed 865:
..................................................
winner: EvolvedLookerUp2_2_2
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Michaelos: (D,)': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6, 'Evolved FSM 6': 4, 'Tit For Tat': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Tit For Tat': 4, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 6, 'EvolvedLookerUp2_2_2': 6, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Tit For Tat': 4, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6, 'Evolved FSM 6': 4, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 6, 'Tit For Tat': 4, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 6, 'EvolvedLookerUp2_2_2': 6, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved FSM 6': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Evolved FSM 6': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Evolved FSM 6': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Evolved FSM 6': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved FSM 6': 4}),
 Counter({'EvolvedLookerUp2_2_2': 12, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 12, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 14})]
--------------------------------------------------
Score:
[[36.120000000000005,
  33.81,
  36.235,
  34.084999999999994,
  33.504999999999995,
  36.315,
  34.32,
  26.359999999999996,
  31.17,
  20.270000000000003,
  32.489999999999995,
  33.69,
  29.745,
  33.405],
 [38.92,
  31.935000000000006,
  38.96,
  34.86,
  38.92,
  38.4,
  36.9,
  31.935000000000006,
  38.96,
  34.86,
  38.4,
  36.25,
  36.25,
  36.25],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.27,
 33.835,
 36.254999999999995,
 33.815,
 33.68,
 35.955,
 35.905,
 26.199999999999996,
 31.215000000000003,
 21.24,
 33.0,
 33.55,
 32.035,
 33.269999999999996]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.614999999999995
Upper: 33.614999999999995
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 4, 5, 6]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[38.92,
 35.79,
 38.96,
 34.86,
 38.394999999999996,
 38.400000000000006,
 36.575,
 38.92,
 34.675,
 38.96,
 34.86,
 38.25,
 38.4,
 37.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.3225
Upper: 38.3225
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 6, 8, 10, 11, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 4, 5, 7, 9, 12]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 3
cloned = 4
killed = 6
cloned = 5
killed = 8
cloned = 7
killed = 10
cloned = 9
killed = 11
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 5, 11, 0, 1, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 3, 6, 8, 2, 13]
====================================
cloned = 4
killed = 9
cloned = 7
killed = 12
cloned = 3
killed = 5
cloned = 6
killed = 11
cloned = 8
killed = 0
cloned = 2
killed = 1
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 1, 6, 10, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 9, 4, 11, 3, 12, 13]
====================================
cloned = 0
killed = 8
cloned = 9
killed = 2
cloned = 4
killed = 1
cloned = 11
killed = 6
cloned = 3
killed = 10
cloned = 12
killed = 5
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 11, 4, 3, 0, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 8, 2, 6, 10, 9, 13]
====================================
cloned = 5
killed = 1
cloned = 8
killed = 12
cloned = 2
killed = 11
cloned = 6
killed = 4
cloned = 10
killed = 3
cloned = 9
killed = 0
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 4, 3, 1, 0, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 12, 5, 8, 10, 13]
====================================
cloned = 7
killed = 9
cloned = 6
killed = 11
cloned = 12
killed = 4
cloned = 5
killed = 3
cloned = 8
killed = 1
cloned = 10
killed = 0
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 11, 7, 9, 5, 2, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 1, 8, 3, 4, 12, 13]
====================================
cloned = 6
killed = 0
cloned = 1
killed = 11
cloned = 8
killed = 7
cloned = 3
killed = 9
cloned = 4
killed = 5
cloned = 12
killed = 2
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 5, 6, 1, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 4, 9, 10, 12, 8, 13]
====================================
cloned = 0
killed = 7
cloned = 4
killed = 11
cloned = 9
killed = 5
cloned = 10
killed = 6
cloned = 12
killed = 1
cloned = 8
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 4, 0, 12, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 1, 6, 7, 8, 2, 13]
====================================
cloned = 3
killed = 9
cloned = 1
killed = 10
cloned = 6
killed = 4
cloned = 7
killed = 0
cloned = 8
killed = 12
cloned = 2
killed = 5
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 1, 5, 3, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 6, 2, 11, 4, 9, 13]
====================================
cloned = 8
killed = 7
cloned = 6
killed = 12
cloned = 2
killed = 1
cloned = 11
killed = 5
cloned = 4
killed = 3
cloned = 9
killed = 0
cloned = 13
killed = 10
Trial run 11/seed 866:
..................................................
winner: EvolvedLookerUp2_2_2
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved HMM 5': 2}),
 Counter({'EvolvedLookerUp2_2_2': 4,
          'Tit For Tat': 4,
          'Evolved HMM 5': 4,
          'Evolved FSM 6': 2}),
 Counter({'Evolved HMM 5': 6,
          'EvolvedLookerUp2_2_2': 4,
          'Tit For Tat': 2,
          'Evolved FSM 6': 2}),
 Counter({'Evolved HMM 5': 6,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2}),
 Counter({'EvolvedLookerUp2_2_2': 8,
          'Tit For Tat': 2,
          'Evolved FSM 6': 2,
          'Evolved HMM 5': 2}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved HMM 5': 2, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Evolved HMM 5': 2, 'Evolved FSM 6': 2}),
 Counter({'EvolvedLookerUp2_2_2': 12, 'Evolved HMM 5': 2}),
 Counter({'EvolvedLookerUp2_2_2': 14})]
--------------------------------------------------
Score:
[[36.27,
  33.835,
  36.254999999999995,
  33.815,
  33.68,
  35.955,
  35.905,
  26.199999999999996,
  31.215000000000003,
  21.24,
  33.0,
  33.55,
  32.035,
  33.269999999999996],
 [38.92,
  35.79,
  38.96,
  34.86,
  38.394999999999996,
  38.400000000000006,
  36.575,
  38.92,
  34.675,
  38.96,
  34.86,
  38.25,
  38.4,
  37.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.050000000000004,
 33.150000000000006,
 36.29,
 33.825,
 34.025,
 36.09,
 33.63,
 25.799999999999997,
 31.065,
 19.2,
 32.805,
 33.769999999999996,
 30.650000000000002,
 33.42]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.525000000000006
Upper: 33.525000000000006
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 8, 4, 7, 5, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 10, 12, 11, 0, 6, 13]
====================================
cloned = 1
killed = 9
cloned = 10
killed = 8
cloned = 12
killed = 4
cloned = 11
killed = 7
cloned = 0
killed = 5
cloned = 6
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 2, 6, 10, 9, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 3, 0, 7, 8, 13]
====================================
cloned = 1
killed = 11
cloned = 12
killed = 5
cloned = 3
killed = 2
cloned = 0
killed = 6
cloned = 7
killed = 10
cloned = 8
killed = 9
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 0, 4, 8, 7, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 6, 1, 9, 10, 5, 13]
====================================
cloned = 3
killed = 12
cloned = 6
killed = 0
cloned = 1
killed = 4
cloned = 9
killed = 8
cloned = 10
killed = 7
cloned = 5
killed = 2
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 9, 10, 11, 8, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 0, 3, 1, 12, 7, 13]
====================================
cloned = 4
killed = 6
cloned = 0
killed = 2
cloned = 3
killed = 9
cloned = 1
killed = 10
cloned = 12
killed = 11
cloned = 7
killed = 8
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 3, 8, 1, 10, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 7, 12, 9, 0, 4, 13]
====================================
cloned = 6
killed = 11
cloned = 7
killed = 5
cloned = 12
killed = 3
cloned = 9
killed = 8
cloned = 0
killed = 1
cloned = 4
killed = 10
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 5, 9, 7, 4, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 1, 12, 3, 6, 13]
====================================
cloned = 8
killed = 0
cloned = 2
killed = 10
cloned = 1
killed = 5
cloned = 12
killed = 9
cloned = 3
killed = 7
cloned = 6
killed = 4
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 0, 2, 4, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 10, 3, 5, 1, 13]
====================================
cloned = 7
killed = 12
cloned = 9
killed = 6
cloned = 10
killed = 0
cloned = 3
killed = 2
cloned = 5
killed = 4
cloned = 1
killed = 8
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 0, 6, 7, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 11, 9, 8, 5, 13]
====================================
cloned = 4
killed = 12
cloned = 3
killed = 10
cloned = 11
killed = 0
cloned = 9
killed = 6
cloned = 8
killed = 7
cloned = 5
killed = 2
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 9, 5, 12, 11, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 7, 2, 0, 4, 10, 13]
====================================
cloned = 8
killed = 6
cloned = 7
killed = 3
cloned = 2
killed = 9
cloned = 0
killed = 5
cloned = 4
killed = 12
cloned = 10
killed = 11
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 5, 11, 4, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 6, 10, 9, 7, 8, 13]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 0
cloned = 10
killed = 5
cloned = 9
killed = 11
cloned = 7
killed = 4
cloned = 8
killed = 3
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 7, 11, 1, 3, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 0, 2, 6, 8, 10, 13]
====================================
cloned = 12
killed = 4
cloned = 0
killed = 9
cloned = 2
killed = 7
cloned = 6
killed = 11
cloned = 8
killed = 1
cloned = 10
killed = 3
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 11, 2, 12, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 0, 9, 8, 6, 10, 13]
====================================
cloned = 1
killed = 7
cloned = 0
killed = 4
cloned = 9
killed = 11
cloned = 8
killed = 2
cloned = 6
killed = 12
cloned = 10
killed = 5
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 7, 4, 9, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 5, 11, 1, 0, 3, 13]
====================================
cloned = 12
killed = 2
cloned = 5
killed = 8
cloned = 11
killed = 7
cloned = 1
killed = 4
cloned = 0
killed = 9
cloned = 3
killed = 6
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 0, 6, 9, 5, 7, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 11, 1, 8, 10, 2, 13]
====================================
cloned = 4
killed = 12
cloned = 11
killed = 0
cloned = 1
killed = 6
cloned = 8
killed = 9
cloned = 10
killed = 5
cloned = 2
killed = 7
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 7, 11, 2, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 10, 1, 4, 0, 3, 13]
====================================
cloned = 5
killed = 12
cloned = 10
killed = 6
cloned = 1
killed = 7
cloned = 4
killed = 11
cloned = 0
killed = 2
cloned = 3
killed = 9
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 5, 6, 8, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 10, 2, 4, 11, 3, 13]
====================================
cloned = 0
killed = 1
cloned = 10
killed = 12
cloned = 2
killed = 5
cloned = 4
killed = 6
cloned = 11
killed = 8
cloned = 3
killed = 7
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 10, 0, 4, 5, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 1, 6, 2, 3, 9, 13]
====================================
cloned = 11
killed = 8
cloned = 1
killed = 10
cloned = 6
killed = 0
cloned = 2
killed = 4
cloned = 3
killed = 5
cloned = 9
killed = 7
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 4, 6, 12, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 7, 3, 1, 10, 13]
====================================
cloned = 8
killed = 5
cloned = 2
killed = 9
cloned = 7
killed = 4
cloned = 3
killed = 6
cloned = 1
killed = 12
cloned = 10
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 3, 1, 5, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 11, 9, 12, 0, 8, 13]
====================================
cloned = 7
killed = 2
cloned = 11
killed = 10
cloned = 9
killed = 3
cloned = 12
killed = 1
cloned = 0
killed = 5
cloned = 8
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 12, 3, 4, 11, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 5, 9, 2, 10, 0, 13]
====================================
cloned = 1
killed = 7
cloned = 5
killed = 8
cloned = 9
killed = 12
cloned = 2
killed = 3
cloned = 10
killed = 4
cloned = 0
killed = 11
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 9, 2, 12, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 0, 11, 10, 5, 4, 13]
====================================
cloned = 8
killed = 6
cloned = 0
killed = 3
cloned = 11
killed = 9
cloned = 10
killed = 2
cloned = 5
killed = 12
cloned = 4
killed = 1
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 2, 9, 6, 1, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 12, 8, 5, 0, 11, 13]
====================================
cloned = 7
killed = 10
cloned = 12
killed = 4
cloned = 8
killed = 2
cloned = 5
killed = 9
cloned = 0
killed = 6
cloned = 11
killed = 1
cloned = 13
killed = 3
Trial run 12/seed 867:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Evolved FSM 6': 4,
          'Grudger': 4,
          'Michaelos: (D,)': 4,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved FSM 6': 4,
          'Michaelos: (D,)': 4,
          'Grudger': 4,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved FSM 6': 4,
          'Michaelos: (D,)': 4,
          'Grudger': 4,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Evolved FSM 6': 6, 'Michaelos: (D,)': 4, 'Grudger': 4}),
 Counter({'Evolved FSM 6': 6, 'Grudger': 4, 'Michaelos: (D,)': 4}),
 Counter({'Michaelos: (D,)': 6, 'Evolved FSM 6': 4, 'Grudger': 4}),
 Counter({'Michaelos: (D,)': 6, 'Grudger': 4, 'Evolved FSM 6': 4}),
 Counter({'Evolved FSM 6': 6, 'Grudger': 4, 'Michaelos: (D,)': 4}),
 Counter({'Evolved FSM 6': 8, 'Grudger': 4, 'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 10, 'Michaelos: (D,)': 2, 'Grudger': 2}),
 Counter({'Evolved FSM 6': 8, 'Grudger': 4, 'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 10, 'Grudger': 2, 'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 8, 'Grudger': 4, 'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 8, 'Grudger': 4, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 8, 'Evolved FSM 6': 6}),
 Counter({'Evolved FSM 6': 8, 'Grudger': 6}),
 Counter({'Evolved FSM 6': 8, 'Grudger': 6}),
 Counter({'Evolved FSM 6': 8, 'Grudger': 6}),
 Counter({'Evolved FSM 6': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'Evolved FSM 6': 6}),
 Counter({'Grudger': 10, 'Evolved FSM 6': 4}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.050000000000004,
  33.150000000000006,
  36.29,
  33.825,
  34.025,
  36.09,
  33.63,
  25.799999999999997,
  31.065,
  19.2,
  32.805,
  33.769999999999996,
  30.650000000000002,
  33.42],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.37500000000001,
 33.24,
 36.24,
 34.035,
 33.71,
 36.099999999999994,
 35.39,
 26.539999999999996,
 31.095000000000002,
 18.480000000000004,
 32.620000000000005,
 33.529999999999994,
 32.695,
 33.415]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.4725
Upper: 33.4725
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 5, 1, 0, 11, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 9, 4, 12, 8, 7, 13]
====================================
cloned = 2
killed = 6
cloned = 9
killed = 10
cloned = 4
killed = 5
cloned = 12
killed = 1
cloned = 8
killed = 0
cloned = 7
killed = 11
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 12, 6, 0, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 11, 10, 4, 2, 13]
====================================
cloned = 5
killed = 7
cloned = 3
killed = 8
cloned = 11
killed = 9
cloned = 10
killed = 12
cloned = 4
killed = 6
cloned = 2
killed = 0
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 0, 11, 3, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 10, 5, 1, 7, 13]
====================================
cloned = 8
killed = 9
cloned = 2
killed = 12
cloned = 10
killed = 0
cloned = 5
killed = 11
cloned = 1
killed = 3
cloned = 7
killed = 6
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 0, 12, 7, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 4, 2, 10, 11, 9, 13]
====================================
cloned = 5
killed = 3
cloned = 4
killed = 6
cloned = 2
killed = 0
cloned = 10
killed = 12
cloned = 11
killed = 7
cloned = 9
killed = 1
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 5, 0, 9, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 11, 7, 12, 1, 10, 13]
====================================
cloned = 3
killed = 6
cloned = 11
killed = 4
cloned = 7
killed = 5
cloned = 12
killed = 0
cloned = 1
killed = 9
cloned = 10
killed = 8
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 12, 8, 6, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 10, 11, 0, 3, 2, 13]
====================================
cloned = 9
killed = 1
cloned = 10
killed = 5
cloned = 11
killed = 12
cloned = 0
killed = 8
cloned = 3
killed = 6
cloned = 2
killed = 7
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 4, 6, 9, 3, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 0, 5, 8, 2, 1, 13]
====================================
cloned = 12
killed = 7
cloned = 0
killed = 10
cloned = 5
killed = 4
cloned = 8
killed = 6
cloned = 2
killed = 9
cloned = 1
killed = 3
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 8, 10, 12, 7, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 2, 6, 11, 0, 1, 13]
====================================
cloned = 5
killed = 9
cloned = 2
killed = 8
cloned = 6
killed = 10
cloned = 11
killed = 12
cloned = 0
killed = 7
cloned = 1
killed = 4
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 9, 6, 1, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 12, 10, 0, 4, 2, 13]
====================================
cloned = 3
killed = 8
cloned = 12
killed = 7
cloned = 10
killed = 9
cloned = 0
killed = 6
cloned = 4
killed = 1
cloned = 2
killed = 5
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 9, 1, 7, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 0, 3, 2, 11, 8, 13]
====================================
cloned = 4
killed = 10
cloned = 0
killed = 6
cloned = 3
killed = 9
cloned = 2
killed = 1
cloned = 11
killed = 7
cloned = 8
killed = 12
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 3, 4, 9, 12, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 11, 2, 7, 6, 10, 13]
====================================
cloned = 1
killed = 0
cloned = 11
killed = 5
cloned = 2
killed = 3
cloned = 7
killed = 4
cloned = 6
killed = 9
cloned = 10
killed = 12
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 3, 10, 5, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 0, 11, 8, 4, 12, 13]
====================================
cloned = 7
killed = 1
cloned = 0
killed = 2
cloned = 11
killed = 3
cloned = 8
killed = 10
cloned = 4
killed = 5
cloned = 12
killed = 9
cloned = 13
killed = 6
Trial run 13/seed 868:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Tit For Tat': 4,
          'Evolved HMM 5': 4,
          'Evolved FSM 16': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Evolved HMM 5': 6, 'Tit For Tat': 4, 'Grudger': 4}),
 Counter({'Evolved HMM 5': 6, 'Grudger': 6, 'Tit For Tat': 2}),
 Counter({'Grudger': 6, 'Evolved HMM 5': 6, 'Tit For Tat': 2}),
 Counter({'Evolved HMM 5': 10, 'Grudger': 4}),
 Counter({'Evolved HMM 5': 8, 'Grudger': 6}),
 Counter({'Evolved HMM 5': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'Evolved HMM 5': 6}),
 Counter({'Grudger': 10, 'Evolved HMM 5': 4}),
 Counter({'Grudger': 12, 'Evolved HMM 5': 2}),
 Counter({'Grudger': 12, 'Evolved HMM 5': 2}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.37500000000001,
  33.24,
  36.24,
  34.035,
  33.71,
  36.099999999999994,
  35.39,
  26.539999999999996,
  31.095000000000002,
  18.480000000000004,
  32.620000000000005,
  33.529999999999994,
  32.695,
  33.415],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.225,
 33.27,
 36.265,
 33.985,
 33.735,
 35.555,
 35.57,
 26.139999999999997,
 31.005000000000003,
 21.65,
 32.625,
 33.55,
 31.790000000000003,
 33.345]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.4475
Upper: 33.4475
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 9, 10, 1, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 12, 8, 3, 6, 2, 13]
====================================
cloned = 7
killed = 5
cloned = 12
killed = 4
cloned = 8
killed = 9
cloned = 3
killed = 10
cloned = 6
killed = 1
cloned = 2
killed = 0
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 7, 3, 11, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 4, 6, 0, 8, 5, 13]
====================================
cloned = 1
killed = 10
cloned = 4
killed = 9
cloned = 6
killed = 7
cloned = 0
killed = 3
cloned = 8
killed = 11
cloned = 5
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 10, 2, 4, 12, 1, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 6, 5, 0, 11, 13]
====================================
cloned = 7
killed = 8
cloned = 9
killed = 10
cloned = 6
killed = 2
cloned = 5
killed = 4
cloned = 0
killed = 12
cloned = 11
killed = 1
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 6, 10, 11, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 4, 5, 2, 3, 0, 13]
====================================
cloned = 7
killed = 12
cloned = 4
killed = 9
cloned = 5
killed = 6
cloned = 2
killed = 10
cloned = 3
killed = 11
cloned = 0
killed = 8
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 12, 9, 11, 4, 2, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 3, 8, 1, 0, 7, 13]
====================================
cloned = 6
killed = 5
cloned = 3
killed = 12
cloned = 8
killed = 9
cloned = 1
killed = 11
cloned = 0
killed = 4
cloned = 7
killed = 2
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 9, 6, 0, 12, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 4, 10, 1, 11, 2, 13]
====================================
cloned = 8
killed = 3
cloned = 4
killed = 9
cloned = 10
killed = 6
cloned = 1
killed = 0
cloned = 11
killed = 12
cloned = 2
killed = 5
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 6, 4, 9, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 12, 3, 11, 1, 10, 13]
====================================
cloned = 2
killed = 5
cloned = 12
killed = 0
cloned = 3
killed = 6
cloned = 11
killed = 4
cloned = 1
killed = 9
cloned = 10
killed = 8
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 3, 8, 0, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 1, 5, 7, 11, 9, 13]
====================================
cloned = 2
killed = 12
cloned = 1
killed = 10
cloned = 5
killed = 3
cloned = 7
killed = 8
cloned = 11
killed = 0
cloned = 9
killed = 4
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 8, 2, 1, 5, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 3, 12, 7, 10, 6, 13]
====================================
cloned = 0
killed = 11
cloned = 3
killed = 9
cloned = 12
killed = 8
cloned = 7
killed = 2
cloned = 10
killed = 1
cloned = 6
killed = 5
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 3, 5, 12, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 1, 6, 10, 11, 13]
====================================
cloned = 4
killed = 9
cloned = 7
killed = 0
cloned = 1
killed = 3
cloned = 6
killed = 5
cloned = 10
killed = 12
cloned = 11
killed = 8
cloned = 13
killed = 2
Trial run 14/seed 869:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Tit For Tat': 4,
          'Michaelos: (D,)': 4,
          'Evolved FSM 16': 4,
          'Grudger': 2}),
 Counter({'Michaelos: (D,)': 6,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Grudger': 2}),
 Counter({'Michaelos: (D,)': 6,
          'Tit For Tat': 4,
          'Evolved FSM 16': 2,
          'Grudger': 2}),
 Counter({'Tit For Tat': 6, 'Grudger': 4, 'Michaelos: (D,)': 4}),
 Counter({'Tit For Tat': 6, 'Grudger': 6, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 8, 'Tit For Tat': 4, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 2, 'Tit For Tat': 2}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.225,
  33.27,
  36.265,
  33.985,
  33.735,
  35.555,
  35.57,
  26.139999999999997,
  31.005000000000003,
  21.65,
  32.625,
  33.55,
  31.790000000000003,
  33.345],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.09,
 33.34,
 36.26,
 34.045,
 33.755,
 35.849999999999994,
 35.625,
 25.979999999999997,
 30.900000000000002,
 21.39,
 32.89,
 33.55,
 32.059999999999995,
 33.31]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.445
Upper: 33.445
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 2, 9, 8, 3, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 6, 10, 12, 0, 13]
====================================
cloned = 4
killed = 5
cloned = 7
killed = 1
cloned = 6
killed = 2
cloned = 10
killed = 9
cloned = 12
killed = 8
cloned = 0
killed = 3
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 8, 7, 5, 0, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 4, 6, 1, 12, 3, 13]
====================================
cloned = 10
killed = 9
cloned = 4
killed = 11
cloned = 6
killed = 8
cloned = 1
killed = 7
cloned = 12
killed = 5
cloned = 3
killed = 0
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 8, 4, 7, 6, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 12, 5, 11, 10, 9, 13]
====================================
cloned = 2
killed = 0
cloned = 12
killed = 8
cloned = 5
killed = 4
cloned = 11
killed = 7
cloned = 10
killed = 6
cloned = 9
killed = 3
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 11, 8, 6, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 1, 12, 10, 7, 4, 13]
====================================
cloned = 0
killed = 3
cloned = 1
killed = 5
cloned = 12
killed = 11
cloned = 10
killed = 8
cloned = 7
killed = 6
cloned = 4
killed = 9
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 3, 6, 4, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 10, 9, 11, 0, 2, 13]
====================================
cloned = 1
killed = 12
cloned = 10
killed = 8
cloned = 9
killed = 3
cloned = 11
killed = 6
cloned = 0
killed = 4
cloned = 2
killed = 7
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 11, 6, 3, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 8, 5, 7, 0, 9, 13]
====================================
cloned = 10
killed = 2
cloned = 8
killed = 12
cloned = 5
killed = 11
cloned = 7
killed = 6
cloned = 0
killed = 3
cloned = 9
killed = 4
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 5, 8, 6, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 4, 7, 0, 10, 9, 13]
====================================
cloned = 3
killed = 1
cloned = 4
killed = 12
cloned = 7
killed = 5
cloned = 0
killed = 8
cloned = 10
killed = 6
cloned = 9
killed = 11
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 4, 1, 3, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 5, 7, 0, 8, 9, 13]
====================================
cloned = 10
killed = 11
cloned = 5
killed = 12
cloned = 7
killed = 4
cloned = 0
killed = 1
cloned = 8
killed = 3
cloned = 9
killed = 2
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 11, 0, 4, 2, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 7, 9, 12, 3, 5, 13]
====================================
cloned = 6
killed = 10
cloned = 7
killed = 1
cloned = 9
killed = 11
cloned = 12
killed = 0
cloned = 3
killed = 4
cloned = 5
killed = 2
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 0, 5, 9, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 1, 7, 6, 11, 8, 13]
====================================
cloned = 12
killed = 10
cloned = 1
killed = 3
cloned = 7
killed = 0
cloned = 6
killed = 5
cloned = 11
killed = 9
cloned = 8
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 2, 6, 9, 0, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 4, 3, 12, 10, 11, 13]
====================================
cloned = 5
killed = 7
cloned = 4
killed = 8
cloned = 3
killed = 2
cloned = 12
killed = 6
cloned = 10
killed = 9
cloned = 11
killed = 0
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 11, 4, 8, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 0, 12, 2, 10, 13]
====================================
cloned = 5
killed = 7
cloned = 3
killed = 1
cloned = 0
killed = 11
cloned = 12
killed = 4
cloned = 2
killed = 8
cloned = 10
killed = 9
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 10, 6, 1, 8, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 3, 7, 5, 11, 0, 13]
====================================
cloned = 4
killed = 9
cloned = 3
killed = 2
cloned = 7
killed = 10
cloned = 5
killed = 6
cloned = 11
killed = 1
cloned = 0
killed = 8
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 0, 11, 9, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 3, 4, 6, 1, 10, 13]
====================================
cloned = 8
killed = 2
cloned = 3
killed = 12
cloned = 4
killed = 0
cloned = 6
killed = 11
cloned = 1
killed = 9
cloned = 10
killed = 5
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 0, 12, 11, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 6, 2, 1, 9, 3, 13]
====================================
cloned = 5
killed = 4
cloned = 6
killed = 10
cloned = 2
killed = 0
cloned = 1
killed = 12
cloned = 9
killed = 11
cloned = 3
killed = 8
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 7, 9, 12, 6, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 11, 1, 10, 3, 2, 13]
====================================
cloned = 8
killed = 5
cloned = 11
killed = 4
cloned = 1
killed = 7
cloned = 10
killed = 9
cloned = 3
killed = 12
cloned = 2
killed = 6
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 2, 11, 7, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 4, 8, 12, 1, 6, 13]
====================================
cloned = 0
killed = 5
cloned = 4
killed = 3
cloned = 8
killed = 2
cloned = 12
killed = 11
cloned = 1
killed = 7
cloned = 6
killed = 9
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 7, 5, 4, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 6, 11, 12, 2, 9, 13]
====================================
cloned = 1
killed = 3
cloned = 6
killed = 8
cloned = 11
killed = 7
cloned = 12
killed = 5
cloned = 2
killed = 4
cloned = 9
killed = 10
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 12, 11, 0, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 6, 2, 1, 4, 8, 13]
====================================
cloned = 9
killed = 3
cloned = 6
killed = 10
cloned = 2
killed = 12
cloned = 1
killed = 11
cloned = 4
killed = 0
cloned = 8
killed = 7
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 8, 12, 7, 3, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 0, 4, 2, 5, 1, 13]
====================================
cloned = 11
killed = 6
cloned = 0
killed = 9
cloned = 4
killed = 8
cloned = 2
killed = 12
cloned = 5
killed = 7
cloned = 1
killed = 3
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 1, 7, 2, 4, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 0, 9, 6, 12, 3, 13]
====================================
cloned = 5
killed = 11
cloned = 0
killed = 10
cloned = 9
killed = 1
cloned = 6
killed = 7
cloned = 12
killed = 2
cloned = 3
killed = 4
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 0, 10, 2, 7, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 5, 9, 12, 4, 3, 13]
====================================
cloned = 8
killed = 1
cloned = 5
killed = 6
cloned = 9
killed = 0
cloned = 12
killed = 10
cloned = 4
killed = 2
cloned = 3
killed = 7
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 1, 10, 2, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 6, 0, 12, 5, 8, 13]
====================================
cloned = 4
killed = 3
cloned = 6
killed = 7
cloned = 0
killed = 1
cloned = 12
killed = 10
cloned = 5
killed = 2
cloned = 8
killed = 11
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 4, 8, 10, 11, 0, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 2, 1, 7, 6, 3, 13]
====================================
cloned = 9
killed = 12
cloned = 2
killed = 4
cloned = 1
killed = 8
cloned = 7
killed = 10
cloned = 6
killed = 11
cloned = 3
killed = 0
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 11, 8, 6, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 10, 1, 5, 2, 13]
====================================
cloned = 4
killed = 12
cloned = 7
killed = 9
cloned = 10
killed = 11
cloned = 1
killed = 8
cloned = 5
killed = 6
cloned = 2
killed = 3
cloned = 13
killed = 0
Trial run 15/seed 870:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Grudger': 2}),
 Counter({'Michaelos: (D,)': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Grudger': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Michaelos: (D,)': 4,
          'Evolved HMM 5': 2}),
 Counter({'Grudger': 6,
          'Michaelos: (D,)': 4,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 4, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 4, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 4, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 2, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.09,
  33.34,
  36.26,
  34.045,
  33.755,
  35.849999999999994,
  35.625,
  25.979999999999997,
  30.900000000000002,
  21.39,
  32.89,
  33.55,
  32.059999999999995,
  33.31],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.28,
 33.335,
 36.185,
 34.129999999999995,
 34.01,
 35.745000000000005,
 35.6,
 26.119999999999997,
 31.095000000000002,
 19.345000000000002,
 32.65,
 33.60999999999999,
 32.875,
 33.42999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.519999999999996
Upper: 33.519999999999996
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 7, 8, 1, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 2, 12, 9, 3, 10, 13]
====================================
cloned = 6
killed = 11
cloned = 2
killed = 5
cloned = 12
killed = 7
cloned = 9
killed = 8
cloned = 3
killed = 1
cloned = 10
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 0, 5, 11, 7, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 4, 1, 9, 3, 13]
====================================
cloned = 6
killed = 2
cloned = 12
killed = 0
cloned = 4
killed = 5
cloned = 1
killed = 11
cloned = 9
killed = 7
cloned = 3
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 5, 4, 11, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 10, 8, 6, 12, 1, 13]
====================================
cloned = 0
killed = 7
cloned = 10
killed = 2
cloned = 8
killed = 5
cloned = 6
killed = 4
cloned = 12
killed = 11
cloned = 1
killed = 9
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 10, 8, 5, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 0, 4, 7, 3, 6, 13]
====================================
cloned = 9
killed = 2
cloned = 0
killed = 11
cloned = 4
killed = 10
cloned = 7
killed = 8
cloned = 3
killed = 5
cloned = 6
killed = 12
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 9, 1, 4, 0, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 5, 2, 11, 6, 7, 13]
====================================
cloned = 12
killed = 3
cloned = 5
killed = 9
cloned = 2
killed = 1
cloned = 11
killed = 4
cloned = 6
killed = 0
cloned = 7
killed = 8
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 4, 1, 8, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 3, 10, 6, 9, 11, 13]
====================================
cloned = 0
killed = 5
cloned = 3
killed = 7
cloned = 10
killed = 4
cloned = 6
killed = 1
cloned = 9
killed = 8
cloned = 11
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 12, 5, 11, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 3, 6, 1, 10, 9, 13]
====================================
cloned = 8
killed = 2
cloned = 3
killed = 7
cloned = 6
killed = 12
cloned = 1
killed = 5
cloned = 10
killed = 11
cloned = 9
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 0, 2, 4, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 10, 6, 5, 11, 7, 13]
====================================
cloned = 3
killed = 12
cloned = 10
killed = 9
cloned = 6
killed = 0
cloned = 5
killed = 2
cloned = 11
killed = 4
cloned = 7
killed = 1
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 9, 4, 5, 8, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 0, 2, 1, 11, 10, 13]
====================================
cloned = 12
killed = 3
cloned = 0
killed = 9
cloned = 2
killed = 4
cloned = 1
killed = 5
cloned = 11
killed = 8
cloned = 10
killed = 6
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 6, 4, 5, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 7, 9, 3, 1, 11, 13]
====================================
cloned = 2
killed = 10
cloned = 7
killed = 8
cloned = 9
killed = 6
cloned = 3
killed = 4
cloned = 1
killed = 5
cloned = 11
killed = 0
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 0, 5, 12, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 4, 2, 8, 9, 1, 13]
====================================
cloned = 7
killed = 11
cloned = 4
killed = 3
cloned = 2
killed = 0
cloned = 8
killed = 5
cloned = 9
killed = 12
cloned = 1
killed = 6
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 5, 11, 12, 0, 3, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 4, 2, 1, 10, 13]
====================================
cloned = 7
killed = 9
cloned = 6
killed = 5
cloned = 4
killed = 11
cloned = 2
killed = 12
cloned = 1
killed = 0
cloned = 10
killed = 3
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 0, 10, 2, 3, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 4, 7, 8, 12, 11, 13]
====================================
cloned = 6
killed = 9
cloned = 4
killed = 1
cloned = 7
killed = 0
cloned = 8
killed = 10
cloned = 12
killed = 2
cloned = 11
killed = 3
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 11, 8, 7, 5, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 0, 6, 10, 2, 9, 13]
====================================
cloned = 1
killed = 3
cloned = 0
killed = 12
cloned = 6
killed = 11
cloned = 10
killed = 8
cloned = 2
killed = 7
cloned = 9
killed = 5
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 11, 12, 8, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 0, 10, 4, 6, 13]
====================================
cloned = 7
killed = 2
cloned = 9
killed = 3
cloned = 0
killed = 11
cloned = 10
killed = 12
cloned = 4
killed = 8
cloned = 6
killed = 1
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 5, 4, 9, 2, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 10, 12, 8, 11, 0, 13]
====================================
cloned = 3
killed = 7
cloned = 10
killed = 5
cloned = 12
killed = 4
cloned = 8
killed = 9
cloned = 11
killed = 2
cloned = 0
killed = 6
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 8, 0, 6, 11, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 12, 1, 7, 2, 3, 13]
====================================
cloned = 4
killed = 9
cloned = 12
killed = 10
cloned = 1
killed = 8
cloned = 7
killed = 0
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 2, 8, 7, 0, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 11, 4, 12, 5, 6, 13]
====================================
cloned = 10
killed = 3
cloned = 11
killed = 1
cloned = 4
killed = 2
cloned = 12
killed = 8
cloned = 5
killed = 7
cloned = 6
killed = 0
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 0, 2, 3, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 1, 7, 9, 5, 13]
====================================
cloned = 11
killed = 12
cloned = 4
killed = 8
cloned = 1
killed = 0
cloned = 7
killed = 2
cloned = 9
killed = 3
cloned = 5
killed = 6
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 4, 6, 9, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 7, 11, 5, 3, 2, 13]
====================================
cloned = 8
killed = 10
cloned = 7
killed = 12
cloned = 11
killed = 4
cloned = 5
killed = 6
cloned = 3
killed = 9
cloned = 2
killed = 1
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 6, 7, 9, 5, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 11, 10, 4, 1, 2, 13]
====================================
cloned = 12
killed = 8
cloned = 11
killed = 6
cloned = 10
killed = 7
cloned = 4
killed = 9
cloned = 1
killed = 5
cloned = 2
killed = 0
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 2, 10, 4, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 3, 6, 1, 8, 9, 13]
====================================
cloned = 11
killed = 5
cloned = 3
killed = 0
cloned = 6
killed = 2
cloned = 1
killed = 10
cloned = 8
killed = 4
cloned = 9
killed = 7
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 8, 7, 0, 3, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 6, 2, 1, 12, 11, 13]
====================================
cloned = 10
killed = 4
cloned = 6
killed = 9
cloned = 2
killed = 8
cloned = 1
killed = 7
cloned = 12
killed = 0
cloned = 11
killed = 3
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 7, 4, 3, 6, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 2, 12, 8, 1, 9, 13]
====================================
cloned = 10
killed = 11
cloned = 2
killed = 0
cloned = 12
killed = 7
cloned = 8
killed = 4
cloned = 1
killed = 3
cloned = 9
killed = 6
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 11, 12, 4, 8, 6, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 7, 3, 1, 2, 10, 13]
====================================
cloned = 9
killed = 0
cloned = 7
killed = 11
cloned = 3
killed = 12
cloned = 1
killed = 4
cloned = 2
killed = 8
cloned = 10
killed = 6
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 1, 8, 0, 11, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 12, 4, 9, 10, 3, 13]
====================================
cloned = 7
killed = 2
cloned = 12
killed = 5
cloned = 4
killed = 1
cloned = 9
killed = 8
cloned = 10
killed = 0
cloned = 3
killed = 11
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 6, 4, 5, 0, 2, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 11, 10, 3, 9, 1, 13]
====================================
cloned = 12
killed = 7
cloned = 11
killed = 6
cloned = 10
killed = 4
cloned = 3
killed = 5
cloned = 9
killed = 0
cloned = 1
killed = 2
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 0, 9, 1, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 12, 5, 8, 2, 11, 13]
====================================
cloned = 4
killed = 10
cloned = 12
killed = 7
cloned = 5
killed = 0
cloned = 8
killed = 9
cloned = 2
killed = 1
cloned = 11
killed = 6
cloned = 13
killed = 3
Trial run 16/seed 871:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Michaelos: (D,)': 4,
          'EvolvedLookerUp2_2_2': 2,
          'Evolved FSM 16': 2,
          'Tit For Tat': 2,
          'Grudger': 2,
          'Evolved HMM 5': 2}),
 Counter({'Michaelos: (D,)': 4,
          'Evolved FSM 16': 4,
          'Grudger': 4,
          'Evolved HMM 5': 2}),
 Counter({'Michaelos: (D,)': 6, 'Evolved FSM 16': 4, 'Grudger': 4}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 4, 'Evolved FSM 16': 2}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 4, 'Evolved FSM 16': 2}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Michaelos: (D,)': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Grudger': 8, 'Michaelos: (D,)': 6}),
 Counter({'Grudger': 10, 'Michaelos: (D,)': 4}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 12, 'Michaelos: (D,)': 2}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.28,
  33.335,
  36.185,
  34.129999999999995,
  34.01,
  35.745000000000005,
  35.6,
  26.119999999999997,
  31.095000000000002,
  19.345000000000002,
  32.65,
  33.60999999999999,
  32.875,
  33.42999999999999],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.195,
 33.315000000000005,
 36.335,
 33.87,
 33.89,
 35.870000000000005,
 35.72,
 26.499999999999996,
 30.915,
 19.69,
 32.64,
 33.69,
 32.955,
 33.48]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.584999999999994
Upper: 33.584999999999994
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 6, 3, 4, 1, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 7, 9, 12, 0, 2, 13]
====================================
cloned = 5
killed = 8
cloned = 7
killed = 6
cloned = 9
killed = 3
cloned = 12
killed = 4
cloned = 0
killed = 1
cloned = 2
killed = 10
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 1, 8, 7, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 6, 9, 5, 2, 10, 13]
====================================
cloned = 12
killed = 11
cloned = 6
killed = 4
cloned = 9
killed = 1
cloned = 5
killed = 8
cloned = 2
killed = 7
cloned = 10
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 12, 9, 2, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 1, 10, 8, 4, 3, 13]
====================================
cloned = 11
killed = 0
cloned = 1
killed = 7
cloned = 10
killed = 12
cloned = 8
killed = 9
cloned = 4
killed = 2
cloned = 3
killed = 5
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 5, 0, 1, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 10, 12, 4, 6, 11, 13]
====================================
cloned = 8
killed = 2
cloned = 10
killed = 3
cloned = 12
killed = 5
cloned = 4
killed = 0
cloned = 6
killed = 1
cloned = 11
killed = 7
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 12, 3, 11, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 7, 8, 9, 10, 5, 13]
====================================
cloned = 2
killed = 6
cloned = 7
killed = 1
cloned = 8
killed = 12
cloned = 9
killed = 3
cloned = 10
killed = 11
cloned = 5
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 8, 4, 3, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 11, 7, 0, 6, 9, 13]
====================================
cloned = 10
killed = 2
cloned = 11
killed = 5
cloned = 7
killed = 8
cloned = 0
killed = 4
cloned = 6
killed = 3
cloned = 9
killed = 12
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 3, 1, 5, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 8, 0, 11, 9, 10, 13]
====================================
cloned = 2
killed = 4
cloned = 8
killed = 12
cloned = 0
killed = 3
cloned = 11
killed = 1
cloned = 9
killed = 5
cloned = 10
killed = 7
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 8, 9, 3, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 5, 11, 0, 6, 4, 13]
====================================
cloned = 2
killed = 10
cloned = 5
killed = 12
cloned = 11
killed = 8
cloned = 0
killed = 9
cloned = 6
killed = 3
cloned = 4
killed = 1
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 5, 6, 3, 10, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 0, 2, 1, 11, 9, 13]
====================================
cloned = 8
killed = 7
cloned = 0
killed = 5
cloned = 2
killed = 6
cloned = 1
killed = 3
cloned = 11
killed = 10
cloned = 9
killed = 4
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 0, 12, 5, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 10, 1, 3, 11, 7, 13]
====================================
cloned = 9
killed = 2
cloned = 10
killed = 8
cloned = 1
killed = 0
cloned = 3
killed = 12
cloned = 11
killed = 5
cloned = 7
killed = 4
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 0, 11, 3, 6, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 10, 8, 2, 4, 12, 13]
====================================
cloned = 7
killed = 1
cloned = 10
killed = 5
cloned = 8
killed = 0
cloned = 2
killed = 11
cloned = 4
killed = 3
cloned = 12
killed = 6
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 1, 12, 5, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 3, 9, 4, 0, 13]
====================================
cloned = 8
killed = 7
cloned = 2
killed = 11
cloned = 3
killed = 1
cloned = 9
killed = 12
cloned = 4
killed = 5
cloned = 0
killed = 10
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 5, 0, 12, 4, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 3, 11, 6, 9, 7, 13]
====================================
cloned = 1
killed = 10
cloned = 3
killed = 8
cloned = 11
killed = 5
cloned = 6
killed = 0
cloned = 9
killed = 12
cloned = 7
killed = 4
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 6, 1, 5, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 9, 7, 4, 11, 8, 13]
====================================
cloned = 2
killed = 3
cloned = 9
killed = 12
cloned = 7
killed = 6
cloned = 4
killed = 1
cloned = 11
killed = 5
cloned = 8
killed = 10
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 6, 3, 2, 8, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 9, 5, 11, 1, 4, 13]
====================================
cloned = 7
killed = 10
cloned = 9
killed = 12
cloned = 5
killed = 6
cloned = 11
killed = 3
cloned = 1
killed = 2
cloned = 4
killed = 8
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 11, 12, 9, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 7, 5, 4, 8, 1, 13]
====================================
cloned = 0
killed = 2
cloned = 7
killed = 10
cloned = 5
killed = 11
cloned = 4
killed = 12
cloned = 8
killed = 9
cloned = 1
killed = 6
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 10, 4, 6, 5, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 12, 11, 3, 0, 2, 13]
====================================
cloned = 9
killed = 1
cloned = 12
killed = 10
cloned = 11
killed = 4
cloned = 3
killed = 6
cloned = 0
killed = 5
cloned = 2
killed = 8
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 8, 3, 10, 4, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 2, 1, 6, 5, 13]
====================================
cloned = 11
killed = 9
cloned = 12
killed = 0
cloned = 2
killed = 8
cloned = 1
killed = 3
cloned = 6
killed = 10
cloned = 5
killed = 4
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 0, 5, 9, 1, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 2, 8, 11, 6, 12, 13]
====================================
cloned = 7
killed = 10
cloned = 2
killed = 0
cloned = 8
killed = 5
cloned = 11
killed = 9
cloned = 6
killed = 1
cloned = 12
killed = 3
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 4, 8, 11, 1, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 0, 6, 9, 5, 12, 13]
====================================
cloned = 10
killed = 3
cloned = 0
killed = 7
cloned = 6
killed = 4
cloned = 9
killed = 8
cloned = 5
killed = 11
cloned = 12
killed = 1
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 2, 4, 0, 11, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 3, 7, 12, 1, 8, 13]
====================================
cloned = 5
killed = 9
cloned = 3
killed = 10
cloned = 7
killed = 2
cloned = 12
killed = 4
cloned = 1
killed = 0
cloned = 8
killed = 11
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 7, 10, 1, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 8, 4, 5, 3, 11, 13]
====================================
cloned = 0
killed = 9
cloned = 8
killed = 2
cloned = 4
killed = 7
cloned = 5
killed = 10
cloned = 3
killed = 1
cloned = 11
killed = 6
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 6, 11, 8, 9, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 2, 5, 3, 4, 10, 13]
====================================
cloned = 1
killed = 7
cloned = 2
killed = 12
cloned = 5
killed = 6
cloned = 3
killed = 11
cloned = 4
killed = 8
cloned = 10
killed = 9
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 5, 4, 0, 2, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 6, 11, 9, 8, 1, 13]
====================================
cloned = 7
killed = 12
cloned = 6
killed = 3
cloned = 11
killed = 5
cloned = 9
killed = 4
cloned = 8
killed = 0
cloned = 1
killed = 2
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 8, 12, 11, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 0, 5, 2, 3, 10, 13]
====================================
cloned = 4
killed = 6
cloned = 0
killed = 1
cloned = 5
killed = 8
cloned = 2
killed = 12
cloned = 3
killed = 11
cloned = 10
killed = 7
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 6, 5, 7, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 2, 3, 11, 9, 12, 13]
====================================
cloned = 1
killed = 8
cloned = 2
killed = 4
cloned = 3
killed = 6
cloned = 11
killed = 5
cloned = 9
killed = 7
cloned = 12
killed = 0
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 9, 8, 11, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 12, 2, 3, 6, 4, 13]
====================================
cloned = 0
killed = 1
cloned = 12
killed = 7
cloned = 2
killed = 9
cloned = 3
killed = 8
cloned = 6
killed = 11
cloned = 4
killed = 10
cloned = 13
killed = 5
Trial run 17/seed 872:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'Tit For Tat': 4,
          'Evolved FSM 6': 2,
          'Evolved HMM 5': 2,
          'Michaelos: (D,)': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Grudger': 2}),
 Counter({'Tit For Tat': 6,
          'Grudger': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 6,
          'Michaelos: (D,)': 2,
          'Evolved HMM 5': 2,
          'Grudger': 2,
          'EvolvedLookerUp2_2_2': 2}),
 Counter({'Tit For Tat': 6,
          'Grudger': 4,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Grudger': 4,
          'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 6,
          'Grudger': 4,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 8, 'Grudger': 4, 'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 8, 'Grudger': 6}),
 Counter({'Tit For Tat': 12, 'Grudger': 2}),
 Counter({'Tit For Tat': 12, 'Grudger': 2}),
 Counter({'Tit For Tat': 12, 'Grudger': 2}),
 Counter({'Tit For Tat': 10, 'Grudger': 4}),
 Counter({'Tit For Tat': 8, 'Grudger': 6}),
 Counter({'Tit For Tat': 8, 'Grudger': 6}),
 Counter({'Tit For Tat': 10, 'Grudger': 4}),
 Counter({'Tit For Tat': 10, 'Grudger': 4}),
 Counter({'Grudger': 8, 'Tit For Tat': 6}),
 Counter({'Grudger': 8, 'Tit For Tat': 6}),
 Counter({'Grudger': 10, 'Tit For Tat': 4}),
 Counter({'Grudger': 10, 'Tit For Tat': 4}),
 Counter({'Grudger': 8, 'Tit For Tat': 6}),
 Counter({'Tit For Tat': 8, 'Grudger': 6}),
 Counter({'Grudger': 10, 'Tit For Tat': 4}),
 Counter({'Grudger': 12, 'Tit For Tat': 2}),
 Counter({'Grudger': 12, 'Tit For Tat': 2}),
 Counter({'Grudger': 12, 'Tit For Tat': 2}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.195,
  33.315000000000005,
  36.335,
  33.87,
  33.89,
  35.870000000000005,
  35.72,
  26.499999999999996,
  30.915,
  19.69,
  32.64,
  33.69,
  32.955,
  33.48],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.18,
 34.24,
 36.245,
 33.775,
 33.66499999999999,
 35.515,
 36.275000000000006,
 26.279999999999998,
 31.14,
 21.759999999999998,
 32.739999999999995,
 33.489999999999995,
 31.98,
 33.42999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.57749999999999
Upper: 33.57749999999999
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 1, 2, 3, 4, 5, 6]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[38.92,
 36.67,
 38.96,
 34.86,
 38.114999999999995,
 38.400000000000006,
 38.96,
 38.92,
 36.725,
 38.96,
 34.86,
 38.4,
 38.4,
 36.25]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 38.4
Upper: 38.4
====================================
lower list size: 6
upper list size: 6
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 4, 8, 10, 13, 11]
lower threshold: []
....................................
upper threshold: [11, 12]
upper:           [0, 2, 5, 6, 7, 9, 12]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 3
cloned = 5
killed = 4
cloned = 6
killed = 8
cloned = 7
killed = 10
cloned = 9
killed = 13
cloned = 12
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 5, 12, 1, 4, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 2, 3, 9, 8, 7, 13]
====================================
cloned = 0
killed = 10
cloned = 2
killed = 6
cloned = 3
killed = 5
cloned = 9
killed = 12
cloned = 8
killed = 1
cloned = 7
killed = 4
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 12, 10, 1, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 9, 6, 8, 7, 5, 13]
====================================
cloned = 0
killed = 4
cloned = 9
killed = 11
cloned = 6
killed = 12
cloned = 8
killed = 10
cloned = 7
killed = 1
cloned = 5
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 0, 8, 6, 7, 11, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 12, 4, 1, 5, 9, 13]
====================================
cloned = 10
killed = 2
cloned = 12
killed = 0
cloned = 4
killed = 8
cloned = 1
killed = 6
cloned = 5
killed = 7
cloned = 9
killed = 11
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 9, 10, 5, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 12, 7, 2, 1, 6, 13]
====================================
cloned = 4
killed = 8
cloned = 12
killed = 11
cloned = 7
killed = 9
cloned = 2
killed = 10
cloned = 1
killed = 5
cloned = 6
killed = 0
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 10, 8, 6, 9, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 2, 1, 5, 0, 13]
====================================
cloned = 11
killed = 3
cloned = 4
killed = 7
cloned = 2
killed = 10
cloned = 1
killed = 8
cloned = 5
killed = 6
cloned = 0
killed = 9
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 7, 11, 10, 2, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 1, 12, 6, 5, 8, 13]
====================================
cloned = 0
killed = 3
cloned = 1
killed = 4
cloned = 12
killed = 7
cloned = 6
killed = 11
cloned = 5
killed = 10
cloned = 8
killed = 2
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 5, 4, 2, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 7, 3, 10, 8, 9, 13]
====================================
cloned = 11
killed = 0
cloned = 7
killed = 12
cloned = 3
killed = 5
cloned = 10
killed = 4
cloned = 8
killed = 2
cloned = 9
killed = 6
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 6, 0, 8, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 9, 1, 12, 11, 10, 13]
====================================
cloned = 3
killed = 7
cloned = 9
killed = 4
cloned = 1
killed = 6
cloned = 12
killed = 0
cloned = 11
killed = 8
cloned = 10
killed = 5
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 10, 3, 7, 4, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 12, 8, 2, 5, 1, 13]
====================================
cloned = 6
killed = 11
cloned = 12
killed = 9
cloned = 8
killed = 10
cloned = 2
killed = 3
cloned = 5
killed = 7
cloned = 1
killed = 4
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 12, 5, 9, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 4, 0, 8, 10, 3, 13]
====================================
cloned = 1
killed = 6
cloned = 4
killed = 7
cloned = 0
killed = 12
cloned = 8
killed = 5
cloned = 10
killed = 9
cloned = 3
killed = 11
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 3, 4, 0, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 2, 11, 9, 5, 13]
====================================
cloned = 1
killed = 6
cloned = 12
killed = 7
cloned = 2
killed = 3
cloned = 11
killed = 4
cloned = 9
killed = 0
cloned = 5
killed = 8
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 5, 8, 4, 10, 9, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 11, 0, 2, 6, 3, 13]
====================================
cloned = 7
killed = 12
cloned = 11
killed = 5
cloned = 0
killed = 8
cloned = 2
killed = 4
cloned = 6
killed = 10
cloned = 3
killed = 9
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 10, 4, 9, 12, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [5, 0, 1, 7, 6, 8, 13]
====================================
cloned = 5
killed = 3
cloned = 0
killed = 11
cloned = 1
killed = 10
cloned = 7
killed = 4
cloned = 6
killed = 9
cloned = 8
killed = 12
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 9, 5, 8, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 11, 6, 7, 12, 3, 13]
====================================
cloned = 2
killed = 1
cloned = 11
killed = 4
cloned = 6
killed = 9
cloned = 7
killed = 5
cloned = 12
killed = 8
cloned = 3
killed = 0
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 1, 11, 5, 0, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 9, 12, 4, 10, 6, 13]
====================================
cloned = 2
killed = 8
cloned = 9
killed = 3
cloned = 12
killed = 1
cloned = 4
killed = 11
cloned = 10
killed = 5
cloned = 6
killed = 0
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 11, 4, 6, 8, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 5, 12, 7, 1, 2, 13]
====================================
cloned = 10
killed = 0
cloned = 5
killed = 11
cloned = 12
killed = 4
cloned = 7
killed = 6
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 1, 0, 10, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 8, 3, 7, 9, 13]
====================================
cloned = 11
killed = 5
cloned = 4
killed = 2
cloned = 8
killed = 1
cloned = 3
killed = 0
cloned = 7
killed = 10
cloned = 9
killed = 6
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 9, 10, 1, 3, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 6, 2, 4, 0, 12, 13]
====================================
cloned = 11
killed = 8
cloned = 6
killed = 5
cloned = 2
killed = 9
cloned = 4
killed = 10
cloned = 0
killed = 1
cloned = 12
killed = 3
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 10, 5, 7, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 9, 6, 4, 0, 3, 13]
====================================
cloned = 1
killed = 2
cloned = 9
killed = 12
cloned = 6
killed = 10
cloned = 4
killed = 5
cloned = 0
killed = 7
cloned = 3
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 2, 10, 3, 6, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 4, 11, 1, 9, 5, 13]
====================================
cloned = 0
killed = 7
cloned = 4
killed = 12
cloned = 11
killed = 2
cloned = 1
killed = 10
cloned = 9
killed = 3
cloned = 5
killed = 6
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 7, 9, 3, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 6, 12, 4, 1, 5, 13]
====================================
cloned = 0
killed = 2
cloned = 6
killed = 10
cloned = 12
killed = 7
cloned = 4
killed = 9
cloned = 1
killed = 3
cloned = 5
killed = 11
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 9, 4, 0, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 12, 2, 3, 10, 6, 13]
====================================
cloned = 8
killed = 7
cloned = 12
killed = 11
cloned = 2
killed = 9
cloned = 3
killed = 4
cloned = 10
killed = 0
cloned = 6
killed = 1
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 0, 3, 10, 11, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 5, 7, 9, 8, 2, 13]
====================================
cloned = 6
killed = 4
cloned = 5
killed = 12
cloned = 7
killed = 0
cloned = 9
killed = 3
cloned = 8
killed = 10
cloned = 2
killed = 11
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 1, 3, 0, 7, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 2, 9, 12, 10, 8, 13]
====================================
cloned = 6
killed = 4
cloned = 2
killed = 5
cloned = 9
killed = 1
cloned = 12
killed = 3
cloned = 10
killed = 0
cloned = 8
killed = 7
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 11, 6, 9, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 7, 4, 5, 10, 3, 13]
====================================
cloned = 8
killed = 0
cloned = 7
killed = 2
cloned = 4
killed = 11
cloned = 5
killed = 6
cloned = 10
killed = 9
cloned = 3
killed = 1
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 1, 6, 10, 3, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 0, 12, 11, 8, 2, 13]
====================================
cloned = 9
killed = 4
cloned = 0
killed = 1
cloned = 12
killed = 6
cloned = 11
killed = 10
cloned = 8
killed = 3
cloned = 2
killed = 5
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 8, 9, 10, 0, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 7, 12, 4, 11, 1, 13]
====================================
cloned = 6
killed = 3
cloned = 7
killed = 2
cloned = 12
killed = 8
cloned = 4
killed = 9
cloned = 11
killed = 10
cloned = 1
killed = 0
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 3, 0, 6, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 11, 12, 1, 8, 7, 13]
====================================
cloned = 4
killed = 2
cloned = 11
killed = 9
cloned = 12
killed = 3
cloned = 1
killed = 0
cloned = 8
killed = 6
cloned = 7
killed = 10
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 2, 6, 1, 3, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 4, 11, 9, 0, 7, 13]
====================================
cloned = 12
killed = 8
cloned = 4
killed = 5
cloned = 11
killed = 2
cloned = 9
killed = 6
cloned = 0
killed = 1
cloned = 7
killed = 3
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 9, 10, 11, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 6, 8, 3, 4, 5, 13]
====================================
cloned = 0
killed = 1
cloned = 6
killed = 7
cloned = 8
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 0, 11, 5, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 10, 8, 1, 6, 9, 13]
====================================
cloned = 7
killed = 4
cloned = 10
killed = 12
cloned = 8
killed = 0
cloned = 1
killed = 11
cloned = 6
killed = 5
cloned = 9
killed = 3
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 4, 3, 10, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 2, 5, 9, 6, 1, 13]
====================================
cloned = 8
killed = 7
cloned = 2
killed = 12
cloned = 5
killed = 4
cloned = 9
killed = 3
cloned = 6
killed = 10
cloned = 1
killed = 0
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 6, 11, 5, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 2, 10, 8, 4, 0, 13]
====================================
cloned = 12
killed = 7
cloned = 2
killed = 9
cloned = 10
killed = 6
cloned = 8
killed = 11
cloned = 4
killed = 5
cloned = 0
killed = 3
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 10, 2, 4, 12, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 3, 8, 7, 0, 6, 13]
====================================
cloned = 9
killed = 1
cloned = 3
killed = 10
cloned = 8
killed = 2
cloned = 7
killed = 4
cloned = 0
killed = 12
cloned = 6
killed = 5
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 8, 6, 11, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 12, 9, 3, 7, 2, 13]
====================================
cloned = 1
killed = 0
cloned = 12
killed = 4
cloned = 9
killed = 8
cloned = 3
killed = 6
cloned = 7
killed = 11
cloned = 2
killed = 10
cloned = 13
killed = 5
Trial run 18/seed 873:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 8, 'Evolved FSM 6': 4, 'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 8, 'Evolved FSM 6': 4, 'Michaelos: (D,)': 2}),
 Counter({'Tit For Tat': 8, 'Evolved FSM 6': 4, 'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 6, 'Tit For Tat': 6, 'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 8, 'Tit For Tat': 4, 'Michaelos: (D,)': 2}),
 Counter({'Evolved FSM 6': 10, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 8, 'Tit For Tat': 6}),
 Counter({'Tit For Tat': 8, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 8, 'Evolved FSM 6': 6}),
 Counter({'Evolved FSM 6': 8, 'Tit For Tat': 6}),
 Counter({'Tit For Tat': 8, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 10, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 2}),
 Counter({'Tit For Tat': 14})]
--------------------------------------------------
Score:
[[36.18,
  34.24,
  36.245,
  33.775,
  33.66499999999999,
  35.515,
  36.275000000000006,
  26.279999999999998,
  31.14,
  21.759999999999998,
  32.739999999999995,
  33.489999999999995,
  31.98,
  33.42999999999999],
 [38.92,
  36.67,
  38.96,
  34.86,
  38.114999999999995,
  38.400000000000006,
  38.96,
  38.92,
  36.725,
  38.96,
  34.86,
  38.4,
  38.4,
  36.25],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.27,
 33.300000000000004,
 36.135,
 33.745,
 33.76,
 35.605000000000004,
 33.71,
 26.479999999999997,
 31.14,
 21.665000000000003,
 32.81,
 33.72999999999999,
 30.020000000000007,
 33.455]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.582499999999996
Upper: 33.582499999999996
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 8, 9, 10, 12, 13]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 6, 11]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 7
cloned = 3
killed = 8
cloned = 4
killed = 9
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 4, 6, 9, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 3, 2, 5, 0, 10, 13]
====================================
cloned = 8
killed = 7
cloned = 3
killed = 11
cloned = 2
killed = 4
cloned = 5
killed = 6
cloned = 0
killed = 9
cloned = 10
killed = 1
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 7, 12, 3, 1, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 2, 10, 11, 8, 5, 13]
====================================
cloned = 6
killed = 0
cloned = 2
killed = 9
cloned = 10
killed = 7
cloned = 11
killed = 12
cloned = 8
killed = 3
cloned = 5
killed = 1
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 0, 10, 9, 3, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 11, 2, 4, 5, 12, 13]
====================================
cloned = 1
killed = 8
cloned = 11
killed = 0
cloned = 2
killed = 10
cloned = 4
killed = 9
cloned = 5
killed = 3
cloned = 12
killed = 6
cloned = 13
killed = 7
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 5, 12, 11, 10, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 3, 8, 0, 4, 2, 13]
====================================
cloned = 7
killed = 9
cloned = 3
killed = 5
cloned = 8
killed = 12
cloned = 0
killed = 11
cloned = 4
killed = 10
cloned = 2
killed = 1
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 11, 4, 3, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 9, 2, 0, 6, 5, 13]
====================================
cloned = 12
killed = 7
cloned = 9
killed = 1
cloned = 2
killed = 11
cloned = 0
killed = 4
cloned = 6
killed = 3
cloned = 5
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 2, 3, 12, 0, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 8, 1, 4, 7, 10, 13]
====================================
cloned = 9
killed = 11
cloned = 8
killed = 5
cloned = 1
killed = 2
cloned = 4
killed = 3
cloned = 7
killed = 12
cloned = 10
killed = 0
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 5, 8, 11, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 6, 4, 10, 7, 9, 13]
====================================
cloned = 3
killed = 1
cloned = 6
killed = 2
cloned = 4
killed = 5
cloned = 10
killed = 8
cloned = 7
killed = 11
cloned = 9
killed = 12
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 2, 3, 6, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 10, 8, 7, 4, 0, 13]
====================================
cloned = 1
killed = 11
cloned = 10
killed = 5
cloned = 8
killed = 2
cloned = 7
killed = 3
cloned = 4
killed = 6
cloned = 0
killed = 12
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 8, 4, 10, 0, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 5, 9, 3, 7, 2, 13]
====================================
cloned = 12
killed = 1
cloned = 5
killed = 11
cloned = 9
killed = 8
cloned = 3
killed = 4
cloned = 7
killed = 10
cloned = 2
killed = 0
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 3, 9, 5, 6, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 4, 1, 7, 10, 11, 13]
====================================
cloned = 0
killed = 8
cloned = 4
killed = 12
cloned = 1
killed = 3
cloned = 7
killed = 9
cloned = 10
killed = 5
cloned = 11
killed = 6
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 5, 4, 9, 0, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 3, 10, 7, 12, 2, 13]
====================================
cloned = 8
killed = 11
cloned = 3
killed = 1
cloned = 10
killed = 5
cloned = 7
killed = 4
cloned = 12
killed = 9
cloned = 2
killed = 0
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 10, 6, 8, 7, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 9, 3, 4, 5, 2, 13]
====================================
cloned = 11
killed = 1
cloned = 9
killed = 10
cloned = 3
killed = 6
cloned = 4
killed = 8
cloned = 5
killed = 7
cloned = 2
killed = 12
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 1, 6, 4, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 7, 11, 2, 5, 12, 13]
====================================
cloned = 8
killed = 9
cloned = 7
killed = 3
cloned = 11
killed = 1
cloned = 2
killed = 6
cloned = 5
killed = 4
cloned = 12
killed = 0
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 1, 5, 0, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [4, 7, 6, 2, 9, 11, 13]
====================================
cloned = 4
killed = 10
cloned = 7
killed = 12
cloned = 6
killed = 1
cloned = 2
killed = 5
cloned = 9
killed = 0
cloned = 11
killed = 8
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 12, 1, 11, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 8, 2, 3, 0, 7, 13]
====================================
cloned = 6
killed = 4
cloned = 8
killed = 10
cloned = 2
killed = 12
cloned = 3
killed = 1
cloned = 0
killed = 11
cloned = 7
killed = 5
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 5, 3, 11, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 0, 12, 1, 6, 8, 13]
====================================
cloned = 7
killed = 10
cloned = 0
killed = 9
cloned = 12
killed = 5
cloned = 1
killed = 3
cloned = 6
killed = 11
cloned = 8
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 4, 8, 12, 0, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 6, 7, 2, 1, 3, 13]
====================================
cloned = 11
killed = 10
cloned = 6
killed = 5
cloned = 7
killed = 4
cloned = 2
killed = 8
cloned = 1
killed = 12
cloned = 3
killed = 0
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 0, 6, 2, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [9, 3, 12, 7, 8, 11, 13]
====================================
cloned = 9
killed = 10
cloned = 3
killed = 4
cloned = 12
killed = 0
cloned = 7
killed = 6
cloned = 8
killed = 2
cloned = 11
killed = 5
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 6, 4, 1, 10, 7, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 2, 9, 3, 5, 0, 13]
====================================
cloned = 12
killed = 8
cloned = 2
killed = 6
cloned = 9
killed = 4
cloned = 3
killed = 1
cloned = 5
killed = 10
cloned = 0
killed = 7
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 4, 3, 2, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 7, 12, 8, 0, 6, 13]
====================================
cloned = 11
killed = 10
cloned = 7
killed = 1
cloned = 12
killed = 4
cloned = 8
killed = 3
cloned = 0
killed = 2
cloned = 6
killed = 5
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 0, 9, 10, 12, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 4, 6, 1, 5, 2, 13]
====================================
cloned = 11
killed = 7
cloned = 4
killed = 8
cloned = 6
killed = 0
cloned = 1
killed = 9
cloned = 5
killed = 10
cloned = 2
killed = 12
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 9, 7, 5, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [11, 12, 10, 2, 4, 8, 13]
====================================
cloned = 11
killed = 6
cloned = 12
killed = 3
cloned = 10
killed = 9
cloned = 2
killed = 7
cloned = 4
killed = 5
cloned = 8
killed = 1
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 10, 1, 7, 11, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [2, 0, 5, 9, 12, 3, 13]
====================================
cloned = 2
killed = 8
cloned = 0
killed = 4
cloned = 5
killed = 10
cloned = 9
killed = 1
cloned = 12
killed = 7
cloned = 3
killed = 11
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 8, 4, 5, 7, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [3, 12, 10, 2, 1, 6, 13]
====================================
cloned = 3
killed = 9
cloned = 12
killed = 8
cloned = 10
killed = 4
cloned = 2
killed = 5
cloned = 1
killed = 7
cloned = 6
killed = 0
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 12, 1, 7, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 10, 3, 11, 8, 0, 13]
====================================
cloned = 6
killed = 4
cloned = 10
killed = 9
cloned = 3
killed = 12
cloned = 11
killed = 1
cloned = 8
killed = 7
cloned = 0
killed = 5
cloned = 13
killed = 2
Trial run 19/seed 874:
..................................................
winner: Grudger
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Grudger': 2}),
 Counter({'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 16': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Grudger': 2}),
 Counter({'EvolvedLookerUp2_2_2': 6,
          'Evolved FSM 16': 4,
          'Tit For Tat': 2,
          'Grudger': 2}),
 Counter({'Evolved FSM 16': 4,
          'EvolvedLookerUp2_2_2': 4,
          'Grudger': 4,
          'Tit For Tat': 2}),
 Counter({'Grudger': 6,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 16': 2,
          'Tit For Tat': 2}),
 Counter({'Grudger': 6,
          'EvolvedLookerUp2_2_2': 4,
          'Evolved FSM 16': 2,
          'Tit For Tat': 2}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 4, 'Evolved FSM 16': 2}),
 Counter({'Grudger': 6, 'Evolved FSM 16': 4, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'EvolvedLookerUp2_2_2': 6, 'Grudger': 4, 'Evolved FSM 16': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 10, 'Grudger': 4}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'EvolvedLookerUp2_2_2': 8, 'Grudger': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 8, 'EvolvedLookerUp2_2_2': 6}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 10, 'EvolvedLookerUp2_2_2': 4}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 12, 'EvolvedLookerUp2_2_2': 2}),
 Counter({'Grudger': 14})]
--------------------------------------------------
Score:
[[36.27,
  33.300000000000004,
  36.135,
  33.745,
  33.76,
  35.605000000000004,
  33.71,
  26.479999999999997,
  31.14,
  21.665000000000003,
  32.81,
  33.72999999999999,
  30.020000000000007,
  33.455],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[36.43,
 33.32000000000001,
 36.28,
 33.81,
 33.73,
 35.78,
 33.370000000000005,
 26.299999999999997,
 31.020000000000003,
 20.284999999999997,
 32.28,
 33.86999999999999,
 30.770000000000007,
 33.515]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 33.4425
Upper: 33.4425
====================================
lower list size: 7
upper list size: 7
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 7, 8, 9, 10, 12]
lower threshold: []
....................................
upper threshold: []
upper:           [0, 2, 3, 4, 5, 11, 13]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 6
cloned = 3
killed = 7
cloned = 4
killed = 8
cloned = 5
killed = 9
cloned = 11
killed = 10
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 1, 9, 5, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [12, 0, 7, 10, 3, 6, 13]
====================================
cloned = 12
killed = 8
cloned = 0
killed = 11
cloned = 7
killed = 1
cloned = 10
killed = 9
cloned = 3
killed = 5
cloned = 6
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 9, 5, 4, 7, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [6, 8, 0, 12, 10, 3, 13]
====================================
cloned = 6
killed = 1
cloned = 8
killed = 2
cloned = 0
killed = 9
cloned = 12
killed = 5
cloned = 10
killed = 4
cloned = 3
killed = 7
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 5, 6, 2, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [10, 12, 11, 7, 0, 8, 13]
====================================
cloned = 10
killed = 1
cloned = 12
killed = 9
cloned = 11
killed = 5
cloned = 7
killed = 6
cloned = 0
killed = 2
cloned = 8
killed = 4
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 0, 9, 10, 12, 4, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [7, 8, 6, 1, 5, 3, 13]
====================================
cloned = 7
killed = 2
cloned = 8
killed = 0
cloned = 6
killed = 9
cloned = 1
killed = 10
cloned = 5
killed = 12
cloned = 3
killed = 4
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 11, 12, 2, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [0, 5, 4, 3, 1, 7, 13]
====================================
cloned = 0
killed = 9
cloned = 5
killed = 6
cloned = 4
killed = 11
cloned = 3
killed = 12
cloned = 1
killed = 2
cloned = 7
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 3, 0, 12, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [8, 6, 7, 2, 11, 9, 13]
====================================
cloned = 8
killed = 5
cloned = 6
killed = 10
cloned = 7
killed = 3
cloned = 2
killed = 0
cloned = 11
killed = 12
cloned = 9
killed = 4
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0,
 39.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 39.0
Upper: 39.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 2, 7, 5, 12, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
upper:           [1, 10, 11, 4, 8, 6, 13]
====================================
cloned = 1
killed = 9
cloned = 10
killed = 0
cloned = 11
killed = 2
cloned = 4
killed = 7
cloned = 8
killed = 5
cloned = 6
killed = 12
cloned = 13
killed = 3
Trial run 20/seed 875:
..................................................
winner: Tit For 2 Tats
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1}),
 Counter({'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Grudger': 2,
          'Tit For 2 Tats': 2}),
 Counter({'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Grudger': 2}),
 Counter({'Tit For 2 Tats': 6,
          'Evolved FSM 6': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Grudger': 2}),
 Counter({'Tit For 2 Tats': 8,
          'Evolved FSM 6': 2,
          'Grudger': 2,
          'Evolved FSM 16': 2}),
 Counter({'Tit For 2 Tats': 8, 'Evolved FSM 16': 4, 'Grudger': 2}),
 Counter({'Tit For 2 Tats': 10, 'Grudger': 2, 'Evolved FSM 16': 2}),
 Counter({'Tit For 2 Tats': 10, 'Grudger': 2, 'Evolved FSM 16': 2}),
 Counter({'Tit For 2 Tats': 14})]
--------------------------------------------------
Score:
[[36.43,
  33.32000000000001,
  36.28,
  33.81,
  33.73,
  35.78,
  33.370000000000005,
  26.299999999999997,
  31.020000000000003,
  20.284999999999997,
  32.28,
  33.86999999999999,
  30.770000000000007,
  33.515],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0],
 [39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0,
  39.0]]
***************************************************
***************************************************
Agent that won the most often: Grudger (9 times)
List of winners and how many times they won:
[['Tit For 2 Tats', 1],
 ['Grudger', 9],
 ['Michaelos: (D,)', 1],
 ['EvolvedLookerUp2_2_2', 4],
 ['Tit For Tat', 0]]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
********** End of Experiment *************
>>> Experiment number 122 <<<
------------------------------------------------------------
Experiment parameters:
1. Player Agents: 23
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
2. newFileNameNumber for plot:           122
3. (Number of) turns:                    200
4. Starting seed (firstSeed):            856
5. iterations:                           20
6. splitThresholdPercentile:             50%
7. ConvergeScoreGenLimit:                100
8. displayOutput:                        True
9. createPlot:                           2
10.PlotFileType:                         PNG
11.(use) csv (as output's file format):  False
12.testing (mode):                       False
13.experimentBatchNum(ber):              122
14.(Does) playerKnowsTurnLim(it):        False
------------------------------------------------------------
######################################
~~~ Scores: ~~~
[61.385,
 56.26,
 59.33,
 54.995,
 52.475,
 54.225,
 53.14,
 36.8,
 44.865,
 33.72,
 47.725,
 50.64999999999999,
 47.86999999999999,
 52.42,
 56.38999999999999,
 36.92,
 51.394999999999996,
 47.045,
 45.42,
 42.055,
 34.62500000000001,
 55.495,
 52.81]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.394999999999996
Upper: 51.394999999999996
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.58,
 65.75,
 62.870000000000005,
 62.42,
 62.16,
 61.045,
 65.7,
 64.355,
 65.75,
 62.870000000000005,
 62.28,
 62.160000000000004,
 63.540000000000006,
 58.54999999999998,
 61.985,
 62.58,
 63.540000000000006,
 58.769999999999996,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 7, 4, 0, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 7
killed = 20
cloned = 4
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 7, 0, 20]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 4, 12, 21, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 4
killed = 7
cloned = 12
killed = 0
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 21, 13, 7, 20, 5, 0, 16, 8, 4, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 15, 10, 2, 11, 14, 3, 19, 17, 1, 22]
====================================
cloned = 12
killed = 9
cloned = 6
killed = 21
cloned = 15
killed = 13
cloned = 10
killed = 7
cloned = 2
killed = 20
cloned = 11
killed = 5
cloned = 14
killed = 0
cloned = 3
killed = 16
cloned = 19
killed = 8
cloned = 17
killed = 4
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 21, 3, 0, 19, 10, 9, 16, 14, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 18, 11, 4, 5, 17, 1, 7, 20, 2, 22]
====================================
cloned = 15
killed = 13
cloned = 12
killed = 6
cloned = 18
killed = 21
cloned = 11
killed = 3
cloned = 4
killed = 0
cloned = 5
killed = 19
cloned = 17
killed = 10
cloned = 1
killed = 9
cloned = 7
killed = 16
cloned = 20
killed = 14
cloned = 2
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 12, 14, 17, 18, 15, 21, 16, 2, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 4, 1, 5, 11, 8, 19, 7, 6, 0, 10, 22]
====================================
cloned = 9
killed = 3
cloned = 4
killed = 13
cloned = 1
killed = 12
cloned = 5
killed = 14
cloned = 11
killed = 17
cloned = 8
killed = 18
cloned = 19
killed = 15
cloned = 7
killed = 21
cloned = 6
killed = 16
cloned = 0
killed = 2
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 3, 0, 13, 5, 12, 1, 18, 10, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 16, 21, 17, 15, 2, 8, 6, 19, 9, 11, 22]
====================================
cloned = 14
killed = 4
cloned = 16
killed = 7
cloned = 21
killed = 3
cloned = 17
killed = 0
cloned = 15
killed = 13
cloned = 2
killed = 5
cloned = 8
killed = 12
cloned = 6
killed = 1
cloned = 19
killed = 18
cloned = 9
killed = 10
cloned = 11
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 20, 13, 2, 6, 17, 4, 16, 9, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 3, 7, 15, 8, 11, 10, 18, 5, 14, 12, 22]
====================================
cloned = 0
killed = 21
cloned = 3
killed = 1
cloned = 7
killed = 20
cloned = 15
killed = 13
cloned = 8
killed = 2
cloned = 11
killed = 6
cloned = 10
killed = 17
cloned = 18
killed = 4
cloned = 5
killed = 16
cloned = 14
killed = 9
cloned = 12
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 19, 0, 4, 10, 1, 15, 7, 13, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 21, 14, 12, 20, 6, 11, 16, 18, 8, 3, 22]
====================================
cloned = 5
killed = 9
cloned = 21
killed = 2
cloned = 14
killed = 19
cloned = 12
killed = 0
cloned = 20
killed = 4
cloned = 6
killed = 10
cloned = 11
killed = 1
cloned = 16
killed = 15
cloned = 18
killed = 7
cloned = 8
killed = 13
cloned = 3
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 21, 15, 18, 1, 16, 14, 17, 12, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 11, 0, 7, 5, 10, 19, 2, 6, 8, 22]
====================================
cloned = 13
killed = 9
cloned = 4
killed = 3
cloned = 11
killed = 21
cloned = 0
killed = 15
cloned = 7
killed = 18
cloned = 5
killed = 1
cloned = 10
killed = 16
cloned = 19
killed = 14
cloned = 2
killed = 17
cloned = 6
killed = 12
cloned = 8
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 12, 6, 19, 20, 17, 21, 8, 18, 16, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 1, 4, 2, 10, 15, 0, 11, 9, 14, 3, 22]
====================================
cloned = 5
killed = 13
cloned = 1
killed = 12
cloned = 4
killed = 6
cloned = 2
killed = 19
cloned = 10
killed = 20
cloned = 15
killed = 17
cloned = 0
killed = 21
cloned = 11
killed = 8
cloned = 9
killed = 18
cloned = 14
killed = 16
cloned = 3
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 14, 5, 20, 16, 19, 11, 1, 9, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 17, 15, 8, 7, 18, 3, 12, 13, 10, 4, 22]
====================================
cloned = 0
killed = 6
cloned = 17
killed = 2
cloned = 15
killed = 14
cloned = 8
killed = 5
cloned = 7
killed = 20
cloned = 18
killed = 16
cloned = 3
killed = 19
cloned = 12
killed = 11
cloned = 13
killed = 1
cloned = 10
killed = 9
cloned = 4
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 12, 1, 2, 19, 4, 14, 6, 7, 21, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 18, 17, 0, 3, 11, 9, 8, 5, 16, 22]
====================================
cloned = 10
killed = 15
cloned = 13
killed = 12
cloned = 18
killed = 1
cloned = 17
killed = 2
cloned = 0
killed = 19
cloned = 3
killed = 4
cloned = 11
killed = 14
cloned = 9
killed = 6
cloned = 8
killed = 7
cloned = 5
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 4, 1, 6, 20, 15, 17, 2, 5, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 9, 19, 7, 13, 0, 3, 18, 8, 14, 16, 22]
====================================
cloned = 12
killed = 11
cloned = 9
killed = 10
cloned = 19
killed = 4
cloned = 7
killed = 1
cloned = 13
killed = 6
cloned = 0
killed = 20
cloned = 3
killed = 15
cloned = 18
killed = 17
cloned = 8
killed = 2
cloned = 14
killed = 5
cloned = 16
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 15, 17, 6, 21, 1, 10, 14, 11, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 19, 16, 4, 20, 12, 18, 7, 13, 0, 9, 22]
====================================
cloned = 8
killed = 3
cloned = 19
killed = 15
cloned = 16
killed = 17
cloned = 4
killed = 6
cloned = 20
killed = 21
cloned = 12
killed = 1
cloned = 18
killed = 10
cloned = 7
killed = 14
cloned = 13
killed = 11
cloned = 0
killed = 5
cloned = 9
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 19, 10, 9, 4, 15, 20, 6, 16, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 14, 21, 18, 3, 1, 13, 5, 2, 0, 17, 22]
====================================
cloned = 8
killed = 7
cloned = 14
killed = 12
cloned = 21
killed = 19
cloned = 18
killed = 10
cloned = 3
killed = 9
cloned = 1
killed = 4
cloned = 13
killed = 15
cloned = 5
killed = 20
cloned = 2
killed = 6
cloned = 0
killed = 16
cloned = 17
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 12, 18, 2, 9, 4, 19, 21, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 20, 15, 13, 10, 8, 17, 0, 16, 14, 1, 22]
====================================
cloned = 3
killed = 5
cloned = 20
killed = 7
cloned = 15
killed = 12
cloned = 13
killed = 18
cloned = 10
killed = 2
cloned = 8
killed = 9
cloned = 17
killed = 4
cloned = 0
killed = 19
cloned = 16
killed = 21
cloned = 14
killed = 6
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 18, 5, 8, 17, 13, 4, 7, 1, 14, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 19, 0, 3, 20, 11, 9, 16, 10, 2, 22]
====================================
cloned = 12
killed = 21
cloned = 15
killed = 18
cloned = 19
killed = 5
cloned = 0
killed = 8
cloned = 3
killed = 17
cloned = 20
killed = 13
cloned = 11
killed = 4
cloned = 9
killed = 7
cloned = 16
killed = 1
cloned = 10
killed = 14
cloned = 2
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 4, 12, 20, 3, 5, 14, 11, 18, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 15, 10, 16, 8, 9, 2, 1, 0, 19, 7, 22]
====================================
cloned = 21
killed = 6
cloned = 15
killed = 13
cloned = 10
killed = 4
cloned = 16
killed = 12
cloned = 8
killed = 20
cloned = 9
killed = 3
cloned = 2
killed = 5
cloned = 1
killed = 14
cloned = 0
killed = 11
cloned = 19
killed = 18
cloned = 7
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 19, 14, 2, 10, 7, 17, 15, 0, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 9, 5, 20, 11, 3, 18, 16, 21, 13, 22]
====================================
cloned = 12
killed = 4
cloned = 6
killed = 19
cloned = 9
killed = 14
cloned = 5
killed = 2
cloned = 20
killed = 10
cloned = 11
killed = 7
cloned = 3
killed = 17
cloned = 18
killed = 15
cloned = 16
killed = 0
cloned = 21
killed = 8
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 19, 21, 20, 8, 17, 16, 11, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 10, 15, 13, 18, 2, 5, 1, 6, 7, 4, 22]
====================================
cloned = 14
killed = 12
cloned = 10
killed = 9
cloned = 15
killed = 19
cloned = 13
killed = 21
cloned = 18
killed = 20
cloned = 2
killed = 8
cloned = 5
killed = 17
cloned = 1
killed = 16
cloned = 6
killed = 11
cloned = 7
killed = 0
cloned = 4
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 20, 5, 2, 18, 7, 12, 4, 13, 0, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 6, 14, 10, 3, 16, 15, 19, 1, 21, 11, 22]
====================================
cloned = 8
killed = 17
cloned = 6
killed = 20
cloned = 14
killed = 5
cloned = 10
killed = 2
cloned = 3
killed = 18
cloned = 16
killed = 7
cloned = 15
killed = 12
cloned = 19
killed = 4
cloned = 1
killed = 13
cloned = 21
killed = 0
cloned = 11
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 11, 13, 10, 2, 16, 17, 21, 7, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 5, 12, 19, 9, 6, 20, 8, 4, 14, 18, 22]
====================================
cloned = 15
killed = 1
cloned = 5
killed = 3
cloned = 12
killed = 11
cloned = 19
killed = 13
cloned = 9
killed = 10
cloned = 6
killed = 2
cloned = 20
killed = 16
cloned = 8
killed = 17
cloned = 4
killed = 21
cloned = 14
killed = 7
cloned = 18
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 20, 21, 17, 10, 6, 3, 16, 12, 13, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 19, 5, 11, 4, 18, 9, 0, 7, 2, 8, 22]
====================================
cloned = 14
killed = 1
cloned = 19
killed = 20
cloned = 5
killed = 21
cloned = 11
killed = 17
cloned = 4
killed = 10
cloned = 18
killed = 6
cloned = 9
killed = 3
cloned = 0
killed = 16
cloned = 7
killed = 12
cloned = 2
killed = 13
cloned = 8
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 14, 8, 6, 2, 17, 5, 13, 0, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 15, 16, 12, 21, 7, 11, 3, 19, 4, 10, 22]
====================================
cloned = 18
killed = 20
cloned = 15
killed = 9
cloned = 16
killed = 14
cloned = 12
killed = 8
cloned = 21
killed = 6
cloned = 7
killed = 2
cloned = 11
killed = 17
cloned = 3
killed = 5
cloned = 19
killed = 13
cloned = 4
killed = 0
cloned = 10
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 21, 9, 20, 4, 12, 6, 18, 17, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 10, 7, 8, 5, 11, 3, 13, 15, 19, 2, 22]
====================================
cloned = 1
killed = 14
cloned = 10
killed = 0
cloned = 7
killed = 21
cloned = 8
killed = 9
cloned = 5
killed = 20
cloned = 11
killed = 4
cloned = 3
killed = 12
cloned = 13
killed = 6
cloned = 15
killed = 18
cloned = 19
killed = 17
cloned = 2
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 7, 14, 2, 6, 21, 1, 10, 18, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 8, 15, 4, 13, 16, 9, 3, 0, 5, 20, 22]
====================================
cloned = 19
killed = 12
cloned = 8
killed = 11
cloned = 15
killed = 7
cloned = 4
killed = 14
cloned = 13
killed = 2
cloned = 16
killed = 6
cloned = 9
killed = 21
cloned = 3
killed = 1
cloned = 0
killed = 10
cloned = 5
killed = 18
cloned = 20
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 7, 19, 20, 5, 16, 21, 4, 17, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 9, 6, 15, 2, 8, 18, 1, 13, 3, 14, 22]
====================================
cloned = 0
killed = 12
cloned = 9
killed = 11
cloned = 6
killed = 7
cloned = 15
killed = 19
cloned = 2
killed = 20
cloned = 8
killed = 5
cloned = 18
killed = 16
cloned = 1
killed = 21
cloned = 13
killed = 4
cloned = 3
killed = 17
cloned = 14
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 18, 6, 11, 14, 15, 0, 19, 4, 16, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 5, 20, 1, 2, 17, 7, 10, 21, 3, 22]
====================================
cloned = 8
killed = 12
cloned = 13
killed = 18
cloned = 5
killed = 6
cloned = 20
killed = 11
cloned = 1
killed = 14
cloned = 2
killed = 15
cloned = 17
killed = 0
cloned = 7
killed = 19
cloned = 10
killed = 4
cloned = 21
killed = 16
cloned = 3
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 14, 11, 7, 15, 4, 16, 8, 13, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 9, 21, 20, 18, 12, 2, 1, 3, 5, 19, 22]
====================================
cloned = 10
killed = 0
cloned = 9
killed = 6
cloned = 21
killed = 14
cloned = 20
killed = 11
cloned = 18
killed = 7
cloned = 12
killed = 15
cloned = 2
killed = 4
cloned = 1
killed = 16
cloned = 3
killed = 8
cloned = 5
killed = 13
cloned = 19
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 6, 7, 1, 9, 11, 19, 13, 17, 18, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 16, 8, 0, 10, 12, 20, 21, 3, 2, 14, 22]
====================================
cloned = 5
killed = 15
cloned = 16
killed = 6
cloned = 8
killed = 7
cloned = 0
killed = 1
cloned = 10
killed = 9
cloned = 12
killed = 11
cloned = 20
killed = 19
cloned = 21
killed = 13
cloned = 3
killed = 17
cloned = 2
killed = 18
cloned = 14
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 16, 4, 13, 19, 9, 8, 3, 2, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 1, 17, 11, 18, 0, 15, 21, 10, 12, 6, 22]
====================================
cloned = 20
killed = 14
cloned = 1
killed = 16
cloned = 17
killed = 4
cloned = 11
killed = 13
cloned = 18
killed = 19
cloned = 0
killed = 9
cloned = 15
killed = 8
cloned = 21
killed = 3
cloned = 10
killed = 2
cloned = 12
killed = 5
cloned = 6
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 16, 8, 17, 5, 14, 13, 19, 10, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 21, 3, 9, 18, 15, 1, 20, 11, 0, 6, 22]
====================================
cloned = 4
killed = 7
cloned = 21
killed = 2
cloned = 3
killed = 16
cloned = 9
killed = 8
cloned = 18
killed = 17
cloned = 15
killed = 5
cloned = 1
killed = 14
cloned = 20
killed = 13
cloned = 11
killed = 19
cloned = 0
killed = 10
cloned = 6
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 6, 8, 10, 17, 12, 1, 3, 4, 18, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 9, 20, 21, 11, 15, 13, 0, 14, 19, 5, 22]
====================================
cloned = 16
killed = 7
cloned = 9
killed = 6
cloned = 20
killed = 8
cloned = 21
killed = 10
cloned = 11
killed = 17
cloned = 15
killed = 12
cloned = 13
killed = 1
cloned = 0
killed = 3
cloned = 14
killed = 4
cloned = 19
killed = 18
cloned = 5
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 8, 7, 21, 18, 11, 16, 20, 9, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 5, 3, 2, 14, 17, 6, 15, 1, 13, 10, 22]
====================================
cloned = 19
killed = 0
cloned = 5
killed = 8
cloned = 3
killed = 7
cloned = 2
killed = 21
cloned = 14
killed = 18
cloned = 17
killed = 11
cloned = 6
killed = 16
cloned = 15
killed = 20
cloned = 1
killed = 9
cloned = 13
killed = 12
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 6, 9, 5, 0, 17, 15, 14, 19, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 10, 18, 3, 12, 7, 13, 21, 16, 8, 1, 22]
====================================
cloned = 4
killed = 11
cloned = 10
killed = 20
cloned = 18
killed = 6
cloned = 3
killed = 9
cloned = 12
killed = 5
cloned = 7
killed = 0
cloned = 13
killed = 17
cloned = 21
killed = 15
cloned = 16
killed = 14
cloned = 8
killed = 19
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 18, 1, 10, 4, 15, 0, 21, 2, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 17, 8, 5, 9, 6, 12, 11, 16, 7, 22]
====================================
cloned = 14
killed = 20
cloned = 13
killed = 3
cloned = 17
killed = 18
cloned = 8
killed = 1
cloned = 5
killed = 10
cloned = 9
killed = 4
cloned = 6
killed = 15
cloned = 12
killed = 0
cloned = 11
killed = 21
cloned = 16
killed = 2
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 0, 1, 12, 8, 2, 10, 16, 15, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 9, 6, 14, 4, 11, 18, 13, 21, 19, 3, 22]
====================================
cloned = 20
killed = 17
cloned = 9
killed = 0
cloned = 6
killed = 1
cloned = 14
killed = 12
cloned = 4
killed = 8
cloned = 11
killed = 2
cloned = 18
killed = 10
cloned = 13
killed = 16
cloned = 21
killed = 15
cloned = 19
killed = 7
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 20, 8, 21, 5, 19, 13, 14, 16, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 18, 7, 0, 17, 1, 2, 3, 9, 6, 12, 22]
====================================
cloned = 4
killed = 15
cloned = 18
killed = 20
cloned = 7
killed = 8
cloned = 0
killed = 21
cloned = 17
killed = 5
cloned = 1
killed = 19
cloned = 2
killed = 13
cloned = 3
killed = 14
cloned = 9
killed = 16
cloned = 6
killed = 10
cloned = 12
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 8, 21, 4, 20, 2, 9, 12, 16, 18, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 13, 6, 5, 14, 17, 1, 3, 11, 15, 22]
====================================
cloned = 10
killed = 0
cloned = 19
killed = 8
cloned = 13
killed = 21
cloned = 6
killed = 4
cloned = 5
killed = 20
cloned = 14
killed = 2
cloned = 17
killed = 9
cloned = 1
killed = 12
cloned = 3
killed = 16
cloned = 11
killed = 18
cloned = 15
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 18, 21, 20, 2, 6, 19, 16, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 15, 8, 17, 4, 14, 12, 11, 10, 13, 0, 22]
====================================
cloned = 1
killed = 9
cloned = 15
killed = 7
cloned = 8
killed = 18
cloned = 17
killed = 21
cloned = 4
killed = 20
cloned = 14
killed = 2
cloned = 12
killed = 6
cloned = 11
killed = 19
cloned = 10
killed = 16
cloned = 13
killed = 5
cloned = 0
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 19, 0, 9, 2, 3, 14, 5, 17, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 11, 1, 8, 6, 21, 13, 18, 4, 16, 7, 22]
====================================
cloned = 15
killed = 10
cloned = 11
killed = 12
cloned = 1
killed = 19
cloned = 8
killed = 0
cloned = 6
killed = 9
cloned = 21
killed = 2
cloned = 13
killed = 3
cloned = 18
killed = 14
cloned = 4
killed = 5
cloned = 16
killed = 17
cloned = 7
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 5, 21, 14, 1, 20, 10, 18, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 15, 0, 6, 8, 2, 17, 19, 13, 3, 11, 22]
====================================
cloned = 16
killed = 7
cloned = 15
killed = 12
cloned = 0
killed = 5
cloned = 6
killed = 21
cloned = 8
killed = 14
cloned = 2
killed = 1
cloned = 17
killed = 20
cloned = 19
killed = 10
cloned = 13
killed = 18
cloned = 3
killed = 4
cloned = 11
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 16, 15, 21, 13, 8, 11, 9, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 4, 14, 2, 3, 19, 20, 1, 0, 7, 18, 22]
====================================
cloned = 17
killed = 12
cloned = 4
killed = 10
cloned = 14
killed = 16
cloned = 2
killed = 15
cloned = 3
killed = 21
cloned = 19
killed = 13
cloned = 20
killed = 8
cloned = 1
killed = 11
cloned = 0
killed = 9
cloned = 7
killed = 5
cloned = 18
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 13, 19, 2, 11, 16, 5, 15, 1, 17, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 3, 4, 21, 20, 8, 9, 12, 10, 7, 0, 22]
====================================
cloned = 14
killed = 18
cloned = 3
killed = 13
cloned = 4
killed = 19
cloned = 21
killed = 2
cloned = 20
killed = 11
cloned = 8
killed = 16
cloned = 9
killed = 5
cloned = 12
killed = 15
cloned = 10
killed = 1
cloned = 7
killed = 17
cloned = 0
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 2, 11, 5, 15, 1, 0, 9, 18, 14, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 4, 19, 12, 10, 8, 3, 17, 6, 16, 21, 22]
====================================
cloned = 7
killed = 20
cloned = 4
killed = 2
cloned = 19
killed = 11
cloned = 12
killed = 5
cloned = 10
killed = 15
cloned = 8
killed = 1
cloned = 3
killed = 0
cloned = 17
killed = 9
cloned = 6
killed = 18
cloned = 16
killed = 14
cloned = 21
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 12, 13, 11, 8, 5, 18, 2, 20, 15, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 19, 14, 0, 1, 10, 17, 21, 9, 3, 4, 22]
====================================
cloned = 16
killed = 6
cloned = 19
killed = 12
cloned = 14
killed = 13
cloned = 0
killed = 11
cloned = 1
killed = 8
cloned = 10
killed = 5
cloned = 17
killed = 18
cloned = 21
killed = 2
cloned = 9
killed = 20
cloned = 3
killed = 15
cloned = 4
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 0, 12, 15, 5, 13, 7, 8, 1, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 18, 17, 20, 19, 11, 16, 6, 14, 9, 21, 22]
====================================
cloned = 2
killed = 4
cloned = 18
killed = 10
cloned = 17
killed = 0
cloned = 20
killed = 12
cloned = 19
killed = 15
cloned = 11
killed = 5
cloned = 16
killed = 13
cloned = 6
killed = 7
cloned = 14
killed = 8
cloned = 9
killed = 1
cloned = 21
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 20, 15, 16, 21, 1, 19, 7, 6, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 2, 14, 0, 3, 10, 12, 17, 13, 4, 11, 22]
====================================
cloned = 18
killed = 5
cloned = 2
killed = 20
cloned = 14
killed = 15
cloned = 0
killed = 16
cloned = 3
killed = 21
cloned = 10
killed = 1
cloned = 12
killed = 19
cloned = 17
killed = 7
cloned = 13
killed = 6
cloned = 4
killed = 9
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 20, 13, 18, 17, 14, 3, 9, 4, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 12, 15, 21, 1, 10, 6, 5, 11, 19, 0, 22]
====================================
cloned = 16
killed = 8
cloned = 12
killed = 20
cloned = 15
killed = 13
cloned = 21
killed = 18
cloned = 1
killed = 17
cloned = 10
killed = 14
cloned = 6
killed = 3
cloned = 5
killed = 9
cloned = 11
killed = 4
cloned = 19
killed = 7
cloned = 0
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 9, 19, 8, 6, 18, 5, 20, 21, 0, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 10, 17, 16, 4, 7, 1, 12, 3, 15, 13, 22]
====================================
cloned = 11
killed = 14
cloned = 10
killed = 9
cloned = 17
killed = 19
cloned = 16
killed = 8
cloned = 4
killed = 6
cloned = 7
killed = 18
cloned = 1
killed = 5
cloned = 12
killed = 20
cloned = 3
killed = 21
cloned = 15
killed = 0
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 6, 7, 2, 15, 16, 12, 19, 13, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 20, 5, 17, 11, 10, 21, 3, 0, 4, 14, 22]
====================================
cloned = 8
killed = 18
cloned = 20
killed = 9
cloned = 5
killed = 6
cloned = 17
killed = 7
cloned = 11
killed = 2
cloned = 10
killed = 15
cloned = 21
killed = 16
cloned = 3
killed = 12
cloned = 0
killed = 19
cloned = 4
killed = 13
cloned = 14
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 15, 9, 20, 18, 7, 5, 3, 11, 13, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 2, 21, 4, 6, 8, 17, 12, 0, 14, 10, 22]
====================================
cloned = 19
killed = 16
cloned = 2
killed = 15
cloned = 21
killed = 9
cloned = 4
killed = 20
cloned = 6
killed = 18
cloned = 8
killed = 7
cloned = 17
killed = 5
cloned = 12
killed = 3
cloned = 0
killed = 11
cloned = 14
killed = 13
cloned = 10
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 11, 14, 7, 16, 1, 4, 13, 18, 20, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 12, 10, 21, 0, 9, 3, 2, 19, 17, 22]
====================================
cloned = 15
killed = 6
cloned = 8
killed = 11
cloned = 12
killed = 14
cloned = 10
killed = 7
cloned = 21
killed = 16
cloned = 0
killed = 1
cloned = 9
killed = 4
cloned = 3
killed = 13
cloned = 2
killed = 18
cloned = 19
killed = 20
cloned = 17
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 21, 1, 4, 14, 8, 6, 5, 0, 15, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 20, 19, 13, 3, 18, 10, 2, 16, 9, 11, 22]
====================================
cloned = 12
killed = 7
cloned = 20
killed = 21
cloned = 19
killed = 1
cloned = 13
killed = 4
cloned = 3
killed = 14
cloned = 18
killed = 8
cloned = 10
killed = 6
cloned = 2
killed = 5
cloned = 16
killed = 0
cloned = 9
killed = 15
cloned = 11
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 10, 21, 19, 5, 3, 6, 8, 17, 20, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 4, 11, 1, 14, 15, 7, 0, 13, 16, 12, 22]
====================================
cloned = 2
killed = 18
cloned = 4
killed = 10
cloned = 11
killed = 21
cloned = 1
killed = 19
cloned = 14
killed = 5
cloned = 15
killed = 3
cloned = 7
killed = 6
cloned = 0
killed = 8
cloned = 13
killed = 17
cloned = 16
killed = 20
cloned = 12
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 14, 20, 10, 5, 4, 15, 7, 21, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 6, 12, 3, 1, 9, 18, 11, 0, 8, 19, 22]
====================================
cloned = 17
killed = 13
cloned = 6
killed = 14
cloned = 12
killed = 20
cloned = 3
killed = 10
cloned = 1
killed = 5
cloned = 9
killed = 4
cloned = 18
killed = 15
cloned = 11
killed = 7
cloned = 0
killed = 21
cloned = 8
killed = 16
cloned = 19
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 6, 18, 5, 17, 0, 14, 11, 10, 7, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 20, 15, 8, 3, 9, 21, 13, 4, 2, 12, 22]
====================================
cloned = 1
killed = 19
cloned = 20
killed = 6
cloned = 15
killed = 18
cloned = 8
killed = 5
cloned = 3
killed = 17
cloned = 9
killed = 0
cloned = 21
killed = 14
cloned = 13
killed = 11
cloned = 4
killed = 10
cloned = 2
killed = 7
cloned = 12
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 6, 17, 5, 2, 3, 21, 15, 20, 12, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 9, 0, 13, 7, 10, 16, 1, 14, 19, 18, 22]
====================================
cloned = 11
killed = 4
cloned = 9
killed = 6
cloned = 0
killed = 17
cloned = 13
killed = 5
cloned = 7
killed = 2
cloned = 10
killed = 3
cloned = 16
killed = 21
cloned = 1
killed = 15
cloned = 14
killed = 20
cloned = 19
killed = 12
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 16, 15, 7, 6, 0, 4, 11, 21, 5, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 17, 18, 3, 2, 9, 12, 1, 13, 8, 14, 22]
====================================
cloned = 10
killed = 19
cloned = 17
killed = 16
cloned = 18
killed = 15
cloned = 3
killed = 7
cloned = 2
killed = 6
cloned = 9
killed = 0
cloned = 12
killed = 4
cloned = 1
killed = 11
cloned = 13
killed = 21
cloned = 8
killed = 5
cloned = 14
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 17, 12, 11, 18, 21, 20, 9, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 8, 3, 0, 16, 19, 10, 14, 4, 5, 15, 22]
====================================
cloned = 13
killed = 1
cloned = 8
killed = 2
cloned = 3
killed = 17
cloned = 0
killed = 12
cloned = 16
killed = 11
cloned = 19
killed = 18
cloned = 10
killed = 21
cloned = 14
killed = 20
cloned = 4
killed = 9
cloned = 5
killed = 7
cloned = 15
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 14, 1, 13, 3, 11, 8, 16, 5, 0, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 10, 19, 12, 6, 18, 21, 4, 9, 2, 17, 22]
====================================
cloned = 20
killed = 15
cloned = 10
killed = 14
cloned = 19
killed = 1
cloned = 12
killed = 13
cloned = 6
killed = 3
cloned = 18
killed = 11
cloned = 21
killed = 8
cloned = 4
killed = 16
cloned = 9
killed = 5
cloned = 2
killed = 0
cloned = 17
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 13, 14, 8, 5, 0, 10, 15, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 19, 18, 21, 20, 17, 11, 9, 3, 16, 6, 22]
====================================
cloned = 1
killed = 7
cloned = 19
killed = 2
cloned = 18
killed = 13
cloned = 21
killed = 14
cloned = 20
killed = 8
cloned = 17
killed = 5
cloned = 11
killed = 0
cloned = 9
killed = 10
cloned = 3
killed = 15
cloned = 16
killed = 4
cloned = 6
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 20, 16, 18, 14, 19, 0, 7, 6, 4, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 11, 12, 5, 17, 3, 9, 13, 1, 15, 8, 22]
====================================
cloned = 10
killed = 2
cloned = 11
killed = 20
cloned = 12
killed = 16
cloned = 5
killed = 18
cloned = 17
killed = 14
cloned = 3
killed = 19
cloned = 9
killed = 0
cloned = 13
killed = 7
cloned = 1
killed = 6
cloned = 15
killed = 4
cloned = 8
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 21, 5, 10, 0, 20, 7, 9, 19, 1, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 6, 11, 15, 14, 3, 2, 13, 17, 8, 22]
====================================
cloned = 4
killed = 12
cloned = 16
killed = 21
cloned = 6
killed = 5
cloned = 11
killed = 10
cloned = 15
killed = 0
cloned = 14
killed = 20
cloned = 3
killed = 7
cloned = 2
killed = 9
cloned = 13
killed = 19
cloned = 17
killed = 1
cloned = 8
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 20, 11, 5, 14, 16, 6, 9, 2, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 10, 17, 12, 1, 21, 8, 0, 19, 18, 13, 22]
====================================
cloned = 15
killed = 7
cloned = 10
killed = 4
cloned = 17
killed = 20
cloned = 12
killed = 11
cloned = 1
killed = 5
cloned = 21
killed = 14
cloned = 8
killed = 16
cloned = 0
killed = 6
cloned = 19
killed = 9
cloned = 18
killed = 2
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 20, 18, 19, 1, 12, 14, 13, 21, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 0, 9, 10, 4, 11, 5, 3, 17, 6, 15, 22]
====================================
cloned = 16
killed = 7
cloned = 0
killed = 20
cloned = 9
killed = 18
cloned = 10
killed = 19
cloned = 4
killed = 1
cloned = 11
killed = 12
cloned = 5
killed = 14
cloned = 3
killed = 13
cloned = 17
killed = 21
cloned = 6
killed = 8
cloned = 15
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 15, 9, 3, 1, 4, 16, 10, 11, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 2, 14, 7, 18, 12, 13, 20, 0, 5, 19, 22]
====================================
cloned = 6
killed = 21
cloned = 2
killed = 17
cloned = 14
killed = 15
cloned = 7
killed = 9
cloned = 18
killed = 3
cloned = 12
killed = 1
cloned = 13
killed = 4
cloned = 20
killed = 16
cloned = 0
killed = 10
cloned = 5
killed = 11
cloned = 19
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 20, 9, 5, 12, 10, 14, 15, 1, 8, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 0, 7, 16, 11, 18, 13, 21, 4, 19, 6, 22]
====================================
cloned = 3
killed = 2
cloned = 0
killed = 20
cloned = 7
killed = 9
cloned = 16
killed = 5
cloned = 11
killed = 12
cloned = 18
killed = 10
cloned = 13
killed = 14
cloned = 21
killed = 15
cloned = 4
killed = 1
cloned = 19
killed = 8
cloned = 6
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 6, 15, 4, 7, 14, 19, 3, 12, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 16, 21, 9, 2, 5, 20, 13, 17, 8, 1, 22]
====================================
cloned = 0
killed = 18
cloned = 16
killed = 6
cloned = 21
killed = 15
cloned = 9
killed = 4
cloned = 2
killed = 7
cloned = 5
killed = 14
cloned = 20
killed = 19
cloned = 13
killed = 3
cloned = 17
killed = 12
cloned = 8
killed = 10
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 20, 16, 0, 10, 14, 11, 6, 18, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 9, 4, 1, 21, 15, 12, 8, 17, 5, 13, 22]
====================================
cloned = 3
killed = 19
cloned = 9
killed = 20
cloned = 4
killed = 16
cloned = 1
killed = 0
cloned = 21
killed = 10
cloned = 15
killed = 14
cloned = 12
killed = 11
cloned = 8
killed = 6
cloned = 17
killed = 18
cloned = 5
killed = 7
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 0, 8, 14, 13, 10, 21, 4, 12, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 2, 11, 17, 15, 19, 20, 18, 16, 6, 5, 22]
====================================
cloned = 1
killed = 9
cloned = 2
killed = 7
cloned = 11
killed = 0
cloned = 17
killed = 8
cloned = 15
killed = 14
cloned = 19
killed = 13
cloned = 20
killed = 10
cloned = 18
killed = 21
cloned = 16
killed = 4
cloned = 6
killed = 12
cloned = 5
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 18, 15, 17, 3, 11, 20, 7, 14, 19, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 9, 6, 5, 21, 16, 12, 1, 4, 8, 10, 22]
====================================
cloned = 13
killed = 2
cloned = 9
killed = 18
cloned = 6
killed = 15
cloned = 5
killed = 17
cloned = 21
killed = 3
cloned = 16
killed = 11
cloned = 12
killed = 20
cloned = 1
killed = 7
cloned = 4
killed = 14
cloned = 8
killed = 19
cloned = 10
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 4, 9, 10, 1, 8, 19, 6, 20, 16, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 7, 14, 13, 3, 18, 11, 0, 17, 21, 22]
====================================
cloned = 2
killed = 12
cloned = 15
killed = 4
cloned = 7
killed = 9
cloned = 14
killed = 10
cloned = 13
killed = 1
cloned = 3
killed = 8
cloned = 18
killed = 19
cloned = 11
killed = 6
cloned = 0
killed = 20
cloned = 17
killed = 16
cloned = 21
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 1, 17, 15, 3, 0, 10, 7, 8, 11, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 14, 9, 6, 5, 20, 16, 4, 2, 21, 12, 22]
====================================
cloned = 13
killed = 18
cloned = 14
killed = 1
cloned = 9
killed = 17
cloned = 6
killed = 15
cloned = 5
killed = 3
cloned = 20
killed = 0
cloned = 16
killed = 10
cloned = 4
killed = 7
cloned = 2
killed = 8
cloned = 21
killed = 11
cloned = 12
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 0, 2, 5, 8, 6, 19, 16, 14, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 15, 17, 21, 11, 7, 10, 12, 1, 20, 9, 22]
====================================
cloned = 18
killed = 13
cloned = 15
killed = 0
cloned = 17
killed = 2
cloned = 21
killed = 5
cloned = 11
killed = 8
cloned = 7
killed = 6
cloned = 10
killed = 19
cloned = 12
killed = 16
cloned = 1
killed = 14
cloned = 20
killed = 4
cloned = 9
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 14, 18, 5, 13, 7, 21, 2, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 0, 11, 8, 15, 6, 12, 16, 20, 3, 19, 22]
====================================
cloned = 17
killed = 1
cloned = 0
killed = 4
cloned = 11
killed = 14
cloned = 8
killed = 18
cloned = 15
killed = 5
cloned = 6
killed = 13
cloned = 12
killed = 7
cloned = 16
killed = 21
cloned = 20
killed = 2
cloned = 3
killed = 9
cloned = 19
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 14, 17, 16, 15, 20, 1, 13, 18, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 0, 8, 7, 9, 4, 12, 2, 3, 21, 6, 22]
====================================
cloned = 11
killed = 19
cloned = 0
killed = 14
cloned = 8
killed = 17
cloned = 7
killed = 16
cloned = 9
killed = 15
cloned = 4
killed = 20
cloned = 12
killed = 1
cloned = 2
killed = 13
cloned = 3
killed = 18
cloned = 21
killed = 5
cloned = 6
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 16, 21, 15, 18, 6, 8, 3, 0, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 12, 14, 10, 20, 2, 19, 5, 4, 13, 17, 22]
====================================
cloned = 7
killed = 1
cloned = 12
killed = 16
cloned = 14
killed = 21
cloned = 10
killed = 15
cloned = 20
killed = 18
cloned = 2
killed = 6
cloned = 19
killed = 8
cloned = 5
killed = 3
cloned = 4
killed = 0
cloned = 13
killed = 9
cloned = 17
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 2, 1, 14, 7, 18, 16, 17, 9, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 11, 10, 4, 21, 19, 12, 6, 5, 0, 15, 22]
====================================
cloned = 3
killed = 20
cloned = 11
killed = 2
cloned = 10
killed = 1
cloned = 4
killed = 14
cloned = 21
killed = 7
cloned = 19
killed = 18
cloned = 12
killed = 16
cloned = 6
killed = 17
cloned = 5
killed = 9
cloned = 0
killed = 13
cloned = 15
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 7, 9, 2, 0, 19, 21, 18, 14, 3, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 15, 4, 16, 11, 12, 6, 5, 17, 20, 1, 22]
====================================
cloned = 8
killed = 13
cloned = 15
killed = 7
cloned = 4
killed = 9
cloned = 16
killed = 2
cloned = 11
killed = 0
cloned = 12
killed = 19
cloned = 6
killed = 21
cloned = 5
killed = 18
cloned = 17
killed = 14
cloned = 20
killed = 3
cloned = 1
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 9, 17, 3, 7, 6, 5, 21, 19, 14, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 10, 20, 12, 4, 11, 2, 8, 1, 18, 16, 22]
====================================
cloned = 0
killed = 15
cloned = 10
killed = 9
cloned = 20
killed = 17
cloned = 12
killed = 3
cloned = 4
killed = 7
cloned = 11
killed = 6
cloned = 2
killed = 5
cloned = 8
killed = 21
cloned = 1
killed = 19
cloned = 18
killed = 14
cloned = 16
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 7, 4, 6, 10, 1, 19, 12, 2, 21, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 15, 13, 17, 0, 5, 14, 11, 16, 3, 8, 22]
====================================
cloned = 20
killed = 18
cloned = 15
killed = 7
cloned = 13
killed = 4
cloned = 17
killed = 6
cloned = 0
killed = 10
cloned = 5
killed = 1
cloned = 14
killed = 19
cloned = 11
killed = 12
cloned = 16
killed = 2
cloned = 3
killed = 21
cloned = 8
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 21, 8, 9, 15, 19, 4, 2, 11, 12, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 3, 0, 6, 10, 14, 18, 16, 7, 13, 17, 22]
====================================
cloned = 1
killed = 5
cloned = 3
killed = 21
cloned = 0
killed = 8
cloned = 6
killed = 9
cloned = 10
killed = 15
cloned = 14
killed = 19
cloned = 18
killed = 4
cloned = 16
killed = 2
cloned = 7
killed = 11
cloned = 13
killed = 12
cloned = 17
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 10, 5, 6, 13, 15, 21, 1, 17, 3, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 8, 12, 9, 7, 11, 14, 16, 2, 0, 20, 22]
====================================
cloned = 4
killed = 18
cloned = 8
killed = 10
cloned = 12
killed = 5
cloned = 9
killed = 6
cloned = 7
killed = 13
cloned = 11
killed = 15
cloned = 14
killed = 21
cloned = 16
killed = 1
cloned = 2
killed = 17
cloned = 0
killed = 3
cloned = 20
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 16, 17, 11, 18, 9, 10, 0, 21, 5, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 8, 20, 3, 2, 19, 12, 4, 6, 1, 13, 22]
====================================
cloned = 14
killed = 7
cloned = 8
killed = 16
cloned = 20
killed = 17
cloned = 3
killed = 11
cloned = 2
killed = 18
cloned = 19
killed = 9
cloned = 12
killed = 10
cloned = 4
killed = 0
cloned = 6
killed = 21
cloned = 1
killed = 5
cloned = 13
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 21, 3, 16, 7, 0, 13, 18, 14, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 10, 1, 8, 20, 6, 4, 5, 15, 19, 17, 22]
====================================
cloned = 9
killed = 11
cloned = 10
killed = 2
cloned = 1
killed = 21
cloned = 8
killed = 3
cloned = 20
killed = 16
cloned = 6
killed = 7
cloned = 4
killed = 0
cloned = 5
killed = 13
cloned = 15
killed = 18
cloned = 19
killed = 14
cloned = 17
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 19, 17, 11, 9, 7, 3, 6, 18, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 12, 21, 8, 14, 20, 1, 15, 5, 4, 13, 22]
====================================
cloned = 0
killed = 10
cloned = 12
killed = 19
cloned = 21
killed = 17
cloned = 8
killed = 11
cloned = 14
killed = 9
cloned = 20
killed = 7
cloned = 1
killed = 3
cloned = 15
killed = 6
cloned = 5
killed = 18
cloned = 4
killed = 16
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 1, 9, 6, 11, 3, 18, 13, 5, 16, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 17, 2, 7, 14, 12, 19, 4, 15, 21, 10, 22]
====================================
cloned = 20
killed = 0
cloned = 17
killed = 1
cloned = 2
killed = 9
cloned = 7
killed = 6
cloned = 14
killed = 11
cloned = 12
killed = 3
cloned = 19
killed = 18
cloned = 4
killed = 13
cloned = 15
killed = 5
cloned = 21
killed = 16
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 12, 0, 4, 2, 10, 16, 18, 9, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 5, 3, 1, 21, 20, 8, 6, 14, 13, 19, 22]
====================================
cloned = 17
killed = 7
cloned = 5
killed = 11
cloned = 3
killed = 12
cloned = 1
killed = 0
cloned = 21
killed = 4
cloned = 20
killed = 2
cloned = 8
killed = 10
cloned = 6
killed = 16
cloned = 14
killed = 18
cloned = 13
killed = 9
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 1, 8, 16, 7, 5, 15, 11, 21, 0, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 18, 6, 19, 20, 3, 2, 17, 13, 10, 12, 22]
====================================
cloned = 9
killed = 4
cloned = 18
killed = 1
cloned = 6
killed = 8
cloned = 19
killed = 16
cloned = 20
killed = 7
cloned = 3
killed = 5
cloned = 2
killed = 15
cloned = 17
killed = 11
cloned = 13
killed = 21
cloned = 10
killed = 0
cloned = 12
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 2, 14, 3, 5, 16, 12, 18, 19, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 13, 6, 21, 0, 8, 17, 10, 11, 20, 9, 22]
====================================
cloned = 15
killed = 7
cloned = 13
killed = 1
cloned = 6
killed = 2
cloned = 21
killed = 14
cloned = 0
killed = 3
cloned = 8
killed = 5
cloned = 17
killed = 16
cloned = 10
killed = 12
cloned = 11
killed = 18
cloned = 20
killed = 19
cloned = 9
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 8, 3, 19, 6, 0, 7, 9, 20, 10, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 11, 2, 1, 14, 15, 4, 16, 18, 21, 5, 22]
====================================
cloned = 12
killed = 13
cloned = 11
killed = 8
cloned = 2
killed = 3
cloned = 1
killed = 19
cloned = 14
killed = 6
cloned = 15
killed = 0
cloned = 4
killed = 7
cloned = 16
killed = 9
cloned = 18
killed = 20
cloned = 21
killed = 10
cloned = 5
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 15, 14, 11, 10, 17, 2, 5, 9, 3, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 1, 20, 6, 4, 7, 8, 21, 12, 0, 16, 22]
====================================
cloned = 19
killed = 13
cloned = 1
killed = 15
cloned = 20
killed = 14
cloned = 6
killed = 11
cloned = 4
killed = 10
cloned = 7
killed = 17
cloned = 8
killed = 2
cloned = 21
killed = 5
cloned = 12
killed = 9
cloned = 0
killed = 3
cloned = 16
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 21, 17, 10, 15, 13, 12, 5, 4, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 0, 1, 6, 3, 16, 20, 19, 8, 14, 22]
====================================
cloned = 7
killed = 11
cloned = 18
killed = 9
cloned = 0
killed = 21
cloned = 1
killed = 17
cloned = 6
killed = 10
cloned = 3
killed = 15
cloned = 16
killed = 13
cloned = 20
killed = 12
cloned = 19
killed = 5
cloned = 8
killed = 4
cloned = 14
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 20, 5, 19, 13, 0, 2, 14, 8, 17, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 3, 9, 15, 6, 4, 16, 10, 12, 11, 18, 22]
====================================
cloned = 1
killed = 21
cloned = 3
killed = 20
cloned = 9
killed = 5
cloned = 15
killed = 19
cloned = 6
killed = 13
cloned = 4
killed = 0
cloned = 16
killed = 2
cloned = 10
killed = 14
cloned = 12
killed = 8
cloned = 11
killed = 17
cloned = 18
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 17, 12, 13, 19, 7, 5, 14, 1, 11, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 21, 15, 10, 0, 2, 20, 8, 6, 18, 9, 22]
====================================
cloned = 4
killed = 3
cloned = 21
killed = 17
cloned = 15
killed = 12
cloned = 10
killed = 13
cloned = 0
killed = 19
cloned = 2
killed = 7
cloned = 20
killed = 5
cloned = 8
killed = 14
cloned = 6
killed = 1
cloned = 18
killed = 11
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 19, 18, 11, 6, 12, 21, 9, 8, 17, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 10, 16, 15, 5, 20, 7, 2, 1, 4, 13, 22]
====================================
cloned = 0
killed = 3
cloned = 10
killed = 19
cloned = 16
killed = 18
cloned = 15
killed = 11
cloned = 5
killed = 6
cloned = 20
killed = 12
cloned = 7
killed = 21
cloned = 2
killed = 9
cloned = 1
killed = 8
cloned = 4
killed = 17
cloned = 13
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 4, 19, 15, 8, 14, 12, 0, 9, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 7, 3, 5, 1, 2, 6, 13, 21, 18, 11, 22]
====================================
cloned = 17
killed = 10
cloned = 7
killed = 20
cloned = 3
killed = 4
cloned = 5
killed = 19
cloned = 1
killed = 15
cloned = 2
killed = 8
cloned = 6
killed = 14
cloned = 13
killed = 12
cloned = 21
killed = 0
cloned = 18
killed = 9
cloned = 11
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 18, 12, 20, 19, 3, 21, 6, 15, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 13, 9, 16, 10, 8, 17, 11, 5, 14, 2, 22]
====================================
cloned = 7
killed = 1
cloned = 13
killed = 4
cloned = 9
killed = 18
cloned = 16
killed = 12
cloned = 10
killed = 20
cloned = 8
killed = 19
cloned = 17
killed = 3
cloned = 11
killed = 21
cloned = 5
killed = 6
cloned = 14
killed = 15
cloned = 2
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 3, 10, 6, 17, 7, 0, 19, 2, 1, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 11, 13, 21, 9, 20, 16, 12, 4, 5, 8, 22]
====================================
cloned = 18
killed = 15
cloned = 11
killed = 3
cloned = 13
killed = 10
cloned = 21
killed = 6
cloned = 9
killed = 17
cloned = 20
killed = 7
cloned = 16
killed = 0
cloned = 12
killed = 19
cloned = 4
killed = 2
cloned = 5
killed = 1
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 19, 11, 18, 15, 12, 4, 21, 17, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 1, 14, 6, 20, 5, 13, 9, 0, 3, 16, 22]
====================================
cloned = 7
killed = 10
cloned = 1
killed = 2
cloned = 14
killed = 19
cloned = 6
killed = 11
cloned = 20
killed = 18
cloned = 5
killed = 15
cloned = 13
killed = 12
cloned = 9
killed = 4
cloned = 0
killed = 21
cloned = 3
killed = 17
cloned = 16
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 15, 2, 6, 16, 18, 9, 0, 14, 21, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 8, 13, 19, 20, 12, 10, 5, 11, 17, 1, 22]
====================================
cloned = 3
killed = 7
cloned = 8
killed = 15
cloned = 13
killed = 2
cloned = 19
killed = 6
cloned = 20
killed = 16
cloned = 12
killed = 18
cloned = 10
killed = 9
cloned = 5
killed = 0
cloned = 11
killed = 14
cloned = 17
killed = 21
cloned = 1
killed = 4
Trial run 1/seed 856:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.385,
  56.26,
  59.33,
  54.995,
  52.475,
  54.225,
  53.14,
  36.8,
  44.865,
  33.72,
  47.725,
  50.64999999999999,
  47.86999999999999,
  52.42,
  56.38999999999999,
  36.92,
  51.394999999999996,
  47.045,
  45.42,
  42.055,
  34.62500000000001,
  55.495,
  52.81],
 [65.7,
  64.58,
  65.75,
  62.870000000000005,
  62.42,
  62.16,
  61.045,
  65.7,
  64.355,
  65.75,
  62.870000000000005,
  62.28,
  62.160000000000004,
  63.540000000000006,
  58.54999999999998,
  61.985,
  62.58,
  63.540000000000006,
  58.769999999999996,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.330000000000005,
 56.6,
 59.309999999999995,
 54.825,
 52.12500000000001,
 53.635000000000005,
 55.37,
 37.0,
 44.85,
 32.79500000000001,
 47.910000000000004,
 50.839999999999996,
 45.624999999999986,
 52.43,
 56.05999999999999,
 37.019999999999996,
 51.615,
 49.015,
 45.75,
 44.10500000000001,
 34.755,
 55.644999999999996,
 53.06999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.615
Upper: 51.615
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.215,
 65.75,
 62.870000000000005,
 62.400000000000006,
 62.16,
 60.91,
 65.7,
 63.860000000000014,
 65.75,
 62.870000000000005,
 62.37,
 62.160000000000004,
 63.540000000000006,
 58.72999999999998,
 61.14,
 62.58,
 63.540000000000006,
 58.94,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 7, 4, 0, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 7
killed = 20
cloned = 4
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 7, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 21, 0, 20, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 21
killed = 7
cloned = 0
killed = 12
cloned = 20
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 9, 21, 20, 8, 0, 1, 2, 17, 19, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 14, 12, 4, 11, 10, 6, 13, 18, 7, 22]
====================================
cloned = 3
killed = 15
cloned = 16
killed = 9
cloned = 14
killed = 21
cloned = 12
killed = 20
cloned = 4
killed = 8
cloned = 11
killed = 0
cloned = 10
killed = 1
cloned = 6
killed = 2
cloned = 13
killed = 17
cloned = 18
killed = 19
cloned = 7
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 10, 14, 5, 16, 15, 6, 20, 3, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 1, 12, 18, 4, 7, 8, 19, 17, 13, 21, 22]
====================================
cloned = 0
killed = 2
cloned = 1
killed = 9
cloned = 12
killed = 10
cloned = 18
killed = 14
cloned = 4
killed = 5
cloned = 7
killed = 16
cloned = 8
killed = 15
cloned = 19
killed = 6
cloned = 17
killed = 20
cloned = 13
killed = 3
cloned = 21
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 13, 21, 5, 12, 14, 18, 3, 20, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 15, 0, 8, 19, 2, 17, 16, 4, 1, 11, 22]
====================================
cloned = 7
killed = 10
cloned = 15
killed = 6
cloned = 0
killed = 13
cloned = 8
killed = 21
cloned = 19
killed = 5
cloned = 2
killed = 12
cloned = 17
killed = 14
cloned = 16
killed = 18
cloned = 4
killed = 3
cloned = 1
killed = 20
cloned = 11
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 7, 14, 20, 11, 13, 5, 2, 17, 10, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 19, 3, 9, 4, 0, 16, 15, 1, 8, 21, 22]
====================================
cloned = 6
killed = 12
cloned = 19
killed = 7
cloned = 3
killed = 14
cloned = 9
killed = 20
cloned = 4
killed = 11
cloned = 0
killed = 13
cloned = 16
killed = 5
cloned = 15
killed = 2
cloned = 1
killed = 17
cloned = 8
killed = 10
cloned = 21
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 12, 13, 5, 19, 21, 1, 3, 15, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 18, 9, 14, 6, 17, 8, 16, 7, 0, 4, 22]
====================================
cloned = 2
killed = 10
cloned = 18
killed = 20
cloned = 9
killed = 12
cloned = 14
killed = 13
cloned = 6
killed = 5
cloned = 17
killed = 19
cloned = 8
killed = 21
cloned = 16
killed = 1
cloned = 7
killed = 3
cloned = 0
killed = 15
cloned = 4
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 19, 15, 16, 18, 7, 17, 4, 13, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 10, 12, 1, 2, 14, 20, 8, 6, 21, 3, 22]
====================================
cloned = 5
killed = 9
cloned = 10
killed = 0
cloned = 12
killed = 19
cloned = 1
killed = 15
cloned = 2
killed = 16
cloned = 14
killed = 18
cloned = 20
killed = 7
cloned = 8
killed = 17
cloned = 6
killed = 4
cloned = 21
killed = 13
cloned = 3
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 5, 11, 8, 10, 21, 20, 4, 7, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 0, 18, 2, 9, 16, 12, 6, 1, 14, 19, 22]
====================================
cloned = 17
killed = 3
cloned = 0
killed = 13
cloned = 18
killed = 5
cloned = 2
killed = 11
cloned = 9
killed = 8
cloned = 16
killed = 10
cloned = 12
killed = 21
cloned = 6
killed = 20
cloned = 1
killed = 4
cloned = 14
killed = 7
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 17, 10, 9, 12, 3, 11, 8, 0, 16, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 20, 13, 2, 4, 7, 15, 1, 21, 6, 18, 22]
====================================
cloned = 19
killed = 5
cloned = 20
killed = 17
cloned = 13
killed = 10
cloned = 2
killed = 9
cloned = 4
killed = 12
cloned = 7
killed = 3
cloned = 15
killed = 11
cloned = 1
killed = 8
cloned = 21
killed = 0
cloned = 6
killed = 16
cloned = 18
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 15, 18, 21, 6, 20, 17, 11, 4, 8, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 10, 14, 13, 9, 2, 3, 19, 7, 0, 1, 22]
====================================
cloned = 5
killed = 16
cloned = 10
killed = 15
cloned = 14
killed = 18
cloned = 13
killed = 21
cloned = 9
killed = 6
cloned = 2
killed = 20
cloned = 3
killed = 17
cloned = 19
killed = 11
cloned = 7
killed = 4
cloned = 0
killed = 8
cloned = 1
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 7, 9, 10, 16, 2, 11, 18, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 3, 6, 14, 17, 20, 21, 12, 19, 4, 0, 22]
====================================
cloned = 15
killed = 8
cloned = 3
killed = 13
cloned = 6
killed = 7
cloned = 14
killed = 9
cloned = 17
killed = 10
cloned = 20
killed = 16
cloned = 21
killed = 2
cloned = 12
killed = 11
cloned = 19
killed = 18
cloned = 4
killed = 5
cloned = 0
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 12, 5, 18, 8, 15, 21, 3, 9, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 2, 1, 19, 6, 0, 16, 11, 7, 4, 14, 22]
====================================
cloned = 17
killed = 10
cloned = 2
killed = 20
cloned = 1
killed = 12
cloned = 19
killed = 5
cloned = 6
killed = 18
cloned = 0
killed = 8
cloned = 16
killed = 15
cloned = 11
killed = 21
cloned = 7
killed = 3
cloned = 4
killed = 9
cloned = 14
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 7, 20, 3, 21, 6, 12, 19, 10, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 2, 9, 0, 15, 17, 16, 13, 1, 5, 14, 22]
====================================
cloned = 4
killed = 18
cloned = 2
killed = 7
cloned = 9
killed = 20
cloned = 0
killed = 3
cloned = 15
killed = 21
cloned = 17
killed = 6
cloned = 16
killed = 12
cloned = 13
killed = 19
cloned = 1
killed = 10
cloned = 5
killed = 8
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 5, 2, 3, 7, 8, 12, 17, 20, 1, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 4, 9, 14, 21, 18, 6, 13, 15, 0, 11, 22]
====================================
cloned = 16
killed = 19
cloned = 4
killed = 5
cloned = 9
killed = 2
cloned = 14
killed = 3
cloned = 21
killed = 7
cloned = 18
killed = 8
cloned = 6
killed = 12
cloned = 13
killed = 17
cloned = 15
killed = 20
cloned = 0
killed = 1
cloned = 11
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 13, 6, 0, 16, 12, 9, 10, 17, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 7, 5, 18, 14, 15, 2, 1, 19, 20, 21, 22]
====================================
cloned = 4
killed = 3
cloned = 7
killed = 11
cloned = 5
killed = 13
cloned = 18
killed = 6
cloned = 14
killed = 0
cloned = 15
killed = 16
cloned = 2
killed = 12
cloned = 1
killed = 9
cloned = 19
killed = 10
cloned = 20
killed = 17
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 21, 19, 17, 9, 6, 2, 4, 3, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 5, 13, 10, 0, 15, 16, 11, 8, 18, 14, 22]
====================================
cloned = 20
killed = 7
cloned = 5
killed = 21
cloned = 13
killed = 19
cloned = 10
killed = 17
cloned = 0
killed = 9
cloned = 15
killed = 6
cloned = 16
killed = 2
cloned = 11
killed = 4
cloned = 8
killed = 3
cloned = 18
killed = 12
cloned = 14
killed = 1
Trial run 2/seed 857:
..................................................
winner: Evolved FSM 6
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 23})]
--------------------------------------------------
Score:
[[61.330000000000005,
  56.6,
  59.309999999999995,
  54.825,
  52.12500000000001,
  53.635000000000005,
  55.37,
  37.0,
  44.85,
  32.79500000000001,
  47.910000000000004,
  50.839999999999996,
  45.624999999999986,
  52.43,
  56.05999999999999,
  37.019999999999996,
  51.615,
  49.015,
  45.75,
  44.10500000000001,
  34.755,
  55.644999999999996,
  53.06999999999999],
 [65.7,
  64.215,
  65.75,
  62.870000000000005,
  62.400000000000006,
  62.16,
  60.91,
  65.7,
  63.860000000000014,
  65.75,
  62.870000000000005,
  62.37,
  62.160000000000004,
  63.540000000000006,
  58.72999999999998,
  61.14,
  62.58,
  63.540000000000006,
  58.94,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.28000000000001,
 56.12,
 59.17,
 55.135,
 52.25499999999999,
 54.425000000000004,
 56.595,
 36.7,
 44.790000000000006,
 36.464999999999996,
 47.95,
 50.839999999999996,
 47.53999999999999,
 52.33,
 55.96999999999999,
 36.96,
 50.345,
 48.940000000000005,
 46.120000000000005,
 42.46000000000001,
 34.73500000000001,
 55.474999999999994,
 52.795]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 50.839999999999996
Upper: 50.839999999999996
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20]
lower threshold: [11]
....................................
upper threshold: [11]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 12
cloned = 5
killed = 15
cloned = 6
killed = 16
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 61.67,
 65.75,
 62.870000000000005,
 62.3,
 62.16,
 61.77,
 65.7,
 62.11500000000001,
 65.75,
 62.870000000000005,
 60.72,
 62.255,
 63.540000000000006,
 56.414999999999985,
 62.16,
 61.235,
 63.540000000000006,
 55.9,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.47
Upper: 62.47
====================================
lower list size: 11
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 5, 6, 8, 11, 12, 14, 15, 16, 18]
lower threshold: []
....................................
upper threshold: [19, 21]
upper:           [0, 2, 3, 7, 9, 10, 13, 17, 20, 22, 19, 21]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 4
cloned = 3
killed = 5
cloned = 7
killed = 6
cloned = 9
killed = 8
cloned = 10
killed = 11
cloned = 13
killed = 12
cloned = 17
killed = 14
cloned = 20
killed = 15
cloned = 22
killed = 16
cloned = 19
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 14, 13, 7, 1, 10, 16, 21, 20, 19, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 4, 17, 3, 6, 11, 12, 8, 2, 5, 0, 22]
====================================
cloned = 9
killed = 18
cloned = 4
killed = 14
cloned = 17
killed = 13
cloned = 3
killed = 7
cloned = 6
killed = 1
cloned = 11
killed = 10
cloned = 12
killed = 16
cloned = 8
killed = 21
cloned = 2
killed = 20
cloned = 5
killed = 19
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 13, 15, 9, 14, 16, 6, 17, 4, 7, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 20, 10, 1, 5, 12, 3, 18, 0, 8, 19, 22]
====================================
cloned = 11
killed = 2
cloned = 20
killed = 13
cloned = 10
killed = 15
cloned = 1
killed = 9
cloned = 5
killed = 14
cloned = 12
killed = 16
cloned = 3
killed = 6
cloned = 18
killed = 17
cloned = 0
killed = 4
cloned = 8
killed = 7
cloned = 19
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 14, 7, 6, 9, 21, 5, 1, 12, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 3, 8, 13, 2, 10, 4, 17, 19, 18, 15, 22]
====================================
cloned = 20
killed = 16
cloned = 3
killed = 14
cloned = 8
killed = 7
cloned = 13
killed = 6
cloned = 2
killed = 9
cloned = 10
killed = 21
cloned = 4
killed = 5
cloned = 17
killed = 1
cloned = 19
killed = 12
cloned = 18
killed = 0
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 3, 18, 11, 8, 2, 5, 0, 19, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 1, 17, 14, 21, 6, 4, 13, 7, 10, 9, 22]
====================================
cloned = 12
killed = 20
cloned = 1
killed = 16
cloned = 17
killed = 3
cloned = 14
killed = 18
cloned = 21
killed = 11
cloned = 6
killed = 8
cloned = 4
killed = 2
cloned = 13
killed = 5
cloned = 7
killed = 0
cloned = 10
killed = 19
cloned = 9
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 0, 19, 7, 14, 10, 3, 1, 9, 8, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 2, 15, 6, 16, 12, 17, 11, 13, 18, 20, 22]
====================================
cloned = 5
killed = 21
cloned = 2
killed = 0
cloned = 15
killed = 19
cloned = 6
killed = 7
cloned = 16
killed = 14
cloned = 12
killed = 10
cloned = 17
killed = 3
cloned = 11
killed = 1
cloned = 13
killed = 9
cloned = 18
killed = 8
cloned = 20
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 20, 15, 1, 4, 16, 18, 17, 0, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 11, 13, 6, 5, 19, 8, 2, 9, 21, 12, 22]
====================================
cloned = 14
killed = 3
cloned = 11
killed = 10
cloned = 13
killed = 20
cloned = 6
killed = 15
cloned = 5
killed = 1
cloned = 19
killed = 4
cloned = 8
killed = 16
cloned = 2
killed = 18
cloned = 9
killed = 17
cloned = 21
killed = 0
cloned = 12
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 19, 2, 1, 3, 13, 9, 16, 6, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 10, 0, 21, 11, 14, 18, 12, 8, 20, 17, 22]
====================================
cloned = 15
killed = 4
cloned = 10
killed = 19
cloned = 0
killed = 2
cloned = 21
killed = 1
cloned = 11
killed = 3
cloned = 14
killed = 13
cloned = 18
killed = 9
cloned = 12
killed = 16
cloned = 8
killed = 6
cloned = 20
killed = 5
cloned = 17
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 18, 10, 14, 6, 9, 1, 12, 7, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 2, 21, 4, 15, 17, 20, 5, 0, 11, 13, 22]
====================================
cloned = 19
killed = 3
cloned = 2
killed = 8
cloned = 21
killed = 18
cloned = 4
killed = 10
cloned = 15
killed = 14
cloned = 17
killed = 6
cloned = 20
killed = 9
cloned = 5
killed = 1
cloned = 0
killed = 12
cloned = 11
killed = 7
cloned = 13
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 21, 4, 18, 11, 16, 12, 5, 9, 20, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 15, 13, 14, 10, 19, 3, 7, 6, 2, 17, 22]
====================================
cloned = 8
killed = 0
cloned = 15
killed = 21
cloned = 13
killed = 4
cloned = 14
killed = 18
cloned = 10
killed = 11
cloned = 19
killed = 16
cloned = 3
killed = 12
cloned = 7
killed = 5
cloned = 6
killed = 9
cloned = 2
killed = 20
cloned = 17
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 7, 1, 21, 9, 11, 15, 17, 12, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 16, 18, 14, 5, 8, 2, 3, 20, 13, 6, 22]
====================================
cloned = 19
killed = 4
cloned = 16
killed = 7
cloned = 18
killed = 1
cloned = 14
killed = 21
cloned = 5
killed = 9
cloned = 8
killed = 11
cloned = 2
killed = 15
cloned = 3
killed = 17
cloned = 20
killed = 12
cloned = 13
killed = 10
cloned = 6
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 12, 19, 3, 17, 5, 15, 21, 8, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 6, 9, 16, 14, 7, 2, 18, 10, 4, 0, 22]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 20
cloned = 9
killed = 12
cloned = 16
killed = 19
cloned = 14
killed = 3
cloned = 7
killed = 17
cloned = 2
killed = 5
cloned = 18
killed = 15
cloned = 10
killed = 21
cloned = 4
killed = 8
cloned = 0
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 17, 5, 18, 13, 19, 11, 1, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 8, 12, 3, 7, 14, 2, 0, 16, 15, 10, 22]
====================================
cloned = 9
killed = 20
cloned = 8
killed = 21
cloned = 12
killed = 17
cloned = 3
killed = 5
cloned = 7
killed = 18
cloned = 14
killed = 13
cloned = 2
killed = 19
cloned = 0
killed = 11
cloned = 16
killed = 1
cloned = 15
killed = 6
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 18, 11, 16, 15, 2, 1, 21, 20, 6, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 3, 19, 17, 0, 10, 5, 12, 4, 8, 13, 22]
====================================
cloned = 9
killed = 7
cloned = 3
killed = 18
cloned = 19
killed = 11
cloned = 17
killed = 16
cloned = 0
killed = 15
cloned = 10
killed = 2
cloned = 5
killed = 1
cloned = 12
killed = 21
cloned = 4
killed = 20
cloned = 8
killed = 6
cloned = 13
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 15, 12, 6, 1, 11, 0, 9, 21, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 10, 20, 3, 16, 19, 18, 2, 13, 7, 14, 22]
====================================
cloned = 8
killed = 5
cloned = 10
killed = 4
cloned = 20
killed = 15
cloned = 3
killed = 12
cloned = 16
killed = 6
cloned = 19
killed = 1
cloned = 18
killed = 11
cloned = 2
killed = 0
cloned = 13
killed = 9
cloned = 7
killed = 21
cloned = 14
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 3, 16, 13, 11, 12, 10, 4, 0, 21, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 19, 2, 20, 8, 15, 1, 14, 9, 5, 22]
====================================
cloned = 6
killed = 17
cloned = 18
killed = 3
cloned = 19
killed = 16
cloned = 2
killed = 13
cloned = 20
killed = 11
cloned = 8
killed = 12
cloned = 15
killed = 10
cloned = 1
killed = 4
cloned = 14
killed = 0
cloned = 9
killed = 21
cloned = 5
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 15, 9, 18, 0, 16, 20, 3, 5, 14, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 12, 7, 11, 19, 6, 10, 2, 13, 17, 1, 22]
====================================
cloned = 21
killed = 8
cloned = 12
killed = 15
cloned = 7
killed = 9
cloned = 11
killed = 18
cloned = 19
killed = 0
cloned = 6
killed = 16
cloned = 10
killed = 20
cloned = 2
killed = 3
cloned = 13
killed = 5
cloned = 17
killed = 14
cloned = 1
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 21, 11, 9, 18, 16, 14, 10, 0, 12, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 7, 2, 5, 13, 8, 20, 1, 19, 4, 17, 22]
====================================
cloned = 15
killed = 6
cloned = 7
killed = 21
cloned = 2
killed = 11
cloned = 5
killed = 9
cloned = 13
killed = 18
cloned = 8
killed = 16
cloned = 20
killed = 14
cloned = 1
killed = 10
cloned = 19
killed = 0
cloned = 4
killed = 12
cloned = 17
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 20, 12, 11, 7, 21, 2, 4, 3, 18, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 6, 9, 10, 15, 8, 0, 1, 13, 14, 17, 22]
====================================
cloned = 19
killed = 5
cloned = 6
killed = 20
cloned = 9
killed = 12
cloned = 10
killed = 11
cloned = 15
killed = 7
cloned = 8
killed = 21
cloned = 0
killed = 2
cloned = 1
killed = 4
cloned = 13
killed = 3
cloned = 14
killed = 18
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 0, 14, 11, 6, 15, 9, 8, 2, 4, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 16, 21, 13, 10, 3, 17, 5, 7, 1, 18, 22]
====================================
cloned = 12
killed = 19
cloned = 16
killed = 0
cloned = 21
killed = 14
cloned = 13
killed = 11
cloned = 10
killed = 6
cloned = 3
killed = 15
cloned = 17
killed = 9
cloned = 5
killed = 8
cloned = 7
killed = 2
cloned = 1
killed = 4
cloned = 18
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 15, 0, 18, 17, 2, 6, 16, 19, 9, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 8, 13, 4, 11, 7, 20, 10, 1, 12, 3, 22]
====================================
cloned = 14
killed = 5
cloned = 8
killed = 15
cloned = 13
killed = 0
cloned = 4
killed = 18
cloned = 11
killed = 17
cloned = 7
killed = 2
cloned = 20
killed = 6
cloned = 10
killed = 16
cloned = 1
killed = 19
cloned = 12
killed = 9
cloned = 3
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 15, 6, 4, 2, 5, 12, 7, 17, 9, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 13, 19, 0, 11, 10, 21, 8, 3, 18, 22]
====================================
cloned = 20
killed = 1
cloned = 14
killed = 15
cloned = 13
killed = 6
cloned = 19
killed = 4
cloned = 0
killed = 2
cloned = 11
killed = 5
cloned = 10
killed = 12
cloned = 21
killed = 7
cloned = 8
killed = 17
cloned = 3
killed = 9
cloned = 18
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 21, 3, 17, 0, 14, 19, 20, 7, 13, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 9, 16, 12, 6, 11, 5, 2, 15, 1, 22]
====================================
cloned = 8
killed = 10
cloned = 4
killed = 21
cloned = 9
killed = 3
cloned = 16
killed = 17
cloned = 12
killed = 0
cloned = 6
killed = 14
cloned = 11
killed = 19
cloned = 5
killed = 20
cloned = 2
killed = 7
cloned = 15
killed = 13
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 1, 11, 18, 7, 20, 4, 19, 15, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 21, 6, 16, 8, 2, 0, 13, 10, 14, 17, 22]
====================================
cloned = 5
killed = 9
cloned = 21
killed = 12
cloned = 6
killed = 1
cloned = 16
killed = 11
cloned = 8
killed = 18
cloned = 2
killed = 7
cloned = 0
killed = 20
cloned = 13
killed = 4
cloned = 10
killed = 19
cloned = 14
killed = 15
cloned = 17
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 4, 17, 0, 16, 14, 7, 5, 21, 15, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 1, 13, 9, 6, 12, 10, 3, 2, 8, 20, 22]
====================================
cloned = 18
killed = 19
cloned = 1
killed = 4
cloned = 13
killed = 17
cloned = 9
killed = 0
cloned = 6
killed = 16
cloned = 12
killed = 14
cloned = 10
killed = 7
cloned = 3
killed = 5
cloned = 2
killed = 21
cloned = 8
killed = 15
cloned = 20
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 2, 4, 12, 16, 10, 0, 18, 21, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 17, 3, 6, 5, 1, 14, 15, 8, 20, 7, 22]
====================================
cloned = 19
killed = 9
cloned = 17
killed = 11
cloned = 3
killed = 2
cloned = 6
killed = 4
cloned = 5
killed = 12
cloned = 1
killed = 16
cloned = 14
killed = 10
cloned = 15
killed = 0
cloned = 8
killed = 18
cloned = 20
killed = 21
cloned = 7
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 11, 21, 2, 17, 15, 18, 14, 6, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 4, 20, 10, 5, 12, 1, 3, 0, 8, 7, 22]
====================================
cloned = 19
killed = 13
cloned = 4
killed = 16
cloned = 20
killed = 11
cloned = 10
killed = 21
cloned = 5
killed = 2
cloned = 12
killed = 17
cloned = 1
killed = 15
cloned = 3
killed = 18
cloned = 0
killed = 14
cloned = 8
killed = 6
cloned = 7
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 2, 3, 0, 12, 5, 10, 11, 9, 18, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 17, 15, 8, 19, 14, 20, 6, 1, 21, 7, 22]
====================================
cloned = 4
killed = 16
cloned = 17
killed = 2
cloned = 15
killed = 3
cloned = 8
killed = 0
cloned = 19
killed = 12
cloned = 14
killed = 5
cloned = 20
killed = 10
cloned = 6
killed = 11
cloned = 1
killed = 9
cloned = 21
killed = 18
cloned = 7
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 7, 11, 0, 8, 17, 14, 1, 3, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 21, 19, 6, 10, 13, 4, 12, 20, 15, 22]
====================================
cloned = 18
killed = 9
cloned = 5
killed = 2
cloned = 21
killed = 7
cloned = 19
killed = 11
cloned = 6
killed = 0
cloned = 10
killed = 8
cloned = 13
killed = 17
cloned = 4
killed = 14
cloned = 12
killed = 1
cloned = 20
killed = 3
cloned = 15
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 11, 0, 20, 2, 17, 4, 21, 16, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 12, 13, 15, 8, 18, 6, 5, 10, 19, 7, 22]
====================================
cloned = 1
killed = 9
cloned = 12
killed = 3
cloned = 13
killed = 11
cloned = 15
killed = 0
cloned = 8
killed = 20
cloned = 18
killed = 2
cloned = 6
killed = 17
cloned = 5
killed = 4
cloned = 10
killed = 21
cloned = 19
killed = 16
cloned = 7
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 21, 2, 14, 7, 11, 5, 1, 19, 10, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 3, 18, 6, 20, 0, 4, 15, 8, 12, 9, 22]
====================================
cloned = 17
killed = 13
cloned = 3
killed = 21
cloned = 18
killed = 2
cloned = 6
killed = 14
cloned = 20
killed = 7
cloned = 0
killed = 11
cloned = 4
killed = 5
cloned = 15
killed = 1
cloned = 8
killed = 19
cloned = 12
killed = 10
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 10, 16, 12, 14, 1, 7, 18, 8, 9, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 15, 17, 19, 3, 5, 4, 11, 21, 2, 6, 22]
====================================
cloned = 0
killed = 13
cloned = 15
killed = 10
cloned = 17
killed = 16
cloned = 19
killed = 12
cloned = 3
killed = 14
cloned = 5
killed = 1
cloned = 4
killed = 7
cloned = 11
killed = 18
cloned = 21
killed = 8
cloned = 2
killed = 9
cloned = 6
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 11, 8, 0, 3, 19, 18, 16, 1, 12, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 6, 17, 21, 4, 5, 20, 15, 7, 13, 10, 22]
====================================
cloned = 9
killed = 14
cloned = 6
killed = 11
cloned = 17
killed = 8
cloned = 21
killed = 0
cloned = 4
killed = 3
cloned = 5
killed = 19
cloned = 20
killed = 18
cloned = 15
killed = 16
cloned = 7
killed = 1
cloned = 13
killed = 12
cloned = 10
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 18, 5, 20, 9, 19, 21, 12, 11, 2, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 14, 3, 10, 4, 15, 0, 7, 6, 13, 1, 22]
====================================
cloned = 16
killed = 8
cloned = 14
killed = 18
cloned = 3
killed = 5
cloned = 10
killed = 20
cloned = 4
killed = 9
cloned = 15
killed = 19
cloned = 0
killed = 21
cloned = 7
killed = 12
cloned = 6
killed = 11
cloned = 13
killed = 2
cloned = 1
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 20, 3, 8, 5, 10, 9, 11, 18, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 7, 16, 1, 21, 12, 6, 19, 13, 4, 15, 22]
====================================
cloned = 17
killed = 0
cloned = 7
killed = 2
cloned = 16
killed = 20
cloned = 1
killed = 3
cloned = 21
killed = 8
cloned = 12
killed = 5
cloned = 6
killed = 10
cloned = 19
killed = 9
cloned = 13
killed = 11
cloned = 4
killed = 18
cloned = 15
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 12, 21, 8, 18, 20, 19, 13, 5, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 7, 4, 1, 0, 11, 6, 15, 3, 9, 22]
====================================
cloned = 14
killed = 16
cloned = 2
killed = 10
cloned = 7
killed = 12
cloned = 4
killed = 21
cloned = 1
killed = 8
cloned = 0
killed = 18
cloned = 11
killed = 20
cloned = 6
killed = 19
cloned = 15
killed = 13
cloned = 3
killed = 5
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 16, 20, 6, 7, 4, 2, 0, 15, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 17, 5, 19, 10, 18, 13, 14, 11, 21, 22]
====================================
cloned = 1
killed = 3
cloned = 8
killed = 12
cloned = 17
killed = 16
cloned = 5
killed = 20
cloned = 19
killed = 6
cloned = 10
killed = 7
cloned = 18
killed = 4
cloned = 13
killed = 2
cloned = 14
killed = 0
cloned = 11
killed = 15
cloned = 21
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 7, 9, 12, 13, 14, 21, 19, 1, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 3, 18, 4, 0, 8, 2, 16, 15, 10, 17, 22]
====================================
cloned = 5
killed = 20
cloned = 3
killed = 7
cloned = 18
killed = 9
cloned = 4
killed = 12
cloned = 0
killed = 13
cloned = 8
killed = 14
cloned = 2
killed = 21
cloned = 16
killed = 19
cloned = 15
killed = 1
cloned = 10
killed = 6
cloned = 17
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 18, 15, 6, 21, 10, 20, 16, 9, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 4, 1, 3, 8, 12, 13, 5, 17, 19, 14, 22]
====================================
cloned = 0
killed = 7
cloned = 4
killed = 18
cloned = 1
killed = 15
cloned = 3
killed = 6
cloned = 8
killed = 21
cloned = 12
killed = 10
cloned = 13
killed = 20
cloned = 5
killed = 16
cloned = 17
killed = 9
cloned = 19
killed = 2
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 3, 4, 15, 18, 12, 1, 19, 0, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 8, 14, 10, 5, 6, 17, 16, 2, 13, 11, 22]
====================================
cloned = 7
killed = 20
cloned = 8
killed = 9
cloned = 14
killed = 3
cloned = 10
killed = 4
cloned = 5
killed = 15
cloned = 6
killed = 18
cloned = 17
killed = 12
cloned = 16
killed = 1
cloned = 2
killed = 19
cloned = 13
killed = 0
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 16, 18, 13, 4, 11, 12, 9, 1, 8, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 21, 14, 7, 20, 6, 0, 2, 19, 10, 3, 22]
====================================
cloned = 5
killed = 15
cloned = 21
killed = 16
cloned = 14
killed = 18
cloned = 7
killed = 13
cloned = 20
killed = 4
cloned = 6
killed = 11
cloned = 0
killed = 12
cloned = 2
killed = 9
cloned = 19
killed = 1
cloned = 10
killed = 8
cloned = 3
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 10, 2, 11, 21, 8, 15, 14, 7, 9, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 16, 13, 12, 18, 17, 20, 0, 4, 6, 3, 22]
====================================
cloned = 19
killed = 1
cloned = 16
killed = 10
cloned = 13
killed = 2
cloned = 12
killed = 11
cloned = 18
killed = 21
cloned = 17
killed = 8
cloned = 20
killed = 15
cloned = 0
killed = 14
cloned = 4
killed = 7
cloned = 6
killed = 9
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 18, 6, 12, 4, 17, 20, 3, 13, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 8, 10, 9, 0, 14, 11, 5, 21, 15, 19, 22]
====================================
cloned = 16
killed = 7
cloned = 8
killed = 2
cloned = 10
killed = 18
cloned = 9
killed = 6
cloned = 0
killed = 12
cloned = 14
killed = 4
cloned = 11
killed = 17
cloned = 5
killed = 20
cloned = 21
killed = 3
cloned = 15
killed = 13
cloned = 19
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 9, 21, 13, 3, 12, 15, 1, 17, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 11, 8, 19, 5, 0, 4, 16, 6, 10, 20, 22]
====================================
cloned = 14
killed = 2
cloned = 11
killed = 7
cloned = 8
killed = 9
cloned = 19
killed = 21
cloned = 5
killed = 13
cloned = 0
killed = 3
cloned = 4
killed = 12
cloned = 16
killed = 15
cloned = 6
killed = 1
cloned = 10
killed = 17
cloned = 20
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 15, 3, 2, 10, 21, 1, 8, 0, 19, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 7, 18, 16, 13, 12, 17, 5, 6, 4, 11, 22]
====================================
cloned = 9
killed = 14
cloned = 7
killed = 15
cloned = 18
killed = 3
cloned = 16
killed = 2
cloned = 13
killed = 10
cloned = 12
killed = 21
cloned = 17
killed = 1
cloned = 5
killed = 8
cloned = 6
killed = 0
cloned = 4
killed = 19
cloned = 11
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 14, 21, 13, 18, 2, 8, 5, 7, 10, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 16, 4, 11, 6, 9, 15, 17, 3, 19, 0, 22]
====================================
cloned = 1
killed = 20
cloned = 16
killed = 14
cloned = 4
killed = 21
cloned = 11
killed = 13
cloned = 6
killed = 18
cloned = 9
killed = 2
cloned = 15
killed = 8
cloned = 17
killed = 5
cloned = 3
killed = 7
cloned = 19
killed = 10
cloned = 0
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 15, 21, 11, 10, 14, 0, 4, 5, 12, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 19, 6, 3, 17, 1, 18, 8, 13, 7, 9, 22]
====================================
cloned = 2
killed = 16
cloned = 19
killed = 15
cloned = 6
killed = 21
cloned = 3
killed = 11
cloned = 17
killed = 10
cloned = 1
killed = 14
cloned = 18
killed = 0
cloned = 8
killed = 4
cloned = 13
killed = 5
cloned = 7
killed = 12
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 9, 12, 8, 21, 0, 18, 15, 13, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 19, 1, 20, 11, 14, 10, 4, 6, 2, 16, 22]
====================================
cloned = 3
killed = 5
cloned = 19
killed = 7
cloned = 1
killed = 9
cloned = 20
killed = 12
cloned = 11
killed = 8
cloned = 14
killed = 21
cloned = 10
killed = 0
cloned = 4
killed = 18
cloned = 6
killed = 15
cloned = 2
killed = 13
cloned = 16
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 19, 6, 13, 16, 2, 15, 8, 4, 1, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 12, 18, 5, 21, 17, 9, 0, 7, 11, 3, 22]
====================================
cloned = 14
killed = 10
cloned = 12
killed = 19
cloned = 18
killed = 6
cloned = 5
killed = 13
cloned = 21
killed = 16
cloned = 17
killed = 2
cloned = 9
killed = 15
cloned = 0
killed = 8
cloned = 7
killed = 4
cloned = 11
killed = 1
cloned = 3
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 5, 20, 3, 2, 14, 18, 6, 10, 1, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 16, 8, 17, 11, 13, 4, 7, 12, 9, 19, 22]
====================================
cloned = 0
killed = 21
cloned = 16
killed = 5
cloned = 8
killed = 20
cloned = 17
killed = 3
cloned = 11
killed = 2
cloned = 13
killed = 14
cloned = 4
killed = 18
cloned = 7
killed = 6
cloned = 12
killed = 10
cloned = 9
killed = 1
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 9, 14, 0, 21, 3, 8, 18, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 17, 15, 16, 10, 13, 20, 19, 4, 12, 2, 22]
====================================
cloned = 11
killed = 6
cloned = 17
killed = 1
cloned = 15
killed = 9
cloned = 16
killed = 14
cloned = 10
killed = 0
cloned = 13
killed = 21
cloned = 20
killed = 3
cloned = 19
killed = 8
cloned = 4
killed = 18
cloned = 12
killed = 7
cloned = 2
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 7, 9, 21, 8, 14, 3, 1, 11, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 0, 4, 6, 19, 5, 10, 17, 18, 20, 15, 22]
====================================
cloned = 2
killed = 16
cloned = 0
killed = 12
cloned = 4
killed = 7
cloned = 6
killed = 9
cloned = 19
killed = 21
cloned = 5
killed = 8
cloned = 10
killed = 14
cloned = 17
killed = 3
cloned = 18
killed = 1
cloned = 20
killed = 11
cloned = 15
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 4, 10, 0, 9, 19, 16, 3, 1, 21, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 12, 8, 18, 2, 13, 14, 6, 5, 15, 7, 22]
====================================
cloned = 11
killed = 17
cloned = 12
killed = 4
cloned = 8
killed = 10
cloned = 18
killed = 0
cloned = 2
killed = 9
cloned = 13
killed = 19
cloned = 14
killed = 16
cloned = 6
killed = 3
cloned = 5
killed = 1
cloned = 15
killed = 21
cloned = 7
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 10, 18, 5, 2, 19, 21, 3, 8, 16, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 12, 20, 7, 4, 14, 11, 6, 17, 0, 13, 22]
====================================
cloned = 9
killed = 15
cloned = 12
killed = 10
cloned = 20
killed = 18
cloned = 7
killed = 5
cloned = 4
killed = 2
cloned = 14
killed = 19
cloned = 11
killed = 21
cloned = 6
killed = 3
cloned = 17
killed = 8
cloned = 0
killed = 16
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 18, 6, 10, 17, 4, 14, 3, 9, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 1, 5, 7, 15, 19, 12, 8, 2, 11, 21, 22]
====================================
cloned = 13
killed = 20
cloned = 1
killed = 0
cloned = 5
killed = 18
cloned = 7
killed = 6
cloned = 15
killed = 10
cloned = 19
killed = 17
cloned = 12
killed = 4
cloned = 8
killed = 14
cloned = 2
killed = 3
cloned = 11
killed = 9
cloned = 21
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 3, 12, 17, 5, 14, 1, 6, 7, 16, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 11, 4, 13, 10, 0, 9, 21, 20, 8, 2, 22]
====================================
cloned = 15
killed = 19
cloned = 11
killed = 3
cloned = 4
killed = 12
cloned = 13
killed = 17
cloned = 10
killed = 5
cloned = 0
killed = 14
cloned = 9
killed = 1
cloned = 21
killed = 6
cloned = 20
killed = 7
cloned = 8
killed = 16
cloned = 2
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 1, 17, 19, 7, 15, 5, 0, 10, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 14, 20, 13, 21, 9, 3, 6, 18, 2, 8, 22]
====================================
cloned = 16
killed = 11
cloned = 14
killed = 12
cloned = 20
killed = 1
cloned = 13
killed = 17
cloned = 21
killed = 19
cloned = 9
killed = 7
cloned = 3
killed = 15
cloned = 6
killed = 5
cloned = 18
killed = 0
cloned = 2
killed = 10
cloned = 8
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 3, 10, 13, 12, 20, 7, 11, 15, 21, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 6, 4, 16, 8, 18, 14, 5, 19, 0, 2, 22]
====================================
cloned = 9
killed = 17
cloned = 6
killed = 3
cloned = 4
killed = 10
cloned = 16
killed = 13
cloned = 8
killed = 12
cloned = 18
killed = 20
cloned = 14
killed = 7
cloned = 5
killed = 11
cloned = 19
killed = 15
cloned = 0
killed = 21
cloned = 2
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 8, 15, 18, 9, 3, 11, 5, 21, 14, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 10, 19, 1, 6, 0, 7, 4, 13, 2, 20, 22]
====================================
cloned = 16
killed = 17
cloned = 10
killed = 8
cloned = 19
killed = 15
cloned = 1
killed = 18
cloned = 6
killed = 9
cloned = 0
killed = 3
cloned = 7
killed = 11
cloned = 4
killed = 5
cloned = 13
killed = 21
cloned = 2
killed = 14
cloned = 20
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 8, 14, 6, 2, 3, 21, 20, 9, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 1, 5, 16, 12, 15, 18, 19, 11, 0, 13, 22]
====================================
cloned = 10
killed = 17
cloned = 1
killed = 7
cloned = 5
killed = 8
cloned = 16
killed = 14
cloned = 12
killed = 6
cloned = 15
killed = 2
cloned = 18
killed = 3
cloned = 19
killed = 21
cloned = 11
killed = 20
cloned = 0
killed = 9
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 20, 16, 15, 6, 4, 14, 18, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 2, 5, 3, 13, 1, 9, 17, 12, 8, 19, 22]
====================================
cloned = 10
killed = 21
cloned = 2
killed = 7
cloned = 5
killed = 20
cloned = 3
killed = 16
cloned = 13
killed = 15
cloned = 1
killed = 6
cloned = 9
killed = 4
cloned = 17
killed = 14
cloned = 12
killed = 18
cloned = 8
killed = 0
cloned = 19
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 21, 16, 11, 4, 1, 12, 7, 13, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 6, 10, 0, 20, 2, 9, 19, 15, 18, 14, 22]
====================================
cloned = 17
killed = 3
cloned = 6
killed = 21
cloned = 10
killed = 16
cloned = 0
killed = 11
cloned = 20
killed = 4
cloned = 2
killed = 1
cloned = 9
killed = 12
cloned = 19
killed = 7
cloned = 15
killed = 13
cloned = 18
killed = 5
cloned = 14
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 21, 16, 0, 12, 11, 7, 8, 4, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 3, 10, 19, 15, 20, 6, 14, 1, 18, 22]
====================================
cloned = 5
killed = 2
cloned = 13
killed = 9
cloned = 3
killed = 21
cloned = 10
killed = 16
cloned = 19
killed = 0
cloned = 15
killed = 12
cloned = 20
killed = 11
cloned = 6
killed = 7
cloned = 14
killed = 8
cloned = 1
killed = 4
cloned = 18
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 13, 2, 3, 5, 17, 11, 0, 14, 21, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 9, 10, 4, 1, 6, 20, 16, 18, 19, 22]
====================================
cloned = 15
killed = 7
cloned = 8
killed = 13
cloned = 9
killed = 2
cloned = 10
killed = 3
cloned = 4
killed = 5
cloned = 1
killed = 17
cloned = 6
killed = 11
cloned = 20
killed = 0
cloned = 16
killed = 14
cloned = 18
killed = 21
cloned = 19
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 20, 15, 17, 10, 11, 8, 13, 19, 7, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 6, 21, 9, 0, 12, 18, 5, 14, 1, 4, 22]
====================================
cloned = 2
killed = 16
cloned = 6
killed = 20
cloned = 21
killed = 15
cloned = 9
killed = 17
cloned = 0
killed = 10
cloned = 12
killed = 11
cloned = 18
killed = 8
cloned = 5
killed = 13
cloned = 14
killed = 19
cloned = 1
killed = 7
cloned = 4
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 14, 15, 4, 2, 21, 7, 12, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 11, 1, 0, 19, 18, 17, 20, 13, 10, 16, 22]
====================================
cloned = 5
killed = 6
cloned = 11
killed = 9
cloned = 1
killed = 14
cloned = 0
killed = 15
cloned = 19
killed = 4
cloned = 18
killed = 2
cloned = 17
killed = 21
cloned = 20
killed = 7
cloned = 13
killed = 12
cloned = 10
killed = 8
cloned = 16
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 9, 2, 16, 5, 0, 10, 14, 17, 8, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 12, 11, 1, 18, 21, 4, 13, 7, 6, 3, 22]
====================================
cloned = 20
killed = 15
cloned = 12
killed = 9
cloned = 11
killed = 2
cloned = 1
killed = 16
cloned = 18
killed = 5
cloned = 21
killed = 0
cloned = 4
killed = 10
cloned = 13
killed = 14
cloned = 7
killed = 17
cloned = 6
killed = 8
cloned = 3
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 19, 2, 14, 21, 20, 12, 11, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 5, 18, 0, 1, 16, 6, 9, 15, 17, 4, 22]
====================================
cloned = 13
killed = 3
cloned = 5
killed = 7
cloned = 18
killed = 19
cloned = 0
killed = 2
cloned = 1
killed = 14
cloned = 16
killed = 21
cloned = 6
killed = 20
cloned = 9
killed = 12
cloned = 15
killed = 11
cloned = 17
killed = 10
cloned = 4
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 7, 4, 12, 18, 10, 2, 1, 0, 3, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 5, 8, 14, 9, 6, 17, 16, 21, 13, 15, 22]
====================================
cloned = 19
killed = 20
cloned = 5
killed = 7
cloned = 8
killed = 4
cloned = 14
killed = 12
cloned = 9
killed = 18
cloned = 6
killed = 10
cloned = 17
killed = 2
cloned = 16
killed = 1
cloned = 21
killed = 0
cloned = 13
killed = 3
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 14, 15, 17, 3, 4, 11, 8, 20, 0, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 10, 21, 16, 7, 6, 2, 5, 19, 18, 9, 22]
====================================
cloned = 1
killed = 12
cloned = 10
killed = 14
cloned = 21
killed = 15
cloned = 16
killed = 17
cloned = 7
killed = 3
cloned = 6
killed = 4
cloned = 2
killed = 11
cloned = 5
killed = 8
cloned = 19
killed = 20
cloned = 18
killed = 0
cloned = 9
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 17, 12, 5, 15, 16, 9, 14, 0, 13, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 11, 20, 10, 2, 7, 1, 19, 8, 3, 21, 22]
====================================
cloned = 4
killed = 18
cloned = 11
killed = 17
cloned = 20
killed = 12
cloned = 10
killed = 5
cloned = 2
killed = 15
cloned = 7
killed = 16
cloned = 1
killed = 9
cloned = 19
killed = 14
cloned = 8
killed = 0
cloned = 3
killed = 13
cloned = 21
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 13, 12, 8, 4, 19, 6, 7, 17, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 0, 15, 2, 3, 18, 20, 9, 14, 21, 5, 22]
====================================
cloned = 1
killed = 16
cloned = 0
killed = 13
cloned = 15
killed = 12
cloned = 2
killed = 8
cloned = 3
killed = 4
cloned = 18
killed = 19
cloned = 20
killed = 6
cloned = 9
killed = 7
cloned = 14
killed = 17
cloned = 21
killed = 11
cloned = 5
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 20, 8, 2, 18, 0, 16, 3, 5, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 15, 11, 17, 12, 10, 4, 14, 7, 21, 19, 22]
====================================
cloned = 1
killed = 9
cloned = 15
killed = 20
cloned = 11
killed = 8
cloned = 17
killed = 2
cloned = 12
killed = 18
cloned = 10
killed = 0
cloned = 4
killed = 16
cloned = 14
killed = 3
cloned = 7
killed = 5
cloned = 21
killed = 6
cloned = 19
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 1, 8, 11, 21, 16, 7, 9, 5, 13, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 10, 3, 15, 12, 18, 20, 2, 19, 4, 0, 22]
====================================
cloned = 6
killed = 17
cloned = 10
killed = 1
cloned = 3
killed = 8
cloned = 15
killed = 11
cloned = 12
killed = 21
cloned = 18
killed = 16
cloned = 20
killed = 7
cloned = 2
killed = 9
cloned = 19
killed = 5
cloned = 4
killed = 13
cloned = 0
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 17, 1, 4, 3, 15, 14, 11, 13, 7, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 12, 20, 8, 16, 21, 2, 5, 10, 19, 22]
====================================
cloned = 6
killed = 9
cloned = 18
killed = 17
cloned = 12
killed = 1
cloned = 20
killed = 4
cloned = 8
killed = 3
cloned = 16
killed = 15
cloned = 21
killed = 14
cloned = 2
killed = 11
cloned = 5
killed = 13
cloned = 10
killed = 7
cloned = 19
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 8, 1, 5, 0, 14, 16, 20, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 9, 18, 15, 17, 13, 11, 2, 7, 19, 10, 22]
====================================
cloned = 21
killed = 3
cloned = 9
killed = 6
cloned = 18
killed = 8
cloned = 15
killed = 1
cloned = 17
killed = 5
cloned = 13
killed = 0
cloned = 11
killed = 14
cloned = 2
killed = 16
cloned = 7
killed = 20
cloned = 19
killed = 4
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 16, 12, 15, 2, 13, 10, 1, 19, 17, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 7, 20, 4, 11, 3, 0, 9, 8, 21, 5, 22]
====================================
cloned = 18
killed = 14
cloned = 7
killed = 16
cloned = 20
killed = 12
cloned = 4
killed = 15
cloned = 11
killed = 2
cloned = 3
killed = 13
cloned = 0
killed = 10
cloned = 9
killed = 1
cloned = 8
killed = 19
cloned = 21
killed = 17
cloned = 5
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 3, 15, 6, 20, 5, 1, 21, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 11, 4, 14, 2, 19, 0, 12, 18, 16, 22]
====================================
cloned = 8
killed = 17
cloned = 13
killed = 9
cloned = 11
killed = 3
cloned = 4
killed = 15
cloned = 14
killed = 6
cloned = 2
killed = 20
cloned = 19
killed = 5
cloned = 0
killed = 1
cloned = 12
killed = 21
cloned = 18
killed = 10
cloned = 16
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 17, 1, 14, 4, 16, 20, 7, 19, 5, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 10, 9, 11, 13, 6, 0, 21, 12, 8, 15, 22]
====================================
cloned = 3
killed = 2
cloned = 10
killed = 17
cloned = 9
killed = 1
cloned = 11
killed = 14
cloned = 13
killed = 4
cloned = 6
killed = 16
cloned = 0
killed = 20
cloned = 21
killed = 7
cloned = 12
killed = 19
cloned = 8
killed = 5
cloned = 15
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 20, 1, 3, 0, 6, 5, 8, 12, 10, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 7, 21, 9, 14, 19, 11, 17, 18, 15, 2, 22]
====================================
cloned = 16
killed = 13
cloned = 7
killed = 20
cloned = 21
killed = 1
cloned = 9
killed = 3
cloned = 14
killed = 0
cloned = 19
killed = 6
cloned = 11
killed = 5
cloned = 17
killed = 8
cloned = 18
killed = 12
cloned = 15
killed = 10
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 21, 20, 0, 18, 11, 13, 5, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 2, 19, 16, 6, 1, 14, 7, 17, 3, 22]
====================================
cloned = 15
killed = 12
cloned = 8
killed = 10
cloned = 2
killed = 21
cloned = 19
killed = 20
cloned = 16
killed = 0
cloned = 6
killed = 18
cloned = 1
killed = 11
cloned = 14
killed = 13
cloned = 7
killed = 5
cloned = 17
killed = 4
cloned = 3
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 2, 8, 11, 18, 14, 21, 0, 12, 9, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 19, 6, 13, 10, 1, 16, 15, 5, 3, 7, 22]
====================================
cloned = 20
killed = 17
cloned = 19
killed = 2
cloned = 6
killed = 8
cloned = 13
killed = 11
cloned = 10
killed = 18
cloned = 1
killed = 14
cloned = 16
killed = 21
cloned = 15
killed = 0
cloned = 5
killed = 12
cloned = 3
killed = 9
cloned = 7
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 8, 4, 6, 2, 9, 0, 7, 16, 5, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 10, 21, 11, 19, 12, 1, 15, 20, 13, 3, 22]
====================================
cloned = 14
killed = 18
cloned = 10
killed = 8
cloned = 21
killed = 4
cloned = 11
killed = 6
cloned = 19
killed = 2
cloned = 12
killed = 9
cloned = 1
killed = 0
cloned = 15
killed = 7
cloned = 20
killed = 16
cloned = 13
killed = 5
cloned = 3
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 8, 19, 7, 12, 18, 17, 11, 2, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 5, 21, 15, 20, 4, 3, 16, 13, 9, 14, 22]
====================================
cloned = 6
killed = 1
cloned = 5
killed = 8
cloned = 21
killed = 19
cloned = 15
killed = 7
cloned = 20
killed = 12
cloned = 4
killed = 18
cloned = 3
killed = 17
cloned = 16
killed = 11
cloned = 13
killed = 2
cloned = 9
killed = 10
cloned = 14
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 7, 1, 21, 20, 11, 0, 17, 16, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 9, 12, 19, 8, 18, 4, 5, 13, 14, 2, 22]
====================================
cloned = 3
killed = 15
cloned = 9
killed = 7
cloned = 12
killed = 1
cloned = 19
killed = 21
cloned = 8
killed = 20
cloned = 18
killed = 11
cloned = 4
killed = 0
cloned = 5
killed = 17
cloned = 13
killed = 16
cloned = 14
killed = 10
cloned = 2
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 18, 21, 11, 13, 4, 14, 5, 19, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 7, 16, 6, 2, 17, 15, 8, 9, 20, 3, 22]
====================================
cloned = 0
killed = 10
cloned = 7
killed = 18
cloned = 16
killed = 21
cloned = 6
killed = 11
cloned = 2
killed = 13
cloned = 17
killed = 4
cloned = 15
killed = 14
cloned = 8
killed = 5
cloned = 9
killed = 19
cloned = 20
killed = 1
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 5, 18, 4, 3, 2, 9, 21, 8, 11, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 16, 20, 0, 12, 6, 19, 13, 10, 7, 14, 22]
====================================
cloned = 17
killed = 15
cloned = 16
killed = 5
cloned = 20
killed = 18
cloned = 0
killed = 4
cloned = 12
killed = 3
cloned = 6
killed = 2
cloned = 19
killed = 9
cloned = 13
killed = 21
cloned = 10
killed = 8
cloned = 7
killed = 11
cloned = 14
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 14, 13, 0, 12, 16, 19, 5, 7, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 10, 21, 2, 4, 18, 17, 11, 9, 20, 6, 22]
====================================
cloned = 1
killed = 3
cloned = 10
killed = 8
cloned = 21
killed = 14
cloned = 2
killed = 13
cloned = 4
killed = 0
cloned = 18
killed = 12
cloned = 17
killed = 16
cloned = 11
killed = 19
cloned = 9
killed = 5
cloned = 20
killed = 7
cloned = 6
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 0, 7, 8, 5, 4, 12, 11, 21, 1, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 2, 13, 17, 3, 10, 6, 14, 19, 9, 15, 22]
====================================
cloned = 20
killed = 18
cloned = 2
killed = 0
cloned = 13
killed = 7
cloned = 17
killed = 8
cloned = 3
killed = 5
cloned = 10
killed = 4
cloned = 6
killed = 12
cloned = 14
killed = 11
cloned = 19
killed = 21
cloned = 9
killed = 1
cloned = 15
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 13, 3, 11, 4, 7, 8, 9, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 16, 15, 0, 20, 17, 18, 12, 21, 1, 22]
====================================
cloned = 10
killed = 5
cloned = 19
killed = 14
cloned = 16
killed = 13
cloned = 15
killed = 3
cloned = 0
killed = 11
cloned = 20
killed = 4
cloned = 17
killed = 7
cloned = 18
killed = 8
cloned = 12
killed = 9
cloned = 21
killed = 2
cloned = 1
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 14, 4, 2, 8, 15, 1, 5, 19, 18, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 12, 13, 7, 6, 9, 21, 10, 17, 0, 22]
====================================
cloned = 3
killed = 11
cloned = 16
killed = 14
cloned = 12
killed = 4
cloned = 13
killed = 2
cloned = 7
killed = 8
cloned = 6
killed = 15
cloned = 9
killed = 1
cloned = 21
killed = 5
cloned = 10
killed = 19
cloned = 17
killed = 18
cloned = 0
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 18, 7, 4, 20, 13, 2, 21, 11, 17, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 8, 9, 3, 10, 1, 6, 19, 15, 14, 5, 22]
====================================
cloned = 12
killed = 0
cloned = 8
killed = 18
cloned = 9
killed = 7
cloned = 3
killed = 4
cloned = 10
killed = 20
cloned = 1
killed = 13
cloned = 6
killed = 2
cloned = 19
killed = 21
cloned = 15
killed = 11
cloned = 14
killed = 17
cloned = 5
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 18, 15, 4, 10, 21, 20, 8, 2, 16, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 7, 5, 0, 9, 12, 3, 13, 6, 1, 17, 22]
====================================
cloned = 14
killed = 11
cloned = 7
killed = 18
cloned = 5
killed = 15
cloned = 0
killed = 4
cloned = 9
killed = 10
cloned = 12
killed = 21
cloned = 3
killed = 20
cloned = 13
killed = 8
cloned = 6
killed = 2
cloned = 1
killed = 16
cloned = 17
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 0, 12, 1, 5, 19, 21, 16, 18, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 6, 14, 17, 7, 10, 15, 9, 3, 20, 22]
====================================
cloned = 13
killed = 8
cloned = 4
killed = 0
cloned = 6
killed = 12
cloned = 14
killed = 1
cloned = 17
killed = 5
cloned = 7
killed = 19
cloned = 10
killed = 21
cloned = 15
killed = 16
cloned = 9
killed = 18
cloned = 3
killed = 11
cloned = 20
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 4, 15, 16, 14, 0, 2, 10, 1, 18, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 13, 6, 8, 12, 20, 19, 3, 11, 7, 22]
====================================
cloned = 9
killed = 21
cloned = 5
killed = 4
cloned = 13
killed = 15
cloned = 6
killed = 16
cloned = 8
killed = 14
cloned = 12
killed = 0
cloned = 20
killed = 2
cloned = 19
killed = 10
cloned = 3
killed = 1
cloned = 11
killed = 18
cloned = 7
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 17, 0, 19, 2, 3, 6, 10, 12, 13, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 11, 8, 5, 4, 16, 21, 15, 9, 18, 20, 22]
====================================
cloned = 1
killed = 14
cloned = 11
killed = 17
cloned = 8
killed = 0
cloned = 5
killed = 19
cloned = 4
killed = 2
cloned = 16
killed = 3
cloned = 21
killed = 6
cloned = 15
killed = 10
cloned = 9
killed = 12
cloned = 18
killed = 13
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 8, 0, 19, 3, 7, 11, 17, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 2, 4, 16, 18, 6, 20, 21, 13, 14, 15, 22]
====================================
cloned = 9
killed = 10
cloned = 2
killed = 5
cloned = 4
killed = 8
cloned = 16
killed = 0
cloned = 18
killed = 19
cloned = 6
killed = 3
cloned = 20
killed = 7
cloned = 21
killed = 11
cloned = 13
killed = 17
cloned = 14
killed = 1
cloned = 15
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 16, 13, 12, 6, 8, 20, 14, 21, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 3, 1, 19, 10, 11, 15, 17, 2, 0, 7, 22]
====================================
cloned = 4
killed = 5
cloned = 3
killed = 9
cloned = 1
killed = 16
cloned = 19
killed = 13
cloned = 10
killed = 12
cloned = 11
killed = 6
cloned = 15
killed = 8
cloned = 17
killed = 20
cloned = 2
killed = 14
cloned = 0
killed = 21
cloned = 7
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 6, 13, 14, 15, 1, 5, 11, 21, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 3, 18, 7, 9, 16, 8, 2, 0, 20, 4, 22]
====================================
cloned = 12
killed = 17
cloned = 3
killed = 10
cloned = 18
killed = 6
cloned = 7
killed = 13
cloned = 9
killed = 14
cloned = 16
killed = 15
cloned = 8
killed = 1
cloned = 2
killed = 5
cloned = 0
killed = 11
cloned = 20
killed = 21
cloned = 4
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 17, 13, 5, 15, 16, 14, 0, 1, 10, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 6, 20, 2, 18, 11, 21, 3, 8, 12, 9, 22]
====================================
cloned = 19
killed = 7
cloned = 6
killed = 17
cloned = 20
killed = 13
cloned = 2
killed = 5
cloned = 18
killed = 15
cloned = 11
killed = 16
cloned = 21
killed = 14
cloned = 3
killed = 0
cloned = 8
killed = 1
cloned = 12
killed = 10
cloned = 9
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 21, 13, 2, 17, 15, 18, 10, 12, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 20, 11, 4, 9, 3, 6, 14, 8, 1, 19, 22]
====================================
cloned = 0
killed = 16
cloned = 20
killed = 21
cloned = 11
killed = 13
cloned = 4
killed = 2
cloned = 9
killed = 17
cloned = 3
killed = 15
cloned = 6
killed = 18
cloned = 14
killed = 10
cloned = 8
killed = 12
cloned = 1
killed = 5
cloned = 19
killed = 7
Trial run 3/seed 858:
..................................................
winner: {'Tit For Tat', 'DBS: 0.75, 3, 4, 3, 5'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Grudger': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'DBS: 0.75, 3, 4, 3, 5': 4,
          'Evolved ANN 5': 3}),
 Counter({'Tit For Tat': 8,
          'Evolved FSM 16': 6,
          'Evolved FSM 6': 4,
          'Tit For 2 Tats': 4,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 16': 10,
          'Tit For Tat': 6,
          'Evolved FSM 6': 4,
          'Tit For 2 Tats': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 10,
          'Evolved FSM 16': 10,
          'Evolved FSM 6': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 10,
          'Evolved FSM 16': 10,
          'Evolved FSM 6': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 16': 10,
          'Tit For Tat': 10,
          'Evolved FSM 6': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 12,
          'Evolved FSM 16': 8,
          'Evolved FSM 6': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 12,
          'Evolved FSM 16': 8,
          'Evolved FSM 6': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 16': 4, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 16': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 16': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 16': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 16': 10, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 16': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 16': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 16': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 16': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 16': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 16': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 16': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 16': 2, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 22, 'DBS: 0.75, 3, 4, 3, 5': 1})]
--------------------------------------------------
Score:
[[61.28000000000001,
  56.12,
  59.17,
  55.135,
  52.25499999999999,
  54.425000000000004,
  56.595,
  36.7,
  44.790000000000006,
  36.464999999999996,
  47.95,
  50.839999999999996,
  47.53999999999999,
  52.33,
  55.96999999999999,
  36.96,
  50.345,
  48.940000000000005,
  46.120000000000005,
  42.46000000000001,
  34.73500000000001,
  55.474999999999994,
  52.795],
 [65.7,
  61.67,
  65.75,
  62.870000000000005,
  62.3,
  62.16,
  61.77,
  65.7,
  62.11500000000001,
  65.75,
  62.870000000000005,
  60.72,
  62.255,
  63.540000000000006,
  56.414999999999985,
  62.16,
  61.235,
  63.540000000000006,
  55.9,
  62.47,
  62.58,
  62.47,
  62.58],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.365,
 57.15,
 59.449999999999996,
 54.63,
 52.085,
 53.915,
 51.83999999999999,
 37.08,
 44.82,
 30.185000000000006,
 47.970000000000006,
 50.75999999999999,
 45.72,
 52.37,
 56.08999999999999,
 36.735,
 51.68,
 47.18,
 46.415,
 42.21,
 34.74000000000001,
 55.504999999999995,
 53.31999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.68
Upper: 51.68
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 63.89,
 65.75,
 62.870000000000005,
 62.375,
 62.16,
 61.97,
 65.7,
 65.14000000000001,
 65.75,
 62.870000000000005,
 62.37,
 62.160000000000004,
 63.540000000000006,
 58.65999999999998,
 60.72,
 62.58,
 63.540000000000006,
 58.56999999999999,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 7, 0, 4, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 7
killed = 20
cloned = 0
killed = 21
cloned = 4
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 4, 0, 20]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 7, 12, 21, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 7
killed = 4
cloned = 12
killed = 0
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 1, 5, 3, 7, 19, 10, 4, 11, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 8, 0, 15, 9, 13, 16, 18, 14, 2, 17, 22]
====================================
cloned = 21
killed = 20
cloned = 8
killed = 6
cloned = 0
killed = 1
cloned = 15
killed = 5
cloned = 9
killed = 3
cloned = 13
killed = 7
cloned = 16
killed = 19
cloned = 18
killed = 10
cloned = 14
killed = 4
cloned = 2
killed = 11
cloned = 17
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 3, 5, 20, 19, 16, 0, 8, 7, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 14, 12, 1, 4, 6, 17, 2, 15, 11, 21, 22]
====================================
cloned = 13
killed = 18
cloned = 14
killed = 3
cloned = 12
killed = 5
cloned = 1
killed = 20
cloned = 4
killed = 19
cloned = 6
killed = 16
cloned = 17
killed = 0
cloned = 2
killed = 8
cloned = 15
killed = 7
cloned = 11
killed = 9
cloned = 21
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 19, 7, 0, 13, 8, 10, 1, 5, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 21, 9, 14, 18, 15, 4, 17, 11, 3, 12, 22]
====================================
cloned = 6
killed = 20
cloned = 21
killed = 19
cloned = 9
killed = 7
cloned = 14
killed = 0
cloned = 18
killed = 13
cloned = 15
killed = 8
cloned = 4
killed = 10
cloned = 17
killed = 1
cloned = 11
killed = 5
cloned = 3
killed = 16
cloned = 12
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 6, 9, 8, 1, 5, 11, 4, 0, 20, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 18, 12, 7, 3, 2, 13, 21, 17, 10, 16, 22]
====================================
cloned = 14
killed = 19
cloned = 18
killed = 6
cloned = 12
killed = 9
cloned = 7
killed = 8
cloned = 3
killed = 1
cloned = 2
killed = 5
cloned = 13
killed = 11
cloned = 21
killed = 4
cloned = 17
killed = 0
cloned = 10
killed = 20
cloned = 16
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 13, 3, 14, 16, 5, 12, 15, 4, 18, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 11, 0, 9, 20, 1, 7, 19, 6, 8, 10, 22]
====================================
cloned = 2
killed = 17
cloned = 11
killed = 13
cloned = 0
killed = 3
cloned = 9
killed = 14
cloned = 20
killed = 16
cloned = 1
killed = 5
cloned = 7
killed = 12
cloned = 19
killed = 15
cloned = 6
killed = 4
cloned = 8
killed = 18
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 2, 8, 11, 16, 13, 12, 19, 21, 4, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 5, 10, 6, 3, 7, 18, 1, 20, 9, 0, 22]
====================================
cloned = 14
killed = 17
cloned = 5
killed = 2
cloned = 10
killed = 8
cloned = 6
killed = 11
cloned = 3
killed = 16
cloned = 7
killed = 13
cloned = 18
killed = 12
cloned = 1
killed = 19
cloned = 20
killed = 21
cloned = 9
killed = 4
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 12, 0, 18, 10, 16, 19, 3, 14, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 4, 13, 5, 17, 6, 8, 1, 7, 20, 21, 22]
====================================
cloned = 11
killed = 9
cloned = 4
killed = 15
cloned = 13
killed = 12
cloned = 5
killed = 0
cloned = 17
killed = 18
cloned = 6
killed = 10
cloned = 8
killed = 16
cloned = 1
killed = 19
cloned = 7
killed = 3
cloned = 20
killed = 14
cloned = 21
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 9, 2, 21, 6, 3, 16, 20, 7, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 4, 14, 8, 10, 17, 18, 5, 13, 1, 0, 22]
====================================
cloned = 19
killed = 12
cloned = 4
killed = 11
cloned = 14
killed = 9
cloned = 8
killed = 2
cloned = 10
killed = 21
cloned = 17
killed = 6
cloned = 18
killed = 3
cloned = 5
killed = 16
cloned = 13
killed = 20
cloned = 1
killed = 7
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 17, 10, 13, 12, 20, 8, 16, 1, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 21, 5, 0, 4, 18, 6, 9, 19, 14, 7, 22]
====================================
cloned = 15
killed = 3
cloned = 21
killed = 11
cloned = 5
killed = 17
cloned = 0
killed = 10
cloned = 4
killed = 13
cloned = 18
killed = 12
cloned = 6
killed = 20
cloned = 9
killed = 8
cloned = 19
killed = 16
cloned = 14
killed = 1
cloned = 7
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 21, 16, 4, 0, 18, 15, 3, 14, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 9, 11, 13, 1, 2, 6, 20, 19, 8, 12, 22]
====================================
cloned = 7
killed = 17
cloned = 9
killed = 21
cloned = 11
killed = 16
cloned = 13
killed = 4
cloned = 1
killed = 0
cloned = 2
killed = 18
cloned = 6
killed = 15
cloned = 20
killed = 3
cloned = 19
killed = 14
cloned = 8
killed = 10
cloned = 12
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 13, 1, 21, 16, 0, 12, 14, 18, 7, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 3, 15, 10, 8, 20, 2, 6, 17, 4, 11, 22]
====================================
cloned = 5
killed = 9
cloned = 3
killed = 13
cloned = 15
killed = 1
cloned = 10
killed = 21
cloned = 8
killed = 16
cloned = 20
killed = 0
cloned = 2
killed = 12
cloned = 6
killed = 14
cloned = 17
killed = 18
cloned = 4
killed = 7
cloned = 11
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 11, 18, 17, 6, 5, 12, 19, 15, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 0, 8, 21, 1, 7, 20, 10, 16, 13, 3, 22]
====================================
cloned = 2
killed = 4
cloned = 0
killed = 9
cloned = 8
killed = 11
cloned = 21
killed = 18
cloned = 1
killed = 17
cloned = 7
killed = 6
cloned = 20
killed = 5
cloned = 10
killed = 12
cloned = 16
killed = 19
cloned = 13
killed = 15
cloned = 3
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 19, 4, 14, 20, 6, 10, 11, 0, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 16, 8, 12, 5, 1, 21, 17, 3, 13, 22]
====================================
cloned = 7
killed = 15
cloned = 18
killed = 19
cloned = 16
killed = 4
cloned = 8
killed = 14
cloned = 12
killed = 20
cloned = 5
killed = 6
cloned = 1
killed = 10
cloned = 21
killed = 11
cloned = 17
killed = 0
cloned = 3
killed = 9
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 8, 16, 18, 21, 14, 10, 0, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 15, 11, 3, 5, 4, 7, 1, 9, 20, 19, 22]
====================================
cloned = 17
killed = 2
cloned = 15
killed = 12
cloned = 11
killed = 8
cloned = 3
killed = 16
cloned = 5
killed = 18
cloned = 4
killed = 21
cloned = 7
killed = 14
cloned = 1
killed = 10
cloned = 9
killed = 0
cloned = 20
killed = 6
cloned = 19
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 1, 0, 10, 5, 20, 21, 13, 7, 3, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 17, 6, 16, 18, 12, 9, 4, 2, 14, 11, 22]
====================================
cloned = 15
killed = 19
cloned = 17
killed = 1
cloned = 6
killed = 0
cloned = 16
killed = 10
cloned = 18
killed = 5
cloned = 12
killed = 20
cloned = 9
killed = 21
cloned = 4
killed = 13
cloned = 2
killed = 7
cloned = 14
killed = 3
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 3, 2, 20, 8, 10, 5, 17, 18, 7, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 15, 13, 16, 9, 0, 19, 12, 4, 11, 1, 22]
====================================
cloned = 6
killed = 21
cloned = 15
killed = 3
cloned = 13
killed = 2
cloned = 16
killed = 20
cloned = 9
killed = 8
cloned = 0
killed = 10
cloned = 19
killed = 5
cloned = 12
killed = 17
cloned = 4
killed = 18
cloned = 11
killed = 7
cloned = 1
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 15, 10, 5, 6, 21, 16, 3, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 11, 19, 18, 14, 2, 20, 1, 17, 12, 22]
====================================
cloned = 13
killed = 7
cloned = 4
killed = 0
cloned = 11
killed = 15
cloned = 19
killed = 10
cloned = 18
killed = 5
cloned = 14
killed = 6
cloned = 2
killed = 21
cloned = 20
killed = 16
cloned = 1
killed = 3
cloned = 17
killed = 9
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 20, 21, 14, 0, 16, 12, 9, 5, 2, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 7, 15, 11, 6, 19, 3, 8, 10, 18, 22]
====================================
cloned = 1
killed = 13
cloned = 4
killed = 20
cloned = 7
killed = 21
cloned = 15
killed = 14
cloned = 11
killed = 0
cloned = 6
killed = 16
cloned = 19
killed = 12
cloned = 3
killed = 9
cloned = 8
killed = 5
cloned = 10
killed = 2
cloned = 18
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 19, 6, 5, 1, 11, 17, 13, 7, 9, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 8, 16, 4, 14, 10, 3, 18, 20, 21, 15, 22]
====================================
cloned = 12
killed = 2
cloned = 8
killed = 19
cloned = 16
killed = 6
cloned = 4
killed = 5
cloned = 14
killed = 1
cloned = 10
killed = 11
cloned = 3
killed = 17
cloned = 18
killed = 13
cloned = 20
killed = 7
cloned = 21
killed = 9
cloned = 15
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 19, 13, 7, 16, 14, 1, 15, 8, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 2, 5, 17, 4, 6, 18, 9, 12, 20, 10, 22]
====================================
cloned = 11
killed = 21
cloned = 2
killed = 19
cloned = 5
killed = 13
cloned = 17
killed = 7
cloned = 4
killed = 16
cloned = 6
killed = 14
cloned = 18
killed = 1
cloned = 9
killed = 15
cloned = 12
killed = 8
cloned = 20
killed = 0
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 20, 9, 1, 16, 15, 13, 11, 17, 19, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 0, 3, 7, 21, 6, 4, 8, 2, 5, 18, 22]
====================================
cloned = 14
killed = 12
cloned = 0
killed = 20
cloned = 3
killed = 9
cloned = 7
killed = 1
cloned = 21
killed = 16
cloned = 6
killed = 15
cloned = 4
killed = 13
cloned = 8
killed = 11
cloned = 2
killed = 17
cloned = 5
killed = 19
cloned = 18
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 17, 18, 0, 7, 21, 9, 1, 8, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 3, 20, 14, 19, 10, 2, 16, 15, 11, 22]
====================================
cloned = 12
killed = 5
cloned = 4
killed = 17
cloned = 3
killed = 18
cloned = 20
killed = 0
cloned = 14
killed = 7
cloned = 19
killed = 21
cloned = 10
killed = 9
cloned = 2
killed = 1
cloned = 16
killed = 8
cloned = 15
killed = 6
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 17, 18, 11, 8, 14, 1, 3, 5, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 10, 15, 7, 21, 6, 20, 19, 16, 12, 0, 22]
====================================
cloned = 9
killed = 4
cloned = 10
killed = 2
cloned = 15
killed = 17
cloned = 7
killed = 18
cloned = 21
killed = 11
cloned = 6
killed = 8
cloned = 20
killed = 14
cloned = 19
killed = 1
cloned = 16
killed = 3
cloned = 12
killed = 5
cloned = 0
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 14, 10, 17, 0, 16, 5, 1, 11, 4, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 9, 2, 19, 3, 6, 7, 13, 12, 21, 8, 22]
====================================
cloned = 18
killed = 15
cloned = 9
killed = 14
cloned = 2
killed = 10
cloned = 19
killed = 17
cloned = 3
killed = 0
cloned = 6
killed = 16
cloned = 7
killed = 5
cloned = 13
killed = 1
cloned = 12
killed = 11
cloned = 21
killed = 4
cloned = 8
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 8, 4, 13, 12, 7, 21, 11, 15, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 16, 9, 19, 3, 10, 14, 18, 1, 17, 5, 22]
====================================
cloned = 0
killed = 20
cloned = 16
killed = 8
cloned = 9
killed = 4
cloned = 19
killed = 13
cloned = 3
killed = 12
cloned = 10
killed = 7
cloned = 14
killed = 21
cloned = 18
killed = 11
cloned = 1
killed = 15
cloned = 17
killed = 2
cloned = 5
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 15, 2, 16, 13, 3, 17, 0, 6, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 14, 20, 8, 12, 7, 1, 18, 4, 19, 11, 22]
====================================
cloned = 9
killed = 10
cloned = 14
killed = 5
cloned = 20
killed = 15
cloned = 8
killed = 2
cloned = 12
killed = 16
cloned = 7
killed = 13
cloned = 1
killed = 3
cloned = 18
killed = 17
cloned = 4
killed = 0
cloned = 19
killed = 6
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 10, 17, 12, 11, 1, 19, 3, 20, 2, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 4, 0, 9, 8, 18, 5, 16, 15, 6, 7, 22]
====================================
cloned = 21
killed = 14
cloned = 4
killed = 10
cloned = 0
killed = 17
cloned = 9
killed = 12
cloned = 8
killed = 11
cloned = 18
killed = 1
cloned = 5
killed = 19
cloned = 16
killed = 3
cloned = 15
killed = 20
cloned = 6
killed = 2
cloned = 7
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 17, 4, 5, 7, 19, 16, 14, 11, 8, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 0, 1, 2, 13, 15, 10, 3, 21, 6, 9, 22]
====================================
cloned = 18
killed = 20
cloned = 0
killed = 17
cloned = 1
killed = 4
cloned = 2
killed = 5
cloned = 13
killed = 7
cloned = 15
killed = 19
cloned = 10
killed = 16
cloned = 3
killed = 14
cloned = 21
killed = 11
cloned = 6
killed = 8
cloned = 9
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 16, 14, 10, 4, 6, 17, 7, 1, 15, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 2, 21, 20, 13, 8, 11, 9, 3, 5, 0, 22]
====================================
cloned = 19
killed = 12
cloned = 2
killed = 16
cloned = 21
killed = 14
cloned = 20
killed = 10
cloned = 13
killed = 4
cloned = 8
killed = 6
cloned = 11
killed = 17
cloned = 9
killed = 7
cloned = 3
killed = 1
cloned = 5
killed = 15
cloned = 0
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 12, 1, 10, 5, 3, 16, 6, 9, 13, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 2, 20, 11, 19, 14, 7, 15, 18, 17, 4, 22]
====================================
cloned = 8
killed = 21
cloned = 2
killed = 12
cloned = 20
killed = 1
cloned = 11
killed = 10
cloned = 19
killed = 5
cloned = 14
killed = 3
cloned = 7
killed = 16
cloned = 15
killed = 6
cloned = 18
killed = 9
cloned = 17
killed = 13
cloned = 4
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 2, 14, 12, 10, 16, 1, 0, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 11, 7, 15, 8, 17, 13, 21, 19, 5, 18, 22]
====================================
cloned = 9
killed = 3
cloned = 11
killed = 20
cloned = 7
killed = 2
cloned = 15
killed = 14
cloned = 8
killed = 12
cloned = 17
killed = 10
cloned = 13
killed = 16
cloned = 21
killed = 1
cloned = 19
killed = 0
cloned = 5
killed = 4
cloned = 18
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 21, 11, 15, 5, 6, 8, 9, 19, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 0, 2, 3, 18, 14, 17, 4, 7, 13, 12, 22]
====================================
cloned = 1
killed = 10
cloned = 0
killed = 20
cloned = 2
killed = 21
cloned = 3
killed = 11
cloned = 18
killed = 15
cloned = 14
killed = 5
cloned = 17
killed = 6
cloned = 4
killed = 8
cloned = 7
killed = 9
cloned = 13
killed = 19
cloned = 12
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 2, 3, 16, 21, 7, 14, 11, 19, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 17, 4, 10, 13, 18, 8, 5, 9, 15, 22]
====================================
cloned = 0
killed = 12
cloned = 6
killed = 1
cloned = 17
killed = 2
cloned = 4
killed = 3
cloned = 10
killed = 16
cloned = 13
killed = 21
cloned = 18
killed = 7
cloned = 8
killed = 14
cloned = 5
killed = 11
cloned = 9
killed = 19
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 13, 18, 11, 8, 4, 14, 10, 21, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 17, 19, 7, 15, 6, 9, 3, 2, 20, 12, 22]
====================================
cloned = 16
killed = 1
cloned = 17
killed = 5
cloned = 19
killed = 13
cloned = 7
killed = 18
cloned = 15
killed = 11
cloned = 6
killed = 8
cloned = 9
killed = 4
cloned = 3
killed = 14
cloned = 2
killed = 10
cloned = 20
killed = 21
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 12, 18, 8, 14, 16, 4, 15, 21, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 5, 19, 17, 9, 6, 0, 13, 11, 2, 10, 22]
====================================
cloned = 1
killed = 3
cloned = 5
killed = 20
cloned = 19
killed = 12
cloned = 17
killed = 18
cloned = 9
killed = 8
cloned = 6
killed = 14
cloned = 0
killed = 16
cloned = 13
killed = 4
cloned = 11
killed = 15
cloned = 2
killed = 21
cloned = 10
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 10, 7, 18, 12, 9, 13, 14, 4, 1, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 16, 17, 11, 8, 20, 19, 0, 3, 6, 15, 22]
====================================
cloned = 5
killed = 21
cloned = 16
killed = 10
cloned = 17
killed = 7
cloned = 11
killed = 18
cloned = 8
killed = 12
cloned = 20
killed = 9
cloned = 19
killed = 13
cloned = 0
killed = 14
cloned = 3
killed = 4
cloned = 6
killed = 1
cloned = 15
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 15, 19, 10, 1, 20, 4, 16, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 0, 13, 17, 2, 11, 3, 18, 12, 21, 9, 22]
====================================
cloned = 14
killed = 6
cloned = 0
killed = 5
cloned = 13
killed = 15
cloned = 17
killed = 19
cloned = 2
killed = 10
cloned = 11
killed = 1
cloned = 3
killed = 20
cloned = 18
killed = 4
cloned = 12
killed = 16
cloned = 21
killed = 8
cloned = 9
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 17, 3, 13, 14, 10, 4, 15, 16, 7, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 19, 21, 1, 20, 5, 2, 9, 18, 6, 12, 22]
====================================
cloned = 11
killed = 0
cloned = 19
killed = 17
cloned = 21
killed = 3
cloned = 1
killed = 13
cloned = 20
killed = 14
cloned = 5
killed = 10
cloned = 2
killed = 4
cloned = 9
killed = 15
cloned = 18
killed = 16
cloned = 6
killed = 7
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 20, 11, 16, 6, 21, 3, 8, 15, 18, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 14, 2, 0, 4, 12, 5, 9, 1, 7, 17, 22]
====================================
cloned = 10
killed = 19
cloned = 14
killed = 20
cloned = 2
killed = 11
cloned = 0
killed = 16
cloned = 4
killed = 6
cloned = 12
killed = 21
cloned = 5
killed = 3
cloned = 9
killed = 8
cloned = 1
killed = 15
cloned = 7
killed = 18
cloned = 17
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 19, 20, 21, 0, 17, 15, 14, 16, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 5, 4, 12, 9, 1, 13, 3, 8, 2, 18, 22]
====================================
cloned = 6
killed = 11
cloned = 5
killed = 10
cloned = 4
killed = 19
cloned = 12
killed = 20
cloned = 9
killed = 21
cloned = 1
killed = 0
cloned = 13
killed = 17
cloned = 3
killed = 15
cloned = 8
killed = 14
cloned = 2
killed = 16
cloned = 18
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 0, 1, 20, 13, 7, 19, 17, 2, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 12, 3, 6, 4, 14, 21, 10, 16, 5, 15, 22]
====================================
cloned = 11
killed = 18
cloned = 12
killed = 0
cloned = 3
killed = 1
cloned = 6
killed = 20
cloned = 4
killed = 13
cloned = 14
killed = 7
cloned = 21
killed = 19
cloned = 10
killed = 17
cloned = 16
killed = 2
cloned = 5
killed = 8
cloned = 15
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 1, 10, 3, 0, 16, 14, 9, 20, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 13, 18, 5, 17, 21, 7, 12, 2, 15, 8, 22]
====================================
cloned = 11
killed = 19
cloned = 13
killed = 1
cloned = 18
killed = 10
cloned = 5
killed = 3
cloned = 17
killed = 0
cloned = 21
killed = 16
cloned = 7
killed = 14
cloned = 12
killed = 9
cloned = 2
killed = 20
cloned = 15
killed = 4
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 19, 15, 9, 14, 12, 2, 7, 3, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 5, 21, 20, 4, 6, 8, 17, 1, 18, 0, 22]
====================================
cloned = 16
killed = 13
cloned = 5
killed = 19
cloned = 21
killed = 15
cloned = 20
killed = 9
cloned = 4
killed = 14
cloned = 6
killed = 12
cloned = 8
killed = 2
cloned = 17
killed = 7
cloned = 1
killed = 3
cloned = 18
killed = 11
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 4, 15, 13, 0, 10, 11, 19, 17, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 14, 8, 1, 6, 2, 5, 3, 20, 12, 21, 22]
====================================
cloned = 18
killed = 9
cloned = 14
killed = 7
cloned = 8
killed = 4
cloned = 1
killed = 15
cloned = 6
killed = 13
cloned = 2
killed = 0
cloned = 5
killed = 10
cloned = 3
killed = 11
cloned = 20
killed = 19
cloned = 12
killed = 17
cloned = 21
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 8, 6, 16, 4, 21, 19, 11, 1, 12, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 7, 14, 20, 2, 18, 0, 9, 10, 5, 13, 22]
====================================
cloned = 17
killed = 3
cloned = 7
killed = 8
cloned = 14
killed = 6
cloned = 20
killed = 16
cloned = 2
killed = 4
cloned = 18
killed = 21
cloned = 0
killed = 19
cloned = 9
killed = 11
cloned = 10
killed = 1
cloned = 5
killed = 12
cloned = 13
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 21, 9, 13, 0, 1, 18, 19, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 6, 3, 4, 17, 14, 20, 16, 2, 15, 8, 22]
====================================
cloned = 11
killed = 5
cloned = 6
killed = 7
cloned = 3
killed = 21
cloned = 4
killed = 9
cloned = 17
killed = 13
cloned = 14
killed = 0
cloned = 20
killed = 1
cloned = 16
killed = 18
cloned = 2
killed = 19
cloned = 15
killed = 12
cloned = 8
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 4, 11, 19, 0, 10, 6, 1, 7, 13, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 16, 9, 14, 12, 17, 2, 5, 15, 8, 18, 22]
====================================
cloned = 21
killed = 20
cloned = 16
killed = 4
cloned = 9
killed = 11
cloned = 14
killed = 19
cloned = 12
killed = 0
cloned = 17
killed = 10
cloned = 2
killed = 6
cloned = 5
killed = 1
cloned = 15
killed = 7
cloned = 8
killed = 13
cloned = 18
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 0, 6, 8, 7, 21, 4, 9, 1, 17, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 13, 19, 5, 11, 10, 15, 14, 18, 20, 3, 22]
====================================
cloned = 2
killed = 16
cloned = 13
killed = 0
cloned = 19
killed = 6
cloned = 5
killed = 8
cloned = 11
killed = 7
cloned = 10
killed = 21
cloned = 15
killed = 4
cloned = 14
killed = 9
cloned = 18
killed = 1
cloned = 20
killed = 17
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 16, 3, 2, 9, 8, 17, 4, 7, 21, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 5, 1, 20, 0, 10, 13, 14, 15, 12, 11, 22]
====================================
cloned = 19
killed = 6
cloned = 5
killed = 16
cloned = 1
killed = 3
cloned = 20
killed = 2
cloned = 0
killed = 9
cloned = 10
killed = 8
cloned = 13
killed = 17
cloned = 14
killed = 4
cloned = 15
killed = 7
cloned = 12
killed = 21
cloned = 11
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 21, 14, 5, 13, 8, 6, 2, 18, 3, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 0, 4, 1, 9, 12, 7, 11, 17, 20, 19, 22]
====================================
cloned = 10
killed = 16
cloned = 0
killed = 21
cloned = 4
killed = 14
cloned = 1
killed = 5
cloned = 9
killed = 13
cloned = 12
killed = 8
cloned = 7
killed = 6
cloned = 11
killed = 2
cloned = 17
killed = 18
cloned = 20
killed = 3
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 11, 2, 6, 10, 7, 3, 14, 0, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 17, 8, 4, 19, 15, 12, 16, 21, 1, 13, 22]
====================================
cloned = 5
killed = 18
cloned = 17
killed = 9
cloned = 8
killed = 11
cloned = 4
killed = 2
cloned = 19
killed = 6
cloned = 15
killed = 10
cloned = 12
killed = 7
cloned = 16
killed = 3
cloned = 21
killed = 14
cloned = 1
killed = 0
cloned = 13
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 19, 11, 9, 15, 21, 2, 3, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 16, 17, 0, 18, 20, 4, 8, 12, 14, 6, 22]
====================================
cloned = 13
killed = 7
cloned = 16
killed = 10
cloned = 17
killed = 19
cloned = 0
killed = 11
cloned = 18
killed = 9
cloned = 20
killed = 15
cloned = 4
killed = 21
cloned = 8
killed = 2
cloned = 12
killed = 3
cloned = 14
killed = 5
cloned = 6
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 3, 1, 5, 10, 13, 14, 21, 2, 6, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 20, 18, 9, 15, 0, 8, 19, 7, 11, 12, 22]
====================================
cloned = 16
killed = 17
cloned = 20
killed = 3
cloned = 18
killed = 1
cloned = 9
killed = 5
cloned = 15
killed = 10
cloned = 0
killed = 13
cloned = 8
killed = 14
cloned = 19
killed = 21
cloned = 7
killed = 2
cloned = 11
killed = 6
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 16, 19, 18, 17, 8, 7, 3, 11, 0, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 10, 15, 13, 4, 5, 1, 14, 2, 21, 12, 22]
====================================
cloned = 9
killed = 6
cloned = 10
killed = 16
cloned = 15
killed = 19
cloned = 13
killed = 18
cloned = 4
killed = 17
cloned = 5
killed = 8
cloned = 1
killed = 7
cloned = 14
killed = 3
cloned = 2
killed = 11
cloned = 21
killed = 0
cloned = 12
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 9, 6, 10, 20, 7, 0, 17, 2, 13, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 12, 14, 19, 15, 4, 21, 18, 8, 11, 1, 22]
====================================
cloned = 5
killed = 16
cloned = 12
killed = 9
cloned = 14
killed = 6
cloned = 19
killed = 10
cloned = 15
killed = 20
cloned = 4
killed = 7
cloned = 21
killed = 0
cloned = 18
killed = 17
cloned = 8
killed = 2
cloned = 11
killed = 13
cloned = 1
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 17, 6, 16, 0, 13, 3, 21, 9, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 7, 1, 5, 2, 8, 10, 18, 11, 19, 22]
====================================
cloned = 20
killed = 4
cloned = 14
killed = 15
cloned = 7
killed = 17
cloned = 1
killed = 6
cloned = 5
killed = 16
cloned = 2
killed = 0
cloned = 8
killed = 13
cloned = 10
killed = 3
cloned = 18
killed = 21
cloned = 11
killed = 9
cloned = 19
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 12, 6, 3, 17, 8, 2, 1, 16, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 10, 14, 4, 21, 0, 7, 19, 20, 13, 15, 22]
====================================
cloned = 5
killed = 18
cloned = 10
killed = 12
cloned = 14
killed = 6
cloned = 4
killed = 3
cloned = 21
killed = 17
cloned = 0
killed = 8
cloned = 7
killed = 2
cloned = 19
killed = 1
cloned = 20
killed = 16
cloned = 13
killed = 9
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 5, 4, 21, 17, 2, 20, 13, 6, 1, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 18, 15, 8, 12, 3, 10, 14, 7, 11, 9, 22]
====================================
cloned = 0
killed = 16
cloned = 18
killed = 5
cloned = 15
killed = 4
cloned = 8
killed = 21
cloned = 12
killed = 17
cloned = 3
killed = 2
cloned = 10
killed = 20
cloned = 14
killed = 13
cloned = 7
killed = 6
cloned = 11
killed = 1
cloned = 9
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 4, 19, 16, 12, 6, 13, 7, 17, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 14, 3, 0, 21, 2, 11, 15, 18, 8, 9, 22]
====================================
cloned = 10
killed = 20
cloned = 14
killed = 4
cloned = 3
killed = 19
cloned = 0
killed = 16
cloned = 21
killed = 12
cloned = 2
killed = 6
cloned = 11
killed = 13
cloned = 15
killed = 7
cloned = 18
killed = 17
cloned = 8
killed = 5
cloned = 9
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 7, 20, 2, 18, 21, 5, 0, 9, 11, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 19, 8, 13, 3, 17, 4, 10, 1, 6, 16, 22]
====================================
cloned = 12
killed = 14
cloned = 19
killed = 7
cloned = 8
killed = 20
cloned = 13
killed = 2
cloned = 3
killed = 18
cloned = 17
killed = 21
cloned = 4
killed = 5
cloned = 10
killed = 0
cloned = 1
killed = 9
cloned = 6
killed = 11
cloned = 16
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 0, 6, 3, 19, 4, 8, 15, 7, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 17, 14, 10, 11, 16, 2, 20, 5, 9, 22]
====================================
cloned = 21
killed = 12
cloned = 18
killed = 1
cloned = 17
killed = 0
cloned = 14
killed = 6
cloned = 10
killed = 3
cloned = 11
killed = 19
cloned = 16
killed = 4
cloned = 2
killed = 8
cloned = 20
killed = 15
cloned = 5
killed = 7
cloned = 9
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 8, 15, 4, 7, 14, 19, 12, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 13, 10, 2, 3, 6, 18, 5, 1, 17, 0, 22]
====================================
cloned = 21
killed = 20
cloned = 13
killed = 16
cloned = 10
killed = 8
cloned = 2
killed = 15
cloned = 3
killed = 4
cloned = 6
killed = 7
cloned = 18
killed = 14
cloned = 5
killed = 19
cloned = 1
killed = 12
cloned = 17
killed = 11
cloned = 0
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 17, 13, 11, 8, 4, 14, 12, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 2, 21, 18, 19, 10, 1, 0, 9, 15, 6, 22]
====================================
cloned = 3
killed = 20
cloned = 2
killed = 16
cloned = 21
killed = 17
cloned = 18
killed = 13
cloned = 19
killed = 11
cloned = 10
killed = 8
cloned = 1
killed = 4
cloned = 0
killed = 14
cloned = 9
killed = 12
cloned = 15
killed = 5
cloned = 6
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 0, 16, 9, 4, 18, 1, 15, 21, 2, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 17, 5, 12, 8, 7, 20, 10, 14, 11, 6, 22]
====================================
cloned = 13
killed = 19
cloned = 17
killed = 0
cloned = 5
killed = 16
cloned = 12
killed = 9
cloned = 8
killed = 4
cloned = 7
killed = 18
cloned = 20
killed = 1
cloned = 10
killed = 15
cloned = 14
killed = 21
cloned = 11
killed = 2
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 19, 2, 13, 5, 11, 17, 7, 10, 21, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 3, 6, 20, 4, 16, 12, 18, 0, 15, 14, 22]
====================================
cloned = 8
killed = 1
cloned = 3
killed = 19
cloned = 6
killed = 2
cloned = 20
killed = 13
cloned = 4
killed = 5
cloned = 16
killed = 11
cloned = 12
killed = 17
cloned = 18
killed = 7
cloned = 0
killed = 10
cloned = 15
killed = 21
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 17, 9, 4, 11, 8, 6, 3, 2, 1, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 15, 21, 10, 18, 16, 12, 0, 5, 13, 22]
====================================
cloned = 19
killed = 7
cloned = 14
killed = 17
cloned = 15
killed = 9
cloned = 21
killed = 4
cloned = 10
killed = 11
cloned = 18
killed = 8
cloned = 16
killed = 6
cloned = 12
killed = 3
cloned = 0
killed = 2
cloned = 5
killed = 1
cloned = 13
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 14, 7, 10, 2, 5, 18, 13, 9, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 20, 19, 0, 21, 16, 4, 17, 12, 3, 8, 22]
====================================
cloned = 11
killed = 15
cloned = 20
killed = 14
cloned = 19
killed = 7
cloned = 0
killed = 10
cloned = 21
killed = 2
cloned = 16
killed = 5
cloned = 4
killed = 18
cloned = 17
killed = 13
cloned = 12
killed = 9
cloned = 3
killed = 1
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 20, 11, 19, 5, 4, 13, 15, 10, 14, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 17, 16, 12, 8, 9, 18, 3, 2, 7, 1, 22]
====================================
cloned = 21
killed = 6
cloned = 17
killed = 20
cloned = 16
killed = 11
cloned = 12
killed = 19
cloned = 8
killed = 5
cloned = 9
killed = 4
cloned = 18
killed = 13
cloned = 3
killed = 15
cloned = 2
killed = 10
cloned = 7
killed = 14
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 12, 1, 4, 14, 5, 7, 17, 13, 16, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 9, 2, 6, 3, 10, 15, 18, 8, 21, 19, 22]
====================================
cloned = 11
killed = 20
cloned = 9
killed = 12
cloned = 2
killed = 1
cloned = 6
killed = 4
cloned = 3
killed = 14
cloned = 10
killed = 5
cloned = 15
killed = 7
cloned = 18
killed = 17
cloned = 8
killed = 13
cloned = 21
killed = 16
cloned = 19
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 10, 4, 9, 3, 1, 15, 16, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 8, 14, 7, 20, 19, 11, 0, 12, 21, 22]
====================================
cloned = 6
killed = 13
cloned = 18
killed = 17
cloned = 8
killed = 10
cloned = 14
killed = 4
cloned = 7
killed = 9
cloned = 20
killed = 3
cloned = 19
killed = 1
cloned = 11
killed = 15
cloned = 0
killed = 16
cloned = 12
killed = 5
cloned = 21
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 9, 15, 8, 10, 6, 5, 4, 7, 16, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 1, 2, 11, 0, 14, 18, 12, 20, 19, 21, 22]
====================================
cloned = 3
killed = 13
cloned = 1
killed = 9
cloned = 2
killed = 15
cloned = 11
killed = 8
cloned = 0
killed = 10
cloned = 14
killed = 6
cloned = 18
killed = 5
cloned = 12
killed = 4
cloned = 20
killed = 7
cloned = 19
killed = 16
cloned = 21
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 7, 16, 15, 21, 2, 13, 18, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 19, 14, 20, 9, 4, 1, 0, 5, 3, 11, 22]
====================================
cloned = 17
killed = 12
cloned = 19
killed = 8
cloned = 14
killed = 7
cloned = 20
killed = 16
cloned = 9
killed = 15
cloned = 4
killed = 21
cloned = 1
killed = 2
cloned = 0
killed = 13
cloned = 5
killed = 18
cloned = 3
killed = 6
cloned = 11
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 6, 15, 10, 9, 1, 14, 4, 20, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 2, 18, 21, 5, 12, 11, 17, 16, 19, 3, 22]
====================================
cloned = 13
killed = 8
cloned = 2
killed = 7
cloned = 18
killed = 6
cloned = 21
killed = 15
cloned = 5
killed = 10
cloned = 12
killed = 9
cloned = 11
killed = 1
cloned = 17
killed = 14
cloned = 16
killed = 4
cloned = 19
killed = 20
cloned = 3
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 18, 12, 14, 4, 15, 7, 16, 20, 17, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 6, 10, 9, 19, 1, 21, 11, 3, 5, 22]
====================================
cloned = 8
killed = 2
cloned = 13
killed = 18
cloned = 6
killed = 12
cloned = 10
killed = 14
cloned = 9
killed = 4
cloned = 19
killed = 15
cloned = 1
killed = 7
cloned = 21
killed = 16
cloned = 11
killed = 20
cloned = 3
killed = 17
cloned = 5
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 13, 12, 2, 1, 15, 11, 21, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 7, 20, 14, 16, 4, 3, 6, 9, 18, 19, 22]
====================================
cloned = 17
killed = 5
cloned = 7
killed = 8
cloned = 20
killed = 13
cloned = 14
killed = 12
cloned = 16
killed = 2
cloned = 4
killed = 1
cloned = 3
killed = 15
cloned = 6
killed = 11
cloned = 9
killed = 21
cloned = 18
killed = 10
cloned = 19
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 1, 0, 10, 7, 18, 19, 2, 11, 17, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 14, 16, 6, 13, 12, 20, 21, 3, 8, 9, 22]
====================================
cloned = 4
killed = 15
cloned = 14
killed = 1
cloned = 16
killed = 0
cloned = 6
killed = 10
cloned = 13
killed = 7
cloned = 12
killed = 18
cloned = 20
killed = 19
cloned = 21
killed = 2
cloned = 3
killed = 11
cloned = 8
killed = 17
cloned = 9
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 3, 2, 9, 4, 7, 10, 20, 11, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 1, 19, 14, 13, 5, 8, 21, 16, 18, 17, 22]
====================================
cloned = 6
killed = 15
cloned = 1
killed = 3
cloned = 19
killed = 2
cloned = 14
killed = 9
cloned = 13
killed = 4
cloned = 5
killed = 7
cloned = 8
killed = 10
cloned = 21
killed = 20
cloned = 16
killed = 11
cloned = 18
killed = 0
cloned = 17
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 17, 15, 9, 7, 8, 20, 6, 11, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 14, 4, 0, 10, 3, 1, 5, 2, 19, 12, 22]
====================================
cloned = 18
killed = 13
cloned = 14
killed = 16
cloned = 4
killed = 17
cloned = 0
killed = 15
cloned = 10
killed = 9
cloned = 3
killed = 7
cloned = 1
killed = 8
cloned = 5
killed = 20
cloned = 2
killed = 6
cloned = 19
killed = 11
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 13, 4, 5, 10, 11, 2, 3, 19, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 14, 8, 6, 21, 0, 12, 1, 16, 7, 22]
====================================
cloned = 20
killed = 9
cloned = 18
killed = 15
cloned = 14
killed = 13
cloned = 8
killed = 4
cloned = 6
killed = 5
cloned = 21
killed = 10
cloned = 0
killed = 11
cloned = 12
killed = 2
cloned = 1
killed = 3
cloned = 16
killed = 19
cloned = 7
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 13, 21, 4, 8, 12, 16, 11, 0, 1, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 3, 5, 15, 18, 19, 7, 9, 10, 17, 6, 22]
====================================
cloned = 20
killed = 14
cloned = 3
killed = 13
cloned = 5
killed = 21
cloned = 15
killed = 4
cloned = 18
killed = 8
cloned = 19
killed = 12
cloned = 7
killed = 16
cloned = 9
killed = 11
cloned = 10
killed = 0
cloned = 17
killed = 1
cloned = 6
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 17, 2, 20, 1, 5, 9, 21, 10, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 7, 3, 16, 4, 14, 11, 0, 13, 19, 18, 22]
====================================
cloned = 6
killed = 8
cloned = 7
killed = 12
cloned = 3
killed = 17
cloned = 16
killed = 2
cloned = 4
killed = 20
cloned = 14
killed = 1
cloned = 11
killed = 5
cloned = 0
killed = 9
cloned = 13
killed = 21
cloned = 19
killed = 10
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 20, 15, 10, 19, 3, 14, 11, 8, 21, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 12, 6, 18, 13, 4, 0, 17, 9, 5, 7, 22]
====================================
cloned = 2
killed = 1
cloned = 12
killed = 20
cloned = 6
killed = 15
cloned = 18
killed = 10
cloned = 13
killed = 19
cloned = 4
killed = 3
cloned = 0
killed = 14
cloned = 17
killed = 11
cloned = 9
killed = 8
cloned = 5
killed = 21
cloned = 7
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 12, 9, 1, 2, 16, 8, 11, 5, 19, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 6, 4, 7, 13, 17, 15, 0, 3, 14, 20, 22]
====================================
cloned = 21
killed = 18
cloned = 6
killed = 12
cloned = 4
killed = 9
cloned = 7
killed = 1
cloned = 13
killed = 2
cloned = 17
killed = 16
cloned = 15
killed = 8
cloned = 0
killed = 11
cloned = 3
killed = 5
cloned = 14
killed = 19
cloned = 20
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 21, 12, 18, 6, 2, 20, 7, 13, 8, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 17, 11, 14, 9, 5, 19, 0, 10, 16, 4, 22]
====================================
cloned = 1
killed = 3
cloned = 17
killed = 21
cloned = 11
killed = 12
cloned = 14
killed = 18
cloned = 9
killed = 6
cloned = 5
killed = 2
cloned = 19
killed = 20
cloned = 0
killed = 7
cloned = 10
killed = 13
cloned = 16
killed = 8
cloned = 4
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 21, 16, 4, 19, 18, 7, 17, 1, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 2, 5, 20, 15, 12, 8, 3, 14, 9, 10, 22]
====================================
cloned = 0
killed = 11
cloned = 2
killed = 21
cloned = 5
killed = 16
cloned = 20
killed = 4
cloned = 15
killed = 19
cloned = 12
killed = 18
cloned = 8
killed = 7
cloned = 3
killed = 17
cloned = 14
killed = 1
cloned = 9
killed = 6
cloned = 10
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 12, 21, 9, 16, 2, 5, 17, 18, 3, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 14, 4, 0, 13, 6, 10, 11, 15, 19, 22]
====================================
cloned = 1
killed = 7
cloned = 8
killed = 12
cloned = 14
killed = 21
cloned = 4
killed = 9
cloned = 0
killed = 16
cloned = 13
killed = 2
cloned = 6
killed = 5
cloned = 10
killed = 17
cloned = 11
killed = 18
cloned = 15
killed = 3
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 0, 1, 4, 13, 21, 16, 18, 9, 17, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 5, 10, 2, 19, 6, 14, 7, 20, 11, 22]
====================================
cloned = 15
killed = 12
cloned = 8
killed = 0
cloned = 5
killed = 1
cloned = 10
killed = 4
cloned = 2
killed = 13
cloned = 19
killed = 21
cloned = 6
killed = 16
cloned = 14
killed = 18
cloned = 7
killed = 9
cloned = 20
killed = 17
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 21, 6, 11, 19, 14, 16, 0, 13, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 2, 8, 7, 9, 4, 10, 3, 5, 20, 18, 22]
====================================
cloned = 17
killed = 15
cloned = 2
killed = 21
cloned = 8
killed = 6
cloned = 7
killed = 11
cloned = 9
killed = 19
cloned = 4
killed = 14
cloned = 10
killed = 16
cloned = 3
killed = 0
cloned = 5
killed = 13
cloned = 20
killed = 12
cloned = 18
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 20, 14, 4, 18, 19, 6, 12, 2, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 9, 17, 1, 0, 7, 21, 10, 5, 8, 13, 22]
====================================
cloned = 11
killed = 16
cloned = 9
killed = 3
cloned = 17
killed = 20
cloned = 1
killed = 14
cloned = 0
killed = 4
cloned = 7
killed = 18
cloned = 21
killed = 19
cloned = 10
killed = 6
cloned = 5
killed = 12
cloned = 8
killed = 2
cloned = 13
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 16, 12, 6, 5, 0, 8, 9, 21, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 15, 17, 1, 7, 20, 14, 2, 13, 18, 22]
====================================
cloned = 10
killed = 11
cloned = 19
killed = 16
cloned = 15
killed = 12
cloned = 17
killed = 6
cloned = 1
killed = 5
cloned = 7
killed = 0
cloned = 20
killed = 8
cloned = 14
killed = 9
cloned = 2
killed = 21
cloned = 13
killed = 3
cloned = 18
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 21, 11, 13, 17, 1, 3, 12, 20, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 2, 18, 5, 9, 16, 8, 19, 6, 15, 4, 22]
====================================
cloned = 10
killed = 14
cloned = 2
killed = 0
cloned = 18
killed = 21
cloned = 5
killed = 11
cloned = 9
killed = 13
cloned = 16
killed = 17
cloned = 8
killed = 1
cloned = 19
killed = 3
cloned = 6
killed = 12
cloned = 15
killed = 20
cloned = 4
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 19, 20, 16, 5, 21, 8, 11, 3, 13, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 0, 14, 18, 15, 10, 4, 9, 12, 7, 6, 22]
====================================
cloned = 17
killed = 1
cloned = 0
killed = 19
cloned = 14
killed = 20
cloned = 18
killed = 16
cloned = 15
killed = 5
cloned = 10
killed = 21
cloned = 4
killed = 8
cloned = 9
killed = 11
cloned = 12
killed = 3
cloned = 7
killed = 13
cloned = 6
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 13, 7, 11, 3, 15, 4, 17, 9, 14, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 10, 0, 21, 18, 20, 12, 16, 2, 8, 5, 22]
====================================
cloned = 19
killed = 1
cloned = 10
killed = 13
cloned = 0
killed = 7
cloned = 21
killed = 11
cloned = 18
killed = 3
cloned = 20
killed = 15
cloned = 12
killed = 4
cloned = 16
killed = 17
cloned = 2
killed = 9
cloned = 8
killed = 14
cloned = 5
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 9, 2, 7, 19, 13, 14, 20, 16, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 0, 1, 3, 6, 15, 17, 10, 18, 11, 12, 22]
====================================
cloned = 21
killed = 8
cloned = 0
killed = 5
cloned = 1
killed = 9
cloned = 3
killed = 2
cloned = 6
killed = 7
cloned = 15
killed = 19
cloned = 17
killed = 13
cloned = 10
killed = 14
cloned = 18
killed = 20
cloned = 11
killed = 16
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 1, 16, 0, 8, 5, 20, 6, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 7, 15, 19, 21, 14, 11, 2, 4, 13, 18, 22]
====================================
cloned = 10
killed = 17
cloned = 7
killed = 9
cloned = 15
killed = 1
cloned = 19
killed = 16
cloned = 21
killed = 0
cloned = 14
killed = 8
cloned = 11
killed = 5
cloned = 2
killed = 20
cloned = 4
killed = 6
cloned = 13
killed = 3
cloned = 18
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 16, 3, 20, 0, 14, 6, 9, 8, 2, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 7, 13, 4, 21, 18, 12, 19, 5, 11, 17, 22]
====================================
cloned = 10
killed = 1
cloned = 7
killed = 16
cloned = 13
killed = 3
cloned = 4
killed = 20
cloned = 21
killed = 0
cloned = 18
killed = 14
cloned = 12
killed = 6
cloned = 19
killed = 9
cloned = 5
killed = 8
cloned = 11
killed = 2
cloned = 17
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 0, 15, 1, 6, 11, 16, 9, 19, 13, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 8, 14, 4, 5, 21, 12, 10, 20, 17, 7, 22]
====================================
cloned = 3
killed = 18
cloned = 8
killed = 0
cloned = 14
killed = 15
cloned = 4
killed = 1
cloned = 5
killed = 6
cloned = 21
killed = 11
cloned = 12
killed = 16
cloned = 10
killed = 9
cloned = 20
killed = 19
cloned = 17
killed = 13
cloned = 7
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 20, 6, 9, 14, 5, 13, 19, 15, 8, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 2, 21, 10, 11, 12, 4, 18, 0, 17, 3, 22]
====================================
cloned = 7
killed = 1
cloned = 2
killed = 20
cloned = 21
killed = 6
cloned = 10
killed = 9
cloned = 11
killed = 14
cloned = 12
killed = 5
cloned = 4
killed = 13
cloned = 18
killed = 19
cloned = 0
killed = 15
cloned = 17
killed = 8
cloned = 3
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 21, 9, 4, 11, 7, 3, 5, 13, 6, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 14, 12, 2, 1, 0, 15, 8, 20, 17, 22]
====================================
cloned = 10
killed = 16
cloned = 19
killed = 21
cloned = 14
killed = 9
cloned = 12
killed = 4
cloned = 2
killed = 11
cloned = 1
killed = 7
cloned = 0
killed = 3
cloned = 15
killed = 5
cloned = 8
killed = 13
cloned = 20
killed = 6
cloned = 17
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 13, 17, 2, 4, 10, 12, 19, 9, 6, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 15, 8, 0, 7, 5, 1, 11, 21, 3, 22]
====================================
cloned = 20
killed = 14
cloned = 18
killed = 13
cloned = 15
killed = 17
cloned = 8
killed = 2
cloned = 0
killed = 4
cloned = 7
killed = 10
cloned = 5
killed = 12
cloned = 1
killed = 19
cloned = 11
killed = 9
cloned = 21
killed = 6
cloned = 3
killed = 16
Trial run 4/seed 859:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.365,
  57.15,
  59.449999999999996,
  54.63,
  52.085,
  53.915,
  51.83999999999999,
  37.08,
  44.82,
  30.185000000000006,
  47.970000000000006,
  50.75999999999999,
  45.72,
  52.37,
  56.08999999999999,
  36.735,
  51.68,
  47.18,
  46.415,
  42.21,
  34.74000000000001,
  55.504999999999995,
  53.31999999999999],
 [65.7,
  63.89,
  65.75,
  62.870000000000005,
  62.375,
  62.16,
  61.97,
  65.7,
  65.14000000000001,
  65.75,
  62.870000000000005,
  62.37,
  62.160000000000004,
  63.540000000000006,
  58.65999999999998,
  60.72,
  62.58,
  63.540000000000006,
  58.56999999999999,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.59000000000001,
 55.7,
 59.21,
 54.72,
 52.015,
 54.230000000000004,
 52.68,
 37.06,
 44.85,
 30.125000000000004,
 47.76,
 50.57999999999999,
 45.859999999999985,
 52.425,
 56.464999999999996,
 37.080000000000005,
 51.715,
 49.17,
 46.415,
 42.045,
 34.650000000000006,
 55.334999999999994,
 52.875]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.715
Upper: 51.715
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 65.265,
 65.75,
 62.870000000000005,
 62.255,
 62.16,
 60.815,
 65.7,
 65.58500000000001,
 65.75,
 62.870000000000005,
 62.58,
 62.160000000000004,
 63.540000000000006,
 58.73999999999999,
 63.324999999999996,
 62.58,
 63.540000000000006,
 58.66,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 8
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 12, 14, 18, 19, 21, 11, 20, 16]
lower threshold: [22]
....................................
upper threshold: [11, 16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 15, 17]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 12
cloned = 7
killed = 14
cloned = 8
killed = 18
cloned = 9
killed = 19
cloned = 10
killed = 21
cloned = 13
killed = 11
cloned = 15
killed = 20
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[65.84,
 64.49000000000001,
 65.92,
 57.72,
 65.84,
 65.24000000000001,
 65.91999999999999,
 65.84,
 66.37,
 65.91999999999999,
 57.72,
 64.14,
 57.72,
 64.13999999999999,
 65.84,
 63.21,
 64.13999999999999,
 64.13999999999999,
 66.69500000000001,
 65.91999999999999,
 61.575,
 57.72,
 64.13999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 64.49000000000001
Upper: 64.49000000000001
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22]
lower threshold: [1]
....................................
upper threshold: [1]
upper:           [0, 2, 4, 5, 6, 7, 8, 9, 14, 18, 19]
====================================
cloned = 0
killed = 3
cloned = 2
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 13
cloned = 7
killed = 15
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 20
cloned = 18
killed = 21
cloned = 19
killed = 22
######################################
~~~ Scores: ~~~
[65.72,
 65.04,
 65.85999999999999,
 65.72,
 65.72,
 65.03999999999999,
 65.85999999999999,
 65.72,
 65.03999999999999,
 65.85999999999999,
 65.85999999999999,
 65.72,
 65.03999999999999,
 65.85999999999999,
 65.72,
 65.72,
 65.03999999999999,
 65.86,
 65.03999999999999,
 65.85999999999999,
 65.72,
 65.03999999999999,
 65.85999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.72
Upper: 65.72
====================================
lower list size: 7
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 8, 12, 16, 18, 21, 15, 4, 14, 0]
lower threshold: []
....................................
upper threshold: [0, 3, 4, 7, 11, 14, 15, 20]
upper:           [2, 6, 9, 10, 13, 17, 19, 22, 3, 11, 7, 20]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 5
cloned = 9
killed = 8
cloned = 10
killed = 12
cloned = 13
killed = 16
cloned = 17
killed = 18
cloned = 19
killed = 21
cloned = 22
killed = 15
cloned = 3
killed = 4
cloned = 11
killed = 14
cloned = 7
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 4, 12, 6, 15, 3, 21, 14, 18, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 10, 19, 16, 0, 9, 5, 13, 8, 2, 17, 22]
====================================
cloned = 11
killed = 20
cloned = 10
killed = 4
cloned = 19
killed = 12
cloned = 16
killed = 6
cloned = 0
killed = 15
cloned = 9
killed = 3
cloned = 5
killed = 21
cloned = 13
killed = 14
cloned = 8
killed = 18
cloned = 2
killed = 7
cloned = 17
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 21, 20, 14, 10, 4, 13, 17, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 2, 18, 6, 16, 8, 19, 3, 9, 7, 1, 22]
====================================
cloned = 5
killed = 15
cloned = 2
killed = 11
cloned = 18
killed = 21
cloned = 6
killed = 20
cloned = 16
killed = 14
cloned = 8
killed = 10
cloned = 19
killed = 4
cloned = 3
killed = 13
cloned = 9
killed = 17
cloned = 7
killed = 12
cloned = 1
killed = 0
Trial run 5/seed 860:
..................................................
winner: Tit For Tat
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Michaelos: (D,)': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 8, 'Tit For Tat': 8, 'Second by RichardHufford': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 19, 'Evolved FSM 6': 4}),
 Counter({'Tit For Tat': 23})]
--------------------------------------------------
Score:
[[61.59000000000001,
  55.7,
  59.21,
  54.72,
  52.015,
  54.230000000000004,
  52.68,
  37.06,
  44.85,
  30.125000000000004,
  47.76,
  50.57999999999999,
  45.859999999999985,
  52.425,
  56.464999999999996,
  37.080000000000005,
  51.715,
  49.17,
  46.415,
  42.045,
  34.650000000000006,
  55.334999999999994,
  52.875],
 [65.7,
  65.265,
  65.75,
  62.870000000000005,
  62.255,
  62.16,
  60.815,
  65.7,
  65.58500000000001,
  65.75,
  62.870000000000005,
  62.58,
  62.160000000000004,
  63.540000000000006,
  58.73999999999999,
  63.324999999999996,
  62.58,
  63.540000000000006,
  58.66,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  64.49000000000001,
  65.92,
  57.72,
  65.84,
  65.24000000000001,
  65.91999999999999,
  65.84,
  66.37,
  65.91999999999999,
  57.72,
  64.14,
  57.72,
  64.13999999999999,
  65.84,
  63.21,
  64.13999999999999,
  64.13999999999999,
  66.69500000000001,
  65.91999999999999,
  61.575,
  57.72,
  64.13999999999999],
 [65.72,
  65.04,
  65.85999999999999,
  65.72,
  65.72,
  65.03999999999999,
  65.85999999999999,
  65.72,
  65.03999999999999,
  65.85999999999999,
  65.85999999999999,
  65.72,
  65.03999999999999,
  65.85999999999999,
  65.72,
  65.72,
  65.03999999999999,
  65.86,
  65.03999999999999,
  65.85999999999999,
  65.72,
  65.03999999999999,
  65.85999999999999],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.6,
 56.33,
 59.33,
 54.76,
 52.085,
 53.805,
 53.61999999999999,
 37.08,
 44.835,
 35.015,
 47.845000000000006,
 50.599999999999994,
 48.05499999999999,
 52.47,
 55.974999999999994,
 36.765,
 51.785,
 47.14,
 46.154999999999994,
 40.665000000000006,
 35.06000000000001,
 55.69499999999999,
 53.379999999999995]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.785
Upper: 51.785
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 63.96,
 65.75,
 62.870000000000005,
 62.345,
 62.16,
 61.795,
 65.7,
 64.605,
 65.75,
 62.870000000000005,
 62.345,
 62.160000000000004,
 63.540000000000006,
 58.99499999999999,
 61.025,
 62.58,
 63.540000000000006,
 58.849999999999994,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 0, 4, 7, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 0
killed = 20
cloned = 4
killed = 21
cloned = 7
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 12, 20, 0]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 7, 4, 21, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 7
killed = 12
cloned = 4
killed = 20
cloned = 21
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 3, 17, 13, 10, 18, 7, 5, 14, 0, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 6, 8, 20, 11, 2, 9, 15, 12, 1, 21, 22]
====================================
cloned = 16
killed = 4
cloned = 6
killed = 3
cloned = 8
killed = 17
cloned = 20
killed = 13
cloned = 11
killed = 10
cloned = 2
killed = 18
cloned = 9
killed = 7
cloned = 15
killed = 5
cloned = 12
killed = 14
cloned = 1
killed = 0
cloned = 21
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 19, 3, 6, 8, 5, 14, 18, 15, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 0, 20, 16, 1, 17, 2, 9, 13, 11, 22]
====================================
cloned = 7
killed = 21
cloned = 10
killed = 19
cloned = 0
killed = 3
cloned = 20
killed = 6
cloned = 16
killed = 8
cloned = 1
killed = 5
cloned = 17
killed = 14
cloned = 2
killed = 18
cloned = 9
killed = 15
cloned = 13
killed = 4
cloned = 11
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 8, 17, 9, 5, 10, 4, 13, 6, 3, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 11, 15, 18, 7, 2, 20, 19, 1, 21, 12, 22]
====================================
cloned = 0
killed = 16
cloned = 11
killed = 8
cloned = 15
killed = 17
cloned = 18
killed = 9
cloned = 7
killed = 5
cloned = 2
killed = 10
cloned = 20
killed = 4
cloned = 19
killed = 13
cloned = 1
killed = 6
cloned = 21
killed = 3
cloned = 12
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 8, 2, 16, 10, 6, 4, 0, 19, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 15, 14, 18, 1, 9, 7, 21, 12, 3, 11, 22]
====================================
cloned = 20
killed = 13
cloned = 15
killed = 17
cloned = 14
killed = 8
cloned = 18
killed = 2
cloned = 1
killed = 16
cloned = 9
killed = 10
cloned = 7
killed = 6
cloned = 21
killed = 4
cloned = 12
killed = 0
cloned = 3
killed = 19
cloned = 11
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 19, 16, 17, 7, 1, 14, 4, 0, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 13, 18, 21, 3, 10, 2, 12, 20, 5, 9, 22]
====================================
cloned = 15
killed = 11
cloned = 13
killed = 19
cloned = 18
killed = 16
cloned = 21
killed = 17
cloned = 3
killed = 7
cloned = 10
killed = 1
cloned = 2
killed = 14
cloned = 12
killed = 4
cloned = 20
killed = 0
cloned = 5
killed = 8
cloned = 9
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 8, 2, 3, 10, 15, 18, 9, 5, 11, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 0, 13, 4, 7, 12, 1, 14, 19, 6, 17, 22]
====================================
cloned = 20
killed = 16
cloned = 0
killed = 8
cloned = 13
killed = 2
cloned = 4
killed = 3
cloned = 7
killed = 10
cloned = 12
killed = 15
cloned = 1
killed = 18
cloned = 14
killed = 9
cloned = 19
killed = 5
cloned = 6
killed = 11
cloned = 17
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 19, 15, 0, 18, 20, 10, 7, 3, 9, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 14, 8, 2, 21, 13, 5, 6, 4, 11, 1, 22]
====================================
cloned = 17
killed = 12
cloned = 14
killed = 19
cloned = 8
killed = 15
cloned = 2
killed = 0
cloned = 21
killed = 18
cloned = 13
killed = 20
cloned = 5
killed = 10
cloned = 6
killed = 7
cloned = 4
killed = 3
cloned = 11
killed = 9
cloned = 1
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 0, 3, 7, 1, 11, 4, 18, 17, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 9, 21, 12, 14, 13, 19, 15, 5, 8, 20, 22]
====================================
cloned = 2
killed = 16
cloned = 9
killed = 10
cloned = 21
killed = 0
cloned = 12
killed = 3
cloned = 14
killed = 7
cloned = 13
killed = 1
cloned = 19
killed = 11
cloned = 15
killed = 4
cloned = 5
killed = 18
cloned = 8
killed = 17
cloned = 20
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 10, 8, 9, 6, 18, 20, 11, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 21, 5, 2, 7, 17, 19, 14, 12, 15, 1, 22]
====================================
cloned = 13
killed = 4
cloned = 21
killed = 16
cloned = 5
killed = 10
cloned = 2
killed = 8
cloned = 7
killed = 9
cloned = 17
killed = 6
cloned = 19
killed = 18
cloned = 14
killed = 20
cloned = 12
killed = 11
cloned = 15
killed = 0
cloned = 1
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 8, 4, 21, 17, 6, 19, 3, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 16, 15, 18, 7, 9, 0, 20, 14, 12, 10, 22]
====================================
cloned = 5
killed = 13
cloned = 16
killed = 1
cloned = 15
killed = 8
cloned = 18
killed = 4
cloned = 7
killed = 21
cloned = 9
killed = 17
cloned = 0
killed = 6
cloned = 20
killed = 19
cloned = 14
killed = 3
cloned = 12
killed = 11
cloned = 10
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 19, 9, 20, 10, 4, 0, 1, 21, 11, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 15, 16, 6, 13, 12, 2, 3, 14, 17, 8, 22]
====================================
cloned = 5
killed = 7
cloned = 15
killed = 19
cloned = 16
killed = 9
cloned = 6
killed = 20
cloned = 13
killed = 10
cloned = 12
killed = 4
cloned = 2
killed = 0
cloned = 3
killed = 1
cloned = 14
killed = 21
cloned = 17
killed = 11
cloned = 8
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 2, 1, 5, 17, 20, 16, 0, 6, 21, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 18, 4, 13, 3, 10, 14, 12, 9, 8, 11, 22]
====================================
cloned = 15
killed = 19
cloned = 18
killed = 2
cloned = 4
killed = 1
cloned = 13
killed = 5
cloned = 3
killed = 17
cloned = 10
killed = 20
cloned = 14
killed = 16
cloned = 12
killed = 0
cloned = 9
killed = 6
cloned = 8
killed = 21
cloned = 11
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 16, 19, 1, 10, 8, 11, 9, 13, 2, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 7, 20, 3, 5, 4, 12, 21, 14, 18, 0, 22]
====================================
cloned = 6
killed = 17
cloned = 7
killed = 16
cloned = 20
killed = 19
cloned = 3
killed = 1
cloned = 5
killed = 10
cloned = 4
killed = 8
cloned = 12
killed = 11
cloned = 21
killed = 9
cloned = 14
killed = 13
cloned = 18
killed = 2
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 14, 0, 5, 17, 8, 12, 7, 19, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 20, 2, 1, 6, 15, 18, 13, 16, 3, 9, 22]
====================================
cloned = 11
killed = 10
cloned = 20
killed = 4
cloned = 2
killed = 14
cloned = 1
killed = 0
cloned = 6
killed = 5
cloned = 15
killed = 17
cloned = 18
killed = 8
cloned = 13
killed = 12
cloned = 16
killed = 7
cloned = 3
killed = 19
cloned = 9
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 6, 12, 1, 13, 10, 16, 21, 19, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 17, 15, 0, 9, 2, 20, 11, 14, 4, 22]
====================================
cloned = 18
killed = 8
cloned = 5
killed = 3
cloned = 17
killed = 6
cloned = 15
killed = 12
cloned = 0
killed = 1
cloned = 9
killed = 13
cloned = 2
killed = 10
cloned = 20
killed = 16
cloned = 11
killed = 21
cloned = 14
killed = 19
cloned = 4
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 14, 15, 8, 17, 6, 18, 21, 9, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 11, 1, 4, 16, 13, 7, 5, 0, 3, 10, 22]
====================================
cloned = 19
killed = 2
cloned = 11
killed = 12
cloned = 1
killed = 14
cloned = 4
killed = 15
cloned = 16
killed = 8
cloned = 13
killed = 17
cloned = 7
killed = 6
cloned = 5
killed = 18
cloned = 0
killed = 21
cloned = 3
killed = 9
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 8, 4, 13, 6, 19, 10, 2, 16, 17, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 1, 20, 9, 5, 18, 0, 7, 11, 15, 12, 22]
====================================
cloned = 3
killed = 14
cloned = 1
killed = 8
cloned = 20
killed = 4
cloned = 9
killed = 13
cloned = 5
killed = 6
cloned = 18
killed = 19
cloned = 0
killed = 10
cloned = 7
killed = 2
cloned = 11
killed = 16
cloned = 15
killed = 17
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 8, 15, 13, 6, 9, 12, 11, 21, 18, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 10, 17, 16, 1, 2, 7, 0, 4, 14, 3, 22]
====================================
cloned = 5
killed = 20
cloned = 10
killed = 8
cloned = 17
killed = 15
cloned = 16
killed = 13
cloned = 1
killed = 6
cloned = 2
killed = 9
cloned = 7
killed = 12
cloned = 0
killed = 11
cloned = 4
killed = 21
cloned = 14
killed = 18
cloned = 3
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 10, 17, 0, 6, 3, 16, 4, 5, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 1, 13, 7, 19, 9, 14, 21, 8, 20, 2, 22]
====================================
cloned = 12
killed = 15
cloned = 1
killed = 11
cloned = 13
killed = 10
cloned = 7
killed = 17
cloned = 19
killed = 0
cloned = 9
killed = 6
cloned = 14
killed = 3
cloned = 21
killed = 16
cloned = 8
killed = 4
cloned = 20
killed = 5
cloned = 2
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 0, 5, 2, 9, 8, 1, 7, 18, 14, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 10, 17, 11, 13, 12, 20, 6, 4, 21, 16, 22]
====================================
cloned = 3
killed = 19
cloned = 10
killed = 0
cloned = 17
killed = 5
cloned = 11
killed = 2
cloned = 13
killed = 9
cloned = 12
killed = 8
cloned = 20
killed = 1
cloned = 6
killed = 7
cloned = 4
killed = 18
cloned = 21
killed = 14
cloned = 16
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 7, 17, 12, 1, 13, 3, 6, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 4, 19, 0, 11, 2, 8, 18, 15, 14, 21, 22]
====================================
cloned = 16
killed = 20
cloned = 4
killed = 9
cloned = 19
killed = 7
cloned = 0
killed = 17
cloned = 11
killed = 12
cloned = 2
killed = 1
cloned = 8
killed = 13
cloned = 18
killed = 3
cloned = 15
killed = 6
cloned = 14
killed = 5
cloned = 21
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 11, 15, 3, 13, 12, 4, 1, 18, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 7, 21, 17, 5, 14, 2, 8, 9, 16, 19, 22]
====================================
cloned = 0
killed = 10
cloned = 7
killed = 6
cloned = 21
killed = 11
cloned = 17
killed = 15
cloned = 5
killed = 3
cloned = 14
killed = 13
cloned = 2
killed = 12
cloned = 8
killed = 4
cloned = 9
killed = 1
cloned = 16
killed = 18
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 4, 2, 11, 6, 10, 0, 3, 7, 14, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 17, 16, 20, 21, 12, 13, 1, 8, 15, 5, 22]
====================================
cloned = 9
killed = 18
cloned = 17
killed = 4
cloned = 16
killed = 2
cloned = 20
killed = 11
cloned = 21
killed = 6
cloned = 12
killed = 10
cloned = 13
killed = 0
cloned = 1
killed = 3
cloned = 8
killed = 7
cloned = 15
killed = 14
cloned = 5
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 13, 14, 19, 5, 2, 17, 9, 18, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 3, 21, 20, 1, 11, 7, 15, 16, 8, 12, 22]
====================================
cloned = 10
killed = 6
cloned = 3
killed = 4
cloned = 21
killed = 13
cloned = 20
killed = 14
cloned = 1
killed = 19
cloned = 11
killed = 5
cloned = 7
killed = 2
cloned = 15
killed = 17
cloned = 16
killed = 9
cloned = 8
killed = 18
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 0, 20, 8, 14, 3, 4, 6, 10, 21, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 2, 18, 11, 7, 5, 13, 15, 1, 9, 19, 22]
====================================
cloned = 17
killed = 16
cloned = 2
killed = 0
cloned = 18
killed = 20
cloned = 11
killed = 8
cloned = 7
killed = 14
cloned = 5
killed = 3
cloned = 13
killed = 4
cloned = 15
killed = 6
cloned = 1
killed = 10
cloned = 9
killed = 21
cloned = 19
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 14, 20, 17, 13, 8, 5, 3, 0, 19, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 12, 10, 6, 2, 7, 21, 15, 16, 18, 22]
====================================
cloned = 1
killed = 9
cloned = 4
killed = 14
cloned = 12
killed = 20
cloned = 10
killed = 17
cloned = 6
killed = 13
cloned = 2
killed = 8
cloned = 7
killed = 5
cloned = 21
killed = 3
cloned = 15
killed = 0
cloned = 16
killed = 19
cloned = 18
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 4, 0, 13, 7, 9, 17, 5, 10, 3, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 16, 14, 18, 21, 6, 12, 1, 19, 15, 11, 22]
====================================
cloned = 20
killed = 2
cloned = 16
killed = 4
cloned = 14
killed = 0
cloned = 18
killed = 13
cloned = 21
killed = 7
cloned = 6
killed = 9
cloned = 12
killed = 17
cloned = 1
killed = 5
cloned = 19
killed = 10
cloned = 15
killed = 3
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 1, 4, 18, 11, 8, 3, 15, 12, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 13, 10, 0, 5, 6, 19, 7, 2, 9, 14, 22]
====================================
cloned = 21
killed = 20
cloned = 13
killed = 16
cloned = 10
killed = 1
cloned = 0
killed = 4
cloned = 5
killed = 18
cloned = 6
killed = 11
cloned = 19
killed = 8
cloned = 7
killed = 3
cloned = 2
killed = 15
cloned = 9
killed = 12
cloned = 14
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 14, 17, 18, 8, 1, 21, 0, 11, 10, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 3, 5, 12, 7, 20, 6, 2, 13, 15, 22]
====================================
cloned = 4
killed = 9
cloned = 16
killed = 14
cloned = 3
killed = 17
cloned = 5
killed = 18
cloned = 12
killed = 8
cloned = 7
killed = 1
cloned = 20
killed = 21
cloned = 6
killed = 0
cloned = 2
killed = 11
cloned = 13
killed = 10
cloned = 15
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 18, 19, 10, 0, 5, 3, 2, 20, 9, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 13, 6, 17, 7, 11, 21, 4, 12, 15, 8, 22]
====================================
cloned = 1
killed = 16
cloned = 13
killed = 18
cloned = 6
killed = 19
cloned = 17
killed = 10
cloned = 7
killed = 0
cloned = 11
killed = 5
cloned = 21
killed = 3
cloned = 4
killed = 2
cloned = 12
killed = 20
cloned = 15
killed = 9
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 0, 8, 6, 19, 14, 18, 9, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 16, 11, 7, 1, 15, 17, 21, 10, 3, 20, 22]
====================================
cloned = 13
killed = 4
cloned = 16
killed = 2
cloned = 11
killed = 0
cloned = 7
killed = 8
cloned = 1
killed = 6
cloned = 15
killed = 19
cloned = 17
killed = 14
cloned = 21
killed = 18
cloned = 10
killed = 9
cloned = 3
killed = 12
cloned = 20
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 13, 19, 18, 10, 14, 12, 4, 3, 11, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 17, 15, 20, 0, 21, 9, 16, 8, 7, 1, 22]
====================================
cloned = 6
killed = 2
cloned = 17
killed = 13
cloned = 15
killed = 19
cloned = 20
killed = 18
cloned = 0
killed = 10
cloned = 21
killed = 14
cloned = 9
killed = 12
cloned = 16
killed = 4
cloned = 8
killed = 3
cloned = 7
killed = 11
cloned = 1
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 6, 18, 21, 8, 2, 1, 0, 9, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 17, 15, 13, 11, 16, 14, 10, 4, 12, 19, 22]
====================================
cloned = 5
killed = 3
cloned = 17
killed = 20
cloned = 15
killed = 6
cloned = 13
killed = 18
cloned = 11
killed = 21
cloned = 16
killed = 8
cloned = 14
killed = 2
cloned = 10
killed = 1
cloned = 4
killed = 0
cloned = 12
killed = 9
cloned = 19
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 21, 6, 20, 3, 16, 18, 15, 14, 10, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 13, 12, 11, 1, 17, 7, 0, 9, 8, 19, 22]
====================================
cloned = 4
killed = 5
cloned = 13
killed = 21
cloned = 12
killed = 6
cloned = 11
killed = 20
cloned = 1
killed = 3
cloned = 17
killed = 16
cloned = 7
killed = 18
cloned = 0
killed = 15
cloned = 9
killed = 14
cloned = 8
killed = 10
cloned = 19
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 12, 7, 21, 2, 9, 13, 3, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 1, 18, 17, 15, 11, 19, 5, 6, 16, 20, 22]
====================================
cloned = 14
killed = 10
cloned = 1
killed = 8
cloned = 18
killed = 12
cloned = 17
killed = 7
cloned = 15
killed = 21
cloned = 11
killed = 2
cloned = 19
killed = 9
cloned = 5
killed = 13
cloned = 6
killed = 3
cloned = 16
killed = 0
cloned = 20
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 1, 8, 6, 21, 17, 13, 9, 16, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 5, 3, 14, 18, 11, 7, 12, 20, 0, 2, 22]
====================================
cloned = 19
killed = 10
cloned = 5
killed = 4
cloned = 3
killed = 1
cloned = 14
killed = 8
cloned = 18
killed = 6
cloned = 11
killed = 21
cloned = 7
killed = 17
cloned = 12
killed = 13
cloned = 20
killed = 9
cloned = 0
killed = 16
cloned = 2
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 0, 7, 3, 21, 13, 2, 17, 14, 18, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 11, 10, 20, 5, 4, 8, 9, 15, 6, 1, 22]
====================================
cloned = 12
killed = 19
cloned = 11
killed = 0
cloned = 10
killed = 7
cloned = 20
killed = 3
cloned = 5
killed = 21
cloned = 4
killed = 13
cloned = 8
killed = 2
cloned = 9
killed = 17
cloned = 15
killed = 14
cloned = 6
killed = 18
cloned = 1
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 11, 6, 13, 0, 12, 10, 3, 8, 20, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 18, 14, 9, 1, 15, 4, 21, 17, 7, 16, 22]
====================================
cloned = 19
killed = 5
cloned = 18
killed = 11
cloned = 14
killed = 6
cloned = 9
killed = 13
cloned = 1
killed = 0
cloned = 15
killed = 12
cloned = 4
killed = 10
cloned = 21
killed = 3
cloned = 17
killed = 8
cloned = 7
killed = 20
cloned = 16
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 4, 11, 3, 1, 0, 17, 9, 6, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 2, 12, 10, 19, 16, 15, 21, 20, 14, 5, 22]
====================================
cloned = 7
killed = 8
cloned = 2
killed = 13
cloned = 12
killed = 4
cloned = 10
killed = 11
cloned = 19
killed = 3
cloned = 16
killed = 1
cloned = 15
killed = 0
cloned = 21
killed = 17
cloned = 20
killed = 9
cloned = 14
killed = 6
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 21, 12, 3, 0, 20, 5, 4, 16, 17, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 15, 13, 18, 2, 14, 19, 10, 11, 6, 9, 22]
====================================
cloned = 7
killed = 1
cloned = 15
killed = 21
cloned = 13
killed = 12
cloned = 18
killed = 3
cloned = 2
killed = 0
cloned = 14
killed = 20
cloned = 19
killed = 5
cloned = 10
killed = 4
cloned = 11
killed = 16
cloned = 6
killed = 17
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 19, 0, 16, 15, 21, 18, 10, 7, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 12, 13, 8, 9, 2, 5, 4, 17, 14, 6, 22]
====================================
cloned = 11
killed = 3
cloned = 12
killed = 1
cloned = 13
killed = 19
cloned = 8
killed = 0
cloned = 9
killed = 16
cloned = 2
killed = 15
cloned = 5
killed = 21
cloned = 4
killed = 18
cloned = 17
killed = 10
cloned = 14
killed = 7
cloned = 6
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 20, 1, 9, 3, 21, 14, 8, 2, 17, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 7, 13, 12, 11, 4, 5, 15, 6, 16, 22]
====================================
cloned = 10
killed = 0
cloned = 19
killed = 20
cloned = 7
killed = 1
cloned = 13
killed = 9
cloned = 12
killed = 3
cloned = 11
killed = 21
cloned = 4
killed = 14
cloned = 5
killed = 8
cloned = 15
killed = 2
cloned = 6
killed = 17
cloned = 16
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 14, 6, 15, 0, 9, 16, 10, 17, 21, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 3, 18, 12, 4, 8, 2, 19, 13, 5, 7, 22]
====================================
cloned = 1
killed = 11
cloned = 3
killed = 14
cloned = 18
killed = 6
cloned = 12
killed = 15
cloned = 4
killed = 0
cloned = 8
killed = 9
cloned = 2
killed = 16
cloned = 19
killed = 10
cloned = 13
killed = 17
cloned = 5
killed = 21
cloned = 7
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 2, 7, 15, 20, 14, 19, 13, 10, 16, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 4, 21, 1, 3, 18, 17, 8, 9, 11, 22]
====================================
cloned = 12
killed = 0
cloned = 6
killed = 2
cloned = 4
killed = 7
cloned = 21
killed = 15
cloned = 1
killed = 20
cloned = 3
killed = 14
cloned = 18
killed = 19
cloned = 17
killed = 13
cloned = 8
killed = 10
cloned = 9
killed = 16
cloned = 11
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 9, 1, 8, 21, 5, 19, 20, 12, 10, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 18, 11, 15, 17, 3, 0, 7, 13, 6, 22]
====================================
cloned = 14
killed = 16
cloned = 2
killed = 9
cloned = 18
killed = 1
cloned = 11
killed = 8
cloned = 15
killed = 21
cloned = 17
killed = 5
cloned = 3
killed = 19
cloned = 0
killed = 20
cloned = 7
killed = 12
cloned = 13
killed = 10
cloned = 6
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 13, 16, 4, 15, 9, 7, 21, 5, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 12, 18, 19, 14, 6, 0, 1, 10, 17, 11, 22]
====================================
cloned = 2
killed = 20
cloned = 12
killed = 13
cloned = 18
killed = 16
cloned = 19
killed = 4
cloned = 14
killed = 15
cloned = 6
killed = 9
cloned = 0
killed = 7
cloned = 1
killed = 21
cloned = 10
killed = 5
cloned = 17
killed = 8
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 15, 17, 8, 3, 6, 18, 1, 5, 14, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 2, 13, 12, 19, 21, 10, 4, 0, 20, 16, 22]
====================================
cloned = 7
killed = 11
cloned = 2
killed = 15
cloned = 13
killed = 17
cloned = 12
killed = 8
cloned = 19
killed = 3
cloned = 21
killed = 6
cloned = 10
killed = 18
cloned = 4
killed = 1
cloned = 0
killed = 5
cloned = 20
killed = 14
cloned = 16
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 15, 2, 14, 9, 21, 13, 20, 5, 19, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 4, 17, 3, 10, 11, 7, 12, 18, 6, 22]
====================================
cloned = 8
killed = 0
cloned = 1
killed = 15
cloned = 4
killed = 2
cloned = 17
killed = 14
cloned = 3
killed = 9
cloned = 10
killed = 21
cloned = 11
killed = 13
cloned = 7
killed = 20
cloned = 12
killed = 5
cloned = 18
killed = 19
cloned = 6
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 20, 11, 16, 17, 5, 0, 13, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 10, 8, 14, 6, 4, 21, 15, 7, 1, 18, 22]
====================================
cloned = 12
killed = 9
cloned = 10
killed = 19
cloned = 8
killed = 20
cloned = 14
killed = 11
cloned = 6
killed = 16
cloned = 4
killed = 17
cloned = 21
killed = 5
cloned = 15
killed = 0
cloned = 7
killed = 13
cloned = 1
killed = 3
cloned = 18
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 11, 19, 6, 1, 21, 10, 13, 2, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 18, 0, 4, 8, 5, 3, 16, 15, 12, 22]
====================================
cloned = 20
killed = 17
cloned = 14
killed = 9
cloned = 18
killed = 11
cloned = 0
killed = 19
cloned = 4
killed = 6
cloned = 8
killed = 1
cloned = 5
killed = 21
cloned = 3
killed = 10
cloned = 16
killed = 13
cloned = 15
killed = 2
cloned = 12
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 6, 1, 12, 8, 15, 20, 3, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 16, 17, 0, 14, 19, 7, 4, 18, 21, 13, 22]
====================================
cloned = 9
killed = 2
cloned = 16
killed = 5
cloned = 17
killed = 6
cloned = 0
killed = 1
cloned = 14
killed = 12
cloned = 19
killed = 8
cloned = 7
killed = 15
cloned = 4
killed = 20
cloned = 18
killed = 3
cloned = 21
killed = 10
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 13, 8, 11, 19, 3, 6, 20, 15, 18, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 21, 0, 12, 9, 5, 2, 1, 4, 7, 14, 22]
====================================
cloned = 17
killed = 16
cloned = 21
killed = 13
cloned = 0
killed = 8
cloned = 12
killed = 11
cloned = 9
killed = 19
cloned = 5
killed = 3
cloned = 2
killed = 6
cloned = 1
killed = 20
cloned = 4
killed = 15
cloned = 7
killed = 18
cloned = 14
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 5, 17, 6, 0, 9, 20, 13, 16, 18, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 2, 10, 11, 4, 21, 19, 1, 8, 15, 7, 22]
====================================
cloned = 3
killed = 12
cloned = 2
killed = 5
cloned = 10
killed = 17
cloned = 11
killed = 6
cloned = 4
killed = 0
cloned = 21
killed = 9
cloned = 19
killed = 20
cloned = 1
killed = 13
cloned = 8
killed = 16
cloned = 15
killed = 18
cloned = 7
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 11, 17, 10, 2, 0, 21, 16, 3, 13, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 1, 18, 4, 7, 8, 15, 5, 14, 12, 9, 22]
====================================
cloned = 20
killed = 19
cloned = 1
killed = 11
cloned = 18
killed = 17
cloned = 4
killed = 10
cloned = 7
killed = 2
cloned = 8
killed = 0
cloned = 15
killed = 21
cloned = 5
killed = 16
cloned = 14
killed = 3
cloned = 12
killed = 13
cloned = 9
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 20, 13, 8, 16, 21, 0, 10, 18, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 2, 17, 5, 1, 14, 6, 7, 12, 19, 11, 22]
====================================
cloned = 3
killed = 15
cloned = 2
killed = 20
cloned = 17
killed = 13
cloned = 5
killed = 8
cloned = 1
killed = 16
cloned = 14
killed = 21
cloned = 6
killed = 0
cloned = 7
killed = 10
cloned = 12
killed = 18
cloned = 19
killed = 4
cloned = 11
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 18, 14, 12, 2, 4, 7, 19, 16, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 17, 21, 11, 15, 10, 3, 13, 20, 0, 9, 22]
====================================
cloned = 6
killed = 5
cloned = 17
killed = 18
cloned = 21
killed = 14
cloned = 11
killed = 12
cloned = 15
killed = 2
cloned = 10
killed = 4
cloned = 3
killed = 7
cloned = 13
killed = 19
cloned = 20
killed = 16
cloned = 0
killed = 1
cloned = 9
killed = 8
Trial run 6/seed 861:
..................................................
winner: Evolved FSM 6
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 23})]
--------------------------------------------------
Score:
[[61.6,
  56.33,
  59.33,
  54.76,
  52.085,
  53.805,
  53.61999999999999,
  37.08,
  44.835,
  35.015,
  47.845000000000006,
  50.599999999999994,
  48.05499999999999,
  52.47,
  55.974999999999994,
  36.765,
  51.785,
  47.14,
  46.154999999999994,
  40.665000000000006,
  35.06000000000001,
  55.69499999999999,
  53.379999999999995],
 [65.7,
  63.96,
  65.75,
  62.870000000000005,
  62.345,
  62.16,
  61.795,
  65.7,
  64.605,
  65.75,
  62.870000000000005,
  62.345,
  62.160000000000004,
  63.540000000000006,
  58.99499999999999,
  61.025,
  62.58,
  63.540000000000006,
  58.849999999999994,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.59000000000001,
 57.85,
 59.394999999999996,
 54.5,
 51.77,
 54.370000000000005,
 54.084999999999994,
 37.0,
 44.790000000000006,
 28.654999999999998,
 48.07,
 50.919999999999995,
 48.344999999999985,
 52.42,
 56.464999999999996,
 36.88,
 51.290000000000006,
 47.165,
 46.355,
 42.135000000000005,
 35.03000000000001,
 55.355,
 53.614999999999995]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.290000000000006
Upper: 51.290000000000006
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 63.815,
 65.75,
 62.870000000000005,
 62.480000000000004,
 62.16,
 62.265,
 65.7,
 65.75000000000001,
 65.75,
 62.870000000000005,
 62.37,
 62.160000000000004,
 63.540000000000006,
 58.80999999999999,
 60.91,
 62.58,
 63.540000000000006,
 58.75,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 4, 7, 0, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 4
killed = 20
cloned = 7
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 20, 21, 4]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 12, 0, 7, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 12
killed = 20
cloned = 0
killed = 21
cloned = 7
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 19, 21, 4, 3, 14, 16, 12, 18, 13, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 2, 0, 9, 15, 10, 8, 6, 17, 1, 22]
====================================
cloned = 20
killed = 11
cloned = 7
killed = 19
cloned = 2
killed = 21
cloned = 0
killed = 4
cloned = 9
killed = 3
cloned = 15
killed = 14
cloned = 10
killed = 16
cloned = 8
killed = 12
cloned = 6
killed = 18
cloned = 17
killed = 13
cloned = 1
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 7, 20, 21, 12, 5, 16, 11, 0, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 10, 8, 4, 19, 14, 18, 15, 1, 2, 13, 22]
====================================
cloned = 3
killed = 6
cloned = 10
killed = 9
cloned = 8
killed = 7
cloned = 4
killed = 20
cloned = 19
killed = 21
cloned = 14
killed = 12
cloned = 18
killed = 5
cloned = 15
killed = 16
cloned = 1
killed = 11
cloned = 2
killed = 0
cloned = 13
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 21, 18, 11, 0, 14, 16, 2, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 4, 13, 10, 15, 8, 19, 6, 12, 7, 17, 22]
====================================
cloned = 20
killed = 1
cloned = 4
killed = 5
cloned = 13
killed = 21
cloned = 10
killed = 18
cloned = 15
killed = 11
cloned = 8
killed = 0
cloned = 19
killed = 14
cloned = 6
killed = 16
cloned = 12
killed = 2
cloned = 7
killed = 9
cloned = 17
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 1, 8, 18, 2, 16, 20, 4, 17, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 0, 13, 6, 5, 21, 7, 15, 10, 14, 3, 22]
====================================
cloned = 19
killed = 11
cloned = 0
killed = 12
cloned = 13
killed = 1
cloned = 6
killed = 8
cloned = 5
killed = 18
cloned = 21
killed = 2
cloned = 7
killed = 16
cloned = 15
killed = 20
cloned = 10
killed = 4
cloned = 14
killed = 17
cloned = 3
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 20, 3, 1, 18, 13, 16, 0, 4, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 9, 6, 14, 10, 21, 19, 15, 5, 17, 11, 22]
====================================
cloned = 12
killed = 8
cloned = 9
killed = 20
cloned = 6
killed = 3
cloned = 14
killed = 1
cloned = 10
killed = 18
cloned = 21
killed = 13
cloned = 19
killed = 16
cloned = 15
killed = 0
cloned = 5
killed = 4
cloned = 17
killed = 7
cloned = 11
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 11, 3, 4, 14, 12, 18, 8, 5, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 21, 1, 6, 0, 9, 17, 19, 13, 15, 7, 22]
====================================
cloned = 16
killed = 2
cloned = 21
killed = 10
cloned = 1
killed = 11
cloned = 6
killed = 3
cloned = 0
killed = 4
cloned = 9
killed = 14
cloned = 17
killed = 12
cloned = 19
killed = 18
cloned = 13
killed = 8
cloned = 15
killed = 5
cloned = 7
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 12, 5, 4, 13, 6, 20, 18, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 1, 3, 2, 14, 19, 16, 15, 10, 11, 9, 22]
====================================
cloned = 17
killed = 21
cloned = 1
killed = 7
cloned = 3
killed = 12
cloned = 2
killed = 5
cloned = 14
killed = 4
cloned = 19
killed = 13
cloned = 16
killed = 6
cloned = 15
killed = 20
cloned = 10
killed = 18
cloned = 11
killed = 0
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 19, 3, 18, 2, 14, 21, 15, 0, 10, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 17, 5, 9, 16, 8, 20, 4, 11, 1, 22]
====================================
cloned = 12
killed = 7
cloned = 6
killed = 19
cloned = 17
killed = 3
cloned = 5
killed = 18
cloned = 9
killed = 2
cloned = 16
killed = 14
cloned = 8
killed = 21
cloned = 20
killed = 15
cloned = 4
killed = 0
cloned = 11
killed = 10
cloned = 1
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 12, 18, 5, 8, 1, 10, 3, 17, 7, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 9, 19, 16, 13, 20, 0, 14, 4, 11, 6, 22]
====================================
cloned = 2
killed = 21
cloned = 9
killed = 12
cloned = 19
killed = 18
cloned = 16
killed = 5
cloned = 13
killed = 8
cloned = 20
killed = 1
cloned = 0
killed = 10
cloned = 14
killed = 3
cloned = 4
killed = 17
cloned = 11
killed = 7
cloned = 6
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 15, 18, 2, 6, 4, 14, 5, 10, 21, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 17, 9, 20, 7, 3, 16, 8, 1, 19, 11, 22]
====================================
cloned = 13
killed = 12
cloned = 17
killed = 15
cloned = 9
killed = 18
cloned = 20
killed = 2
cloned = 7
killed = 6
cloned = 3
killed = 4
cloned = 16
killed = 14
cloned = 8
killed = 5
cloned = 1
killed = 10
cloned = 19
killed = 21
cloned = 11
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 15, 6, 16, 7, 4, 0, 11, 20, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 17, 3, 1, 19, 8, 13, 9, 2, 14, 21, 22]
====================================
cloned = 18
killed = 10
cloned = 17
killed = 15
cloned = 3
killed = 6
cloned = 1
killed = 16
cloned = 19
killed = 7
cloned = 8
killed = 4
cloned = 13
killed = 0
cloned = 9
killed = 11
cloned = 2
killed = 20
cloned = 14
killed = 12
cloned = 21
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 5, 1, 18, 16, 7, 17, 4, 8, 6, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 2, 14, 19, 10, 3, 21, 11, 12, 13, 20, 22]
====================================
cloned = 0
killed = 15
cloned = 2
killed = 5
cloned = 14
killed = 1
cloned = 19
killed = 18
cloned = 10
killed = 16
cloned = 3
killed = 7
cloned = 21
killed = 17
cloned = 11
killed = 4
cloned = 12
killed = 8
cloned = 13
killed = 6
cloned = 20
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 4, 21, 20, 0, 10, 8, 17, 14, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 13, 3, 9, 11, 19, 12, 6, 7, 5, 15, 22]
====================================
cloned = 1
killed = 18
cloned = 13
killed = 4
cloned = 3
killed = 21
cloned = 9
killed = 20
cloned = 11
killed = 0
cloned = 19
killed = 10
cloned = 12
killed = 8
cloned = 6
killed = 17
cloned = 7
killed = 14
cloned = 5
killed = 16
cloned = 15
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 21, 2, 7, 20, 9, 3, 14, 0, 17, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 4, 1, 12, 11, 16, 19, 5, 6, 10, 22]
====================================
cloned = 8
killed = 18
cloned = 13
killed = 21
cloned = 4
killed = 2
cloned = 1
killed = 7
cloned = 12
killed = 20
cloned = 11
killed = 9
cloned = 16
killed = 3
cloned = 19
killed = 14
cloned = 5
killed = 0
cloned = 6
killed = 17
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 16, 8, 13, 6, 19, 17, 15, 10, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 1, 12, 20, 11, 0, 21, 3, 7, 18, 14, 22]
====================================
cloned = 2
killed = 5
cloned = 1
killed = 9
cloned = 12
killed = 16
cloned = 20
killed = 8
cloned = 11
killed = 13
cloned = 0
killed = 6
cloned = 21
killed = 19
cloned = 3
killed = 17
cloned = 7
killed = 15
cloned = 18
killed = 10
cloned = 14
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 6, 1, 17, 18, 14, 10, 13, 12, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 9, 11, 2, 4, 16, 5, 8, 7, 15, 3, 22]
====================================
cloned = 19
killed = 20
cloned = 9
killed = 0
cloned = 11
killed = 6
cloned = 2
killed = 1
cloned = 4
killed = 17
cloned = 16
killed = 18
cloned = 5
killed = 14
cloned = 8
killed = 10
cloned = 7
killed = 13
cloned = 15
killed = 12
cloned = 3
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 2, 19, 6, 3, 11, 15, 7, 12, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 5, 0, 1, 8, 16, 9, 21, 13, 20, 22]
====================================
cloned = 14
killed = 17
cloned = 4
killed = 10
cloned = 5
killed = 2
cloned = 0
killed = 19
cloned = 1
killed = 6
cloned = 8
killed = 3
cloned = 16
killed = 11
cloned = 9
killed = 15
cloned = 21
killed = 7
cloned = 13
killed = 12
cloned = 20
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 1, 5, 13, 21, 4, 6, 15, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 9, 12, 17, 20, 14, 3, 10, 7, 19, 0, 22]
====================================
cloned = 18
killed = 11
cloned = 9
killed = 8
cloned = 12
killed = 1
cloned = 17
killed = 5
cloned = 20
killed = 13
cloned = 14
killed = 21
cloned = 3
killed = 4
cloned = 10
killed = 6
cloned = 7
killed = 15
cloned = 19
killed = 16
cloned = 0
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 8, 13, 19, 4, 1, 10, 5, 0, 11, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 9, 16, 15, 2, 12, 21, 6, 20, 3, 14, 22]
====================================
cloned = 7
killed = 18
cloned = 9
killed = 8
cloned = 16
killed = 13
cloned = 15
killed = 19
cloned = 2
killed = 4
cloned = 12
killed = 1
cloned = 21
killed = 10
cloned = 6
killed = 5
cloned = 20
killed = 0
cloned = 3
killed = 11
cloned = 14
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 12, 7, 14, 4, 17, 9, 20, 15, 11, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 0, 19, 18, 8, 1, 10, 3, 5, 6, 16, 22]
====================================
cloned = 21
killed = 2
cloned = 0
killed = 12
cloned = 19
killed = 7
cloned = 18
killed = 14
cloned = 8
killed = 4
cloned = 1
killed = 17
cloned = 10
killed = 9
cloned = 3
killed = 20
cloned = 5
killed = 15
cloned = 6
killed = 11
cloned = 16
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 11, 17, 1, 9, 21, 20, 15, 14, 6, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 5, 2, 8, 10, 7, 0, 19, 16, 4, 12, 22]
====================================
cloned = 3
killed = 13
cloned = 5
killed = 11
cloned = 2
killed = 17
cloned = 8
killed = 1
cloned = 10
killed = 9
cloned = 7
killed = 21
cloned = 0
killed = 20
cloned = 19
killed = 15
cloned = 16
killed = 14
cloned = 4
killed = 6
cloned = 12
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 21, 1, 10, 13, 19, 2, 3, 0, 20, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 17, 14, 15, 16, 8, 9, 12, 6, 4, 22]
====================================
cloned = 7
killed = 11
cloned = 18
killed = 21
cloned = 17
killed = 1
cloned = 14
killed = 10
cloned = 15
killed = 13
cloned = 16
killed = 19
cloned = 8
killed = 2
cloned = 9
killed = 3
cloned = 12
killed = 0
cloned = 6
killed = 20
cloned = 4
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 1, 5, 3, 18, 16, 14, 6, 9, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 13, 21, 0, 17, 11, 19, 20, 8, 7, 22]
====================================
cloned = 12
killed = 10
cloned = 15
killed = 2
cloned = 13
killed = 1
cloned = 21
killed = 5
cloned = 0
killed = 3
cloned = 17
killed = 18
cloned = 11
killed = 16
cloned = 19
killed = 14
cloned = 20
killed = 6
cloned = 8
killed = 9
cloned = 7
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 0, 15, 9, 18, 8, 12, 7, 4, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 6, 16, 13, 19, 3, 1, 20, 14, 17, 2, 22]
====================================
cloned = 10
killed = 21
cloned = 6
killed = 0
cloned = 16
killed = 15
cloned = 13
killed = 9
cloned = 19
killed = 18
cloned = 3
killed = 8
cloned = 1
killed = 12
cloned = 20
killed = 7
cloned = 14
killed = 4
cloned = 17
killed = 5
cloned = 2
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 9, 1, 21, 13, 10, 12, 6, 20, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 2, 8, 7, 14, 19, 0, 18, 5, 16, 17, 22]
====================================
cloned = 3
killed = 15
cloned = 2
killed = 11
cloned = 8
killed = 9
cloned = 7
killed = 1
cloned = 14
killed = 21
cloned = 19
killed = 13
cloned = 0
killed = 10
cloned = 18
killed = 12
cloned = 5
killed = 6
cloned = 16
killed = 20
cloned = 17
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 17, 5, 7, 19, 20, 3, 21, 9, 15, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 12, 1, 16, 18, 2, 8, 10, 11, 6, 4, 22]
====================================
cloned = 13
killed = 14
cloned = 12
killed = 17
cloned = 1
killed = 5
cloned = 16
killed = 7
cloned = 18
killed = 19
cloned = 2
killed = 20
cloned = 8
killed = 3
cloned = 10
killed = 21
cloned = 11
killed = 9
cloned = 6
killed = 15
cloned = 4
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 19, 15, 10, 0, 8, 12, 17, 13, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 6, 5, 2, 4, 14, 18, 3, 7, 20, 16, 22]
====================================
cloned = 11
killed = 21
cloned = 6
killed = 1
cloned = 5
killed = 19
cloned = 2
killed = 15
cloned = 4
killed = 10
cloned = 14
killed = 0
cloned = 18
killed = 8
cloned = 3
killed = 12
cloned = 7
killed = 17
cloned = 20
killed = 13
cloned = 16
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 17, 19, 13, 1, 18, 14, 0, 9, 12, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 10, 2, 21, 3, 5, 11, 4, 7, 20, 8, 22]
====================================
cloned = 16
killed = 15
cloned = 10
killed = 17
cloned = 2
killed = 19
cloned = 21
killed = 13
cloned = 3
killed = 1
cloned = 5
killed = 18
cloned = 11
killed = 14
cloned = 4
killed = 0
cloned = 7
killed = 9
cloned = 20
killed = 12
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 2, 13, 0, 1, 4, 16, 15, 17, 5, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 8, 7, 21, 18, 11, 12, 9, 6, 19, 10, 22]
====================================
cloned = 3
killed = 14
cloned = 8
killed = 2
cloned = 7
killed = 13
cloned = 21
killed = 0
cloned = 18
killed = 1
cloned = 11
killed = 4
cloned = 12
killed = 16
cloned = 9
killed = 15
cloned = 6
killed = 17
cloned = 19
killed = 5
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 17, 16, 6, 7, 20, 3, 0, 8, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 9, 14, 1, 21, 11, 15, 13, 18, 5, 4, 22]
====================================
cloned = 19
killed = 2
cloned = 9
killed = 17
cloned = 14
killed = 16
cloned = 1
killed = 6
cloned = 21
killed = 7
cloned = 11
killed = 20
cloned = 15
killed = 3
cloned = 13
killed = 0
cloned = 18
killed = 8
cloned = 5
killed = 12
cloned = 4
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 20, 11, 6, 10, 4, 0, 9, 18, 2, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 13, 16, 21, 3, 5, 19, 17, 15, 12, 22]
====================================
cloned = 8
killed = 7
cloned = 1
killed = 20
cloned = 13
killed = 11
cloned = 16
killed = 6
cloned = 21
killed = 10
cloned = 3
killed = 4
cloned = 5
killed = 0
cloned = 19
killed = 9
cloned = 17
killed = 18
cloned = 15
killed = 2
cloned = 12
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 18, 0, 14, 13, 7, 21, 15, 5, 11, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 3, 2, 10, 17, 1, 12, 9, 8, 4, 20, 22]
====================================
cloned = 6
killed = 16
cloned = 3
killed = 18
cloned = 2
killed = 0
cloned = 10
killed = 14
cloned = 17
killed = 13
cloned = 1
killed = 7
cloned = 12
killed = 21
cloned = 9
killed = 15
cloned = 8
killed = 5
cloned = 4
killed = 11
cloned = 20
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 19, 1, 20, 13, 5, 6, 15, 17, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 0, 2, 12, 11, 16, 3, 18, 7, 21, 22]
====================================
cloned = 14
killed = 8
cloned = 4
killed = 19
cloned = 0
killed = 1
cloned = 2
killed = 20
cloned = 12
killed = 13
cloned = 11
killed = 5
cloned = 16
killed = 6
cloned = 3
killed = 15
cloned = 18
killed = 17
cloned = 7
killed = 9
cloned = 21
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 5, 2, 7, 20, 14, 18, 3, 6, 10, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 11, 8, 1, 4, 17, 12, 15, 13, 0, 9, 22]
====================================
cloned = 19
killed = 21
cloned = 11
killed = 5
cloned = 8
killed = 2
cloned = 1
killed = 7
cloned = 4
killed = 20
cloned = 17
killed = 14
cloned = 12
killed = 18
cloned = 15
killed = 3
cloned = 13
killed = 6
cloned = 0
killed = 10
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 17, 21, 20, 9, 4, 6, 16, 12, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 14, 8, 0, 18, 2, 19, 15, 3, 13, 10, 22]
====================================
cloned = 11
killed = 1
cloned = 14
killed = 17
cloned = 8
killed = 21
cloned = 0
killed = 20
cloned = 18
killed = 9
cloned = 2
killed = 4
cloned = 19
killed = 6
cloned = 15
killed = 16
cloned = 3
killed = 12
cloned = 13
killed = 7
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 9, 15, 2, 18, 19, 17, 4, 20, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 16, 21, 6, 14, 3, 8, 11, 7, 5, 1, 22]
====================================
cloned = 13
killed = 10
cloned = 16
killed = 12
cloned = 21
killed = 9
cloned = 6
killed = 15
cloned = 14
killed = 2
cloned = 3
killed = 18
cloned = 8
killed = 19
cloned = 11
killed = 17
cloned = 7
killed = 4
cloned = 5
killed = 20
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 8, 19, 1, 4, 18, 9, 17, 15, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 10, 11, 6, 7, 0, 14, 20, 3, 12, 16, 22]
====================================
cloned = 13
killed = 5
cloned = 10
killed = 2
cloned = 11
killed = 8
cloned = 6
killed = 19
cloned = 7
killed = 1
cloned = 0
killed = 4
cloned = 14
killed = 18
cloned = 20
killed = 9
cloned = 3
killed = 17
cloned = 12
killed = 15
cloned = 16
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 14, 15, 5, 11, 0, 21, 17, 3, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 18, 9, 10, 20, 2, 16, 4, 19, 8, 7, 22]
====================================
cloned = 1
killed = 13
cloned = 18
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 5
cloned = 20
killed = 11
cloned = 2
killed = 0
cloned = 16
killed = 21
cloned = 4
killed = 17
cloned = 19
killed = 3
cloned = 8
killed = 6
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 8, 3, 6, 12, 18, 2, 14, 5, 1, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 19, 7, 16, 0, 20, 10, 4, 17, 9, 15, 22]
====================================
cloned = 11
killed = 21
cloned = 19
killed = 8
cloned = 7
killed = 3
cloned = 16
killed = 6
cloned = 0
killed = 12
cloned = 20
killed = 18
cloned = 10
killed = 2
cloned = 4
killed = 14
cloned = 17
killed = 5
cloned = 9
killed = 1
cloned = 15
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 19, 21, 10, 6, 15, 14, 0, 16, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 17, 12, 4, 5, 1, 18, 9, 13, 3, 7, 22]
====================================
cloned = 2
killed = 11
cloned = 17
killed = 20
cloned = 12
killed = 19
cloned = 4
killed = 21
cloned = 5
killed = 10
cloned = 1
killed = 6
cloned = 18
killed = 15
cloned = 9
killed = 14
cloned = 13
killed = 0
cloned = 3
killed = 16
cloned = 7
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 21, 16, 15, 8, 13, 20, 6, 7, 14, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 18, 1, 17, 4, 0, 5, 19, 9, 3, 12, 22]
====================================
cloned = 2
killed = 11
cloned = 18
killed = 21
cloned = 1
killed = 16
cloned = 17
killed = 15
cloned = 4
killed = 8
cloned = 0
killed = 13
cloned = 5
killed = 20
cloned = 19
killed = 6
cloned = 9
killed = 7
cloned = 3
killed = 14
cloned = 12
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 18, 13, 9, 3, 17, 6, 7, 0, 16, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 5, 8, 1, 19, 14, 11, 4, 2, 20, 10, 22]
====================================
cloned = 12
killed = 21
cloned = 5
killed = 18
cloned = 8
killed = 13
cloned = 1
killed = 9
cloned = 19
killed = 3
cloned = 14
killed = 17
cloned = 11
killed = 6
cloned = 4
killed = 7
cloned = 2
killed = 0
cloned = 20
killed = 16
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 14, 1, 7, 15, 16, 10, 3, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 4, 13, 12, 19, 17, 11, 2, 20, 8, 21, 22]
====================================
cloned = 0
killed = 18
cloned = 4
killed = 9
cloned = 13
killed = 14
cloned = 12
killed = 1
cloned = 19
killed = 7
cloned = 17
killed = 15
cloned = 11
killed = 16
cloned = 2
killed = 10
cloned = 20
killed = 3
cloned = 8
killed = 5
cloned = 21
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 8, 1, 17, 15, 20, 11, 7, 9, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 19, 13, 16, 5, 0, 4, 18, 10, 21, 14, 22]
====================================
cloned = 2
killed = 3
cloned = 19
killed = 6
cloned = 13
killed = 8
cloned = 16
killed = 1
cloned = 5
killed = 17
cloned = 0
killed = 15
cloned = 4
killed = 20
cloned = 18
killed = 11
cloned = 10
killed = 7
cloned = 21
killed = 9
cloned = 14
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 21, 11, 0, 1, 18, 14, 2, 4, 9, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 7, 10, 12, 17, 6, 16, 15, 20, 19, 3, 22]
====================================
cloned = 5
killed = 8
cloned = 7
killed = 21
cloned = 10
killed = 11
cloned = 12
killed = 0
cloned = 17
killed = 1
cloned = 6
killed = 18
cloned = 16
killed = 14
cloned = 15
killed = 2
cloned = 20
killed = 4
cloned = 19
killed = 9
cloned = 3
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 19, 8, 7, 6, 21, 13, 15, 18, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 2, 14, 16, 3, 4, 10, 11, 20, 12, 1, 22]
====================================
cloned = 9
killed = 0
cloned = 2
killed = 5
cloned = 14
killed = 19
cloned = 16
killed = 8
cloned = 3
killed = 7
cloned = 4
killed = 6
cloned = 10
killed = 21
cloned = 11
killed = 13
cloned = 20
killed = 15
cloned = 12
killed = 18
cloned = 1
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 18, 0, 19, 13, 15, 4, 5, 2, 6, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 12, 3, 17, 7, 21, 20, 11, 1, 8, 10, 22]
====================================
cloned = 16
killed = 9
cloned = 12
killed = 18
cloned = 3
killed = 0
cloned = 17
killed = 19
cloned = 7
killed = 13
cloned = 21
killed = 15
cloned = 20
killed = 4
cloned = 11
killed = 5
cloned = 1
killed = 2
cloned = 8
killed = 6
cloned = 10
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 0, 8, 6, 9, 15, 21, 20, 7, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 1, 14, 17, 4, 16, 11, 13, 12, 2, 22]
====================================
cloned = 3
killed = 10
cloned = 18
killed = 5
cloned = 1
killed = 0
cloned = 14
killed = 8
cloned = 17
killed = 6
cloned = 4
killed = 9
cloned = 16
killed = 15
cloned = 11
killed = 21
cloned = 13
killed = 20
cloned = 12
killed = 7
cloned = 2
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 17, 9, 2, 12, 0, 19, 16, 7, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 3, 21, 11, 8, 5, 15, 6, 20, 1, 18, 22]
====================================
cloned = 10
killed = 4
cloned = 3
killed = 13
cloned = 21
killed = 17
cloned = 11
killed = 9
cloned = 8
killed = 2
cloned = 5
killed = 12
cloned = 15
killed = 0
cloned = 6
killed = 19
cloned = 20
killed = 16
cloned = 1
killed = 7
cloned = 18
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 16, 13, 8, 18, 15, 5, 6, 7, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 12, 21, 4, 19, 0, 11, 2, 17, 10, 3, 22]
====================================
cloned = 14
killed = 1
cloned = 12
killed = 9
cloned = 21
killed = 16
cloned = 4
killed = 13
cloned = 19
killed = 8
cloned = 0
killed = 18
cloned = 11
killed = 15
cloned = 2
killed = 5
cloned = 17
killed = 6
cloned = 10
killed = 7
cloned = 3
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 6, 15, 12, 14, 19, 9, 17, 1, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 5, 7, 18, 8, 0, 4, 21, 11, 16, 22]
====================================
cloned = 10
killed = 20
cloned = 13
killed = 3
cloned = 5
killed = 6
cloned = 7
killed = 15
cloned = 18
killed = 12
cloned = 8
killed = 14
cloned = 0
killed = 19
cloned = 4
killed = 9
cloned = 21
killed = 17
cloned = 11
killed = 1
cloned = 16
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 7, 1, 17, 0, 10, 2, 5, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 12, 21, 4, 13, 8, 19, 15, 16, 14, 22]
====================================
cloned = 3
killed = 20
cloned = 18
killed = 9
cloned = 12
killed = 7
cloned = 21
killed = 1
cloned = 4
killed = 17
cloned = 13
killed = 0
cloned = 8
killed = 10
cloned = 19
killed = 2
cloned = 15
killed = 5
cloned = 16
killed = 6
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 3, 14, 19, 17, 16, 4, 13, 6, 20, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 9, 15, 7, 10, 2, 11, 12, 18, 1, 0, 22]
====================================
cloned = 5
killed = 21
cloned = 9
killed = 3
cloned = 15
killed = 14
cloned = 7
killed = 19
cloned = 10
killed = 17
cloned = 2
killed = 16
cloned = 11
killed = 4
cloned = 12
killed = 13
cloned = 18
killed = 6
cloned = 1
killed = 20
cloned = 0
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 5, 1, 13, 9, 2, 16, 15, 4, 14, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 10, 17, 6, 19, 12, 18, 11, 8, 0, 7, 22]
====================================
cloned = 21
killed = 20
cloned = 10
killed = 5
cloned = 17
killed = 1
cloned = 6
killed = 13
cloned = 19
killed = 9
cloned = 12
killed = 2
cloned = 18
killed = 16
cloned = 11
killed = 15
cloned = 8
killed = 4
cloned = 0
killed = 14
cloned = 7
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 13, 7, 9, 2, 4, 15, 18, 19, 17, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 20, 11, 3, 6, 1, 12, 21, 16, 8, 10, 22]
====================================
cloned = 5
killed = 0
cloned = 20
killed = 13
cloned = 11
killed = 7
cloned = 3
killed = 9
cloned = 6
killed = 2
cloned = 1
killed = 4
cloned = 12
killed = 15
cloned = 21
killed = 18
cloned = 16
killed = 19
cloned = 8
killed = 17
cloned = 10
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 10, 8, 6, 7, 4, 16, 5, 15, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 9, 18, 19, 17, 12, 0, 21, 3, 1, 22]
====================================
cloned = 20
killed = 13
cloned = 14
killed = 10
cloned = 9
killed = 8
cloned = 18
killed = 6
cloned = 19
killed = 7
cloned = 17
killed = 4
cloned = 12
killed = 16
cloned = 0
killed = 5
cloned = 21
killed = 15
cloned = 3
killed = 11
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 15, 12, 6, 10, 5, 0, 3, 19, 16, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 11, 18, 13, 21, 7, 2, 8, 9, 1, 22]
====================================
cloned = 14
killed = 20
cloned = 4
killed = 15
cloned = 11
killed = 12
cloned = 18
killed = 6
cloned = 13
killed = 10
cloned = 21
killed = 5
cloned = 7
killed = 0
cloned = 2
killed = 3
cloned = 8
killed = 19
cloned = 9
killed = 16
cloned = 1
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 6, 17, 0, 4, 7, 5, 21, 2, 10, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 16, 19, 18, 9, 3, 15, 13, 20, 11, 22]
====================================
cloned = 8
killed = 14
cloned = 12
killed = 6
cloned = 16
killed = 17
cloned = 19
killed = 0
cloned = 18
killed = 4
cloned = 9
killed = 7
cloned = 3
killed = 5
cloned = 15
killed = 21
cloned = 13
killed = 2
cloned = 20
killed = 10
cloned = 11
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 14, 5, 13, 15, 8, 12, 19, 11, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 3, 1, 6, 20, 9, 4, 0, 17, 21, 2, 22]
====================================
cloned = 18
killed = 16
cloned = 3
killed = 10
cloned = 1
killed = 14
cloned = 6
killed = 5
cloned = 20
killed = 13
cloned = 9
killed = 15
cloned = 4
killed = 8
cloned = 0
killed = 12
cloned = 17
killed = 19
cloned = 21
killed = 11
cloned = 2
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 4, 11, 13, 21, 12, 3, 5, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 15, 16, 18, 2, 0, 10, 19, 1, 17, 20, 22]
====================================
cloned = 14
killed = 7
cloned = 15
killed = 9
cloned = 16
killed = 4
cloned = 18
killed = 11
cloned = 2
killed = 13
cloned = 0
killed = 21
cloned = 10
killed = 12
cloned = 19
killed = 3
cloned = 1
killed = 5
cloned = 17
killed = 8
cloned = 20
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 6, 9, 3, 16, 7, 19, 1, 20, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 2, 5, 18, 21, 14, 13, 12, 0, 15, 17, 22]
====================================
cloned = 8
killed = 4
cloned = 2
killed = 11
cloned = 5
killed = 6
cloned = 18
killed = 9
cloned = 21
killed = 3
cloned = 14
killed = 16
cloned = 13
killed = 7
cloned = 12
killed = 19
cloned = 0
killed = 1
cloned = 15
killed = 20
cloned = 17
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 19, 3, 0, 2, 5, 7, 8, 15, 21, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 4, 11, 10, 13, 1, 12, 18, 9, 17, 14, 22]
====================================
cloned = 20
killed = 6
cloned = 4
killed = 19
cloned = 11
killed = 3
cloned = 10
killed = 0
cloned = 13
killed = 2
cloned = 1
killed = 5
cloned = 12
killed = 7
cloned = 18
killed = 8
cloned = 9
killed = 15
cloned = 17
killed = 21
cloned = 14
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 9, 18, 5, 8, 10, 16, 3, 14, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 12, 1, 21, 6, 7, 13, 20, 19, 17, 15, 22]
====================================
cloned = 4
killed = 11
cloned = 12
killed = 2
cloned = 1
killed = 9
cloned = 21
killed = 18
cloned = 6
killed = 5
cloned = 7
killed = 8
cloned = 13
killed = 10
cloned = 20
killed = 16
cloned = 19
killed = 3
cloned = 17
killed = 14
cloned = 15
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 21, 0, 8, 11, 20, 3, 7, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 4, 2, 14, 19, 9, 18, 5, 1, 16, 17, 22]
====================================
cloned = 15
killed = 10
cloned = 4
killed = 12
cloned = 2
killed = 21
cloned = 14
killed = 0
cloned = 19
killed = 8
cloned = 9
killed = 11
cloned = 18
killed = 20
cloned = 5
killed = 3
cloned = 1
killed = 7
cloned = 16
killed = 6
cloned = 17
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 11, 4, 16, 7, 13, 10, 5, 14, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 20, 8, 15, 17, 2, 18, 19, 6, 12, 22]
====================================
cloned = 9
killed = 21
cloned = 0
killed = 1
cloned = 20
killed = 11
cloned = 8
killed = 4
cloned = 15
killed = 16
cloned = 17
killed = 7
cloned = 2
killed = 13
cloned = 18
killed = 10
cloned = 19
killed = 5
cloned = 6
killed = 14
cloned = 12
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 8, 11, 4, 5, 2, 1, 7, 9, 18, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 20, 16, 15, 10, 6, 12, 0, 21, 13, 19, 22]
====================================
cloned = 14
killed = 17
cloned = 20
killed = 8
cloned = 16
killed = 11
cloned = 15
killed = 4
cloned = 10
killed = 5
cloned = 6
killed = 2
cloned = 12
killed = 1
cloned = 0
killed = 7
cloned = 21
killed = 9
cloned = 13
killed = 18
cloned = 19
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 16, 9, 17, 6, 19, 0, 1, 20, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 5, 18, 3, 14, 10, 7, 21, 11, 8, 4, 22]
====================================
cloned = 15
killed = 13
cloned = 5
killed = 2
cloned = 18
killed = 16
cloned = 3
killed = 9
cloned = 14
killed = 17
cloned = 10
killed = 6
cloned = 7
killed = 19
cloned = 21
killed = 0
cloned = 11
killed = 1
cloned = 8
killed = 20
cloned = 4
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 21, 17, 20, 2, 16, 1, 12, 15, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 4, 11, 8, 3, 0, 9, 7, 19, 14, 22]
====================================
cloned = 5
killed = 18
cloned = 13
killed = 21
cloned = 4
killed = 17
cloned = 11
killed = 20
cloned = 8
killed = 2
cloned = 3
killed = 16
cloned = 0
killed = 1
cloned = 9
killed = 12
cloned = 7
killed = 15
cloned = 19
killed = 10
cloned = 14
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 14, 9, 4, 21, 15, 5, 10, 3, 17, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 19, 11, 13, 1, 18, 20, 2, 7, 12, 22]
====================================
cloned = 0
killed = 16
cloned = 6
killed = 14
cloned = 19
killed = 9
cloned = 11
killed = 4
cloned = 13
killed = 21
cloned = 1
killed = 15
cloned = 18
killed = 5
cloned = 20
killed = 10
cloned = 2
killed = 3
cloned = 7
killed = 17
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 14, 5, 9, 13, 10, 0, 8, 6, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 11, 18, 7, 19, 17, 3, 15, 1, 20, 21, 22]
====================================
cloned = 16
killed = 2
cloned = 11
killed = 14
cloned = 18
killed = 5
cloned = 7
killed = 9
cloned = 19
killed = 13
cloned = 17
killed = 10
cloned = 3
killed = 0
cloned = 15
killed = 8
cloned = 1
killed = 6
cloned = 20
killed = 4
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 11, 18, 13, 10, 0, 2, 3, 5, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 16, 1, 4, 15, 9, 14, 8, 19, 6, 7, 22]
====================================
cloned = 17
killed = 20
cloned = 16
killed = 21
cloned = 1
killed = 11
cloned = 4
killed = 18
cloned = 15
killed = 13
cloned = 9
killed = 10
cloned = 14
killed = 0
cloned = 8
killed = 2
cloned = 19
killed = 3
cloned = 6
killed = 5
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 9, 2, 18, 15, 21, 7, 19, 5, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 12, 4, 13, 10, 14, 17, 20, 0, 11, 22]
====================================
cloned = 1
killed = 16
cloned = 8
killed = 9
cloned = 12
killed = 2
cloned = 4
killed = 18
cloned = 13
killed = 15
cloned = 10
killed = 21
cloned = 14
killed = 7
cloned = 17
killed = 19
cloned = 20
killed = 5
cloned = 0
killed = 3
cloned = 11
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 8, 4, 10, 14, 6, 15, 9, 5, 1, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 21, 11, 16, 20, 19, 7, 2, 18, 12, 0, 22]
====================================
cloned = 3
killed = 13
cloned = 21
killed = 8
cloned = 11
killed = 4
cloned = 16
killed = 10
cloned = 20
killed = 14
cloned = 19
killed = 6
cloned = 7
killed = 15
cloned = 2
killed = 9
cloned = 18
killed = 5
cloned = 12
killed = 1
cloned = 0
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 20, 12, 21, 19, 3, 6, 18, 11, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 4, 2, 1, 16, 9, 14, 8, 15, 13, 0, 22]
====================================
cloned = 17
killed = 5
cloned = 4
killed = 10
cloned = 2
killed = 20
cloned = 1
killed = 12
cloned = 16
killed = 21
cloned = 9
killed = 19
cloned = 14
killed = 3
cloned = 8
killed = 6
cloned = 15
killed = 18
cloned = 13
killed = 11
cloned = 0
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 11, 13, 3, 16, 17, 9, 1, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 14, 2, 7, 18, 19, 12, 21, 15, 10, 22]
====================================
cloned = 8
killed = 20
cloned = 4
killed = 0
cloned = 14
killed = 11
cloned = 2
killed = 13
cloned = 7
killed = 3
cloned = 18
killed = 16
cloned = 19
killed = 17
cloned = 12
killed = 9
cloned = 21
killed = 1
cloned = 15
killed = 5
cloned = 10
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 12, 5, 4, 14, 8, 1, 15, 6, 7, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 16, 20, 10, 17, 3, 11, 13, 21, 19, 22]
====================================
cloned = 9
killed = 18
cloned = 0
killed = 12
cloned = 16
killed = 5
cloned = 20
killed = 4
cloned = 10
killed = 14
cloned = 17
killed = 8
cloned = 3
killed = 1
cloned = 11
killed = 15
cloned = 13
killed = 6
cloned = 21
killed = 7
cloned = 19
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 5, 21, 1, 2, 19, 15, 12, 11, 18, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 16, 10, 20, 8, 9, 3, 0, 7, 6, 22]
====================================
cloned = 14
killed = 13
cloned = 4
killed = 5
cloned = 16
killed = 21
cloned = 10
killed = 1
cloned = 20
killed = 2
cloned = 8
killed = 19
cloned = 9
killed = 15
cloned = 3
killed = 12
cloned = 0
killed = 11
cloned = 7
killed = 18
cloned = 6
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 2, 3, 8, 19, 16, 4, 6, 10, 9, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 11, 5, 21, 17, 20, 7, 1, 12, 0, 14, 22]
====================================
cloned = 13
killed = 15
cloned = 11
killed = 2
cloned = 5
killed = 3
cloned = 21
killed = 8
cloned = 17
killed = 19
cloned = 20
killed = 16
cloned = 7
killed = 4
cloned = 1
killed = 6
cloned = 12
killed = 10
cloned = 0
killed = 9
cloned = 14
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 1, 8, 13, 9, 18, 7, 16, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 12, 17, 6, 15, 10, 19, 20, 14, 5, 2, 22]
====================================
cloned = 21
killed = 0
cloned = 12
killed = 3
cloned = 17
killed = 1
cloned = 6
killed = 8
cloned = 15
killed = 13
cloned = 10
killed = 9
cloned = 19
killed = 18
cloned = 20
killed = 7
cloned = 14
killed = 16
cloned = 5
killed = 11
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 15, 12, 5, 1, 21, 6, 13, 3, 14, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 17, 8, 9, 0, 20, 10, 2, 16, 18, 19, 22]
====================================
cloned = 11
killed = 7
cloned = 17
killed = 15
cloned = 8
killed = 12
cloned = 9
killed = 5
cloned = 0
killed = 1
cloned = 20
killed = 21
cloned = 10
killed = 6
cloned = 2
killed = 13
cloned = 16
killed = 3
cloned = 18
killed = 14
cloned = 19
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 1, 15, 3, 21, 13, 16, 14, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 19, 2, 4, 7, 17, 5, 10, 12, 11, 22]
====================================
cloned = 6
killed = 20
cloned = 18
killed = 0
cloned = 19
killed = 1
cloned = 2
killed = 15
cloned = 4
killed = 3
cloned = 7
killed = 21
cloned = 17
killed = 13
cloned = 5
killed = 16
cloned = 10
killed = 14
cloned = 12
killed = 9
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 13, 15, 6, 10, 14, 17, 7, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 16, 11, 5, 12, 19, 2, 9, 20, 3, 22]
====================================
cloned = 21
killed = 0
cloned = 18
killed = 4
cloned = 16
killed = 13
cloned = 11
killed = 15
cloned = 5
killed = 6
cloned = 12
killed = 10
cloned = 19
killed = 14
cloned = 2
killed = 17
cloned = 9
killed = 7
cloned = 20
killed = 8
cloned = 3
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 20, 0, 12, 11, 19, 9, 3, 7, 17, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 1, 10, 18, 15, 2, 6, 8, 5, 16, 4, 22]
====================================
cloned = 14
killed = 21
cloned = 1
killed = 20
cloned = 10
killed = 0
cloned = 18
killed = 12
cloned = 15
killed = 11
cloned = 2
killed = 19
cloned = 6
killed = 9
cloned = 8
killed = 3
cloned = 5
killed = 7
cloned = 16
killed = 17
cloned = 4
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 6, 18, 2, 16, 5, 13, 7, 10, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 1, 4, 8, 17, 21, 19, 20, 0, 14, 22]
====================================
cloned = 15
killed = 9
cloned = 12
killed = 11
cloned = 1
killed = 6
cloned = 4
killed = 18
cloned = 8
killed = 2
cloned = 17
killed = 16
cloned = 21
killed = 5
cloned = 19
killed = 13
cloned = 20
killed = 7
cloned = 0
killed = 10
cloned = 14
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 20, 10, 11, 8, 17, 0, 4, 15, 3, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 6, 18, 21, 5, 12, 7, 13, 1, 2, 16, 22]
====================================
cloned = 9
killed = 19
cloned = 6
killed = 20
cloned = 18
killed = 10
cloned = 21
killed = 11
cloned = 5
killed = 8
cloned = 12
killed = 17
cloned = 7
killed = 0
cloned = 13
killed = 4
cloned = 1
killed = 15
cloned = 2
killed = 3
cloned = 16
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 15, 12, 21, 7, 0, 14, 20, 16, 13, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 11, 17, 8, 3, 1, 10, 2, 9, 19, 6, 22]
====================================
cloned = 5
killed = 18
cloned = 11
killed = 15
cloned = 17
killed = 12
cloned = 8
killed = 21
cloned = 3
killed = 7
cloned = 1
killed = 0
cloned = 10
killed = 14
cloned = 2
killed = 20
cloned = 9
killed = 16
cloned = 19
killed = 13
cloned = 6
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 11, 8, 7, 17, 16, 12, 4, 19, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 0, 15, 20, 1, 21, 14, 10, 5, 13, 22]
====================================
cloned = 3
killed = 2
cloned = 18
killed = 9
cloned = 0
killed = 11
cloned = 15
killed = 8
cloned = 20
killed = 7
cloned = 1
killed = 17
cloned = 21
killed = 16
cloned = 14
killed = 12
cloned = 10
killed = 4
cloned = 5
killed = 19
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 0, 1, 16, 19, 10, 2, 11, 21, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 9, 18, 7, 4, 20, 3, 12, 15, 14, 8, 22]
====================================
cloned = 17
killed = 13
cloned = 9
killed = 0
cloned = 18
killed = 1
cloned = 7
killed = 16
cloned = 4
killed = 19
cloned = 20
killed = 10
cloned = 3
killed = 2
cloned = 12
killed = 11
cloned = 15
killed = 21
cloned = 14
killed = 5
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 1, 19, 2, 6, 12, 21, 14, 15, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 3, 5, 17, 4, 16, 20, 9, 0, 11, 22]
====================================
cloned = 7
killed = 8
cloned = 10
killed = 13
cloned = 3
killed = 1
cloned = 5
killed = 19
cloned = 17
killed = 2
cloned = 4
killed = 6
cloned = 16
killed = 12
cloned = 20
killed = 21
cloned = 9
killed = 14
cloned = 0
killed = 15
cloned = 11
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 6, 2, 21, 4, 7, 3, 9, 11, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 10, 5, 20, 18, 0, 16, 14, 17, 15, 22]
====================================
cloned = 8
killed = 13
cloned = 12
killed = 1
cloned = 10
killed = 6
cloned = 5
killed = 2
cloned = 20
killed = 21
cloned = 18
killed = 4
cloned = 0
killed = 7
cloned = 16
killed = 3
cloned = 14
killed = 9
cloned = 17
killed = 11
cloned = 15
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 8, 2, 18, 4, 11, 6, 17, 5, 16, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 0, 19, 20, 15, 10, 3, 21, 14, 9, 13, 22]
====================================
cloned = 7
killed = 1
cloned = 0
killed = 8
cloned = 19
killed = 2
cloned = 20
killed = 18
cloned = 15
killed = 4
cloned = 10
killed = 11
cloned = 3
killed = 6
cloned = 21
killed = 17
cloned = 14
killed = 5
cloned = 9
killed = 16
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 3, 10, 6, 13, 16, 12, 18, 14, 8, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 20, 1, 7, 4, 17, 11, 19, 9, 0, 22]
====================================
cloned = 2
killed = 21
cloned = 15
killed = 3
cloned = 20
killed = 10
cloned = 1
killed = 6
cloned = 7
killed = 13
cloned = 4
killed = 16
cloned = 17
killed = 12
cloned = 11
killed = 18
cloned = 19
killed = 14
cloned = 9
killed = 8
cloned = 0
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 21, 9, 4, 15, 5, 10, 19, 1, 18, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 17, 20, 3, 14, 2, 7, 12, 16, 11, 13, 22]
====================================
cloned = 8
killed = 6
cloned = 17
killed = 21
cloned = 20
killed = 9
cloned = 3
killed = 4
cloned = 14
killed = 15
cloned = 2
killed = 5
cloned = 7
killed = 10
cloned = 12
killed = 19
cloned = 16
killed = 1
cloned = 11
killed = 18
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 17, 9, 13, 19, 14, 4, 1, 21, 5, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 7, 10, 11, 2, 8, 20, 15, 6, 3, 16, 22]
====================================
cloned = 0
killed = 18
cloned = 7
killed = 17
cloned = 10
killed = 9
cloned = 11
killed = 13
cloned = 2
killed = 19
cloned = 8
killed = 14
cloned = 20
killed = 4
cloned = 15
killed = 1
cloned = 6
killed = 21
cloned = 3
killed = 5
cloned = 16
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 4, 7, 16, 0, 14, 21, 19, 5, 20, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 6, 3, 10, 13, 12, 2, 18, 8, 1, 11, 22]
====================================
cloned = 9
killed = 15
cloned = 6
killed = 4
cloned = 3
killed = 7
cloned = 10
killed = 16
cloned = 13
killed = 0
cloned = 12
killed = 14
cloned = 2
killed = 21
cloned = 18
killed = 19
cloned = 8
killed = 5
cloned = 1
killed = 20
cloned = 11
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 21, 2, 3, 11, 13, 7, 6, 17, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 12, 10, 0, 1, 8, 19, 4, 14, 18, 15, 22]
====================================
cloned = 16
killed = 20
cloned = 12
killed = 21
cloned = 10
killed = 2
cloned = 0
killed = 3
cloned = 1
killed = 11
cloned = 8
killed = 13
cloned = 19
killed = 7
cloned = 4
killed = 6
cloned = 14
killed = 17
cloned = 18
killed = 5
cloned = 15
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 16, 15, 3, 12, 7, 6, 4, 0, 5, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 19, 18, 13, 20, 1, 17, 11, 2, 10, 9, 22]
====================================
cloned = 8
killed = 14
cloned = 19
killed = 16
cloned = 18
killed = 15
cloned = 13
killed = 3
cloned = 20
killed = 12
cloned = 1
killed = 7
cloned = 17
killed = 6
cloned = 11
killed = 4
cloned = 2
killed = 0
cloned = 10
killed = 5
cloned = 9
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 7, 15, 16, 13, 14, 17, 18, 10, 1, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 20, 8, 4, 6, 3, 0, 2, 5, 12, 11, 22]
====================================
cloned = 9
killed = 19
cloned = 20
killed = 7
cloned = 8
killed = 15
cloned = 4
killed = 16
cloned = 6
killed = 13
cloned = 3
killed = 14
cloned = 0
killed = 17
cloned = 2
killed = 18
cloned = 5
killed = 10
cloned = 12
killed = 1
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 15, 13, 0, 5, 11, 19, 18, 2, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 14, 8, 16, 17, 1, 9, 3, 21, 20, 22]
====================================
cloned = 12
killed = 10
cloned = 6
killed = 4
cloned = 14
killed = 15
cloned = 8
killed = 13
cloned = 16
killed = 0
cloned = 17
killed = 5
cloned = 1
killed = 11
cloned = 9
killed = 19
cloned = 3
killed = 18
cloned = 21
killed = 2
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 21, 1, 10, 5, 7, 13, 6, 8, 16, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 19, 3, 18, 0, 15, 12, 4, 2, 11, 14, 22]
====================================
cloned = 20
killed = 9
cloned = 19
killed = 21
cloned = 3
killed = 1
cloned = 18
killed = 10
cloned = 0
killed = 5
cloned = 15
killed = 7
cloned = 12
killed = 13
cloned = 4
killed = 6
cloned = 2
killed = 8
cloned = 11
killed = 16
cloned = 14
killed = 17
Trial run 7/seed 862:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.59000000000001,
  57.85,
  59.394999999999996,
  54.5,
  51.77,
  54.370000000000005,
  54.084999999999994,
  37.0,
  44.790000000000006,
  28.654999999999998,
  48.07,
  50.919999999999995,
  48.344999999999985,
  52.42,
  56.464999999999996,
  36.88,
  51.290000000000006,
  47.165,
  46.355,
  42.135000000000005,
  35.03000000000001,
  55.355,
  53.614999999999995],
 [65.7,
  63.815,
  65.75,
  62.870000000000005,
  62.480000000000004,
  62.16,
  62.265,
  65.7,
  65.75000000000001,
  65.75,
  62.870000000000005,
  62.37,
  62.160000000000004,
  63.540000000000006,
  58.80999999999999,
  60.91,
  62.58,
  63.540000000000006,
  58.75,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.29,
 56.224999999999994,
 59.19,
 55.03,
 51.87,
 53.98500000000001,
 54.724999999999994,
 37.0,
 44.88,
 31.524999999999995,
 47.64,
 50.559999999999995,
 47.66999999999999,
 52.455,
 56.184999999999995,
 36.720000000000006,
 51.35,
 49.02,
 46.315,
 42.225,
 34.80500000000001,
 55.55499999999999,
 52.64999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.35
Upper: 51.35
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.845,
 65.75,
 62.870000000000005,
 62.294999999999995,
 62.16,
 61.775,
 65.7,
 64.055,
 65.75,
 62.870000000000005,
 62.33,
 62.160000000000004,
 63.540000000000006,
 59.46999999999999,
 62.15,
 62.58,
 63.540000000000006,
 58.73,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 7, 4, 0, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 7
killed = 20
cloned = 4
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 21, 0, 20]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 4, 7, 12, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 4
killed = 21
cloned = 7
killed = 0
cloned = 12
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 21, 10, 3, 8, 7, 14, 11, 17, 12, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 2, 19, 16, 5, 4, 0, 13, 9, 15, 20, 22]
====================================
cloned = 6
killed = 1
cloned = 2
killed = 21
cloned = 19
killed = 10
cloned = 16
killed = 3
cloned = 5
killed = 8
cloned = 4
killed = 7
cloned = 0
killed = 14
cloned = 13
killed = 11
cloned = 9
killed = 17
cloned = 15
killed = 12
cloned = 20
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 11, 5, 0, 20, 17, 21, 15, 9, 3, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 8, 19, 6, 4, 18, 10, 2, 1, 13, 12, 22]
====================================
cloned = 7
killed = 16
cloned = 8
killed = 11
cloned = 19
killed = 5
cloned = 6
killed = 0
cloned = 4
killed = 20
cloned = 18
killed = 17
cloned = 10
killed = 21
cloned = 2
killed = 15
cloned = 1
killed = 9
cloned = 13
killed = 3
cloned = 12
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 15, 10, 21, 0, 16, 18, 5, 11, 2, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 9, 3, 8, 13, 4, 7, 6, 17, 20, 19, 22]
====================================
cloned = 12
killed = 1
cloned = 9
killed = 15
cloned = 3
killed = 10
cloned = 8
killed = 21
cloned = 13
killed = 0
cloned = 4
killed = 16
cloned = 7
killed = 18
cloned = 6
killed = 5
cloned = 17
killed = 11
cloned = 20
killed = 2
cloned = 19
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 21, 14, 19, 5, 11, 8, 16, 12, 15, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 13, 7, 20, 1, 3, 2, 6, 18, 10, 4, 22]
====================================
cloned = 9
killed = 17
cloned = 13
killed = 21
cloned = 7
killed = 14
cloned = 20
killed = 19
cloned = 1
killed = 5
cloned = 3
killed = 11
cloned = 2
killed = 8
cloned = 6
killed = 16
cloned = 18
killed = 12
cloned = 10
killed = 15
cloned = 4
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 8, 14, 12, 18, 21, 10, 6, 4, 5, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 1, 0, 2, 16, 15, 9, 7, 11, 3, 19, 22]
====================================
cloned = 13
killed = 17
cloned = 1
killed = 8
cloned = 0
killed = 14
cloned = 2
killed = 12
cloned = 16
killed = 18
cloned = 15
killed = 21
cloned = 9
killed = 10
cloned = 7
killed = 6
cloned = 11
killed = 4
cloned = 3
killed = 5
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 16, 2, 0, 11, 7, 13, 1, 19, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 12, 14, 17, 6, 8, 18, 5, 21, 15, 10, 22]
====================================
cloned = 20
killed = 9
cloned = 12
killed = 3
cloned = 14
killed = 16
cloned = 17
killed = 2
cloned = 6
killed = 0
cloned = 8
killed = 11
cloned = 18
killed = 7
cloned = 5
killed = 13
cloned = 21
killed = 1
cloned = 15
killed = 19
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 3, 19, 15, 4, 18, 0, 10, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 20, 6, 5, 21, 8, 14, 7, 9, 16, 2, 22]
====================================
cloned = 17
killed = 11
cloned = 20
killed = 13
cloned = 6
killed = 3
cloned = 5
killed = 19
cloned = 21
killed = 15
cloned = 8
killed = 4
cloned = 14
killed = 18
cloned = 7
killed = 0
cloned = 9
killed = 10
cloned = 16
killed = 12
cloned = 2
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 11, 4, 16, 0, 14, 1, 2, 9, 10, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 13, 21, 8, 5, 17, 19, 6, 15, 7, 22]
====================================
cloned = 3
killed = 20
cloned = 18
killed = 11
cloned = 13
killed = 4
cloned = 21
killed = 16
cloned = 8
killed = 0
cloned = 5
killed = 14
cloned = 17
killed = 1
cloned = 19
killed = 2
cloned = 6
killed = 9
cloned = 15
killed = 10
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 19, 6, 17, 21, 3, 11, 20, 13, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 16, 4, 2, 7, 1, 18, 15, 12, 5, 9, 22]
====================================
cloned = 0
killed = 10
cloned = 16
killed = 8
cloned = 4
killed = 19
cloned = 2
killed = 6
cloned = 7
killed = 17
cloned = 1
killed = 21
cloned = 18
killed = 3
cloned = 15
killed = 11
cloned = 12
killed = 20
cloned = 5
killed = 13
cloned = 9
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 14, 5, 6, 10, 16, 11, 13, 15, 12, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 4, 3, 17, 1, 19, 0, 7, 20, 18, 9, 22]
====================================
cloned = 2
killed = 21
cloned = 4
killed = 14
cloned = 3
killed = 5
cloned = 17
killed = 6
cloned = 1
killed = 10
cloned = 19
killed = 16
cloned = 0
killed = 11
cloned = 7
killed = 13
cloned = 20
killed = 15
cloned = 18
killed = 12
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 9, 14, 6, 10, 15, 11, 0, 8, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 18, 5, 17, 4, 13, 20, 1, 16, 19, 3, 22]
====================================
cloned = 2
killed = 21
cloned = 18
killed = 9
cloned = 5
killed = 14
cloned = 17
killed = 6
cloned = 4
killed = 10
cloned = 13
killed = 15
cloned = 20
killed = 11
cloned = 1
killed = 0
cloned = 16
killed = 8
cloned = 19
killed = 7
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 20, 12, 7, 6, 4, 0, 10, 19, 14, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 13, 17, 2, 1, 16, 8, 21, 3, 11, 5, 22]
====================================
cloned = 9
killed = 15
cloned = 13
killed = 20
cloned = 17
killed = 12
cloned = 2
killed = 7
cloned = 1
killed = 6
cloned = 16
killed = 4
cloned = 8
killed = 0
cloned = 21
killed = 10
cloned = 3
killed = 19
cloned = 11
killed = 14
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 4, 0, 11, 21, 6, 7, 8, 13, 10, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 5, 17, 16, 15, 9, 1, 12, 20, 19, 2, 22]
====================================
cloned = 3
killed = 14
cloned = 5
killed = 4
cloned = 17
killed = 0
cloned = 16
killed = 11
cloned = 15
killed = 21
cloned = 9
killed = 6
cloned = 1
killed = 7
cloned = 12
killed = 8
cloned = 20
killed = 13
cloned = 19
killed = 10
cloned = 2
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 8, 2, 14, 13, 12, 10, 18, 15, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 21, 7, 9, 0, 17, 4, 6, 5, 19, 16, 22]
====================================
cloned = 11
killed = 3
cloned = 21
killed = 1
cloned = 7
killed = 8
cloned = 9
killed = 2
cloned = 0
killed = 14
cloned = 17
killed = 13
cloned = 4
killed = 12
cloned = 6
killed = 10
cloned = 5
killed = 18
cloned = 19
killed = 15
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 18, 2, 7, 6, 15, 11, 17, 4, 19, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 20, 8, 13, 12, 9, 16, 3, 1, 21, 5, 22]
====================================
cloned = 10
killed = 0
cloned = 20
killed = 18
cloned = 8
killed = 2
cloned = 13
killed = 7
cloned = 12
killed = 6
cloned = 9
killed = 15
cloned = 16
killed = 11
cloned = 3
killed = 17
cloned = 1
killed = 4
cloned = 21
killed = 19
cloned = 5
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 12, 17, 5, 21, 1, 8, 0, 7, 18, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 15, 19, 10, 11, 6, 4, 2, 20, 16, 3, 22]
====================================
cloned = 14
killed = 13
cloned = 15
killed = 12
cloned = 19
killed = 17
cloned = 10
killed = 5
cloned = 11
killed = 21
cloned = 6
killed = 1
cloned = 4
killed = 8
cloned = 2
killed = 0
cloned = 20
killed = 7
cloned = 16
killed = 18
cloned = 3
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 3, 20, 0, 14, 11, 16, 21, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 9, 7, 2, 8, 13, 15, 1, 12, 17, 19, 22]
====================================
cloned = 18
killed = 4
cloned = 9
killed = 5
cloned = 7
killed = 3
cloned = 2
killed = 20
cloned = 8
killed = 0
cloned = 13
killed = 14
cloned = 15
killed = 11
cloned = 1
killed = 16
cloned = 12
killed = 21
cloned = 17
killed = 10
cloned = 19
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 0, 15, 2, 7, 11, 16, 4, 18, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 14, 1, 12, 13, 20, 6, 8, 21, 3, 17, 22]
====================================
cloned = 10
killed = 19
cloned = 14
killed = 0
cloned = 1
killed = 15
cloned = 12
killed = 2
cloned = 13
killed = 7
cloned = 20
killed = 11
cloned = 6
killed = 16
cloned = 8
killed = 4
cloned = 21
killed = 18
cloned = 3
killed = 5
cloned = 17
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 0, 14, 1, 17, 5, 11, 2, 7, 12, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 9, 18, 20, 4, 15, 6, 16, 3, 21, 22]
====================================
cloned = 10
killed = 8
cloned = 13
killed = 0
cloned = 9
killed = 14
cloned = 18
killed = 1
cloned = 20
killed = 17
cloned = 4
killed = 5
cloned = 15
killed = 11
cloned = 6
killed = 2
cloned = 16
killed = 7
cloned = 3
killed = 12
cloned = 21
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 1, 16, 13, 9, 14, 11, 3, 21, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 8, 5, 4, 7, 2, 19, 20, 17, 10, 18, 22]
====================================
cloned = 0
killed = 12
cloned = 8
killed = 6
cloned = 5
killed = 1
cloned = 4
killed = 16
cloned = 7
killed = 13
cloned = 2
killed = 9
cloned = 19
killed = 14
cloned = 20
killed = 11
cloned = 17
killed = 3
cloned = 10
killed = 21
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 19, 4, 12, 15, 17, 2, 21, 1, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 10, 13, 6, 16, 9, 14, 8, 0, 5, 22]
====================================
cloned = 20
killed = 11
cloned = 7
killed = 3
cloned = 10
killed = 19
cloned = 13
killed = 4
cloned = 6
killed = 12
cloned = 16
killed = 15
cloned = 9
killed = 17
cloned = 14
killed = 2
cloned = 8
killed = 21
cloned = 0
killed = 1
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 15, 10, 11, 3, 0, 21, 13, 16, 2, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 1, 5, 14, 20, 8, 18, 12, 7, 4, 9, 22]
====================================
cloned = 19
killed = 17
cloned = 1
killed = 15
cloned = 5
killed = 10
cloned = 14
killed = 11
cloned = 20
killed = 3
cloned = 8
killed = 0
cloned = 18
killed = 21
cloned = 12
killed = 13
cloned = 7
killed = 16
cloned = 4
killed = 2
cloned = 9
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 15, 12, 6, 21, 19, 7, 5, 10, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 2, 0, 3, 1, 8, 18, 11, 20, 14, 22]
====================================
cloned = 4
killed = 17
cloned = 16
killed = 9
cloned = 2
killed = 15
cloned = 0
killed = 12
cloned = 3
killed = 6
cloned = 1
killed = 21
cloned = 8
killed = 19
cloned = 18
killed = 7
cloned = 11
killed = 5
cloned = 20
killed = 10
cloned = 14
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 3, 19, 18, 9, 0, 15, 16, 1, 13, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 6, 21, 2, 4, 12, 20, 8, 11, 14, 7, 22]
====================================
cloned = 5
killed = 17
cloned = 6
killed = 3
cloned = 21
killed = 19
cloned = 2
killed = 18
cloned = 4
killed = 9
cloned = 12
killed = 0
cloned = 20
killed = 15
cloned = 8
killed = 16
cloned = 11
killed = 1
cloned = 14
killed = 13
cloned = 7
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 2, 11, 10, 6, 14, 15, 13, 0, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 20, 16, 5, 12, 9, 3, 1, 18, 17, 19, 22]
====================================
cloned = 7
killed = 8
cloned = 20
killed = 4
cloned = 16
killed = 2
cloned = 5
killed = 11
cloned = 12
killed = 10
cloned = 9
killed = 6
cloned = 3
killed = 14
cloned = 1
killed = 15
cloned = 18
killed = 13
cloned = 17
killed = 0
cloned = 19
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 0, 6, 7, 18, 20, 17, 12, 15, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 2, 13, 5, 8, 4, 14, 3, 21, 9, 1, 22]
====================================
cloned = 19
killed = 11
cloned = 2
killed = 10
cloned = 13
killed = 0
cloned = 5
killed = 6
cloned = 8
killed = 7
cloned = 4
killed = 18
cloned = 14
killed = 20
cloned = 3
killed = 17
cloned = 21
killed = 12
cloned = 9
killed = 15
cloned = 1
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 20, 5, 9, 13, 15, 21, 12, 8, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 17, 3, 2, 0, 16, 19, 18, 10, 4, 11, 22]
====================================
cloned = 14
killed = 7
cloned = 17
killed = 20
cloned = 3
killed = 5
cloned = 2
killed = 9
cloned = 0
killed = 13
cloned = 16
killed = 15
cloned = 19
killed = 21
cloned = 18
killed = 12
cloned = 10
killed = 8
cloned = 4
killed = 1
cloned = 11
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 7, 9, 2, 5, 4, 21, 16, 13, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 10, 20, 12, 11, 3, 1, 15, 8, 19, 18, 22]
====================================
cloned = 6
killed = 14
cloned = 10
killed = 0
cloned = 20
killed = 7
cloned = 12
killed = 9
cloned = 11
killed = 2
cloned = 3
killed = 5
cloned = 1
killed = 4
cloned = 15
killed = 21
cloned = 8
killed = 16
cloned = 19
killed = 13
cloned = 18
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 19, 17, 15, 3, 4, 20, 21, 14, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 7, 5, 9, 2, 0, 11, 18, 8, 12, 13, 22]
====================================
cloned = 1
killed = 10
cloned = 7
killed = 6
cloned = 5
killed = 19
cloned = 9
killed = 17
cloned = 2
killed = 15
cloned = 0
killed = 3
cloned = 11
killed = 4
cloned = 18
killed = 20
cloned = 8
killed = 21
cloned = 12
killed = 14
cloned = 13
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 2, 14, 8, 11, 21, 19, 1, 18, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 9, 13, 15, 17, 6, 12, 10, 16, 3, 7, 22]
====================================
cloned = 4
killed = 5
cloned = 9
killed = 0
cloned = 13
killed = 2
cloned = 15
killed = 14
cloned = 17
killed = 8
cloned = 6
killed = 11
cloned = 12
killed = 21
cloned = 10
killed = 19
cloned = 16
killed = 1
cloned = 3
killed = 18
cloned = 7
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 8, 5, 15, 7, 13, 12, 9, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 16, 17, 4, 6, 20, 14, 21, 0, 19, 18, 22]
====================================
cloned = 1
killed = 3
cloned = 16
killed = 10
cloned = 17
killed = 8
cloned = 4
killed = 5
cloned = 6
killed = 15
cloned = 20
killed = 7
cloned = 14
killed = 13
cloned = 21
killed = 12
cloned = 0
killed = 9
cloned = 19
killed = 11
cloned = 18
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 14, 16, 19, 4, 10, 12, 0, 17, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 21, 5, 11, 18, 15, 9, 1, 2, 8, 7, 22]
====================================
cloned = 20
killed = 13
cloned = 21
killed = 3
cloned = 5
killed = 14
cloned = 11
killed = 16
cloned = 18
killed = 19
cloned = 15
killed = 4
cloned = 9
killed = 10
cloned = 1
killed = 12
cloned = 2
killed = 0
cloned = 8
killed = 17
cloned = 7
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 13, 11, 3, 19, 8, 6, 20, 17, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 18, 0, 1, 9, 14, 15, 7, 10, 2, 16, 22]
====================================
cloned = 5
killed = 4
cloned = 18
killed = 12
cloned = 0
killed = 13
cloned = 1
killed = 11
cloned = 9
killed = 3
cloned = 14
killed = 19
cloned = 15
killed = 8
cloned = 7
killed = 6
cloned = 10
killed = 20
cloned = 2
killed = 17
cloned = 16
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 0, 4, 1, 8, 11, 18, 20, 13, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 19, 6, 15, 17, 9, 5, 2, 7, 14, 21, 22]
====================================
cloned = 16
killed = 10
cloned = 19
killed = 0
cloned = 6
killed = 4
cloned = 15
killed = 1
cloned = 17
killed = 8
cloned = 9
killed = 11
cloned = 5
killed = 18
cloned = 2
killed = 20
cloned = 7
killed = 13
cloned = 14
killed = 3
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 21, 2, 0, 11, 10, 17, 1, 7, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 18, 6, 12, 16, 3, 14, 9, 20, 13, 5, 22]
====================================
cloned = 19
killed = 4
cloned = 18
killed = 15
cloned = 6
killed = 21
cloned = 12
killed = 2
cloned = 16
killed = 0
cloned = 3
killed = 11
cloned = 14
killed = 10
cloned = 9
killed = 17
cloned = 20
killed = 1
cloned = 13
killed = 7
cloned = 5
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 19, 15, 5, 9, 18, 2, 8, 10, 14, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 0, 1, 21, 17, 7, 16, 6, 12, 20, 4, 22]
====================================
cloned = 3
killed = 13
cloned = 0
killed = 19
cloned = 1
killed = 15
cloned = 21
killed = 5
cloned = 17
killed = 9
cloned = 7
killed = 18
cloned = 16
killed = 2
cloned = 6
killed = 8
cloned = 12
killed = 10
cloned = 20
killed = 14
cloned = 4
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 20, 13, 21, 19, 17, 3, 0, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 12, 16, 18, 7, 4, 15, 14, 8, 6, 2, 22]
====================================
cloned = 9
killed = 11
cloned = 12
killed = 1
cloned = 16
killed = 20
cloned = 18
killed = 13
cloned = 7
killed = 21
cloned = 4
killed = 19
cloned = 15
killed = 17
cloned = 14
killed = 3
cloned = 8
killed = 0
cloned = 6
killed = 5
cloned = 2
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 20, 16, 2, 4, 9, 1, 10, 19, 15, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 13, 17, 18, 5, 7, 11, 3, 8, 6, 22]
====================================
cloned = 12
killed = 14
cloned = 0
killed = 20
cloned = 13
killed = 16
cloned = 17
killed = 2
cloned = 18
killed = 4
cloned = 5
killed = 9
cloned = 7
killed = 1
cloned = 11
killed = 10
cloned = 3
killed = 19
cloned = 8
killed = 15
cloned = 6
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 18, 9, 1, 13, 16, 17, 14, 20, 10, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 19, 2, 12, 7, 3, 5, 15, 11, 6, 0, 22]
====================================
cloned = 4
killed = 8
cloned = 19
killed = 18
cloned = 2
killed = 9
cloned = 12
killed = 1
cloned = 7
killed = 13
cloned = 3
killed = 16
cloned = 5
killed = 17
cloned = 15
killed = 14
cloned = 11
killed = 20
cloned = 6
killed = 10
cloned = 0
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 16, 8, 19, 5, 2, 20, 1, 11, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 4, 9, 14, 12, 6, 7, 10, 0, 13, 22]
====================================
cloned = 3
killed = 21
cloned = 18
killed = 17
cloned = 4
killed = 16
cloned = 9
killed = 8
cloned = 14
killed = 19
cloned = 12
killed = 5
cloned = 6
killed = 2
cloned = 7
killed = 20
cloned = 10
killed = 1
cloned = 0
killed = 11
cloned = 13
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 16, 6, 18, 3, 12, 17, 2, 1, 14, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 8, 5, 4, 10, 20, 19, 7, 15, 21, 11, 22]
====================================
cloned = 0
killed = 9
cloned = 8
killed = 16
cloned = 5
killed = 6
cloned = 4
killed = 18
cloned = 10
killed = 3
cloned = 20
killed = 12
cloned = 19
killed = 17
cloned = 7
killed = 2
cloned = 15
killed = 1
cloned = 21
killed = 14
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 10, 19, 3, 1, 16, 12, 20, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 13, 15, 7, 11, 4, 18, 21, 2, 9, 5, 22]
====================================
cloned = 17
killed = 14
cloned = 13
killed = 0
cloned = 15
killed = 10
cloned = 7
killed = 19
cloned = 11
killed = 3
cloned = 4
killed = 1
cloned = 18
killed = 16
cloned = 21
killed = 12
cloned = 2
killed = 20
cloned = 9
killed = 8
cloned = 5
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 7, 8, 12, 19, 14, 4, 21, 5, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 16, 15, 13, 10, 3, 18, 11, 1, 0, 2, 22]
====================================
cloned = 20
killed = 9
cloned = 16
killed = 6
cloned = 15
killed = 7
cloned = 13
killed = 8
cloned = 10
killed = 12
cloned = 3
killed = 19
cloned = 18
killed = 14
cloned = 11
killed = 4
cloned = 1
killed = 21
cloned = 0
killed = 5
cloned = 2
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 1, 4, 19, 13, 11, 21, 17, 8, 0, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 18, 16, 12, 7, 2, 14, 5, 3, 6, 15, 22]
====================================
cloned = 10
killed = 20
cloned = 18
killed = 1
cloned = 16
killed = 4
cloned = 12
killed = 19
cloned = 7
killed = 13
cloned = 2
killed = 11
cloned = 14
killed = 21
cloned = 5
killed = 17
cloned = 3
killed = 8
cloned = 6
killed = 0
cloned = 15
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 18, 12, 11, 14, 9, 21, 2, 10, 19, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 8, 7, 16, 0, 15, 1, 3, 13, 4, 5, 22]
====================================
cloned = 17
killed = 20
cloned = 8
killed = 18
cloned = 7
killed = 12
cloned = 16
killed = 11
cloned = 0
killed = 14
cloned = 15
killed = 9
cloned = 1
killed = 21
cloned = 3
killed = 2
cloned = 13
killed = 10
cloned = 4
killed = 19
cloned = 5
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 12, 7, 6, 5, 17, 4, 18, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 15, 1, 9, 14, 19, 16, 21, 8, 2, 0, 22]
====================================
cloned = 13
killed = 3
cloned = 15
killed = 20
cloned = 1
killed = 12
cloned = 9
killed = 7
cloned = 14
killed = 6
cloned = 19
killed = 5
cloned = 16
killed = 17
cloned = 21
killed = 4
cloned = 8
killed = 18
cloned = 2
killed = 10
cloned = 0
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 9, 8, 7, 5, 19, 10, 2, 21, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 1, 15, 3, 4, 17, 14, 12, 6, 0, 16, 22]
====================================
cloned = 18
killed = 11
cloned = 1
killed = 13
cloned = 15
killed = 9
cloned = 3
killed = 8
cloned = 4
killed = 7
cloned = 17
killed = 5
cloned = 14
killed = 19
cloned = 12
killed = 10
cloned = 6
killed = 2
cloned = 0
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 20, 17, 13, 8, 1, 2, 19, 15, 14, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 11, 12, 16, 21, 5, 3, 10, 18, 9, 22]
====================================
cloned = 0
killed = 4
cloned = 6
killed = 20
cloned = 11
killed = 17
cloned = 12
killed = 13
cloned = 16
killed = 8
cloned = 21
killed = 1
cloned = 5
killed = 2
cloned = 3
killed = 19
cloned = 10
killed = 15
cloned = 18
killed = 14
cloned = 9
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 21, 14, 20, 18, 6, 8, 16, 4, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 0, 9, 11, 10, 3, 12, 5, 15, 19, 17, 22]
====================================
cloned = 13
killed = 2
cloned = 0
killed = 21
cloned = 9
killed = 14
cloned = 11
killed = 20
cloned = 10
killed = 18
cloned = 3
killed = 6
cloned = 12
killed = 8
cloned = 5
killed = 16
cloned = 15
killed = 4
cloned = 19
killed = 1
cloned = 17
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 10, 13, 6, 2, 9, 8, 17, 3, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 0, 20, 15, 19, 14, 21, 1, 11, 5, 22]
====================================
cloned = 7
killed = 16
cloned = 18
killed = 12
cloned = 0
killed = 10
cloned = 20
killed = 13
cloned = 15
killed = 6
cloned = 19
killed = 2
cloned = 14
killed = 9
cloned = 21
killed = 8
cloned = 1
killed = 17
cloned = 11
killed = 3
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 0, 17, 5, 12, 21, 4, 2, 14, 16, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 9, 18, 19, 15, 7, 3, 11, 20, 10, 1, 22]
====================================
cloned = 6
killed = 8
cloned = 9
killed = 0
cloned = 18
killed = 17
cloned = 19
killed = 5
cloned = 15
killed = 12
cloned = 7
killed = 21
cloned = 3
killed = 4
cloned = 11
killed = 2
cloned = 20
killed = 14
cloned = 10
killed = 16
cloned = 1
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 19, 1, 13, 20, 12, 2, 18, 3, 14, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 6, 10, 17, 4, 16, 5, 9, 11, 21, 15, 22]
====================================
cloned = 7
killed = 0
cloned = 6
killed = 19
cloned = 10
killed = 1
cloned = 17
killed = 13
cloned = 4
killed = 20
cloned = 16
killed = 12
cloned = 5
killed = 2
cloned = 9
killed = 18
cloned = 11
killed = 3
cloned = 21
killed = 14
cloned = 15
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 7, 19, 12, 18, 21, 16, 3, 20, 1, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 2, 10, 0, 5, 9, 17, 14, 15, 11, 8, 22]
====================================
cloned = 6
killed = 13
cloned = 2
killed = 7
cloned = 10
killed = 19
cloned = 0
killed = 12
cloned = 5
killed = 18
cloned = 9
killed = 21
cloned = 17
killed = 16
cloned = 14
killed = 3
cloned = 15
killed = 20
cloned = 11
killed = 1
cloned = 8
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 18, 5, 14, 15, 17, 3, 16, 11, 19, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 6, 8, 10, 4, 21, 13, 9, 20, 12, 7, 22]
====================================
cloned = 1
killed = 2
cloned = 6
killed = 18
cloned = 8
killed = 5
cloned = 10
killed = 14
cloned = 4
killed = 15
cloned = 21
killed = 17
cloned = 13
killed = 3
cloned = 9
killed = 16
cloned = 20
killed = 11
cloned = 12
killed = 19
cloned = 7
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 17, 6, 20, 0, 15, 10, 21, 8, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 18, 4, 3, 12, 1, 7, 2, 5, 13, 11, 22]
====================================
cloned = 16
killed = 9
cloned = 18
killed = 19
cloned = 4
killed = 17
cloned = 3
killed = 6
cloned = 12
killed = 20
cloned = 1
killed = 0
cloned = 7
killed = 15
cloned = 2
killed = 10
cloned = 5
killed = 21
cloned = 13
killed = 8
cloned = 11
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 0, 16, 10, 8, 6, 7, 12, 20, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 2, 17, 1, 3, 11, 5, 14, 9, 18, 19, 22]
====================================
cloned = 15
killed = 4
cloned = 2
killed = 13
cloned = 17
killed = 0
cloned = 1
killed = 16
cloned = 3
killed = 10
cloned = 11
killed = 8
cloned = 5
killed = 6
cloned = 14
killed = 7
cloned = 9
killed = 12
cloned = 18
killed = 20
cloned = 19
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 0, 9, 15, 8, 1, 10, 17, 11, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 18, 14, 21, 13, 2, 12, 3, 19, 16, 20, 22]
====================================
cloned = 4
killed = 6
cloned = 18
killed = 0
cloned = 14
killed = 9
cloned = 21
killed = 15
cloned = 13
killed = 8
cloned = 2
killed = 1
cloned = 12
killed = 10
cloned = 3
killed = 17
cloned = 19
killed = 11
cloned = 16
killed = 7
cloned = 20
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 13, 18, 17, 0, 3, 7, 19, 16, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 12, 6, 1, 2, 20, 5, 9, 14, 15, 22]
====================================
cloned = 8
killed = 21
cloned = 4
killed = 13
cloned = 12
killed = 18
cloned = 6
killed = 17
cloned = 1
killed = 0
cloned = 2
killed = 3
cloned = 20
killed = 7
cloned = 5
killed = 19
cloned = 9
killed = 16
cloned = 14
killed = 10
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 5, 0, 13, 8, 10, 3, 15, 6, 17, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 16, 14, 1, 9, 12, 19, 4, 18, 7, 20, 22]
====================================
cloned = 21
killed = 2
cloned = 16
killed = 5
cloned = 14
killed = 0
cloned = 1
killed = 13
cloned = 9
killed = 8
cloned = 12
killed = 10
cloned = 19
killed = 3
cloned = 4
killed = 15
cloned = 18
killed = 6
cloned = 7
killed = 17
cloned = 20
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 5, 12, 21, 14, 20, 8, 3, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 9, 7, 11, 10, 19, 17, 16, 13, 18, 0, 22]
====================================
cloned = 15
killed = 4
cloned = 9
killed = 2
cloned = 7
killed = 5
cloned = 11
killed = 12
cloned = 10
killed = 21
cloned = 19
killed = 14
cloned = 17
killed = 20
cloned = 16
killed = 8
cloned = 13
killed = 3
cloned = 18
killed = 1
cloned = 0
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 12, 21, 10, 20, 1, 7, 2, 19, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 6, 11, 15, 14, 4, 5, 0, 16, 18, 8, 22]
====================================
cloned = 17
killed = 3
cloned = 6
killed = 13
cloned = 11
killed = 12
cloned = 15
killed = 21
cloned = 14
killed = 10
cloned = 4
killed = 20
cloned = 5
killed = 1
cloned = 0
killed = 7
cloned = 16
killed = 2
cloned = 18
killed = 19
cloned = 8
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 2, 14, 9, 4, 12, 6, 3, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 21, 1, 15, 16, 7, 0, 17, 11, 19, 18, 22]
====================================
cloned = 20
killed = 10
cloned = 21
killed = 5
cloned = 1
killed = 2
cloned = 15
killed = 14
cloned = 16
killed = 9
cloned = 7
killed = 4
cloned = 0
killed = 12
cloned = 17
killed = 6
cloned = 11
killed = 3
cloned = 19
killed = 13
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 20, 5, 9, 12, 17, 11, 4, 21, 16, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 0, 13, 6, 14, 18, 2, 7, 19, 10, 22]
====================================
cloned = 8
killed = 15
cloned = 1
killed = 20
cloned = 0
killed = 5
cloned = 13
killed = 9
cloned = 6
killed = 12
cloned = 14
killed = 17
cloned = 18
killed = 11
cloned = 2
killed = 4
cloned = 7
killed = 21
cloned = 19
killed = 16
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 11, 0, 1, 12, 18, 20, 21, 4, 13, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 9, 6, 19, 2, 15, 3, 14, 16, 8, 10, 22]
====================================
cloned = 5
killed = 17
cloned = 9
killed = 11
cloned = 6
killed = 0
cloned = 19
killed = 1
cloned = 2
killed = 12
cloned = 15
killed = 18
cloned = 3
killed = 20
cloned = 14
killed = 21
cloned = 16
killed = 4
cloned = 8
killed = 13
cloned = 10
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 2, 21, 7, 20, 18, 16, 14, 12, 0, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 1, 8, 10, 6, 4, 9, 15, 11, 13, 3, 22]
====================================
cloned = 5
killed = 17
cloned = 1
killed = 2
cloned = 8
killed = 21
cloned = 10
killed = 7
cloned = 6
killed = 20
cloned = 4
killed = 18
cloned = 9
killed = 16
cloned = 15
killed = 14
cloned = 11
killed = 12
cloned = 13
killed = 0
cloned = 3
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 16, 19, 2, 8, 6, 4, 12, 9, 7, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 1, 13, 20, 5, 3, 15, 17, 11, 18, 0, 22]
====================================
cloned = 10
killed = 21
cloned = 1
killed = 16
cloned = 13
killed = 19
cloned = 20
killed = 2
cloned = 5
killed = 8
cloned = 3
killed = 6
cloned = 15
killed = 4
cloned = 17
killed = 12
cloned = 11
killed = 9
cloned = 18
killed = 7
cloned = 0
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 1, 5, 0, 4, 19, 8, 6, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 18, 10, 17, 20, 14, 15, 21, 9, 3, 16, 22]
====================================
cloned = 11
killed = 13
cloned = 18
killed = 2
cloned = 10
killed = 1
cloned = 17
killed = 5
cloned = 20
killed = 0
cloned = 14
killed = 4
cloned = 15
killed = 19
cloned = 21
killed = 8
cloned = 9
killed = 6
cloned = 3
killed = 7
cloned = 16
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 9, 4, 16, 6, 5, 7, 0, 17, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 19, 21, 3, 13, 18, 2, 8, 14, 10, 20, 22]
====================================
cloned = 11
killed = 1
cloned = 19
killed = 12
cloned = 21
killed = 9
cloned = 3
killed = 4
cloned = 13
killed = 16
cloned = 18
killed = 6
cloned = 2
killed = 5
cloned = 8
killed = 7
cloned = 14
killed = 0
cloned = 10
killed = 17
cloned = 20
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 4, 19, 1, 20, 2, 17, 21, 16, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 5, 14, 12, 18, 11, 7, 0, 6, 9, 22]
====================================
cloned = 10
killed = 8
cloned = 13
killed = 3
cloned = 5
killed = 4
cloned = 14
killed = 19
cloned = 12
killed = 1
cloned = 18
killed = 20
cloned = 11
killed = 2
cloned = 7
killed = 17
cloned = 0
killed = 21
cloned = 6
killed = 16
cloned = 9
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 9, 17, 11, 20, 10, 4, 0, 15, 7, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 12, 19, 2, 13, 21, 3, 1, 6, 8, 18, 22]
====================================
cloned = 5
killed = 14
cloned = 12
killed = 9
cloned = 19
killed = 17
cloned = 2
killed = 11
cloned = 13
killed = 20
cloned = 21
killed = 10
cloned = 3
killed = 4
cloned = 1
killed = 0
cloned = 6
killed = 15
cloned = 8
killed = 7
cloned = 18
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 17, 2, 5, 12, 18, 10, 6, 13, 21, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 8, 15, 3, 1, 19, 14, 7, 9, 4, 0, 22]
====================================
cloned = 16
killed = 20
cloned = 8
killed = 17
cloned = 15
killed = 2
cloned = 3
killed = 5
cloned = 1
killed = 12
cloned = 19
killed = 18
cloned = 14
killed = 10
cloned = 7
killed = 6
cloned = 9
killed = 13
cloned = 4
killed = 21
cloned = 0
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 1, 20, 21, 19, 13, 15, 5, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 8, 16, 2, 4, 12, 0, 18, 7, 10, 17, 22]
====================================
cloned = 14
killed = 11
cloned = 8
killed = 3
cloned = 16
killed = 1
cloned = 2
killed = 20
cloned = 4
killed = 21
cloned = 12
killed = 19
cloned = 0
killed = 13
cloned = 18
killed = 15
cloned = 7
killed = 5
cloned = 10
killed = 9
cloned = 17
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 0, 20, 19, 5, 4, 11, 9, 12, 16, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 17, 7, 15, 14, 21, 6, 2, 13, 3, 22]
====================================
cloned = 1
killed = 10
cloned = 8
killed = 0
cloned = 17
killed = 20
cloned = 7
killed = 19
cloned = 15
killed = 5
cloned = 14
killed = 4
cloned = 21
killed = 11
cloned = 6
killed = 9
cloned = 2
killed = 12
cloned = 13
killed = 16
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 13, 3, 14, 11, 15, 0, 5, 6, 9, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 19, 17, 12, 16, 2, 10, 8, 20, 21, 1, 22]
====================================
cloned = 18
killed = 7
cloned = 19
killed = 13
cloned = 17
killed = 3
cloned = 12
killed = 14
cloned = 16
killed = 11
cloned = 2
killed = 15
cloned = 10
killed = 0
cloned = 8
killed = 5
cloned = 20
killed = 6
cloned = 21
killed = 9
cloned = 1
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 4, 10, 1, 18, 5, 21, 14, 11, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 17, 9, 16, 12, 13, 20, 2, 15, 7, 19, 22]
====================================
cloned = 8
killed = 0
cloned = 17
killed = 6
cloned = 9
killed = 4
cloned = 16
killed = 10
cloned = 12
killed = 1
cloned = 13
killed = 18
cloned = 20
killed = 5
cloned = 2
killed = 21
cloned = 15
killed = 14
cloned = 7
killed = 11
cloned = 19
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 13, 20, 1, 17, 18, 11, 0, 16, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 5, 14, 6, 3, 12, 21, 10, 4, 2, 15, 22]
====================================
cloned = 7
killed = 19
cloned = 5
killed = 13
cloned = 14
killed = 20
cloned = 6
killed = 1
cloned = 3
killed = 17
cloned = 12
killed = 18
cloned = 21
killed = 11
cloned = 10
killed = 0
cloned = 4
killed = 16
cloned = 2
killed = 9
cloned = 15
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 12, 9, 15, 16, 4, 10, 20, 2, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 8, 0, 11, 14, 21, 18, 17, 19, 6, 1, 22]
====================================
cloned = 3
killed = 13
cloned = 8
killed = 12
cloned = 0
killed = 9
cloned = 11
killed = 15
cloned = 14
killed = 16
cloned = 21
killed = 4
cloned = 18
killed = 10
cloned = 17
killed = 20
cloned = 19
killed = 2
cloned = 6
killed = 7
cloned = 1
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 9, 14, 1, 20, 12, 16, 6, 11, 3, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 17, 7, 10, 13, 5, 21, 4, 2, 18, 0, 22]
====================================
cloned = 19
killed = 15
cloned = 17
killed = 9
cloned = 7
killed = 14
cloned = 10
killed = 1
cloned = 13
killed = 20
cloned = 5
killed = 12
cloned = 21
killed = 16
cloned = 4
killed = 6
cloned = 2
killed = 11
cloned = 18
killed = 3
cloned = 0
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 7, 15, 9, 1, 10, 18, 4, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 17, 6, 13, 2, 21, 0, 20, 16, 14, 12, 22]
====================================
cloned = 19
killed = 11
cloned = 17
killed = 3
cloned = 6
killed = 7
cloned = 13
killed = 15
cloned = 2
killed = 9
cloned = 21
killed = 1
cloned = 0
killed = 10
cloned = 20
killed = 18
cloned = 16
killed = 4
cloned = 14
killed = 5
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 17, 2, 0, 15, 6, 14, 4, 1, 21, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 3, 10, 12, 18, 19, 5, 11, 13, 9, 8, 22]
====================================
cloned = 20
killed = 7
cloned = 3
killed = 17
cloned = 10
killed = 2
cloned = 12
killed = 0
cloned = 18
killed = 15
cloned = 19
killed = 6
cloned = 5
killed = 14
cloned = 11
killed = 4
cloned = 13
killed = 1
cloned = 9
killed = 21
cloned = 8
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 1, 13, 4, 2, 21, 18, 20, 17, 7, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 8, 9, 10, 15, 14, 11, 12, 6, 3, 5, 22]
====================================
cloned = 0
killed = 19
cloned = 8
killed = 1
cloned = 9
killed = 13
cloned = 10
killed = 4
cloned = 15
killed = 2
cloned = 14
killed = 21
cloned = 11
killed = 18
cloned = 12
killed = 20
cloned = 6
killed = 17
cloned = 3
killed = 7
cloned = 5
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 3, 4, 1, 8, 16, 0, 12, 6, 17, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 20, 14, 9, 5, 15, 2, 13, 7, 19, 10, 22]
====================================
cloned = 18
killed = 21
cloned = 20
killed = 3
cloned = 14
killed = 4
cloned = 9
killed = 1
cloned = 5
killed = 8
cloned = 15
killed = 16
cloned = 2
killed = 0
cloned = 13
killed = 12
cloned = 7
killed = 6
cloned = 19
killed = 17
cloned = 10
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 1, 3, 21, 17, 20, 13, 7, 18, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 15, 5, 2, 0, 19, 12, 10, 9, 11, 8, 22]
====================================
cloned = 6
killed = 4
cloned = 15
killed = 16
cloned = 5
killed = 1
cloned = 2
killed = 3
cloned = 0
killed = 21
cloned = 19
killed = 17
cloned = 12
killed = 20
cloned = 10
killed = 13
cloned = 9
killed = 7
cloned = 11
killed = 18
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 8, 3, 10, 7, 20, 4, 19, 2, 18, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 6, 17, 12, 1, 15, 16, 13, 0, 11, 5, 22]
====================================
cloned = 9
killed = 14
cloned = 6
killed = 8
cloned = 17
killed = 3
cloned = 12
killed = 10
cloned = 1
killed = 7
cloned = 15
killed = 20
cloned = 16
killed = 4
cloned = 13
killed = 19
cloned = 0
killed = 2
cloned = 11
killed = 18
cloned = 5
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 17, 16, 0, 14, 20, 4, 7, 18, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 3, 19, 13, 12, 6, 21, 9, 1, 5, 10, 22]
====================================
cloned = 15
killed = 2
cloned = 3
killed = 11
cloned = 19
killed = 17
cloned = 13
killed = 16
cloned = 12
killed = 0
cloned = 6
killed = 14
cloned = 21
killed = 20
cloned = 9
killed = 4
cloned = 1
killed = 7
cloned = 5
killed = 18
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 21, 18, 13, 7, 20, 9, 0, 15, 12, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 2, 10, 4, 5, 8, 14, 16, 17, 6, 3, 22]
====================================
cloned = 19
killed = 11
cloned = 2
killed = 21
cloned = 10
killed = 18
cloned = 4
killed = 13
cloned = 5
killed = 7
cloned = 8
killed = 20
cloned = 14
killed = 9
cloned = 16
killed = 0
cloned = 17
killed = 15
cloned = 6
killed = 12
cloned = 3
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 9, 15, 0, 13, 5, 7, 1, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 3, 2, 16, 17, 6, 18, 19, 20, 10, 21, 22]
====================================
cloned = 14
killed = 8
cloned = 3
killed = 11
cloned = 2
killed = 9
cloned = 16
killed = 15
cloned = 17
killed = 0
cloned = 6
killed = 13
cloned = 18
killed = 5
cloned = 19
killed = 7
cloned = 20
killed = 1
cloned = 10
killed = 4
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 6, 17, 8, 7, 1, 4, 19, 5, 16, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 18, 14, 13, 21, 0, 9, 11, 2, 3, 20, 22]
====================================
cloned = 12
killed = 15
cloned = 18
killed = 6
cloned = 14
killed = 17
cloned = 13
killed = 8
cloned = 21
killed = 7
cloned = 0
killed = 1
cloned = 9
killed = 4
cloned = 11
killed = 19
cloned = 2
killed = 5
cloned = 3
killed = 16
cloned = 20
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 10, 4, 7, 21, 15, 9, 12, 14, 1, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 8, 3, 5, 13, 17, 20, 2, 11, 19, 22]
====================================
cloned = 0
killed = 18
cloned = 6
killed = 10
cloned = 8
killed = 4
cloned = 3
killed = 7
cloned = 5
killed = 21
cloned = 13
killed = 15
cloned = 17
killed = 9
cloned = 20
killed = 12
cloned = 2
killed = 14
cloned = 11
killed = 1
cloned = 19
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 14, 12, 8, 16, 2, 10, 4, 6, 17, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 9, 3, 13, 11, 1, 7, 18, 0, 21, 19, 22]
====================================
cloned = 15
killed = 20
cloned = 9
killed = 14
cloned = 3
killed = 12
cloned = 13
killed = 8
cloned = 11
killed = 16
cloned = 1
killed = 2
cloned = 7
killed = 10
cloned = 18
killed = 4
cloned = 0
killed = 6
cloned = 21
killed = 17
cloned = 19
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 11, 15, 1, 6, 18, 0, 7, 19, 9, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 10, 2, 14, 4, 13, 16, 3, 20, 5, 17, 22]
====================================
cloned = 8
killed = 21
cloned = 10
killed = 11
cloned = 2
killed = 15
cloned = 14
killed = 1
cloned = 4
killed = 6
cloned = 13
killed = 18
cloned = 16
killed = 0
cloned = 3
killed = 7
cloned = 20
killed = 19
cloned = 5
killed = 9
cloned = 17
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 19, 16, 18, 14, 20, 2, 15, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 10, 4, 0, 17, 13, 7, 21, 1, 8, 3, 22]
====================================
cloned = 12
killed = 6
cloned = 10
killed = 9
cloned = 4
killed = 19
cloned = 0
killed = 16
cloned = 17
killed = 18
cloned = 13
killed = 14
cloned = 7
killed = 20
cloned = 21
killed = 2
cloned = 1
killed = 15
cloned = 8
killed = 5
cloned = 3
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 3, 18, 11, 17, 14, 0, 15, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 6, 5, 7, 16, 13, 20, 21, 19, 10, 22]
====================================
cloned = 8
killed = 9
cloned = 12
killed = 1
cloned = 6
killed = 3
cloned = 5
killed = 18
cloned = 7
killed = 11
cloned = 16
killed = 17
cloned = 13
killed = 14
cloned = 20
killed = 0
cloned = 21
killed = 15
cloned = 19
killed = 2
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 14, 17, 12, 16, 9, 0, 7, 11, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 2, 15, 20, 4, 19, 18, 5, 1, 3, 13, 22]
====================================
cloned = 6
killed = 21
cloned = 2
killed = 14
cloned = 15
killed = 17
cloned = 20
killed = 12
cloned = 4
killed = 16
cloned = 19
killed = 9
cloned = 18
killed = 0
cloned = 5
killed = 7
cloned = 1
killed = 11
cloned = 3
killed = 10
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 4, 19, 17, 8, 10, 2, 6, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 9, 13, 21, 11, 18, 15, 3, 16, 14, 20, 22]
====================================
cloned = 5
killed = 7
cloned = 9
killed = 1
cloned = 13
killed = 4
cloned = 21
killed = 19
cloned = 11
killed = 17
cloned = 18
killed = 8
cloned = 15
killed = 10
cloned = 3
killed = 2
cloned = 16
killed = 6
cloned = 14
killed = 12
cloned = 20
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 16, 0, 3, 14, 7, 11, 17, 18, 21, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 19, 4, 9, 15, 12, 1, 20, 2, 6, 13, 22]
====================================
cloned = 5
killed = 10
cloned = 19
killed = 16
cloned = 4
killed = 0
cloned = 9
killed = 3
cloned = 15
killed = 14
cloned = 12
killed = 7
cloned = 1
killed = 11
cloned = 20
killed = 17
cloned = 2
killed = 18
cloned = 6
killed = 21
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 15, 7, 3, 6, 9, 12, 20, 19, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 8, 13, 1, 0, 18, 11, 16, 17, 21, 10, 22]
====================================
cloned = 2
killed = 5
cloned = 8
killed = 4
cloned = 13
killed = 15
cloned = 1
killed = 7
cloned = 0
killed = 3
cloned = 18
killed = 6
cloned = 11
killed = 9
cloned = 16
killed = 12
cloned = 17
killed = 20
cloned = 21
killed = 19
cloned = 10
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 6, 3, 9, 15, 4, 14, 16, 12, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 0, 17, 19, 21, 5, 18, 1, 11, 7, 22]
====================================
cloned = 10
killed = 8
cloned = 13
killed = 2
cloned = 0
killed = 6
cloned = 17
killed = 3
cloned = 19
killed = 9
cloned = 21
killed = 15
cloned = 5
killed = 4
cloned = 18
killed = 14
cloned = 1
killed = 16
cloned = 11
killed = 12
cloned = 7
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 1, 18, 19, 13, 6, 14, 3, 9, 16, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 7, 10, 11, 21, 5, 15, 2, 12, 17, 4, 22]
====================================
cloned = 8
killed = 20
cloned = 7
killed = 1
cloned = 10
killed = 18
cloned = 11
killed = 19
cloned = 21
killed = 13
cloned = 5
killed = 6
cloned = 15
killed = 14
cloned = 2
killed = 3
cloned = 12
killed = 9
cloned = 17
killed = 16
cloned = 4
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 14, 7, 21, 1, 6, 19, 12, 8, 4, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 10, 13, 20, 2, 9, 17, 15, 0, 5, 3, 22]
====================================
cloned = 11
killed = 16
cloned = 10
killed = 14
cloned = 13
killed = 7
cloned = 20
killed = 21
cloned = 2
killed = 1
cloned = 9
killed = 6
cloned = 17
killed = 19
cloned = 15
killed = 12
cloned = 0
killed = 8
cloned = 5
killed = 4
cloned = 3
killed = 18
Trial run 8/seed 863:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.29,
  56.224999999999994,
  59.19,
  55.03,
  51.87,
  53.98500000000001,
  54.724999999999994,
  37.0,
  44.88,
  31.524999999999995,
  47.64,
  50.559999999999995,
  47.66999999999999,
  52.455,
  56.184999999999995,
  36.720000000000006,
  51.35,
  49.02,
  46.315,
  42.225,
  34.80500000000001,
  55.55499999999999,
  52.64999999999999],
 [65.7,
  64.845,
  65.75,
  62.870000000000005,
  62.294999999999995,
  62.16,
  61.775,
  65.7,
  64.055,
  65.75,
  62.870000000000005,
  62.33,
  62.160000000000004,
  63.540000000000006,
  59.46999999999999,
  62.15,
  62.58,
  63.540000000000006,
  58.73,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.38,
 55.785,
 59.339999999999996,
 54.635,
 52.220000000000006,
 54.26500000000001,
 53.14499999999999,
 37.02,
 45.00000000000001,
 28.604999999999997,
 48.095000000000006,
 50.739999999999995,
 45.609999999999985,
 52.365,
 56.60499999999999,
 36.72,
 51.875,
 46.975,
 46.475,
 44.135000000000005,
 34.93000000000001,
 55.595,
 53.425]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.875
Upper: 51.875
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.56,
 65.75,
 62.870000000000005,
 62.28,
 62.16,
 61.47,
 65.7,
 64.03000000000002,
 65.75,
 62.870000000000005,
 61.98,
 62.160000000000004,
 63.540000000000006,
 58.73999999999999,
 61.14,
 62.58,
 63.540000000000006,
 58.78999999999999,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 4, 0, 7, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 4
killed = 20
cloned = 0
killed = 21
cloned = 7
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 20, 12, 21]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 7, 0, 4, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 7
killed = 20
cloned = 0
killed = 12
cloned = 4
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 4, 6, 19, 8, 0, 5, 3, 7, 13, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 1, 11, 16, 21, 18, 10, 14, 12, 20, 17, 22]
====================================
cloned = 2
killed = 15
cloned = 1
killed = 4
cloned = 11
killed = 6
cloned = 16
killed = 19
cloned = 21
killed = 8
cloned = 18
killed = 0
cloned = 10
killed = 5
cloned = 14
killed = 3
cloned = 12
killed = 7
cloned = 20
killed = 13
cloned = 17
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 5, 8, 1, 18, 10, 19, 11, 6, 14, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 9, 15, 16, 3, 4, 12, 13, 7, 0, 20, 22]
====================================
cloned = 17
killed = 21
cloned = 9
killed = 5
cloned = 15
killed = 8
cloned = 16
killed = 1
cloned = 3
killed = 18
cloned = 4
killed = 10
cloned = 12
killed = 19
cloned = 13
killed = 11
cloned = 7
killed = 6
cloned = 0
killed = 14
cloned = 20
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 2, 15, 16, 11, 9, 12, 21, 5, 19, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 8, 0, 6, 1, 7, 3, 13, 20, 18, 10, 22]
====================================
cloned = 4
killed = 17
cloned = 8
killed = 2
cloned = 0
killed = 15
cloned = 6
killed = 16
cloned = 1
killed = 11
cloned = 7
killed = 9
cloned = 3
killed = 12
cloned = 13
killed = 21
cloned = 20
killed = 5
cloned = 18
killed = 19
cloned = 10
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 21, 12, 4, 20, 6, 3, 8, 18, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 13, 15, 17, 16, 2, 9, 7, 14, 19, 1, 22]
====================================
cloned = 11
killed = 5
cloned = 13
killed = 10
cloned = 15
killed = 21
cloned = 17
killed = 12
cloned = 16
killed = 4
cloned = 2
killed = 20
cloned = 9
killed = 6
cloned = 7
killed = 3
cloned = 14
killed = 8
cloned = 19
killed = 18
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 17, 21, 11, 9, 0, 15, 6, 12, 7, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 18, 14, 16, 2, 8, 19, 4, 5, 10, 1, 22]
====================================
cloned = 13
killed = 3
cloned = 18
killed = 17
cloned = 14
killed = 21
cloned = 16
killed = 11
cloned = 2
killed = 9
cloned = 8
killed = 0
cloned = 19
killed = 15
cloned = 4
killed = 6
cloned = 5
killed = 12
cloned = 10
killed = 7
cloned = 1
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 0, 13, 18, 9, 5, 7, 16, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 20, 19, 21, 4, 14, 10, 12, 6, 3, 15, 22]
====================================
cloned = 17
killed = 1
cloned = 20
killed = 11
cloned = 19
killed = 0
cloned = 21
killed = 13
cloned = 4
killed = 18
cloned = 14
killed = 9
cloned = 10
killed = 5
cloned = 12
killed = 7
cloned = 6
killed = 16
cloned = 3
killed = 8
cloned = 15
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 17, 13, 3, 5, 20, 11, 7, 12, 21, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 0, 6, 4, 18, 9, 14, 16, 2, 1, 22]
====================================
cloned = 10
killed = 8
cloned = 19
killed = 17
cloned = 0
killed = 13
cloned = 6
killed = 3
cloned = 4
killed = 5
cloned = 18
killed = 20
cloned = 9
killed = 11
cloned = 14
killed = 7
cloned = 16
killed = 12
cloned = 2
killed = 21
cloned = 1
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 19, 1, 4, 9, 14, 20, 7, 10, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 13, 18, 8, 5, 16, 12, 21, 11, 17, 15, 22]
====================================
cloned = 2
killed = 6
cloned = 13
killed = 19
cloned = 18
killed = 1
cloned = 8
killed = 4
cloned = 5
killed = 9
cloned = 16
killed = 14
cloned = 12
killed = 20
cloned = 21
killed = 7
cloned = 11
killed = 10
cloned = 17
killed = 0
cloned = 15
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 19, 6, 18, 16, 13, 8, 20, 3, 2, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 10, 0, 7, 5, 15, 11, 14, 12, 1, 9, 22]
====================================
cloned = 4
killed = 21
cloned = 10
killed = 19
cloned = 0
killed = 6
cloned = 7
killed = 18
cloned = 5
killed = 16
cloned = 15
killed = 13
cloned = 11
killed = 8
cloned = 14
killed = 20
cloned = 12
killed = 3
cloned = 1
killed = 2
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 12, 18, 4, 11, 6, 21, 1, 17, 16, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 10, 8, 2, 14, 19, 7, 0, 20, 13, 5, 22]
====================================
cloned = 3
killed = 15
cloned = 10
killed = 12
cloned = 8
killed = 18
cloned = 2
killed = 4
cloned = 14
killed = 11
cloned = 19
killed = 6
cloned = 7
killed = 21
cloned = 0
killed = 1
cloned = 20
killed = 17
cloned = 13
killed = 16
cloned = 5
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 7, 9, 21, 19, 1, 4, 6, 18, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 5, 13, 11, 15, 8, 17, 14, 3, 2, 20, 22]
====================================
cloned = 16
killed = 12
cloned = 5
killed = 7
cloned = 13
killed = 9
cloned = 11
killed = 21
cloned = 15
killed = 19
cloned = 8
killed = 1
cloned = 17
killed = 4
cloned = 14
killed = 6
cloned = 3
killed = 18
cloned = 2
killed = 10
cloned = 20
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 1, 7, 0, 2, 16, 10, 21, 19, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 20, 5, 15, 13, 14, 11, 6, 9, 18, 8, 22]
====================================
cloned = 3
killed = 4
cloned = 20
killed = 12
cloned = 5
killed = 1
cloned = 15
killed = 7
cloned = 13
killed = 0
cloned = 14
killed = 2
cloned = 11
killed = 16
cloned = 6
killed = 10
cloned = 9
killed = 21
cloned = 18
killed = 19
cloned = 8
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 6, 13, 7, 2, 16, 12, 15, 10, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 0, 9, 4, 1, 20, 19, 11, 8, 17, 21, 22]
====================================
cloned = 18
killed = 3
cloned = 0
killed = 5
cloned = 9
killed = 6
cloned = 4
killed = 13
cloned = 1
killed = 7
cloned = 20
killed = 2
cloned = 19
killed = 16
cloned = 11
killed = 12
cloned = 8
killed = 15
cloned = 17
killed = 10
cloned = 21
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 13, 8, 12, 15, 2, 1, 4, 10, 14, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 11, 0, 18, 21, 19, 6, 20, 5, 3, 17, 22]
====================================
cloned = 9
killed = 7
cloned = 11
killed = 13
cloned = 0
killed = 8
cloned = 18
killed = 12
cloned = 21
killed = 15
cloned = 19
killed = 2
cloned = 6
killed = 1
cloned = 20
killed = 4
cloned = 5
killed = 10
cloned = 3
killed = 14
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 10, 8, 18, 11, 7, 9, 20, 14, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 21, 2, 12, 19, 15, 3, 4, 1, 5, 17, 22]
====================================
cloned = 6
killed = 13
cloned = 21
killed = 16
cloned = 2
killed = 10
cloned = 12
killed = 8
cloned = 19
killed = 18
cloned = 15
killed = 11
cloned = 3
killed = 7
cloned = 4
killed = 9
cloned = 1
killed = 20
cloned = 5
killed = 14
cloned = 17
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 17, 7, 2, 10, 6, 3, 20, 4, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 18, 12, 0, 13, 16, 21, 19, 14, 9, 11, 22]
====================================
cloned = 8
killed = 15
cloned = 18
killed = 17
cloned = 12
killed = 7
cloned = 0
killed = 2
cloned = 13
killed = 10
cloned = 16
killed = 6
cloned = 21
killed = 3
cloned = 19
killed = 20
cloned = 14
killed = 4
cloned = 9
killed = 1
cloned = 11
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 14, 12, 13, 11, 0, 18, 15, 1, 9, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 20, 7, 10, 19, 8, 5, 21, 2, 17, 22]
====================================
cloned = 3
killed = 6
cloned = 16
killed = 14
cloned = 20
killed = 12
cloned = 7
killed = 13
cloned = 10
killed = 11
cloned = 19
killed = 0
cloned = 8
killed = 18
cloned = 5
killed = 15
cloned = 21
killed = 1
cloned = 2
killed = 9
cloned = 17
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 18, 8, 3, 16, 5, 12, 9, 11, 7, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 19, 10, 14, 0, 13, 4, 6, 2, 15, 17, 22]
====================================
cloned = 20
killed = 1
cloned = 19
killed = 18
cloned = 10
killed = 8
cloned = 14
killed = 3
cloned = 0
killed = 16
cloned = 13
killed = 5
cloned = 4
killed = 12
cloned = 6
killed = 9
cloned = 2
killed = 11
cloned = 15
killed = 7
cloned = 17
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 5, 1, 15, 21, 11, 18, 9, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 17, 0, 4, 14, 20, 16, 6, 7, 10, 19, 22]
====================================
cloned = 2
killed = 12
cloned = 17
killed = 3
cloned = 0
killed = 5
cloned = 4
killed = 1
cloned = 14
killed = 15
cloned = 20
killed = 21
cloned = 16
killed = 11
cloned = 6
killed = 18
cloned = 7
killed = 9
cloned = 10
killed = 13
cloned = 19
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 8, 13, 15, 11, 1, 21, 0, 3, 20, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 4, 18, 5, 17, 9, 19, 16, 12, 10, 2, 22]
====================================
cloned = 7
killed = 14
cloned = 4
killed = 8
cloned = 18
killed = 13
cloned = 5
killed = 15
cloned = 17
killed = 11
cloned = 9
killed = 1
cloned = 19
killed = 21
cloned = 16
killed = 0
cloned = 12
killed = 3
cloned = 10
killed = 20
cloned = 2
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 15, 10, 14, 4, 6, 18, 21, 2, 11, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 5, 1, 17, 19, 7, 16, 3, 0, 9, 8, 22]
====================================
cloned = 20
killed = 13
cloned = 5
killed = 15
cloned = 1
killed = 10
cloned = 17
killed = 14
cloned = 19
killed = 4
cloned = 7
killed = 6
cloned = 16
killed = 18
cloned = 3
killed = 21
cloned = 0
killed = 2
cloned = 9
killed = 11
cloned = 8
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 4, 16, 5, 14, 8, 18, 15, 10, 12, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 19, 13, 0, 20, 2, 3, 9, 1, 11, 21, 22]
====================================
cloned = 7
killed = 17
cloned = 19
killed = 4
cloned = 13
killed = 16
cloned = 0
killed = 5
cloned = 20
killed = 14
cloned = 2
killed = 8
cloned = 3
killed = 18
cloned = 9
killed = 15
cloned = 1
killed = 10
cloned = 11
killed = 12
cloned = 21
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 0, 14, 6, 4, 12, 3, 17, 20, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 16, 5, 15, 10, 2, 21, 1, 19, 18, 11, 22]
====================================
cloned = 8
killed = 7
cloned = 16
killed = 9
cloned = 5
killed = 0
cloned = 15
killed = 14
cloned = 10
killed = 6
cloned = 2
killed = 4
cloned = 21
killed = 12
cloned = 1
killed = 3
cloned = 19
killed = 17
cloned = 18
killed = 20
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 14, 17, 19, 5, 21, 4, 7, 20, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 6, 11, 0, 3, 10, 18, 8, 9, 15, 12, 22]
====================================
cloned = 16
killed = 13
cloned = 6
killed = 14
cloned = 11
killed = 17
cloned = 0
killed = 19
cloned = 3
killed = 5
cloned = 10
killed = 21
cloned = 18
killed = 4
cloned = 8
killed = 7
cloned = 9
killed = 20
cloned = 15
killed = 2
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 10, 19, 9, 18, 12, 4, 6, 1, 3, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 2, 13, 14, 16, 11, 8, 17, 0, 7, 15, 22]
====================================
cloned = 5
killed = 20
cloned = 2
killed = 10
cloned = 13
killed = 19
cloned = 14
killed = 9
cloned = 16
killed = 18
cloned = 11
killed = 12
cloned = 8
killed = 4
cloned = 17
killed = 6
cloned = 0
killed = 1
cloned = 7
killed = 3
cloned = 15
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 10, 17, 13, 3, 7, 1, 21, 11, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 18, 5, 2, 16, 20, 0, 6, 19, 4, 14, 22]
====================================
cloned = 8
killed = 15
cloned = 18
killed = 10
cloned = 5
killed = 17
cloned = 2
killed = 13
cloned = 16
killed = 3
cloned = 20
killed = 7
cloned = 0
killed = 1
cloned = 6
killed = 21
cloned = 19
killed = 11
cloned = 4
killed = 12
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 8, 7, 14, 2, 21, 11, 16, 10, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 9, 19, 1, 0, 5, 15, 17, 18, 4, 13, 22]
====================================
cloned = 20
killed = 3
cloned = 9
killed = 12
cloned = 19
killed = 8
cloned = 1
killed = 7
cloned = 0
killed = 14
cloned = 5
killed = 2
cloned = 15
killed = 21
cloned = 17
killed = 11
cloned = 18
killed = 16
cloned = 4
killed = 10
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 15, 14, 4, 17, 8, 19, 1, 0, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 7, 16, 2, 20, 6, 5, 12, 11, 18, 10, 22]
====================================
cloned = 9
killed = 3
cloned = 7
killed = 13
cloned = 16
killed = 15
cloned = 2
killed = 14
cloned = 20
killed = 4
cloned = 6
killed = 17
cloned = 5
killed = 8
cloned = 12
killed = 19
cloned = 11
killed = 1
cloned = 18
killed = 0
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 1, 12, 6, 11, 21, 10, 3, 17, 14, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 9, 8, 5, 19, 13, 20, 7, 18, 0, 15, 22]
====================================
cloned = 4
killed = 2
cloned = 9
killed = 1
cloned = 8
killed = 12
cloned = 5
killed = 6
cloned = 19
killed = 11
cloned = 13
killed = 21
cloned = 20
killed = 10
cloned = 7
killed = 3
cloned = 18
killed = 17
cloned = 0
killed = 14
cloned = 15
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 16, 3, 11, 20, 6, 13, 10, 17, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 1, 19, 4, 0, 9, 8, 7, 21, 14, 5, 22]
====================================
cloned = 15
killed = 18
cloned = 1
killed = 16
cloned = 19
killed = 3
cloned = 4
killed = 11
cloned = 0
killed = 20
cloned = 9
killed = 6
cloned = 8
killed = 13
cloned = 7
killed = 10
cloned = 21
killed = 17
cloned = 14
killed = 2
cloned = 5
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 17, 19, 9, 7, 18, 3, 14, 13, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 10, 21, 0, 5, 15, 1, 16, 12, 8, 11, 22]
====================================
cloned = 2
killed = 20
cloned = 10
killed = 6
cloned = 21
killed = 17
cloned = 0
killed = 19
cloned = 5
killed = 9
cloned = 15
killed = 7
cloned = 1
killed = 18
cloned = 16
killed = 3
cloned = 12
killed = 14
cloned = 8
killed = 13
cloned = 11
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 4, 15, 3, 20, 0, 21, 9, 13, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 18, 14, 16, 5, 19, 17, 1, 10, 2, 11, 22]
====================================
cloned = 12
killed = 7
cloned = 18
killed = 4
cloned = 14
killed = 15
cloned = 16
killed = 3
cloned = 5
killed = 20
cloned = 19
killed = 0
cloned = 17
killed = 21
cloned = 1
killed = 9
cloned = 10
killed = 13
cloned = 2
killed = 8
cloned = 11
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 13, 14, 9, 2, 8, 21, 19, 12, 16, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 20, 1, 0, 17, 10, 5, 11, 6, 4, 7, 22]
====================================
cloned = 15
killed = 18
cloned = 20
killed = 13
cloned = 1
killed = 14
cloned = 0
killed = 9
cloned = 17
killed = 2
cloned = 10
killed = 8
cloned = 5
killed = 21
cloned = 11
killed = 19
cloned = 6
killed = 12
cloned = 4
killed = 16
cloned = 7
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 11, 19, 3, 14, 21, 2, 6, 12, 16, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 18, 20, 7, 15, 0, 9, 17, 13, 1, 4, 22]
====================================
cloned = 10
killed = 5
cloned = 18
killed = 11
cloned = 20
killed = 19
cloned = 7
killed = 3
cloned = 15
killed = 14
cloned = 0
killed = 21
cloned = 9
killed = 2
cloned = 17
killed = 6
cloned = 13
killed = 12
cloned = 1
killed = 16
cloned = 4
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 19, 10, 16, 15, 2, 5, 14, 1, 0, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 3, 20, 4, 12, 11, 18, 17, 6, 13, 9, 22]
====================================
cloned = 7
killed = 8
cloned = 3
killed = 19
cloned = 20
killed = 10
cloned = 4
killed = 16
cloned = 12
killed = 15
cloned = 11
killed = 2
cloned = 18
killed = 5
cloned = 17
killed = 14
cloned = 6
killed = 1
cloned = 13
killed = 0
cloned = 9
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 9, 10, 13, 21, 4, 16, 11, 18, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 12, 6, 19, 1, 15, 2, 8, 14, 3, 5, 22]
====================================
cloned = 0
killed = 17
cloned = 12
killed = 7
cloned = 6
killed = 9
cloned = 19
killed = 10
cloned = 1
killed = 13
cloned = 15
killed = 21
cloned = 2
killed = 4
cloned = 8
killed = 16
cloned = 14
killed = 11
cloned = 3
killed = 18
cloned = 5
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 16, 14, 11, 2, 5, 1, 9, 3, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 8, 21, 4, 0, 7, 18, 20, 19, 13, 22]
====================================
cloned = 15
killed = 6
cloned = 12
killed = 10
cloned = 8
killed = 16
cloned = 21
killed = 14
cloned = 4
killed = 11
cloned = 0
killed = 2
cloned = 7
killed = 5
cloned = 18
killed = 1
cloned = 20
killed = 9
cloned = 19
killed = 3
cloned = 13
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 12, 8, 3, 21, 10, 16, 1, 17, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 4, 18, 9, 15, 7, 0, 2, 13, 11, 22]
====================================
cloned = 19
killed = 20
cloned = 14
killed = 6
cloned = 4
killed = 12
cloned = 18
killed = 8
cloned = 9
killed = 3
cloned = 15
killed = 21
cloned = 7
killed = 10
cloned = 0
killed = 16
cloned = 2
killed = 1
cloned = 13
killed = 17
cloned = 11
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 21, 9, 5, 16, 2, 14, 20, 17, 6, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 7, 3, 18, 15, 10, 11, 19, 12, 1, 13, 22]
====================================
cloned = 0
killed = 4
cloned = 7
killed = 21
cloned = 3
killed = 9
cloned = 18
killed = 5
cloned = 15
killed = 16
cloned = 10
killed = 2
cloned = 11
killed = 14
cloned = 19
killed = 20
cloned = 12
killed = 17
cloned = 1
killed = 6
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 10, 12, 17, 15, 19, 11, 8, 7, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 16, 13, 0, 5, 14, 4, 18, 21, 6, 2, 22]
====================================
cloned = 1
killed = 20
cloned = 16
killed = 10
cloned = 13
killed = 12
cloned = 0
killed = 17
cloned = 5
killed = 15
cloned = 14
killed = 19
cloned = 4
killed = 11
cloned = 18
killed = 8
cloned = 21
killed = 7
cloned = 6
killed = 9
cloned = 2
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 4, 15, 12, 13, 9, 2, 11, 6, 18, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 3, 17, 21, 7, 16, 8, 1, 10, 5, 0, 22]
====================================
cloned = 19
killed = 20
cloned = 3
killed = 4
cloned = 17
killed = 15
cloned = 21
killed = 12
cloned = 7
killed = 13
cloned = 16
killed = 9
cloned = 8
killed = 2
cloned = 1
killed = 11
cloned = 10
killed = 6
cloned = 5
killed = 18
cloned = 0
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 16, 18, 1, 11, 13, 2, 14, 21, 17, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 10, 7, 20, 4, 15, 8, 3, 5, 0, 6, 22]
====================================
cloned = 9
killed = 19
cloned = 10
killed = 16
cloned = 7
killed = 18
cloned = 20
killed = 1
cloned = 4
killed = 11
cloned = 15
killed = 13
cloned = 8
killed = 2
cloned = 3
killed = 14
cloned = 5
killed = 21
cloned = 0
killed = 17
cloned = 6
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 4, 0, 21, 14, 1, 19, 8, 12, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 10, 3, 7, 13, 20, 2, 17, 9, 5, 16, 22]
====================================
cloned = 15
killed = 18
cloned = 10
killed = 4
cloned = 3
killed = 0
cloned = 7
killed = 21
cloned = 13
killed = 14
cloned = 20
killed = 1
cloned = 2
killed = 19
cloned = 17
killed = 8
cloned = 9
killed = 12
cloned = 5
killed = 6
cloned = 16
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 8, 7, 9, 3, 12, 1, 17, 10, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 19, 2, 4, 6, 18, 21, 5, 0, 13, 14, 22]
====================================
cloned = 15
killed = 11
cloned = 19
killed = 20
cloned = 2
killed = 8
cloned = 4
killed = 7
cloned = 6
killed = 9
cloned = 18
killed = 3
cloned = 21
killed = 12
cloned = 5
killed = 1
cloned = 0
killed = 17
cloned = 13
killed = 10
cloned = 14
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 6, 17, 10, 5, 1, 20, 7, 0, 2, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 13, 4, 9, 16, 18, 19, 3, 21, 12, 8, 22]
====================================
cloned = 15
killed = 11
cloned = 13
killed = 6
cloned = 4
killed = 17
cloned = 9
killed = 10
cloned = 16
killed = 5
cloned = 18
killed = 1
cloned = 19
killed = 20
cloned = 3
killed = 7
cloned = 21
killed = 0
cloned = 12
killed = 2
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 19, 18, 21, 2, 13, 15, 6, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 16, 14, 11, 8, 4, 10, 0, 3, 20, 5, 22]
====================================
cloned = 17
killed = 12
cloned = 16
killed = 9
cloned = 14
killed = 19
cloned = 11
killed = 18
cloned = 8
killed = 21
cloned = 4
killed = 2
cloned = 10
killed = 13
cloned = 0
killed = 15
cloned = 3
killed = 6
cloned = 20
killed = 1
cloned = 5
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 4, 6, 1, 19, 7, 0, 2, 20, 9, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 18, 13, 5, 14, 21, 8, 11, 10, 15, 22]
====================================
cloned = 3
killed = 17
cloned = 16
killed = 4
cloned = 18
killed = 6
cloned = 13
killed = 1
cloned = 5
killed = 19
cloned = 14
killed = 7
cloned = 21
killed = 0
cloned = 8
killed = 2
cloned = 11
killed = 20
cloned = 10
killed = 9
cloned = 15
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 15, 2, 13, 4, 3, 6, 10, 5, 18, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 7, 14, 17, 19, 9, 0, 20, 1, 21, 12, 22]
====================================
cloned = 16
killed = 11
cloned = 7
killed = 15
cloned = 14
killed = 2
cloned = 17
killed = 13
cloned = 19
killed = 4
cloned = 9
killed = 3
cloned = 0
killed = 6
cloned = 20
killed = 10
cloned = 1
killed = 5
cloned = 21
killed = 18
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 4, 1, 17, 3, 19, 7, 18, 13, 9, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 5, 16, 21, 11, 14, 12, 10, 2, 0, 20, 22]
====================================
cloned = 6
killed = 15
cloned = 5
killed = 4
cloned = 16
killed = 1
cloned = 21
killed = 17
cloned = 11
killed = 3
cloned = 14
killed = 19
cloned = 12
killed = 7
cloned = 10
killed = 18
cloned = 2
killed = 13
cloned = 0
killed = 9
cloned = 20
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 20, 3, 6, 8, 4, 13, 18, 19, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 9, 1, 5, 15, 16, 14, 17, 10, 7, 12, 22]
====================================
cloned = 21
killed = 2
cloned = 9
killed = 11
cloned = 1
killed = 20
cloned = 5
killed = 3
cloned = 15
killed = 6
cloned = 16
killed = 8
cloned = 14
killed = 4
cloned = 17
killed = 13
cloned = 10
killed = 18
cloned = 7
killed = 19
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 12, 16, 3, 7, 5, 17, 19, 9, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 15, 6, 0, 1, 21, 10, 14, 11, 13, 22]
====================================
cloned = 20
killed = 8
cloned = 18
killed = 12
cloned = 15
killed = 16
cloned = 6
killed = 3
cloned = 0
killed = 7
cloned = 1
killed = 5
cloned = 21
killed = 17
cloned = 10
killed = 19
cloned = 14
killed = 9
cloned = 11
killed = 2
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 1, 18, 11, 14, 20, 9, 19, 2, 4, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 3, 21, 16, 12, 10, 17, 13, 5, 6, 22]
====================================
cloned = 15
killed = 0
cloned = 8
killed = 1
cloned = 3
killed = 18
cloned = 21
killed = 11
cloned = 16
killed = 14
cloned = 12
killed = 20
cloned = 10
killed = 9
cloned = 17
killed = 19
cloned = 13
killed = 2
cloned = 5
killed = 4
cloned = 6
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 1, 21, 3, 18, 15, 13, 2, 17, 5, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 20, 10, 4, 7, 9, 0, 6, 8, 11, 12, 22]
====================================
cloned = 16
killed = 19
cloned = 20
killed = 1
cloned = 10
killed = 21
cloned = 4
killed = 3
cloned = 7
killed = 18
cloned = 9
killed = 15
cloned = 0
killed = 13
cloned = 6
killed = 2
cloned = 8
killed = 17
cloned = 11
killed = 5
cloned = 12
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 13, 19, 17, 6, 3, 2, 11, 14, 21, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 20, 0, 10, 16, 18, 15, 7, 8, 4, 1, 22]
====================================
cloned = 5
killed = 12
cloned = 20
killed = 13
cloned = 0
killed = 19
cloned = 10
killed = 17
cloned = 16
killed = 6
cloned = 18
killed = 3
cloned = 15
killed = 2
cloned = 7
killed = 11
cloned = 8
killed = 14
cloned = 4
killed = 21
cloned = 1
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 12, 0, 11, 18, 19, 14, 2, 7, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 17, 10, 13, 20, 3, 1, 21, 15, 6, 4, 22]
====================================
cloned = 8
killed = 5
cloned = 17
killed = 9
cloned = 10
killed = 12
cloned = 13
killed = 0
cloned = 20
killed = 11
cloned = 3
killed = 18
cloned = 1
killed = 19
cloned = 21
killed = 14
cloned = 15
killed = 2
cloned = 6
killed = 7
cloned = 4
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 5, 1, 4, 16, 12, 14, 11, 15, 0, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 8, 2, 13, 10, 9, 21, 17, 19, 20, 3, 22]
====================================
cloned = 6
killed = 18
cloned = 8
killed = 5
cloned = 2
killed = 1
cloned = 13
killed = 4
cloned = 10
killed = 16
cloned = 9
killed = 12
cloned = 21
killed = 14
cloned = 17
killed = 11
cloned = 19
killed = 15
cloned = 20
killed = 0
cloned = 3
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 19, 10, 14, 16, 3, 8, 4, 0, 18, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 17, 2, 9, 7, 12, 21, 5, 11, 20, 6, 22]
====================================
cloned = 15
killed = 1
cloned = 17
killed = 19
cloned = 2
killed = 10
cloned = 9
killed = 14
cloned = 7
killed = 16
cloned = 12
killed = 3
cloned = 21
killed = 8
cloned = 5
killed = 4
cloned = 11
killed = 0
cloned = 20
killed = 18
cloned = 6
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 15, 19, 9, 1, 16, 14, 20, 12, 11, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 18, 8, 13, 2, 5, 4, 17, 7, 21, 0, 22]
====================================
cloned = 10
killed = 3
cloned = 18
killed = 15
cloned = 8
killed = 19
cloned = 13
killed = 9
cloned = 2
killed = 1
cloned = 5
killed = 16
cloned = 4
killed = 14
cloned = 17
killed = 20
cloned = 7
killed = 12
cloned = 21
killed = 11
cloned = 0
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 20, 10, 18, 13, 6, 1, 8, 7, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 3, 15, 12, 19, 16, 11, 2, 4, 14, 17, 22]
====================================
cloned = 0
killed = 5
cloned = 3
killed = 9
cloned = 15
killed = 20
cloned = 12
killed = 10
cloned = 19
killed = 18
cloned = 16
killed = 13
cloned = 11
killed = 6
cloned = 2
killed = 1
cloned = 4
killed = 8
cloned = 14
killed = 7
cloned = 17
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 12, 18, 15, 20, 14, 11, 0, 1, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 6, 4, 21, 16, 2, 8, 19, 7, 9, 13, 22]
====================================
cloned = 5
killed = 10
cloned = 6
killed = 3
cloned = 4
killed = 12
cloned = 21
killed = 18
cloned = 16
killed = 15
cloned = 2
killed = 20
cloned = 8
killed = 14
cloned = 19
killed = 11
cloned = 7
killed = 0
cloned = 9
killed = 1
cloned = 13
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 19, 0, 12, 7, 21, 20, 4, 3, 9, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 8, 18, 16, 14, 1, 2, 11, 10, 5, 15, 22]
====================================
cloned = 17
killed = 6
cloned = 8
killed = 19
cloned = 18
killed = 0
cloned = 16
killed = 12
cloned = 14
killed = 7
cloned = 1
killed = 21
cloned = 2
killed = 20
cloned = 11
killed = 4
cloned = 10
killed = 3
cloned = 5
killed = 9
cloned = 15
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 16, 5, 14, 11, 8, 3, 4, 6, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 13, 19, 12, 0, 7, 15, 20, 1, 2, 22]
====================================
cloned = 21
killed = 9
cloned = 18
killed = 10
cloned = 13
killed = 16
cloned = 19
killed = 5
cloned = 12
killed = 14
cloned = 0
killed = 11
cloned = 7
killed = 8
cloned = 15
killed = 3
cloned = 20
killed = 4
cloned = 1
killed = 6
cloned = 2
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 12, 17, 16, 3, 10, 11, 2, 14, 18, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 15, 0, 6, 19, 7, 1, 9, 5, 4, 8, 22]
====================================
cloned = 20
killed = 21
cloned = 15
killed = 12
cloned = 0
killed = 17
cloned = 6
killed = 16
cloned = 19
killed = 3
cloned = 7
killed = 10
cloned = 1
killed = 11
cloned = 9
killed = 2
cloned = 5
killed = 14
cloned = 4
killed = 18
cloned = 8
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 5, 19, 6, 13, 15, 21, 1, 18, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 11, 2, 0, 17, 14, 10, 3, 8, 12, 20, 22]
====================================
cloned = 7
killed = 4
cloned = 11
killed = 16
cloned = 2
killed = 5
cloned = 0
killed = 19
cloned = 17
killed = 6
cloned = 14
killed = 13
cloned = 10
killed = 15
cloned = 3
killed = 21
cloned = 8
killed = 1
cloned = 12
killed = 18
cloned = 20
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 1, 16, 6, 20, 3, 0, 15, 12, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 4, 21, 19, 5, 9, 17, 14, 10, 7, 13, 22]
====================================
cloned = 11
killed = 18
cloned = 4
killed = 1
cloned = 21
killed = 16
cloned = 19
killed = 6
cloned = 5
killed = 20
cloned = 9
killed = 3
cloned = 17
killed = 0
cloned = 14
killed = 15
cloned = 10
killed = 12
cloned = 7
killed = 8
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 13, 20, 7, 18, 16, 10, 3, 12, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 19, 11, 14, 21, 0, 4, 15, 17, 5, 6, 22]
====================================
cloned = 9
killed = 8
cloned = 19
killed = 13
cloned = 11
killed = 20
cloned = 14
killed = 7
cloned = 21
killed = 18
cloned = 0
killed = 16
cloned = 4
killed = 10
cloned = 15
killed = 3
cloned = 17
killed = 12
cloned = 5
killed = 2
cloned = 6
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 1, 13, 0, 2, 21, 4, 10, 11, 16, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 7, 18, 3, 20, 15, 6, 8, 5, 12, 14, 22]
====================================
cloned = 19
killed = 17
cloned = 7
killed = 1
cloned = 18
killed = 13
cloned = 3
killed = 0
cloned = 20
killed = 2
cloned = 15
killed = 21
cloned = 6
killed = 4
cloned = 8
killed = 10
cloned = 5
killed = 11
cloned = 12
killed = 16
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 19, 6, 2, 9, 4, 16, 12, 0, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 7, 18, 8, 15, 5, 3, 13, 21, 14, 20, 22]
====================================
cloned = 1
killed = 10
cloned = 7
killed = 11
cloned = 18
killed = 19
cloned = 8
killed = 6
cloned = 15
killed = 2
cloned = 5
killed = 9
cloned = 3
killed = 4
cloned = 13
killed = 16
cloned = 21
killed = 12
cloned = 14
killed = 0
cloned = 20
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 8, 1, 11, 21, 9, 6, 18, 5, 13, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 0, 16, 10, 17, 7, 3, 2, 12, 14, 19, 22]
====================================
cloned = 4
killed = 20
cloned = 0
killed = 8
cloned = 16
killed = 1
cloned = 10
killed = 11
cloned = 17
killed = 21
cloned = 7
killed = 9
cloned = 3
killed = 6
cloned = 2
killed = 18
cloned = 12
killed = 5
cloned = 14
killed = 13
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 12, 9, 19, 15, 10, 11, 7, 0, 8, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 20, 3, 1, 17, 6, 14, 5, 4, 2, 13, 22]
====================================
cloned = 21
killed = 18
cloned = 20
killed = 12
cloned = 3
killed = 9
cloned = 1
killed = 19
cloned = 17
killed = 15
cloned = 6
killed = 10
cloned = 14
killed = 11
cloned = 5
killed = 7
cloned = 4
killed = 0
cloned = 2
killed = 8
cloned = 13
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 18, 17, 2, 3, 21, 6, 13, 11, 12, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 14, 19, 0, 1, 16, 4, 5, 20, 10, 8, 22]
====================================
cloned = 9
killed = 7
cloned = 14
killed = 18
cloned = 19
killed = 17
cloned = 0
killed = 2
cloned = 1
killed = 3
cloned = 16
killed = 21
cloned = 4
killed = 6
cloned = 5
killed = 13
cloned = 20
killed = 11
cloned = 10
killed = 12
cloned = 8
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 9, 21, 17, 3, 2, 11, 14, 13, 20, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 12, 10, 5, 15, 1, 8, 7, 19, 6, 0, 22]
====================================
cloned = 18
killed = 16
cloned = 12
killed = 9
cloned = 10
killed = 21
cloned = 5
killed = 17
cloned = 15
killed = 3
cloned = 1
killed = 2
cloned = 8
killed = 11
cloned = 7
killed = 14
cloned = 19
killed = 13
cloned = 6
killed = 20
cloned = 0
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 10, 20, 14, 18, 5, 17, 15, 11, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 3, 19, 8, 4, 2, 12, 13, 16, 1, 0, 22]
====================================
cloned = 21
killed = 9
cloned = 3
killed = 7
cloned = 19
killed = 10
cloned = 8
killed = 20
cloned = 4
killed = 14
cloned = 2
killed = 18
cloned = 12
killed = 5
cloned = 13
killed = 17
cloned = 16
killed = 15
cloned = 1
killed = 11
cloned = 0
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 1, 9, 15, 21, 8, 13, 10, 5, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 4, 12, 6, 2, 19, 14, 16, 0, 3, 11, 22]
====================================
cloned = 20
killed = 17
cloned = 4
killed = 7
cloned = 12
killed = 1
cloned = 6
killed = 9
cloned = 2
killed = 15
cloned = 19
killed = 21
cloned = 14
killed = 8
cloned = 16
killed = 13
cloned = 0
killed = 10
cloned = 3
killed = 5
cloned = 11
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 16, 15, 3, 13, 20, 17, 2, 6, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 14, 7, 12, 5, 19, 9, 18, 11, 8, 0, 22]
====================================
cloned = 10
killed = 21
cloned = 14
killed = 16
cloned = 7
killed = 15
cloned = 12
killed = 3
cloned = 5
killed = 13
cloned = 19
killed = 20
cloned = 9
killed = 17
cloned = 18
killed = 2
cloned = 11
killed = 6
cloned = 8
killed = 4
cloned = 0
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 12, 16, 2, 5, 9, 10, 0, 1, 15, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 20, 7, 11, 6, 14, 17, 18, 8, 19, 3, 22]
====================================
cloned = 4
killed = 13
cloned = 20
killed = 12
cloned = 7
killed = 16
cloned = 11
killed = 2
cloned = 6
killed = 5
cloned = 14
killed = 9
cloned = 17
killed = 10
cloned = 18
killed = 0
cloned = 8
killed = 1
cloned = 19
killed = 15
cloned = 3
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 12, 17, 19, 14, 16, 20, 0, 11, 6, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 10, 3, 7, 21, 15, 18, 13, 9, 2, 22]
====================================
cloned = 8
killed = 1
cloned = 4
killed = 12
cloned = 10
killed = 17
cloned = 3
killed = 19
cloned = 7
killed = 14
cloned = 21
killed = 16
cloned = 15
killed = 20
cloned = 18
killed = 0
cloned = 13
killed = 11
cloned = 9
killed = 6
cloned = 2
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 19, 15, 14, 17, 8, 20, 9, 6, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 4, 13, 1, 11, 16, 21, 2, 12, 10, 3, 22]
====================================
cloned = 18
killed = 7
cloned = 4
killed = 19
cloned = 13
killed = 15
cloned = 1
killed = 14
cloned = 11
killed = 17
cloned = 16
killed = 8
cloned = 21
killed = 20
cloned = 2
killed = 9
cloned = 12
killed = 6
cloned = 10
killed = 5
cloned = 3
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 13, 10, 20, 4, 15, 3, 16, 2, 8, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 11, 7, 5, 0, 17, 18, 9, 19, 1, 22]
====================================
cloned = 12
killed = 14
cloned = 6
killed = 13
cloned = 11
killed = 10
cloned = 7
killed = 20
cloned = 5
killed = 4
cloned = 0
killed = 15
cloned = 17
killed = 3
cloned = 18
killed = 16
cloned = 9
killed = 2
cloned = 19
killed = 8
cloned = 1
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 2, 6, 11, 0, 5, 3, 10, 16, 7, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 20, 15, 14, 13, 17, 4, 18, 8, 1, 12, 22]
====================================
cloned = 9
killed = 21
cloned = 20
killed = 2
cloned = 15
killed = 6
cloned = 14
killed = 11
cloned = 13
killed = 0
cloned = 17
killed = 5
cloned = 4
killed = 3
cloned = 18
killed = 10
cloned = 8
killed = 16
cloned = 1
killed = 7
cloned = 12
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 9, 8, 15, 18, 13, 1, 19, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 10, 11, 5, 6, 7, 20, 17, 16, 2, 21, 22]
====================================
cloned = 14
killed = 4
cloned = 10
killed = 12
cloned = 11
killed = 9
cloned = 5
killed = 8
cloned = 6
killed = 15
cloned = 7
killed = 18
cloned = 20
killed = 13
cloned = 17
killed = 1
cloned = 16
killed = 19
cloned = 2
killed = 0
cloned = 21
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 8, 17, 16, 20, 21, 10, 19, 15, 13, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 5, 12, 18, 7, 0, 1, 3, 11, 2, 14, 22]
====================================
cloned = 6
killed = 9
cloned = 5
killed = 8
cloned = 12
killed = 17
cloned = 18
killed = 16
cloned = 7
killed = 20
cloned = 0
killed = 21
cloned = 1
killed = 10
cloned = 3
killed = 19
cloned = 11
killed = 15
cloned = 2
killed = 13
cloned = 14
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 3, 5, 14, 20, 1, 8, 12, 6, 19, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 21, 15, 4, 0, 13, 7, 16, 9, 10, 2, 22]
====================================
cloned = 18
killed = 17
cloned = 21
killed = 3
cloned = 15
killed = 5
cloned = 4
killed = 14
cloned = 0
killed = 20
cloned = 13
killed = 1
cloned = 7
killed = 8
cloned = 16
killed = 12
cloned = 9
killed = 6
cloned = 10
killed = 19
cloned = 2
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 14, 6, 18, 4, 21, 11, 0, 1, 15, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 3, 13, 10, 9, 19, 5, 7, 16, 20, 2, 22]
====================================
cloned = 17
killed = 12
cloned = 3
killed = 14
cloned = 13
killed = 6
cloned = 10
killed = 18
cloned = 9
killed = 4
cloned = 19
killed = 21
cloned = 5
killed = 11
cloned = 7
killed = 0
cloned = 16
killed = 1
cloned = 20
killed = 15
cloned = 2
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 8, 6, 19, 2, 3, 14, 4, 12, 11, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 9, 18, 1, 17, 0, 10, 5, 16, 15, 20, 22]
====================================
cloned = 7
killed = 13
cloned = 9
killed = 8
cloned = 18
killed = 6
cloned = 1
killed = 19
cloned = 17
killed = 2
cloned = 0
killed = 3
cloned = 10
killed = 14
cloned = 5
killed = 4
cloned = 16
killed = 12
cloned = 15
killed = 11
cloned = 20
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 18, 7, 15, 3, 16, 19, 5, 21, 14, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 20, 10, 11, 0, 1, 17, 12, 2, 9, 13, 22]
====================================
cloned = 4
killed = 8
cloned = 20
killed = 18
cloned = 10
killed = 7
cloned = 11
killed = 15
cloned = 0
killed = 3
cloned = 1
killed = 16
cloned = 17
killed = 19
cloned = 12
killed = 5
cloned = 2
killed = 21
cloned = 9
killed = 14
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 5, 2, 19, 6, 9, 7, 12, 16, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 11, 4, 0, 18, 8, 10, 15, 14, 21, 1, 22]
====================================
cloned = 3
killed = 13
cloned = 11
killed = 17
cloned = 4
killed = 5
cloned = 0
killed = 2
cloned = 18
killed = 19
cloned = 8
killed = 6
cloned = 10
killed = 9
cloned = 15
killed = 7
cloned = 14
killed = 12
cloned = 21
killed = 16
cloned = 1
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 14, 1, 17, 11, 21, 20, 16, 15, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 12, 7, 10, 18, 6, 8, 19, 5, 13, 0, 22]
====================================
cloned = 4
killed = 9
cloned = 12
killed = 3
cloned = 7
killed = 14
cloned = 10
killed = 1
cloned = 18
killed = 17
cloned = 6
killed = 11
cloned = 8
killed = 21
cloned = 19
killed = 20
cloned = 5
killed = 16
cloned = 13
killed = 15
cloned = 0
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 0, 13, 17, 12, 7, 11, 8, 1, 16, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 15, 3, 18, 20, 4, 9, 2, 6, 21, 5, 22]
====================================
cloned = 10
killed = 19
cloned = 15
killed = 0
cloned = 3
killed = 13
cloned = 18
killed = 17
cloned = 20
killed = 12
cloned = 4
killed = 7
cloned = 9
killed = 11
cloned = 2
killed = 8
cloned = 6
killed = 1
cloned = 21
killed = 16
cloned = 5
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 7, 10, 19, 13, 15, 14, 17, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 16, 4, 18, 3, 6, 21, 9, 5, 8, 1, 22]
====================================
cloned = 0
killed = 11
cloned = 16
killed = 20
cloned = 4
killed = 7
cloned = 18
killed = 10
cloned = 3
killed = 19
cloned = 6
killed = 13
cloned = 21
killed = 15
cloned = 9
killed = 14
cloned = 5
killed = 17
cloned = 8
killed = 2
cloned = 1
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 14, 20, 13, 12, 11, 17, 9, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 18, 4, 0, 15, 7, 6, 3, 19, 1, 21, 22]
====================================
cloned = 16
killed = 10
cloned = 18
killed = 8
cloned = 4
killed = 14
cloned = 0
killed = 20
cloned = 15
killed = 13
cloned = 7
killed = 12
cloned = 6
killed = 11
cloned = 3
killed = 17
cloned = 19
killed = 9
cloned = 1
killed = 5
cloned = 21
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 11, 18, 16, 20, 3, 2, 5, 8, 12, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 4, 0, 9, 10, 15, 7, 14, 21, 17, 1, 22]
====================================
cloned = 19
killed = 13
cloned = 4
killed = 11
cloned = 0
killed = 18
cloned = 9
killed = 16
cloned = 10
killed = 20
cloned = 15
killed = 3
cloned = 7
killed = 2
cloned = 14
killed = 5
cloned = 21
killed = 8
cloned = 17
killed = 12
cloned = 1
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 14, 2, 1, 9, 16, 19, 5, 12, 3, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 7, 13, 17, 15, 8, 10, 20, 21, 11, 4, 22]
====================================
cloned = 0
killed = 6
cloned = 7
killed = 14
cloned = 13
killed = 2
cloned = 17
killed = 1
cloned = 15
killed = 9
cloned = 8
killed = 16
cloned = 10
killed = 19
cloned = 20
killed = 5
cloned = 21
killed = 12
cloned = 11
killed = 3
cloned = 4
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 19, 21, 13, 17, 8, 3, 15, 20, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 7, 10, 0, 16, 12, 11, 18, 6, 4, 22]
====================================
cloned = 14
killed = 2
cloned = 9
killed = 19
cloned = 7
killed = 21
cloned = 10
killed = 13
cloned = 0
killed = 17
cloned = 16
killed = 8
cloned = 12
killed = 3
cloned = 11
killed = 15
cloned = 18
killed = 20
cloned = 6
killed = 5
cloned = 4
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 16, 1, 13, 4, 19, 21, 10, 0, 3, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 9, 6, 12, 8, 2, 18, 11, 17, 5, 20, 22]
====================================
cloned = 7
killed = 14
cloned = 9
killed = 16
cloned = 6
killed = 1
cloned = 12
killed = 13
cloned = 8
killed = 4
cloned = 2
killed = 19
cloned = 18
killed = 21
cloned = 11
killed = 10
cloned = 17
killed = 0
cloned = 5
killed = 3
cloned = 20
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 3, 15, 18, 5, 2, 1, 21, 4, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 12, 10, 9, 16, 14, 7, 19, 0, 17, 11, 22]
====================================
cloned = 20
killed = 13
cloned = 12
killed = 6
cloned = 10
killed = 3
cloned = 9
killed = 15
cloned = 16
killed = 18
cloned = 14
killed = 5
cloned = 7
killed = 2
cloned = 19
killed = 1
cloned = 0
killed = 21
cloned = 17
killed = 4
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 5, 17, 10, 21, 3, 14, 18, 0, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 20, 13, 11, 4, 19, 15, 9, 6, 12, 1, 22]
====================================
cloned = 8
killed = 7
cloned = 20
killed = 5
cloned = 13
killed = 17
cloned = 11
killed = 10
cloned = 4
killed = 21
cloned = 19
killed = 3
cloned = 15
killed = 14
cloned = 9
killed = 18
cloned = 6
killed = 0
cloned = 12
killed = 16
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 14, 13, 8, 7, 17, 1, 5, 3, 18, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 4, 12, 19, 20, 21, 9, 0, 6, 16, 10, 22]
====================================
cloned = 11
killed = 15
cloned = 4
killed = 14
cloned = 12
killed = 13
cloned = 19
killed = 8
cloned = 20
killed = 7
cloned = 21
killed = 17
cloned = 9
killed = 1
cloned = 0
killed = 5
cloned = 6
killed = 3
cloned = 16
killed = 18
cloned = 10
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 18, 4, 5, 6, 1, 3, 15, 7, 11, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 19, 21, 17, 14, 0, 20, 9, 10, 2, 22]
====================================
cloned = 8
killed = 16
cloned = 12
killed = 18
cloned = 19
killed = 4
cloned = 21
killed = 5
cloned = 17
killed = 6
cloned = 14
killed = 1
cloned = 0
killed = 3
cloned = 20
killed = 15
cloned = 9
killed = 7
cloned = 10
killed = 11
cloned = 2
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 12, 3, 20, 13, 9, 19, 16, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 1, 7, 11, 8, 14, 5, 17, 15, 18, 21, 22]
====================================
cloned = 2
killed = 6
cloned = 1
killed = 10
cloned = 7
killed = 12
cloned = 11
killed = 3
cloned = 8
killed = 20
cloned = 14
killed = 13
cloned = 5
killed = 9
cloned = 17
killed = 19
cloned = 15
killed = 16
cloned = 18
killed = 0
cloned = 21
killed = 4
Trial run 9/seed 864:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.38,
  55.785,
  59.339999999999996,
  54.635,
  52.220000000000006,
  54.26500000000001,
  53.14499999999999,
  37.02,
  45.00000000000001,
  28.604999999999997,
  48.095000000000006,
  50.739999999999995,
  45.609999999999985,
  52.365,
  56.60499999999999,
  36.72,
  51.875,
  46.975,
  46.475,
  44.135000000000005,
  34.93000000000001,
  55.595,
  53.425],
 [65.7,
  64.56,
  65.75,
  62.870000000000005,
  62.28,
  62.16,
  61.47,
  65.7,
  64.03000000000002,
  65.75,
  62.870000000000005,
  61.98,
  62.160000000000004,
  63.540000000000006,
  58.73999999999999,
  61.14,
  62.58,
  63.540000000000006,
  58.78999999999999,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.56000000000001,
 57.34499999999999,
 59.475,
 54.495,
 52.06,
 54.575,
 58.389999999999986,
 36.68,
 44.745000000000005,
 28.99,
 47.88,
 50.79999999999999,
 47.754999999999995,
 52.455,
 56.275,
 36.905,
 51.69,
 49.115,
 46.29,
 44.02000000000001,
 34.970000000000006,
 55.495,
 53.56]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.69
Upper: 51.69
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 63.88,
 65.75,
 62.870000000000005,
 62.375,
 62.16,
 60.815,
 65.7,
 64.14,
 65.75,
 62.870000000000005,
 62.434999999999995,
 62.160000000000004,
 63.540000000000006,
 58.79999999999998,
 61.14,
 62.58,
 63.540000000000006,
 58.62,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 4, 7, 0, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 4
killed = 20
cloned = 7
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 4, 0, 20]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 12, 7, 21, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 12
killed = 4
cloned = 7
killed = 0
cloned = 21
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 11, 21, 4, 18, 2, 8, 6, 15, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 20, 13, 10, 9, 5, 0, 14, 1, 19, 16, 22]
====================================
cloned = 17
killed = 3
cloned = 20
killed = 12
cloned = 13
killed = 11
cloned = 10
killed = 21
cloned = 9
killed = 4
cloned = 5
killed = 18
cloned = 0
killed = 2
cloned = 14
killed = 8
cloned = 1
killed = 6
cloned = 19
killed = 15
cloned = 16
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 17, 7, 10, 12, 1, 20, 14, 13, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 18, 19, 3, 5, 6, 8, 0, 16, 21, 11, 22]
====================================
cloned = 15
killed = 2
cloned = 18
killed = 9
cloned = 19
killed = 17
cloned = 3
killed = 7
cloned = 5
killed = 10
cloned = 6
killed = 12
cloned = 8
killed = 1
cloned = 0
killed = 20
cloned = 16
killed = 14
cloned = 21
killed = 13
cloned = 11
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 18, 17, 3, 4, 19, 0, 13, 1, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 5, 15, 7, 8, 16, 20, 21, 2, 6, 12, 22]
====================================
cloned = 11
killed = 9
cloned = 5
killed = 10
cloned = 15
killed = 18
cloned = 7
killed = 17
cloned = 8
killed = 3
cloned = 16
killed = 4
cloned = 20
killed = 19
cloned = 21
killed = 0
cloned = 2
killed = 13
cloned = 6
killed = 1
cloned = 12
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 8, 0, 15, 10, 6, 1, 19, 4, 20, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 9, 7, 5, 11, 18, 16, 17, 2, 12, 21, 22]
====================================
cloned = 3
killed = 13
cloned = 9
killed = 8
cloned = 7
killed = 0
cloned = 5
killed = 15
cloned = 11
killed = 10
cloned = 18
killed = 6
cloned = 16
killed = 1
cloned = 17
killed = 19
cloned = 2
killed = 4
cloned = 12
killed = 20
cloned = 21
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 19, 6, 14, 1, 3, 2, 20, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 4, 5, 11, 13, 18, 9, 8, 16, 21, 0, 22]
====================================
cloned = 15
killed = 17
cloned = 4
killed = 10
cloned = 5
killed = 19
cloned = 11
killed = 6
cloned = 13
killed = 14
cloned = 18
killed = 1
cloned = 9
killed = 3
cloned = 8
killed = 2
cloned = 16
killed = 20
cloned = 21
killed = 7
cloned = 0
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 19, 8, 4, 12, 17, 18, 3, 15, 13, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 2, 5, 10, 9, 0, 6, 1, 16, 11, 20, 22]
====================================
cloned = 7
killed = 14
cloned = 2
killed = 19
cloned = 5
killed = 8
cloned = 10
killed = 4
cloned = 9
killed = 12
cloned = 0
killed = 17
cloned = 6
killed = 18
cloned = 1
killed = 3
cloned = 16
killed = 15
cloned = 11
killed = 13
cloned = 20
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 1, 6, 2, 9, 8, 11, 13, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 16, 18, 15, 14, 19, 21, 20, 0, 12, 10, 22]
====================================
cloned = 17
killed = 5
cloned = 16
killed = 3
cloned = 18
killed = 1
cloned = 15
killed = 6
cloned = 14
killed = 2
cloned = 19
killed = 9
cloned = 21
killed = 8
cloned = 20
killed = 11
cloned = 0
killed = 13
cloned = 12
killed = 7
cloned = 10
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 11, 10, 4, 16, 6, 1, 18, 15, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 17, 21, 12, 13, 20, 2, 5, 7, 3, 9, 22]
====================================
cloned = 19
killed = 14
cloned = 17
killed = 0
cloned = 21
killed = 11
cloned = 12
killed = 10
cloned = 13
killed = 4
cloned = 20
killed = 16
cloned = 2
killed = 6
cloned = 5
killed = 1
cloned = 7
killed = 18
cloned = 3
killed = 15
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 19, 17, 6, 13, 15, 5, 9, 4, 21, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 3, 10, 12, 16, 8, 0, 18, 11, 20, 2, 22]
====================================
cloned = 14
killed = 1
cloned = 3
killed = 19
cloned = 10
killed = 17
cloned = 12
killed = 6
cloned = 16
killed = 13
cloned = 8
killed = 15
cloned = 0
killed = 5
cloned = 18
killed = 9
cloned = 11
killed = 4
cloned = 20
killed = 21
cloned = 2
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 14, 11, 8, 6, 21, 9, 7, 10, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 16, 2, 0, 17, 4, 18, 19, 1, 15, 3, 22]
====================================
cloned = 13
killed = 20
cloned = 16
killed = 14
cloned = 2
killed = 11
cloned = 0
killed = 8
cloned = 17
killed = 6
cloned = 4
killed = 21
cloned = 18
killed = 9
cloned = 19
killed = 7
cloned = 1
killed = 10
cloned = 15
killed = 12
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 14, 13, 16, 17, 20, 0, 12, 4, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 21, 18, 19, 9, 10, 7, 15, 8, 2, 5, 22]
====================================
cloned = 6
killed = 3
cloned = 21
killed = 1
cloned = 18
killed = 14
cloned = 19
killed = 13
cloned = 9
killed = 16
cloned = 10
killed = 17
cloned = 7
killed = 20
cloned = 15
killed = 0
cloned = 8
killed = 12
cloned = 2
killed = 4
cloned = 5
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 5, 7, 9, 11, 21, 2, 6, 10, 19, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 13, 14, 12, 4, 1, 8, 20, 15, 3, 18, 22]
====================================
cloned = 0
killed = 17
cloned = 13
killed = 5
cloned = 14
killed = 7
cloned = 12
killed = 9
cloned = 4
killed = 11
cloned = 1
killed = 21
cloned = 8
killed = 2
cloned = 20
killed = 6
cloned = 15
killed = 10
cloned = 3
killed = 19
cloned = 18
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 5, 10, 0, 9, 2, 8, 16, 12, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 1, 3, 18, 21, 13, 17, 7, 15, 14, 20, 22]
====================================
cloned = 6
killed = 11
cloned = 1
killed = 4
cloned = 3
killed = 5
cloned = 18
killed = 10
cloned = 21
killed = 0
cloned = 13
killed = 9
cloned = 17
killed = 2
cloned = 7
killed = 8
cloned = 15
killed = 16
cloned = 14
killed = 12
cloned = 20
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 13, 2, 8, 19, 5, 18, 15, 16, 20, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 0, 7, 4, 21, 14, 1, 3, 12, 9, 11, 22]
====================================
cloned = 6
killed = 10
cloned = 0
killed = 13
cloned = 7
killed = 2
cloned = 4
killed = 8
cloned = 21
killed = 19
cloned = 14
killed = 5
cloned = 1
killed = 18
cloned = 3
killed = 15
cloned = 12
killed = 16
cloned = 9
killed = 20
cloned = 11
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 17, 0, 2, 7, 14, 4, 10, 19, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 3, 1, 18, 12, 16, 5, 13, 15, 20, 21, 22]
====================================
cloned = 11
killed = 6
cloned = 3
killed = 17
cloned = 1
killed = 0
cloned = 18
killed = 2
cloned = 12
killed = 7
cloned = 16
killed = 14
cloned = 5
killed = 4
cloned = 13
killed = 10
cloned = 15
killed = 19
cloned = 20
killed = 8
cloned = 21
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 3, 11, 5, 18, 6, 2, 13, 16, 17, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 14, 15, 7, 9, 8, 4, 10, 1, 19, 20, 22]
====================================
cloned = 12
killed = 21
cloned = 14
killed = 3
cloned = 15
killed = 11
cloned = 7
killed = 5
cloned = 9
killed = 18
cloned = 8
killed = 6
cloned = 4
killed = 2
cloned = 10
killed = 13
cloned = 1
killed = 16
cloned = 19
killed = 17
cloned = 20
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 0, 7, 6, 17, 1, 5, 13, 9, 15, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 11, 12, 16, 18, 19, 8, 4, 14, 20, 21, 22]
====================================
cloned = 3
killed = 10
cloned = 11
killed = 0
cloned = 12
killed = 7
cloned = 16
killed = 6
cloned = 18
killed = 17
cloned = 19
killed = 1
cloned = 8
killed = 5
cloned = 4
killed = 13
cloned = 14
killed = 9
cloned = 20
killed = 15
cloned = 21
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 19, 11, 12, 20, 1, 15, 8, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 21, 10, 13, 14, 3, 9, 18, 16, 17, 7, 22]
====================================
cloned = 0
killed = 4
cloned = 21
killed = 2
cloned = 10
killed = 19
cloned = 13
killed = 11
cloned = 14
killed = 12
cloned = 3
killed = 20
cloned = 9
killed = 1
cloned = 18
killed = 15
cloned = 16
killed = 8
cloned = 17
killed = 5
cloned = 7
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 20, 21, 5, 19, 18, 17, 6, 9, 4, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 11, 14, 1, 3, 13, 15, 7, 12, 8, 2, 22]
====================================
cloned = 16
killed = 0
cloned = 11
killed = 20
cloned = 14
killed = 21
cloned = 1
killed = 5
cloned = 3
killed = 19
cloned = 13
killed = 18
cloned = 15
killed = 17
cloned = 7
killed = 6
cloned = 12
killed = 9
cloned = 8
killed = 4
cloned = 2
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 20, 3, 0, 9, 18, 15, 13, 8, 16, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 7, 19, 12, 6, 10, 14, 2, 21, 1, 17, 22]
====================================
cloned = 5
killed = 4
cloned = 7
killed = 20
cloned = 19
killed = 3
cloned = 12
killed = 0
cloned = 6
killed = 9
cloned = 10
killed = 18
cloned = 14
killed = 15
cloned = 2
killed = 13
cloned = 21
killed = 8
cloned = 1
killed = 16
cloned = 17
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 21, 10, 17, 7, 0, 16, 12, 18, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 9, 3, 15, 2, 8, 13, 19, 1, 4, 11, 22]
====================================
cloned = 20
killed = 6
cloned = 9
killed = 5
cloned = 3
killed = 21
cloned = 15
killed = 10
cloned = 2
killed = 17
cloned = 8
killed = 7
cloned = 13
killed = 0
cloned = 19
killed = 16
cloned = 1
killed = 12
cloned = 4
killed = 18
cloned = 11
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 17, 12, 2, 14, 16, 8, 21, 13, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 11, 20, 6, 19, 9, 18, 15, 10, 7, 1, 22]
====================================
cloned = 4
killed = 5
cloned = 11
killed = 3
cloned = 20
killed = 17
cloned = 6
killed = 12
cloned = 19
killed = 2
cloned = 9
killed = 14
cloned = 18
killed = 16
cloned = 15
killed = 8
cloned = 10
killed = 21
cloned = 7
killed = 13
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 14, 21, 5, 1, 15, 16, 7, 19, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 11, 20, 9, 12, 10, 2, 3, 17, 13, 22]
====================================
cloned = 6
killed = 4
cloned = 18
killed = 8
cloned = 11
killed = 14
cloned = 20
killed = 21
cloned = 9
killed = 5
cloned = 12
killed = 1
cloned = 10
killed = 15
cloned = 2
killed = 16
cloned = 3
killed = 7
cloned = 17
killed = 19
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 15, 12, 17, 11, 13, 21, 19, 14, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 2, 6, 4, 7, 20, 5, 18, 16, 9, 0, 22]
====================================
cloned = 10
killed = 3
cloned = 2
killed = 15
cloned = 6
killed = 12
cloned = 4
killed = 17
cloned = 7
killed = 11
cloned = 20
killed = 13
cloned = 5
killed = 21
cloned = 18
killed = 19
cloned = 16
killed = 14
cloned = 9
killed = 1
cloned = 0
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 18, 11, 2, 6, 16, 8, 7, 15, 19, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 12, 13, 10, 1, 21, 14, 0, 3, 4, 17, 22]
====================================
cloned = 9
killed = 20
cloned = 12
killed = 18
cloned = 13
killed = 11
cloned = 10
killed = 2
cloned = 1
killed = 6
cloned = 21
killed = 16
cloned = 14
killed = 8
cloned = 0
killed = 7
cloned = 3
killed = 15
cloned = 4
killed = 19
cloned = 17
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 15, 14, 1, 18, 7, 11, 9, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 16, 5, 10, 21, 20, 17, 4, 3, 19, 8, 22]
====================================
cloned = 13
killed = 6
cloned = 16
killed = 2
cloned = 5
killed = 15
cloned = 10
killed = 14
cloned = 21
killed = 1
cloned = 20
killed = 18
cloned = 17
killed = 7
cloned = 4
killed = 11
cloned = 3
killed = 9
cloned = 19
killed = 0
cloned = 8
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 2, 21, 20, 11, 16, 12, 19, 9, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 13, 7, 6, 8, 14, 0, 3, 10, 18, 1, 22]
====================================
cloned = 17
killed = 4
cloned = 13
killed = 15
cloned = 7
killed = 2
cloned = 6
killed = 21
cloned = 8
killed = 20
cloned = 14
killed = 11
cloned = 0
killed = 16
cloned = 3
killed = 12
cloned = 10
killed = 19
cloned = 18
killed = 9
cloned = 1
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 1, 12, 17, 20, 2, 5, 0, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 19, 7, 15, 11, 14, 6, 16, 18, 4, 21, 22]
====================================
cloned = 8
killed = 3
cloned = 19
killed = 13
cloned = 7
killed = 1
cloned = 15
killed = 12
cloned = 11
killed = 17
cloned = 14
killed = 20
cloned = 6
killed = 2
cloned = 16
killed = 5
cloned = 18
killed = 0
cloned = 4
killed = 9
cloned = 21
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 6, 1, 7, 17, 9, 0, 8, 15, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 10, 13, 21, 16, 5, 2, 12, 4, 18, 22]
====================================
cloned = 19
killed = 20
cloned = 14
killed = 3
cloned = 10
killed = 6
cloned = 13
killed = 1
cloned = 21
killed = 7
cloned = 16
killed = 17
cloned = 5
killed = 9
cloned = 2
killed = 0
cloned = 12
killed = 8
cloned = 4
killed = 15
cloned = 18
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 5, 6, 13, 14, 8, 1, 4, 3, 10, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 20, 19, 2, 17, 0, 21, 12, 18, 11, 7, 22]
====================================
cloned = 9
killed = 15
cloned = 20
killed = 5
cloned = 19
killed = 6
cloned = 2
killed = 13
cloned = 17
killed = 14
cloned = 0
killed = 8
cloned = 21
killed = 1
cloned = 12
killed = 4
cloned = 18
killed = 3
cloned = 11
killed = 10
cloned = 7
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 12, 13, 16, 18, 17, 3, 15, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 7, 2, 6, 11, 1, 19, 0, 14, 20, 8, 22]
====================================
cloned = 21
killed = 4
cloned = 7
killed = 9
cloned = 2
killed = 12
cloned = 6
killed = 13
cloned = 11
killed = 16
cloned = 1
killed = 18
cloned = 19
killed = 17
cloned = 0
killed = 3
cloned = 14
killed = 15
cloned = 20
killed = 10
cloned = 8
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 15, 11, 13, 1, 17, 14, 20, 19, 16, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 2, 10, 6, 4, 21, 5, 7, 9, 0, 12, 22]
====================================
cloned = 8
killed = 18
cloned = 2
killed = 15
cloned = 10
killed = 11
cloned = 6
killed = 13
cloned = 4
killed = 1
cloned = 21
killed = 17
cloned = 5
killed = 14
cloned = 7
killed = 20
cloned = 9
killed = 19
cloned = 0
killed = 16
cloned = 12
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 13, 11, 18, 9, 3, 4, 21, 5, 19, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 2, 0, 10, 16, 8, 7, 6, 14, 20, 22]
====================================
cloned = 15
killed = 1
cloned = 12
killed = 13
cloned = 2
killed = 11
cloned = 0
killed = 18
cloned = 10
killed = 9
cloned = 16
killed = 3
cloned = 8
killed = 4
cloned = 7
killed = 21
cloned = 6
killed = 5
cloned = 14
killed = 19
cloned = 20
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 19, 7, 4, 15, 11, 9, 20, 2, 13, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 3, 8, 14, 17, 12, 0, 1, 16, 6, 10, 22]
====================================
cloned = 21
killed = 18
cloned = 3
killed = 19
cloned = 8
killed = 7
cloned = 14
killed = 4
cloned = 17
killed = 15
cloned = 12
killed = 11
cloned = 0
killed = 9
cloned = 1
killed = 20
cloned = 16
killed = 2
cloned = 6
killed = 13
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 19, 20, 8, 13, 21, 9, 7, 14, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 2, 18, 1, 3, 15, 10, 16, 6, 17, 5, 22]
====================================
cloned = 11
killed = 12
cloned = 2
killed = 19
cloned = 18
killed = 20
cloned = 1
killed = 8
cloned = 3
killed = 13
cloned = 15
killed = 21
cloned = 10
killed = 9
cloned = 16
killed = 7
cloned = 6
killed = 14
cloned = 17
killed = 0
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 14, 4, 15, 8, 2, 3, 16, 12, 18, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 9, 11, 21, 5, 13, 7, 20, 0, 10, 1, 22]
====================================
cloned = 6
killed = 17
cloned = 9
killed = 14
cloned = 11
killed = 4
cloned = 21
killed = 15
cloned = 5
killed = 8
cloned = 13
killed = 2
cloned = 7
killed = 3
cloned = 20
killed = 16
cloned = 0
killed = 12
cloned = 10
killed = 18
cloned = 1
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 21, 17, 4, 16, 10, 1, 20, 6, 12, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 2, 9, 8, 11, 15, 14, 0, 7, 13, 22]
====================================
cloned = 18
killed = 19
cloned = 5
killed = 21
cloned = 2
killed = 17
cloned = 9
killed = 4
cloned = 8
killed = 16
cloned = 11
killed = 10
cloned = 15
killed = 1
cloned = 14
killed = 20
cloned = 0
killed = 6
cloned = 7
killed = 12
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 4, 7, 17, 21, 18, 12, 8, 2, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 15, 13, 9, 16, 14, 6, 10, 0, 11, 1, 22]
====================================
cloned = 19
killed = 3
cloned = 15
killed = 20
cloned = 13
killed = 4
cloned = 9
killed = 7
cloned = 16
killed = 17
cloned = 14
killed = 21
cloned = 6
killed = 18
cloned = 10
killed = 12
cloned = 0
killed = 8
cloned = 11
killed = 2
cloned = 1
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 21, 16, 6, 20, 11, 18, 12, 1, 9, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 8, 4, 0, 13, 7, 5, 10, 2, 19, 15, 22]
====================================
cloned = 14
killed = 17
cloned = 8
killed = 21
cloned = 4
killed = 16
cloned = 0
killed = 6
cloned = 13
killed = 20
cloned = 7
killed = 11
cloned = 5
killed = 18
cloned = 10
killed = 12
cloned = 2
killed = 1
cloned = 19
killed = 9
cloned = 15
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 3, 15, 4, 0, 19, 20, 16, 6, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 7, 9, 12, 10, 17, 13, 14, 1, 5, 18, 22]
====================================
cloned = 8
killed = 21
cloned = 7
killed = 3
cloned = 9
killed = 15
cloned = 12
killed = 4
cloned = 10
killed = 0
cloned = 17
killed = 19
cloned = 13
killed = 20
cloned = 14
killed = 16
cloned = 1
killed = 6
cloned = 5
killed = 2
cloned = 18
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 18, 6, 2, 3, 12, 15, 19, 4, 0, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 8, 17, 11, 5, 13, 20, 9, 1, 10, 21, 22]
====================================
cloned = 14
killed = 16
cloned = 8
killed = 18
cloned = 17
killed = 6
cloned = 11
killed = 2
cloned = 5
killed = 3
cloned = 13
killed = 12
cloned = 20
killed = 15
cloned = 9
killed = 19
cloned = 1
killed = 4
cloned = 10
killed = 0
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 14, 8, 2, 20, 1, 15, 11, 5, 18, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 19, 3, 9, 7, 12, 6, 21, 16, 13, 10, 22]
====================================
cloned = 4
killed = 0
cloned = 19
killed = 14
cloned = 3
killed = 8
cloned = 9
killed = 2
cloned = 7
killed = 20
cloned = 12
killed = 1
cloned = 6
killed = 15
cloned = 21
killed = 11
cloned = 16
killed = 5
cloned = 13
killed = 18
cloned = 10
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 19, 8, 11, 1, 2, 21, 4, 20, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 17, 5, 3, 14, 13, 7, 15, 16, 9, 6, 22]
====================================
cloned = 0
killed = 10
cloned = 17
killed = 12
cloned = 5
killed = 19
cloned = 3
killed = 8
cloned = 14
killed = 11
cloned = 13
killed = 1
cloned = 7
killed = 2
cloned = 15
killed = 21
cloned = 16
killed = 4
cloned = 9
killed = 20
cloned = 6
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 4, 15, 2, 14, 16, 5, 6, 20, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 8, 7, 11, 3, 18, 19, 0, 13, 10, 21, 22]
====================================
cloned = 17
killed = 9
cloned = 8
killed = 1
cloned = 7
killed = 4
cloned = 11
killed = 15
cloned = 3
killed = 2
cloned = 18
killed = 14
cloned = 19
killed = 16
cloned = 0
killed = 5
cloned = 13
killed = 6
cloned = 10
killed = 20
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 16, 11, 21, 15, 8, 14, 10, 1, 17, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 18, 2, 12, 9, 4, 20, 3, 13, 7, 6, 22]
====================================
cloned = 0
killed = 5
cloned = 18
killed = 16
cloned = 2
killed = 11
cloned = 12
killed = 21
cloned = 9
killed = 15
cloned = 4
killed = 8
cloned = 20
killed = 14
cloned = 3
killed = 10
cloned = 13
killed = 1
cloned = 7
killed = 17
cloned = 6
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 21, 8, 3, 19, 5, 16, 12, 9, 11, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 1, 0, 15, 2, 18, 13, 4, 14, 10, 20, 22]
====================================
cloned = 6
killed = 7
cloned = 1
killed = 21
cloned = 0
killed = 8
cloned = 15
killed = 3
cloned = 2
killed = 19
cloned = 18
killed = 5
cloned = 13
killed = 16
cloned = 4
killed = 12
cloned = 14
killed = 9
cloned = 10
killed = 11
cloned = 20
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 20, 7, 2, 13, 0, 8, 5, 15, 11, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 4, 18, 6, 3, 21, 19, 12, 1, 16, 9, 22]
====================================
cloned = 10
killed = 14
cloned = 4
killed = 20
cloned = 18
killed = 7
cloned = 6
killed = 2
cloned = 3
killed = 13
cloned = 21
killed = 0
cloned = 19
killed = 8
cloned = 12
killed = 5
cloned = 1
killed = 15
cloned = 16
killed = 11
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 18, 2, 10, 14, 0, 9, 5, 13, 6, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 1, 21, 11, 15, 7, 19, 17, 4, 3, 8, 22]
====================================
cloned = 12
killed = 16
cloned = 1
killed = 18
cloned = 21
killed = 2
cloned = 11
killed = 10
cloned = 15
killed = 14
cloned = 7
killed = 0
cloned = 19
killed = 9
cloned = 17
killed = 5
cloned = 4
killed = 13
cloned = 3
killed = 6
cloned = 8
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 14, 9, 6, 11, 7, 16, 8, 21, 12, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 19, 10, 3, 17, 15, 20, 1, 2, 4, 13, 22]
====================================
cloned = 5
killed = 0
cloned = 19
killed = 14
cloned = 10
killed = 9
cloned = 3
killed = 6
cloned = 17
killed = 11
cloned = 15
killed = 7
cloned = 20
killed = 16
cloned = 1
killed = 8
cloned = 2
killed = 21
cloned = 4
killed = 12
cloned = 13
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 14, 13, 11, 19, 8, 1, 18, 0, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 3, 21, 6, 12, 2, 5, 7, 15, 17, 4, 22]
====================================
cloned = 16
killed = 9
cloned = 3
killed = 10
cloned = 21
killed = 14
cloned = 6
killed = 13
cloned = 12
killed = 11
cloned = 2
killed = 19
cloned = 5
killed = 8
cloned = 7
killed = 1
cloned = 15
killed = 18
cloned = 17
killed = 0
cloned = 4
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 16, 3, 19, 12, 14, 13, 1, 21, 18, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 11, 10, 20, 17, 0, 2, 6, 5, 4, 9, 22]
====================================
cloned = 8
killed = 15
cloned = 11
killed = 16
cloned = 10
killed = 3
cloned = 20
killed = 19
cloned = 17
killed = 12
cloned = 0
killed = 14
cloned = 2
killed = 13
cloned = 6
killed = 1
cloned = 5
killed = 21
cloned = 4
killed = 18
cloned = 9
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 20, 21, 17, 18, 8, 9, 19, 14, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 12, 4, 7, 0, 11, 16, 13, 3, 1, 22]
====================================
cloned = 2
killed = 10
cloned = 15
killed = 5
cloned = 12
killed = 20
cloned = 4
killed = 21
cloned = 7
killed = 17
cloned = 0
killed = 18
cloned = 11
killed = 8
cloned = 16
killed = 9
cloned = 13
killed = 19
cloned = 3
killed = 14
cloned = 1
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 19, 13, 8, 14, 6, 2, 12, 5, 7, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 16, 4, 3, 9, 15, 17, 0, 10, 11, 18, 22]
====================================
cloned = 1
killed = 20
cloned = 16
killed = 19
cloned = 4
killed = 13
cloned = 3
killed = 8
cloned = 9
killed = 14
cloned = 15
killed = 6
cloned = 17
killed = 2
cloned = 0
killed = 12
cloned = 10
killed = 5
cloned = 11
killed = 7
cloned = 18
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 10, 11, 1, 18, 15, 13, 4, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 19, 3, 0, 14, 9, 5, 7, 17, 21, 22]
====================================
cloned = 12
killed = 20
cloned = 6
killed = 16
cloned = 19
killed = 10
cloned = 3
killed = 11
cloned = 0
killed = 1
cloned = 14
killed = 18
cloned = 9
killed = 15
cloned = 5
killed = 13
cloned = 7
killed = 4
cloned = 17
killed = 8
cloned = 21
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 15, 9, 8, 19, 11, 21, 16, 4, 3, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 10, 14, 12, 6, 1, 0, 17, 5, 20, 2, 22]
====================================
cloned = 13
killed = 18
cloned = 10
killed = 15
cloned = 14
killed = 9
cloned = 12
killed = 8
cloned = 6
killed = 19
cloned = 1
killed = 11
cloned = 0
killed = 21
cloned = 17
killed = 16
cloned = 5
killed = 4
cloned = 20
killed = 3
cloned = 2
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 21, 15, 6, 17, 9, 2, 3, 1, 0, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 16, 20, 12, 7, 5, 11, 18, 8, 4, 22]
====================================
cloned = 10
killed = 14
cloned = 13
killed = 21
cloned = 16
killed = 15
cloned = 20
killed = 6
cloned = 12
killed = 17
cloned = 7
killed = 9
cloned = 5
killed = 2
cloned = 11
killed = 3
cloned = 18
killed = 1
cloned = 8
killed = 0
cloned = 4
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 20, 2, 10, 13, 8, 6, 15, 1, 9, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 4, 11, 14, 12, 17, 5, 16, 18, 0, 3, 22]
====================================
cloned = 21
killed = 7
cloned = 4
killed = 20
cloned = 11
killed = 2
cloned = 14
killed = 10
cloned = 12
killed = 13
cloned = 17
killed = 8
cloned = 5
killed = 6
cloned = 16
killed = 15
cloned = 18
killed = 1
cloned = 0
killed = 9
cloned = 3
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 16, 6, 2, 13, 15, 5, 3, 12, 4, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 7, 0, 10, 1, 14, 17, 20, 8, 11, 18, 22]
====================================
cloned = 9
killed = 19
cloned = 7
killed = 16
cloned = 0
killed = 6
cloned = 10
killed = 2
cloned = 1
killed = 13
cloned = 14
killed = 15
cloned = 17
killed = 5
cloned = 20
killed = 3
cloned = 8
killed = 12
cloned = 11
killed = 4
cloned = 18
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 15, 1, 14, 6, 21, 19, 11, 20, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 18, 9, 13, 7, 12, 3, 4, 10, 2, 16, 22]
====================================
cloned = 17
killed = 8
cloned = 18
killed = 5
cloned = 9
killed = 15
cloned = 13
killed = 1
cloned = 7
killed = 14
cloned = 12
killed = 6
cloned = 3
killed = 21
cloned = 4
killed = 19
cloned = 10
killed = 11
cloned = 2
killed = 20
cloned = 16
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 20, 12, 6, 16, 14, 7, 19, 13, 18, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 9, 15, 10, 8, 1, 0, 11, 5, 3, 4, 22]
====================================
cloned = 21
killed = 17
cloned = 9
killed = 20
cloned = 15
killed = 12
cloned = 10
killed = 6
cloned = 8
killed = 16
cloned = 1
killed = 14
cloned = 0
killed = 7
cloned = 11
killed = 19
cloned = 5
killed = 13
cloned = 3
killed = 18
cloned = 4
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 9, 5, 4, 10, 17, 6, 14, 18, 20, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 3, 16, 1, 0, 19, 12, 13, 8, 11, 2, 22]
====================================
cloned = 7
killed = 21
cloned = 3
killed = 9
cloned = 16
killed = 5
cloned = 1
killed = 4
cloned = 0
killed = 10
cloned = 19
killed = 17
cloned = 12
killed = 6
cloned = 13
killed = 14
cloned = 8
killed = 18
cloned = 11
killed = 20
cloned = 2
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 0, 15, 13, 1, 9, 7, 5, 20, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 19, 18, 10, 6, 3, 8, 17, 2, 16, 21, 22]
====================================
cloned = 14
killed = 11
cloned = 19
killed = 12
cloned = 18
killed = 0
cloned = 10
killed = 15
cloned = 6
killed = 13
cloned = 3
killed = 1
cloned = 8
killed = 9
cloned = 17
killed = 7
cloned = 2
killed = 5
cloned = 16
killed = 20
cloned = 21
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 4, 12, 21, 3, 2, 8, 16, 11, 1, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 0, 19, 14, 6, 13, 9, 18, 7, 5, 10, 22]
====================================
cloned = 20
killed = 15
cloned = 0
killed = 4
cloned = 19
killed = 12
cloned = 14
killed = 21
cloned = 6
killed = 3
cloned = 13
killed = 2
cloned = 9
killed = 8
cloned = 18
killed = 16
cloned = 7
killed = 11
cloned = 5
killed = 1
cloned = 10
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 14, 6, 20, 15, 4, 10, 3, 13, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 16, 5, 12, 11, 0, 1, 8, 7, 17, 21, 22]
====================================
cloned = 19
killed = 18
cloned = 16
killed = 9
cloned = 5
killed = 14
cloned = 12
killed = 6
cloned = 11
killed = 20
cloned = 0
killed = 15
cloned = 1
killed = 4
cloned = 8
killed = 10
cloned = 7
killed = 3
cloned = 17
killed = 13
cloned = 21
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 15, 3, 0, 5, 7, 10, 4, 17, 19, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 9, 20, 16, 1, 18, 13, 12, 11, 6, 22]
====================================
cloned = 14
killed = 21
cloned = 2
killed = 15
cloned = 9
killed = 3
cloned = 20
killed = 0
cloned = 16
killed = 5
cloned = 1
killed = 7
cloned = 18
killed = 10
cloned = 13
killed = 4
cloned = 12
killed = 17
cloned = 11
killed = 19
cloned = 6
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 3, 4, 7, 6, 11, 17, 12, 5, 18, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 15, 2, 9, 16, 21, 20, 19, 0, 14, 1, 22]
====================================
cloned = 8
killed = 10
cloned = 15
killed = 3
cloned = 2
killed = 4
cloned = 9
killed = 7
cloned = 16
killed = 6
cloned = 21
killed = 11
cloned = 20
killed = 17
cloned = 19
killed = 12
cloned = 0
killed = 5
cloned = 14
killed = 18
cloned = 1
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 18, 19, 3, 9, 11, 14, 20, 7, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 17, 15, 5, 13, 8, 16, 6, 1, 2, 10, 22]
====================================
cloned = 12
killed = 0
cloned = 17
killed = 4
cloned = 15
killed = 18
cloned = 5
killed = 19
cloned = 13
killed = 3
cloned = 8
killed = 9
cloned = 16
killed = 11
cloned = 6
killed = 14
cloned = 1
killed = 20
cloned = 2
killed = 7
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 11, 15, 13, 4, 19, 7, 5, 2, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 10, 8, 1, 0, 20, 17, 18, 12, 14, 6, 22]
====================================
cloned = 16
killed = 9
cloned = 10
killed = 3
cloned = 8
killed = 11
cloned = 1
killed = 15
cloned = 0
killed = 13
cloned = 20
killed = 4
cloned = 17
killed = 19
cloned = 18
killed = 7
cloned = 12
killed = 5
cloned = 14
killed = 2
cloned = 6
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 15, 12, 9, 7, 6, 18, 0, 11, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 1, 5, 20, 21, 10, 16, 3, 17, 19, 13, 22]
====================================
cloned = 4
killed = 14
cloned = 1
killed = 15
cloned = 5
killed = 12
cloned = 20
killed = 9
cloned = 21
killed = 7
cloned = 10
killed = 6
cloned = 16
killed = 18
cloned = 3
killed = 0
cloned = 17
killed = 11
cloned = 19
killed = 8
cloned = 13
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 1, 21, 18, 19, 12, 15, 7, 6, 10, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 14, 13, 20, 9, 8, 11, 2, 17, 16, 0, 22]
====================================
cloned = 5
killed = 4
cloned = 14
killed = 1
cloned = 13
killed = 21
cloned = 20
killed = 18
cloned = 9
killed = 19
cloned = 8
killed = 12
cloned = 11
killed = 15
cloned = 2
killed = 7
cloned = 17
killed = 6
cloned = 16
killed = 10
cloned = 0
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 2, 16, 20, 4, 17, 8, 21, 11, 5, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 12, 1, 19, 14, 3, 10, 9, 6, 0, 7, 22]
====================================
cloned = 13
killed = 15
cloned = 12
killed = 2
cloned = 1
killed = 16
cloned = 19
killed = 20
cloned = 14
killed = 4
cloned = 3
killed = 17
cloned = 10
killed = 8
cloned = 9
killed = 21
cloned = 6
killed = 11
cloned = 0
killed = 5
cloned = 7
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 13, 9, 11, 5, 8, 2, 0, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 21, 12, 17, 3, 18, 10, 4, 1, 19, 14, 22]
====================================
cloned = 15
killed = 20
cloned = 21
killed = 16
cloned = 12
killed = 13
cloned = 17
killed = 9
cloned = 3
killed = 11
cloned = 18
killed = 5
cloned = 10
killed = 8
cloned = 4
killed = 2
cloned = 1
killed = 0
cloned = 19
killed = 7
cloned = 14
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 16, 5, 0, 21, 17, 3, 4, 12, 13, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 1, 18, 20, 8, 9, 10, 19, 2, 15, 14, 22]
====================================
cloned = 7
killed = 6
cloned = 1
killed = 16
cloned = 18
killed = 5
cloned = 20
killed = 0
cloned = 8
killed = 21
cloned = 9
killed = 17
cloned = 10
killed = 3
cloned = 19
killed = 4
cloned = 2
killed = 12
cloned = 15
killed = 13
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 15, 9, 6, 10, 16, 4, 18, 17, 14, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 11, 1, 0, 3, 7, 20, 13, 8, 21, 2, 22]
====================================
cloned = 5
killed = 12
cloned = 11
killed = 15
cloned = 1
killed = 9
cloned = 0
killed = 6
cloned = 3
killed = 10
cloned = 7
killed = 16
cloned = 20
killed = 4
cloned = 13
killed = 18
cloned = 8
killed = 17
cloned = 21
killed = 14
cloned = 2
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 8, 7, 9, 3, 6, 21, 1, 4, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 17, 13, 15, 14, 20, 18, 0, 12, 2, 11, 22]
====================================
cloned = 5
killed = 16
cloned = 17
killed = 10
cloned = 13
killed = 8
cloned = 15
killed = 7
cloned = 14
killed = 9
cloned = 20
killed = 3
cloned = 18
killed = 6
cloned = 0
killed = 21
cloned = 12
killed = 1
cloned = 2
killed = 4
cloned = 11
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 7, 1, 0, 2, 21, 17, 18, 14, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 9, 13, 16, 8, 15, 19, 6, 5, 12, 10, 22]
====================================
cloned = 4
killed = 3
cloned = 9
killed = 11
cloned = 13
killed = 7
cloned = 16
killed = 1
cloned = 8
killed = 0
cloned = 15
killed = 2
cloned = 19
killed = 21
cloned = 6
killed = 17
cloned = 5
killed = 18
cloned = 12
killed = 14
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 12, 19, 10, 15, 9, 8, 16, 2, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 1, 7, 3, 11, 14, 21, 18, 17, 13, 22]
====================================
cloned = 5
killed = 20
cloned = 4
killed = 6
cloned = 1
killed = 12
cloned = 7
killed = 19
cloned = 3
killed = 10
cloned = 11
killed = 15
cloned = 14
killed = 9
cloned = 21
killed = 8
cloned = 18
killed = 16
cloned = 17
killed = 2
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 5, 8, 19, 2, 0, 7, 17, 15, 3, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 10, 6, 13, 1, 21, 12, 11, 9, 18, 4, 22]
====================================
cloned = 20
killed = 14
cloned = 10
killed = 5
cloned = 6
killed = 8
cloned = 13
killed = 19
cloned = 1
killed = 2
cloned = 21
killed = 0
cloned = 12
killed = 7
cloned = 11
killed = 17
cloned = 9
killed = 15
cloned = 18
killed = 3
cloned = 4
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 14, 11, 9, 6, 19, 15, 12, 10, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 0, 8, 4, 20, 7, 18, 1, 16, 13, 21, 22]
====================================
cloned = 3
killed = 5
cloned = 0
killed = 2
cloned = 8
killed = 14
cloned = 4
killed = 11
cloned = 20
killed = 9
cloned = 7
killed = 6
cloned = 18
killed = 19
cloned = 1
killed = 15
cloned = 16
killed = 12
cloned = 13
killed = 10
cloned = 21
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 2, 13, 3, 15, 1, 19, 21, 20, 18, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 9, 6, 14, 8, 4, 11, 7, 10, 12, 5, 22]
====================================
cloned = 17
killed = 16
cloned = 9
killed = 2
cloned = 6
killed = 13
cloned = 14
killed = 3
cloned = 8
killed = 15
cloned = 4
killed = 1
cloned = 11
killed = 19
cloned = 7
killed = 21
cloned = 10
killed = 20
cloned = 12
killed = 18
cloned = 5
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 18, 21, 10, 7, 3, 17, 8, 20, 0, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 12, 4, 11, 15, 1, 9, 16, 19, 5, 2, 22]
====================================
cloned = 6
killed = 14
cloned = 12
killed = 18
cloned = 4
killed = 21
cloned = 11
killed = 10
cloned = 15
killed = 7
cloned = 1
killed = 3
cloned = 9
killed = 17
cloned = 16
killed = 8
cloned = 19
killed = 20
cloned = 5
killed = 0
cloned = 2
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 15, 18, 5, 19, 4, 6, 7, 14, 13, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 0, 21, 10, 11, 17, 16, 20, 9, 8, 1, 22]
====================================
cloned = 3
killed = 2
cloned = 0
killed = 15
cloned = 21
killed = 18
cloned = 10
killed = 5
cloned = 11
killed = 19
cloned = 17
killed = 4
cloned = 16
killed = 6
cloned = 20
killed = 7
cloned = 9
killed = 14
cloned = 8
killed = 13
cloned = 1
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 16, 1, 8, 21, 18, 4, 6, 9, 5, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 11, 15, 19, 3, 2, 13, 20, 14, 0, 12, 22]
====================================
cloned = 7
killed = 10
cloned = 11
killed = 16
cloned = 15
killed = 1
cloned = 19
killed = 8
cloned = 3
killed = 21
cloned = 2
killed = 18
cloned = 13
killed = 4
cloned = 20
killed = 6
cloned = 14
killed = 9
cloned = 0
killed = 5
cloned = 12
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 15, 21, 2, 16, 1, 8, 7, 11, 19, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 9, 10, 12, 6, 14, 20, 13, 18, 3, 5, 22]
====================================
cloned = 17
killed = 0
cloned = 9
killed = 15
cloned = 10
killed = 21
cloned = 12
killed = 2
cloned = 6
killed = 16
cloned = 14
killed = 1
cloned = 20
killed = 8
cloned = 13
killed = 7
cloned = 18
killed = 11
cloned = 3
killed = 19
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 16, 6, 18, 21, 5, 1, 3, 17, 10, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 14, 4, 12, 15, 0, 9, 2, 19, 13, 20, 22]
====================================
cloned = 8
killed = 11
cloned = 14
killed = 16
cloned = 4
killed = 6
cloned = 12
killed = 18
cloned = 15
killed = 21
cloned = 0
killed = 5
cloned = 9
killed = 1
cloned = 2
killed = 3
cloned = 19
killed = 17
cloned = 13
killed = 10
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 19, 11, 16, 7, 13, 14, 6, 9, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 17, 4, 5, 21, 20, 8, 1, 18, 0, 10, 22]
====================================
cloned = 12
killed = 2
cloned = 17
killed = 3
cloned = 4
killed = 19
cloned = 5
killed = 11
cloned = 21
killed = 16
cloned = 20
killed = 7
cloned = 8
killed = 13
cloned = 1
killed = 14
cloned = 18
killed = 6
cloned = 0
killed = 9
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 18, 13, 3, 14, 19, 17, 1, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 0, 21, 2, 8, 6, 9, 11, 15, 16, 20, 22]
====================================
cloned = 5
killed = 10
cloned = 0
killed = 7
cloned = 21
killed = 18
cloned = 2
killed = 13
cloned = 8
killed = 3
cloned = 6
killed = 14
cloned = 9
killed = 19
cloned = 11
killed = 17
cloned = 15
killed = 1
cloned = 16
killed = 4
cloned = 20
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 5, 12, 6, 14, 8, 2, 18, 19, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 4, 15, 0, 10, 9, 16, 1, 17, 3, 13, 22]
====================================
cloned = 20
killed = 21
cloned = 4
killed = 7
cloned = 15
killed = 5
cloned = 0
killed = 12
cloned = 10
killed = 6
cloned = 9
killed = 14
cloned = 16
killed = 8
cloned = 1
killed = 2
cloned = 17
killed = 18
cloned = 3
killed = 19
cloned = 13
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 16, 15, 18, 1, 2, 8, 0, 3, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 10, 5, 20, 6, 12, 9, 13, 17, 19, 14, 22]
====================================
cloned = 4
killed = 21
cloned = 10
killed = 7
cloned = 5
killed = 16
cloned = 20
killed = 15
cloned = 6
killed = 18
cloned = 12
killed = 1
cloned = 9
killed = 2
cloned = 13
killed = 8
cloned = 17
killed = 0
cloned = 19
killed = 3
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 18, 8, 1, 5, 3, 19, 6, 15, 16, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 20, 10, 13, 4, 7, 2, 11, 21, 12, 0, 22]
====================================
cloned = 14
killed = 17
cloned = 20
killed = 18
cloned = 10
killed = 8
cloned = 13
killed = 1
cloned = 4
killed = 5
cloned = 7
killed = 3
cloned = 2
killed = 19
cloned = 11
killed = 6
cloned = 21
killed = 15
cloned = 12
killed = 16
cloned = 0
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 0, 4, 7, 16, 5, 11, 2, 17, 10, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 14, 21, 19, 15, 8, 20, 6, 3, 9, 12, 22]
====================================
cloned = 1
killed = 18
cloned = 14
killed = 0
cloned = 21
killed = 4
cloned = 19
killed = 7
cloned = 15
killed = 16
cloned = 8
killed = 5
cloned = 20
killed = 11
cloned = 6
killed = 2
cloned = 3
killed = 17
cloned = 9
killed = 10
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 16, 4, 6, 8, 17, 18, 3, 21, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 11, 15, 20, 7, 9, 5, 12, 19, 14, 1, 22]
====================================
cloned = 13
killed = 10
cloned = 11
killed = 2
cloned = 15
killed = 16
cloned = 20
killed = 4
cloned = 7
killed = 6
cloned = 9
killed = 8
cloned = 5
killed = 17
cloned = 12
killed = 18
cloned = 19
killed = 3
cloned = 14
killed = 21
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 14, 19, 6, 18, 1, 5, 2, 3, 13, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 8, 0, 7, 4, 12, 9, 16, 20, 15, 21, 22]
====================================
cloned = 11
killed = 17
cloned = 8
killed = 14
cloned = 0
killed = 19
cloned = 7
killed = 6
cloned = 4
killed = 18
cloned = 12
killed = 1
cloned = 9
killed = 5
cloned = 16
killed = 2
cloned = 20
killed = 3
cloned = 15
killed = 13
cloned = 21
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 6, 1, 4, 17, 16, 3, 7, 8, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 5, 19, 13, 0, 10, 20, 21, 18, 14, 22]
====================================
cloned = 15
killed = 2
cloned = 12
killed = 6
cloned = 5
killed = 1
cloned = 19
killed = 4
cloned = 13
killed = 17
cloned = 0
killed = 16
cloned = 10
killed = 3
cloned = 20
killed = 7
cloned = 21
killed = 8
cloned = 18
killed = 11
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 16, 13, 12, 6, 2, 3, 7, 20, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 9, 19, 4, 1, 8, 18, 21, 0, 5, 14, 22]
====================================
cloned = 11
killed = 17
cloned = 9
killed = 10
cloned = 19
killed = 16
cloned = 4
killed = 13
cloned = 1
killed = 12
cloned = 8
killed = 6
cloned = 18
killed = 2
cloned = 21
killed = 3
cloned = 0
killed = 7
cloned = 5
killed = 20
cloned = 14
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 15, 13, 12, 19, 20, 0, 7, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 14, 2, 1, 21, 17, 9, 18, 6, 5, 16, 22]
====================================
cloned = 10
killed = 3
cloned = 14
killed = 4
cloned = 2
killed = 15
cloned = 1
killed = 13
cloned = 21
killed = 12
cloned = 17
killed = 19
cloned = 9
killed = 20
cloned = 18
killed = 0
cloned = 6
killed = 7
cloned = 5
killed = 8
cloned = 16
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 19, 4, 13, 7, 21, 11, 18, 17, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 12, 1, 5, 15, 6, 20, 16, 10, 0, 14, 22]
====================================
cloned = 3
killed = 2
cloned = 12
killed = 19
cloned = 1
killed = 4
cloned = 5
killed = 13
cloned = 15
killed = 7
cloned = 6
killed = 21
cloned = 20
killed = 11
cloned = 16
killed = 18
cloned = 10
killed = 17
cloned = 0
killed = 8
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 20, 15, 12, 1, 13, 17, 7, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 19, 5, 3, 16, 4, 6, 8, 21, 18, 0, 22]
====================================
cloned = 14
killed = 10
cloned = 19
killed = 9
cloned = 5
killed = 20
cloned = 3
killed = 15
cloned = 16
killed = 12
cloned = 4
killed = 1
cloned = 6
killed = 13
cloned = 8
killed = 17
cloned = 21
killed = 7
cloned = 18
killed = 2
cloned = 0
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 12, 11, 7, 21, 2, 3, 5, 18, 14, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 16, 10, 19, 13, 8, 4, 6, 0, 17, 15, 22]
====================================
cloned = 9
killed = 20
cloned = 16
killed = 12
cloned = 10
killed = 11
cloned = 19
killed = 7
cloned = 13
killed = 21
cloned = 8
killed = 2
cloned = 4
killed = 3
cloned = 6
killed = 5
cloned = 0
killed = 18
cloned = 17
killed = 14
cloned = 15
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 18, 20, 21, 11, 5, 13, 9, 10, 4, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 15, 14, 6, 17, 0, 2, 3, 12, 7, 1, 22]
====================================
cloned = 8
killed = 19
cloned = 15
killed = 18
cloned = 14
killed = 20
cloned = 6
killed = 21
cloned = 17
killed = 11
cloned = 0
killed = 5
cloned = 2
killed = 13
cloned = 3
killed = 9
cloned = 12
killed = 10
cloned = 7
killed = 4
cloned = 1
killed = 16
Trial run 10/seed 865:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.56000000000001,
  57.34499999999999,
  59.475,
  54.495,
  52.06,
  54.575,
  58.389999999999986,
  36.68,
  44.745000000000005,
  28.99,
  47.88,
  50.79999999999999,
  47.754999999999995,
  52.455,
  56.275,
  36.905,
  51.69,
  49.115,
  46.29,
  44.02000000000001,
  34.970000000000006,
  55.495,
  53.56],
 [65.7,
  63.88,
  65.75,
  62.870000000000005,
  62.375,
  62.16,
  60.815,
  65.7,
  64.14,
  65.75,
  62.870000000000005,
  62.434999999999995,
  62.160000000000004,
  63.540000000000006,
  58.79999999999998,
  61.14,
  62.58,
  63.540000000000006,
  58.62,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.190000000000005,
 55.99,
 59.345,
 54.765,
 51.89,
 54.645,
 54.81999999999999,
 36.96,
 44.65500000000001,
 28.974999999999994,
 48.055,
 50.849999999999994,
 47.764999999999986,
 52.315,
 56.254999999999995,
 36.800000000000004,
 51.805,
 47.065000000000005,
 46.614999999999995,
 43.88500000000001,
 34.910000000000004,
 55.375,
 53.515]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.805
Upper: 51.805
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.66,
 65.75,
 62.870000000000005,
 62.525000000000006,
 62.16,
 61.35,
 65.7,
 64.34500000000001,
 65.75,
 62.870000000000005,
 62.53,
 62.160000000000004,
 63.540000000000006,
 58.70999999999999,
 61.465,
 62.58,
 63.540000000000006,
 58.904999999999994,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 4, 7, 0, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 4
killed = 20
cloned = 7
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 0, 21, 7]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 20, 4, 12, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 20
killed = 0
cloned = 4
killed = 21
cloned = 12
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 4, 13, 5, 2, 10, 15, 11, 9, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 16, 7, 0, 1, 20, 19, 8, 6, 17, 18, 22]
====================================
cloned = 14
killed = 21
cloned = 16
killed = 4
cloned = 7
killed = 13
cloned = 0
killed = 5
cloned = 1
killed = 2
cloned = 20
killed = 10
cloned = 19
killed = 15
cloned = 8
killed = 11
cloned = 6
killed = 9
cloned = 17
killed = 3
cloned = 18
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 2, 3, 19, 8, 16, 20, 10, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 5, 12, 14, 18, 9, 4, 17, 11, 21, 15, 22]
====================================
cloned = 0
killed = 6
cloned = 5
killed = 13
cloned = 12
killed = 2
cloned = 14
killed = 3
cloned = 18
killed = 19
cloned = 9
killed = 8
cloned = 4
killed = 16
cloned = 17
killed = 20
cloned = 11
killed = 10
cloned = 21
killed = 7
cloned = 15
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 3, 15, 13, 1, 14, 2, 10, 19, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 8, 4, 5, 6, 0, 12, 16, 21, 18, 22]
====================================
cloned = 20
killed = 17
cloned = 7
killed = 9
cloned = 8
killed = 3
cloned = 4
killed = 15
cloned = 5
killed = 13
cloned = 6
killed = 1
cloned = 0
killed = 14
cloned = 12
killed = 2
cloned = 16
killed = 10
cloned = 21
killed = 19
cloned = 18
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 16, 17, 7, 0, 21, 8, 19, 9, 2, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 14, 4, 12, 20, 1, 11, 3, 6, 15, 13, 22]
====================================
cloned = 10
killed = 18
cloned = 14
killed = 16
cloned = 4
killed = 17
cloned = 12
killed = 7
cloned = 20
killed = 0
cloned = 1
killed = 21
cloned = 11
killed = 8
cloned = 3
killed = 19
cloned = 6
killed = 9
cloned = 15
killed = 2
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 3, 16, 6, 2, 10, 17, 9, 5, 7, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 13, 19, 0, 1, 4, 20, 18, 21, 14, 22]
====================================
cloned = 8
killed = 11
cloned = 12
killed = 3
cloned = 13
killed = 16
cloned = 19
killed = 6
cloned = 0
killed = 2
cloned = 1
killed = 10
cloned = 4
killed = 17
cloned = 20
killed = 9
cloned = 18
killed = 5
cloned = 21
killed = 7
cloned = 14
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 4, 3, 10, 5, 13, 12, 9, 15, 21, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 20, 7, 1, 11, 18, 0, 14, 19, 2, 6, 22]
====================================
cloned = 8
killed = 17
cloned = 20
killed = 4
cloned = 7
killed = 3
cloned = 1
killed = 10
cloned = 11
killed = 5
cloned = 18
killed = 13
cloned = 0
killed = 12
cloned = 14
killed = 9
cloned = 19
killed = 15
cloned = 2
killed = 21
cloned = 6
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 15, 9, 13, 12, 0, 7, 6, 17, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 1, 10, 20, 5, 19, 2, 11, 18, 21, 22]
====================================
cloned = 14
killed = 8
cloned = 4
killed = 3
cloned = 1
killed = 15
cloned = 10
killed = 9
cloned = 20
killed = 13
cloned = 5
killed = 12
cloned = 19
killed = 0
cloned = 2
killed = 7
cloned = 11
killed = 6
cloned = 18
killed = 17
cloned = 21
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 21, 8, 19, 6, 11, 5, 4, 14, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 13, 18, 1, 0, 17, 2, 20, 3, 7, 12, 22]
====================================
cloned = 15
killed = 10
cloned = 13
killed = 9
cloned = 18
killed = 21
cloned = 1
killed = 8
cloned = 0
killed = 19
cloned = 17
killed = 6
cloned = 2
killed = 11
cloned = 20
killed = 5
cloned = 3
killed = 4
cloned = 7
killed = 14
cloned = 12
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 7, 14, 21, 11, 2, 5, 15, 6, 19, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 20, 0, 10, 13, 1, 8, 3, 18, 4, 17, 22]
====================================
cloned = 9
killed = 12
cloned = 20
killed = 7
cloned = 0
killed = 14
cloned = 10
killed = 21
cloned = 13
killed = 11
cloned = 1
killed = 2
cloned = 8
killed = 5
cloned = 3
killed = 15
cloned = 18
killed = 6
cloned = 4
killed = 19
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 10, 3, 17, 6, 19, 11, 12, 15, 4, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 14, 7, 8, 21, 13, 0, 1, 2, 20, 5, 22]
====================================
cloned = 9
killed = 16
cloned = 14
killed = 10
cloned = 7
killed = 3
cloned = 8
killed = 17
cloned = 21
killed = 6
cloned = 13
killed = 19
cloned = 0
killed = 11
cloned = 1
killed = 12
cloned = 2
killed = 15
cloned = 20
killed = 4
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 16, 2, 20, 11, 10, 21, 8, 5, 13, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 18, 19, 4, 7, 1, 6, 12, 17, 3, 22]
====================================
cloned = 14
killed = 0
cloned = 9
killed = 16
cloned = 18
killed = 2
cloned = 19
killed = 20
cloned = 4
killed = 11
cloned = 7
killed = 10
cloned = 1
killed = 21
cloned = 6
killed = 8
cloned = 12
killed = 5
cloned = 17
killed = 13
cloned = 3
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 0, 19, 5, 14, 2, 8, 13, 15, 21, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 3, 7, 16, 9, 10, 11, 12, 18, 20, 1, 22]
====================================
cloned = 4
killed = 17
cloned = 3
killed = 0
cloned = 7
killed = 19
cloned = 16
killed = 5
cloned = 9
killed = 14
cloned = 10
killed = 2
cloned = 11
killed = 8
cloned = 12
killed = 13
cloned = 18
killed = 15
cloned = 20
killed = 21
cloned = 1
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 13, 9, 17, 15, 14, 19, 8, 12, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 5, 21, 11, 6, 1, 2, 0, 4, 10, 22]
====================================
cloned = 7
killed = 16
cloned = 18
killed = 3
cloned = 5
killed = 13
cloned = 21
killed = 9
cloned = 11
killed = 17
cloned = 6
killed = 15
cloned = 1
killed = 14
cloned = 2
killed = 19
cloned = 0
killed = 8
cloned = 4
killed = 12
cloned = 10
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 12, 3, 17, 0, 13, 2, 4, 5, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 8, 14, 10, 21, 11, 18, 6, 16, 19, 15, 22]
====================================
cloned = 7
killed = 9
cloned = 8
killed = 1
cloned = 14
killed = 12
cloned = 10
killed = 3
cloned = 21
killed = 17
cloned = 11
killed = 0
cloned = 18
killed = 13
cloned = 6
killed = 2
cloned = 16
killed = 4
cloned = 19
killed = 5
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 9, 10, 15, 21, 7, 14, 6, 13, 4, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 0, 1, 3, 20, 8, 16, 17, 2, 12, 5, 22]
====================================
cloned = 11
killed = 19
cloned = 0
killed = 9
cloned = 1
killed = 10
cloned = 3
killed = 15
cloned = 20
killed = 21
cloned = 8
killed = 7
cloned = 16
killed = 14
cloned = 17
killed = 6
cloned = 2
killed = 13
cloned = 12
killed = 4
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 1, 3, 19, 13, 18, 4, 21, 12, 5, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 7, 2, 0, 8, 6, 17, 20, 9, 11, 14, 22]
====================================
cloned = 10
killed = 15
cloned = 7
killed = 1
cloned = 2
killed = 3
cloned = 0
killed = 19
cloned = 8
killed = 13
cloned = 6
killed = 18
cloned = 17
killed = 4
cloned = 20
killed = 21
cloned = 9
killed = 12
cloned = 11
killed = 5
cloned = 14
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 3, 18, 1, 12, 9, 2, 0, 7, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 21, 13, 4, 20, 17, 19, 16, 6, 5, 11, 22]
====================================
cloned = 15
killed = 10
cloned = 21
killed = 8
cloned = 13
killed = 3
cloned = 4
killed = 18
cloned = 20
killed = 1
cloned = 17
killed = 12
cloned = 19
killed = 9
cloned = 16
killed = 2
cloned = 6
killed = 0
cloned = 5
killed = 7
cloned = 11
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 6, 5, 7, 1, 0, 18, 9, 21, 14, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 19, 3, 16, 15, 8, 20, 11, 17, 4, 10, 22]
====================================
cloned = 13
killed = 2
cloned = 19
killed = 6
cloned = 3
killed = 5
cloned = 16
killed = 7
cloned = 15
killed = 1
cloned = 8
killed = 0
cloned = 20
killed = 18
cloned = 11
killed = 9
cloned = 17
killed = 21
cloned = 4
killed = 14
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 13, 11, 0, 3, 15, 6, 14, 17, 16, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 19, 20, 18, 7, 12, 9, 10, 5, 8, 1, 22]
====================================
cloned = 4
killed = 2
cloned = 19
killed = 13
cloned = 20
killed = 11
cloned = 18
killed = 0
cloned = 7
killed = 3
cloned = 12
killed = 15
cloned = 9
killed = 6
cloned = 10
killed = 14
cloned = 5
killed = 17
cloned = 8
killed = 16
cloned = 1
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 2, 18, 0, 6, 7, 13, 16, 3, 14, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 8, 17, 4, 12, 20, 19, 21, 5, 1, 9, 22]
====================================
cloned = 10
killed = 15
cloned = 8
killed = 2
cloned = 17
killed = 18
cloned = 4
killed = 0
cloned = 12
killed = 6
cloned = 20
killed = 7
cloned = 19
killed = 13
cloned = 21
killed = 16
cloned = 5
killed = 3
cloned = 1
killed = 14
cloned = 9
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 11, 19, 0, 8, 2, 7, 18, 1, 9, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 6, 12, 13, 10, 21, 3, 5, 20, 4, 17, 22]
====================================
cloned = 14
killed = 15
cloned = 6
killed = 11
cloned = 12
killed = 19
cloned = 13
killed = 0
cloned = 10
killed = 8
cloned = 21
killed = 2
cloned = 3
killed = 7
cloned = 5
killed = 18
cloned = 20
killed = 1
cloned = 4
killed = 9
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 21, 13, 19, 17, 20, 3, 4, 10, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 5, 15, 16, 7, 6, 2, 8, 11, 9, 14, 22]
====================================
cloned = 0
killed = 18
cloned = 5
killed = 21
cloned = 15
killed = 13
cloned = 16
killed = 19
cloned = 7
killed = 17
cloned = 6
killed = 20
cloned = 2
killed = 3
cloned = 8
killed = 4
cloned = 11
killed = 10
cloned = 9
killed = 1
cloned = 14
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 15, 12, 19, 0, 18, 7, 10, 4, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 8, 1, 6, 16, 9, 13, 11, 2, 17, 14, 22]
====================================
cloned = 21
killed = 3
cloned = 8
killed = 20
cloned = 1
killed = 15
cloned = 6
killed = 12
cloned = 16
killed = 19
cloned = 9
killed = 0
cloned = 13
killed = 18
cloned = 11
killed = 7
cloned = 2
killed = 10
cloned = 17
killed = 4
cloned = 14
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 9, 2, 6, 8, 20, 14, 19, 16, 12, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 15, 4, 21, 7, 17, 10, 0, 13, 5, 1, 22]
====================================
cloned = 11
killed = 3
cloned = 15
killed = 9
cloned = 4
killed = 2
cloned = 21
killed = 6
cloned = 7
killed = 8
cloned = 17
killed = 20
cloned = 10
killed = 14
cloned = 0
killed = 19
cloned = 13
killed = 16
cloned = 5
killed = 12
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 17, 9, 18, 6, 16, 7, 13, 21, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 19, 5, 14, 20, 3, 4, 1, 15, 8, 11, 22]
====================================
cloned = 12
killed = 0
cloned = 19
killed = 10
cloned = 5
killed = 17
cloned = 14
killed = 9
cloned = 20
killed = 18
cloned = 3
killed = 6
cloned = 4
killed = 16
cloned = 1
killed = 7
cloned = 15
killed = 13
cloned = 8
killed = 21
cloned = 11
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 6, 19, 9, 4, 20, 5, 15, 11, 14, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 21, 16, 10, 12, 0, 2, 7, 13, 1, 8, 22]
====================================
cloned = 18
killed = 17
cloned = 21
killed = 6
cloned = 16
killed = 19
cloned = 10
killed = 9
cloned = 12
killed = 4
cloned = 0
killed = 20
cloned = 2
killed = 5
cloned = 7
killed = 15
cloned = 13
killed = 11
cloned = 1
killed = 14
cloned = 8
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 17, 1, 4, 9, 11, 2, 3, 20, 8, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 19, 7, 12, 21, 13, 15, 18, 0, 16, 22]
====================================
cloned = 6
killed = 10
cloned = 14
killed = 17
cloned = 19
killed = 1
cloned = 7
killed = 4
cloned = 12
killed = 9
cloned = 21
killed = 11
cloned = 13
killed = 2
cloned = 15
killed = 3
cloned = 18
killed = 20
cloned = 0
killed = 8
cloned = 16
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 15, 0, 2, 13, 19, 4, 10, 18, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 9, 7, 16, 21, 12, 5, 1, 6, 8, 14, 22]
====================================
cloned = 17
killed = 20
cloned = 9
killed = 3
cloned = 7
killed = 15
cloned = 16
killed = 0
cloned = 21
killed = 2
cloned = 12
killed = 13
cloned = 5
killed = 19
cloned = 1
killed = 4
cloned = 6
killed = 10
cloned = 8
killed = 18
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 0, 10, 17, 18, 8, 12, 14, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 20, 3, 7, 13, 2, 1, 21, 6, 11, 19, 22]
====================================
cloned = 15
killed = 4
cloned = 20
killed = 16
cloned = 3
killed = 0
cloned = 7
killed = 10
cloned = 13
killed = 17
cloned = 2
killed = 18
cloned = 1
killed = 8
cloned = 21
killed = 12
cloned = 6
killed = 14
cloned = 11
killed = 5
cloned = 19
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 2, 16, 1, 20, 14, 5, 15, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 18, 4, 21, 19, 11, 9, 10, 7, 17, 12, 22]
====================================
cloned = 8
killed = 3
cloned = 18
killed = 0
cloned = 4
killed = 2
cloned = 21
killed = 16
cloned = 19
killed = 1
cloned = 11
killed = 20
cloned = 9
killed = 14
cloned = 10
killed = 5
cloned = 7
killed = 15
cloned = 17
killed = 6
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 18, 12, 15, 16, 4, 1, 19, 17, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 5, 13, 3, 8, 7, 10, 20, 9, 14, 21, 22]
====================================
cloned = 2
killed = 6
cloned = 5
killed = 18
cloned = 13
killed = 12
cloned = 3
killed = 15
cloned = 8
killed = 16
cloned = 7
killed = 4
cloned = 10
killed = 1
cloned = 20
killed = 19
cloned = 9
killed = 17
cloned = 14
killed = 11
cloned = 21
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 16, 6, 0, 4, 11, 17, 7, 19, 8, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 10, 15, 14, 2, 20, 9, 1, 18, 21, 12, 22]
====================================
cloned = 5
killed = 3
cloned = 10
killed = 16
cloned = 15
killed = 6
cloned = 14
killed = 0
cloned = 2
killed = 4
cloned = 20
killed = 11
cloned = 9
killed = 17
cloned = 1
killed = 7
cloned = 18
killed = 19
cloned = 21
killed = 8
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 21, 8, 4, 3, 15, 6, 11, 20, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 7, 13, 18, 19, 10, 5, 0, 1, 2, 9, 22]
====================================
cloned = 14
killed = 16
cloned = 7
killed = 12
cloned = 13
killed = 21
cloned = 18
killed = 8
cloned = 19
killed = 4
cloned = 10
killed = 3
cloned = 5
killed = 15
cloned = 0
killed = 6
cloned = 1
killed = 11
cloned = 2
killed = 20
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 9, 2, 7, 4, 5, 1, 15, 3, 10, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 21, 12, 0, 16, 18, 13, 19, 11, 17, 6, 22]
====================================
cloned = 20
killed = 8
cloned = 21
killed = 9
cloned = 12
killed = 2
cloned = 0
killed = 7
cloned = 16
killed = 4
cloned = 18
killed = 5
cloned = 13
killed = 1
cloned = 19
killed = 15
cloned = 11
killed = 3
cloned = 17
killed = 10
cloned = 6
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 7, 0, 11, 18, 12, 3, 1, 16, 17, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 9, 21, 4, 6, 8, 5, 14, 2, 20, 13, 22]
====================================
cloned = 10
killed = 19
cloned = 9
killed = 7
cloned = 21
killed = 0
cloned = 4
killed = 11
cloned = 6
killed = 18
cloned = 8
killed = 12
cloned = 5
killed = 3
cloned = 14
killed = 1
cloned = 2
killed = 16
cloned = 20
killed = 17
cloned = 13
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 16, 21, 12, 11, 18, 20, 19, 7, 4, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 15, 14, 9, 13, 0, 1, 10, 2, 6, 8, 22]
====================================
cloned = 5
killed = 3
cloned = 15
killed = 16
cloned = 14
killed = 21
cloned = 9
killed = 12
cloned = 13
killed = 11
cloned = 0
killed = 18
cloned = 1
killed = 20
cloned = 10
killed = 19
cloned = 2
killed = 7
cloned = 6
killed = 4
cloned = 8
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 19, 21, 5, 7, 6, 1, 11, 15, 18, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 17, 0, 16, 12, 10, 20, 13, 8, 3, 9, 22]
====================================
cloned = 14
killed = 4
cloned = 17
killed = 19
cloned = 0
killed = 21
cloned = 16
killed = 5
cloned = 12
killed = 7
cloned = 10
killed = 6
cloned = 20
killed = 1
cloned = 13
killed = 11
cloned = 8
killed = 15
cloned = 3
killed = 18
cloned = 9
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 16, 6, 3, 19, 0, 8, 9, 10, 11, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 7, 20, 2, 4, 14, 21, 1, 15, 17, 5, 22]
====================================
cloned = 13
killed = 12
cloned = 7
killed = 16
cloned = 20
killed = 6
cloned = 2
killed = 3
cloned = 4
killed = 19
cloned = 14
killed = 0
cloned = 21
killed = 8
cloned = 1
killed = 9
cloned = 15
killed = 10
cloned = 17
killed = 11
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 16, 17, 20, 9, 11, 12, 8, 0, 14, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 5, 6, 15, 10, 3, 7, 2, 19, 13, 4, 22]
====================================
cloned = 1
killed = 21
cloned = 5
killed = 16
cloned = 6
killed = 17
cloned = 15
killed = 20
cloned = 10
killed = 9
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 2
killed = 8
cloned = 19
killed = 0
cloned = 13
killed = 14
cloned = 4
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 15, 10, 7, 8, 2, 13, 12, 19, 1, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 11, 6, 0, 9, 18, 21, 14, 4, 5, 3, 22]
====================================
cloned = 20
killed = 16
cloned = 11
killed = 15
cloned = 6
killed = 10
cloned = 0
killed = 7
cloned = 9
killed = 8
cloned = 18
killed = 2
cloned = 21
killed = 13
cloned = 14
killed = 12
cloned = 4
killed = 19
cloned = 5
killed = 1
cloned = 3
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 20, 6, 11, 17, 3, 13, 16, 5, 10, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 15, 9, 19, 8, 18, 12, 0, 4, 2, 7, 22]
====================================
cloned = 1
killed = 14
cloned = 15
killed = 20
cloned = 9
killed = 6
cloned = 19
killed = 11
cloned = 8
killed = 17
cloned = 18
killed = 3
cloned = 12
killed = 13
cloned = 0
killed = 16
cloned = 4
killed = 5
cloned = 2
killed = 10
cloned = 7
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 4, 12, 1, 18, 0, 6, 8, 16, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 2, 13, 5, 19, 20, 21, 11, 3, 9, 7, 22]
====================================
cloned = 15
killed = 17
cloned = 2
killed = 10
cloned = 13
killed = 4
cloned = 5
killed = 12
cloned = 19
killed = 1
cloned = 20
killed = 18
cloned = 21
killed = 0
cloned = 11
killed = 6
cloned = 3
killed = 8
cloned = 9
killed = 16
cloned = 7
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 18, 1, 19, 16, 6, 15, 5, 14, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 4, 13, 17, 11, 7, 0, 20, 12, 10, 3, 22]
====================================
cloned = 8
killed = 2
cloned = 4
killed = 9
cloned = 13
killed = 18
cloned = 17
killed = 1
cloned = 11
killed = 19
cloned = 7
killed = 16
cloned = 0
killed = 6
cloned = 20
killed = 15
cloned = 12
killed = 5
cloned = 10
killed = 14
cloned = 3
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 19, 17, 1, 0, 6, 12, 14, 11, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 8, 10, 16, 20, 7, 9, 13, 18, 21, 15, 22]
====================================
cloned = 2
killed = 3
cloned = 8
killed = 4
cloned = 10
killed = 19
cloned = 16
killed = 17
cloned = 20
killed = 1
cloned = 7
killed = 0
cloned = 9
killed = 6
cloned = 13
killed = 12
cloned = 18
killed = 14
cloned = 21
killed = 11
cloned = 15
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 21, 12, 16, 18, 17, 11, 0, 13, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 8, 19, 6, 10, 15, 14, 20, 2, 1, 5, 22]
====================================
cloned = 4
killed = 3
cloned = 8
killed = 7
cloned = 19
killed = 21
cloned = 6
killed = 12
cloned = 10
killed = 16
cloned = 15
killed = 18
cloned = 14
killed = 17
cloned = 20
killed = 11
cloned = 2
killed = 0
cloned = 1
killed = 13
cloned = 5
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 6, 8, 21, 10, 12, 5, 14, 11, 19, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 3, 17, 13, 4, 20, 1, 2, 0, 9, 7, 22]
====================================
cloned = 16
killed = 15
cloned = 3
killed = 6
cloned = 17
killed = 8
cloned = 13
killed = 21
cloned = 4
killed = 10
cloned = 20
killed = 12
cloned = 1
killed = 5
cloned = 2
killed = 14
cloned = 0
killed = 11
cloned = 9
killed = 19
cloned = 7
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 15, 20, 7, 11, 17, 21, 4, 12, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 5, 3, 18, 8, 19, 1, 13, 0, 9, 6, 22]
====================================
cloned = 14
killed = 10
cloned = 5
killed = 15
cloned = 3
killed = 20
cloned = 18
killed = 7
cloned = 8
killed = 11
cloned = 19
killed = 17
cloned = 1
killed = 21
cloned = 13
killed = 4
cloned = 0
killed = 12
cloned = 9
killed = 16
cloned = 6
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 16, 3, 1, 2, 15, 17, 9, 20, 14, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 6, 8, 19, 4, 21, 5, 12, 7, 10, 13, 22]
====================================
cloned = 18
killed = 11
cloned = 6
killed = 16
cloned = 8
killed = 3
cloned = 19
killed = 1
cloned = 4
killed = 2
cloned = 21
killed = 15
cloned = 5
killed = 17
cloned = 12
killed = 9
cloned = 7
killed = 20
cloned = 10
killed = 14
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 2, 9, 18, 0, 5, 8, 14, 10, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 15, 4, 20, 11, 6, 21, 12, 17, 3, 13, 22]
====================================
cloned = 16
killed = 7
cloned = 15
killed = 1
cloned = 4
killed = 2
cloned = 20
killed = 9
cloned = 11
killed = 18
cloned = 6
killed = 0
cloned = 21
killed = 5
cloned = 12
killed = 8
cloned = 17
killed = 14
cloned = 3
killed = 10
cloned = 13
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 8, 3, 13, 15, 10, 0, 2, 20, 5, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 4, 21, 7, 11, 6, 18, 1, 16, 14, 12, 22]
====================================
cloned = 9
killed = 19
cloned = 4
killed = 8
cloned = 21
killed = 3
cloned = 7
killed = 13
cloned = 11
killed = 15
cloned = 6
killed = 10
cloned = 18
killed = 0
cloned = 1
killed = 2
cloned = 16
killed = 20
cloned = 14
killed = 5
cloned = 12
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 18, 19, 14, 1, 12, 20, 0, 15, 8, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 2, 11, 17, 10, 7, 9, 5, 6, 4, 3, 22]
====================================
cloned = 13
killed = 21
cloned = 2
killed = 18
cloned = 11
killed = 19
cloned = 17
killed = 14
cloned = 10
killed = 1
cloned = 7
killed = 12
cloned = 9
killed = 20
cloned = 5
killed = 0
cloned = 6
killed = 15
cloned = 4
killed = 8
cloned = 3
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 18, 5, 11, 1, 7, 6, 15, 8, 14, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 13, 20, 9, 4, 10, 0, 19, 2, 12, 16, 22]
====================================
cloned = 21
killed = 17
cloned = 13
killed = 18
cloned = 20
killed = 5
cloned = 9
killed = 11
cloned = 4
killed = 1
cloned = 10
killed = 7
cloned = 0
killed = 6
cloned = 19
killed = 15
cloned = 2
killed = 8
cloned = 12
killed = 14
cloned = 16
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 20, 5, 18, 9, 3, 2, 11, 15, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 14, 19, 4, 13, 8, 17, 16, 7, 0, 6, 22]
====================================
cloned = 21
killed = 12
cloned = 14
killed = 10
cloned = 19
killed = 20
cloned = 4
killed = 5
cloned = 13
killed = 18
cloned = 8
killed = 9
cloned = 17
killed = 3
cloned = 16
killed = 2
cloned = 7
killed = 11
cloned = 0
killed = 15
cloned = 6
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 4, 0, 20, 16, 6, 12, 10, 17, 5, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 15, 18, 9, 1, 14, 11, 2, 13, 8, 7, 22]
====================================
cloned = 3
killed = 19
cloned = 15
killed = 4
cloned = 18
killed = 0
cloned = 9
killed = 20
cloned = 1
killed = 16
cloned = 14
killed = 6
cloned = 11
killed = 12
cloned = 2
killed = 10
cloned = 13
killed = 17
cloned = 8
killed = 5
cloned = 7
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 13, 4, 3, 11, 18, 2, 8, 17, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 14, 16, 6, 5, 10, 21, 7, 20, 19, 22]
====================================
cloned = 12
killed = 9
cloned = 15
killed = 1
cloned = 14
killed = 13
cloned = 16
killed = 4
cloned = 6
killed = 3
cloned = 5
killed = 11
cloned = 10
killed = 18
cloned = 21
killed = 2
cloned = 7
killed = 8
cloned = 20
killed = 17
cloned = 19
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 3, 2, 17, 0, 20, 13, 10, 4, 15, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 14, 6, 11, 5, 12, 7, 8, 16, 1, 19, 22]
====================================
cloned = 21
killed = 18
cloned = 14
killed = 3
cloned = 6
killed = 2
cloned = 11
killed = 17
cloned = 5
killed = 0
cloned = 12
killed = 20
cloned = 7
killed = 13
cloned = 8
killed = 10
cloned = 16
killed = 4
cloned = 1
killed = 15
cloned = 19
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 5, 15, 8, 4, 13, 3, 6, 20, 12, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 2, 10, 11, 0, 14, 18, 21, 1, 9, 16, 22]
====================================
cloned = 7
killed = 17
cloned = 2
killed = 5
cloned = 10
killed = 15
cloned = 11
killed = 8
cloned = 0
killed = 4
cloned = 14
killed = 13
cloned = 18
killed = 3
cloned = 21
killed = 6
cloned = 1
killed = 20
cloned = 9
killed = 12
cloned = 16
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 15, 4, 1, 3, 16, 5, 17, 14, 8, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 7, 9, 19, 20, 11, 21, 13, 0, 12, 18, 22]
====================================
cloned = 6
killed = 10
cloned = 7
killed = 15
cloned = 9
killed = 4
cloned = 19
killed = 1
cloned = 20
killed = 3
cloned = 11
killed = 16
cloned = 21
killed = 5
cloned = 13
killed = 17
cloned = 0
killed = 14
cloned = 12
killed = 8
cloned = 18
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 6, 16, 14, 17, 9, 0, 19, 3, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 2, 4, 10, 12, 13, 20, 8, 21, 15, 7, 22]
====================================
cloned = 11
killed = 18
cloned = 2
killed = 6
cloned = 4
killed = 16
cloned = 10
killed = 14
cloned = 12
killed = 17
cloned = 13
killed = 9
cloned = 20
killed = 0
cloned = 8
killed = 19
cloned = 21
killed = 3
cloned = 15
killed = 1
cloned = 7
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 19, 3, 14, 10, 11, 21, 8, 2, 17, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 16, 7, 15, 18, 12, 13, 4, 0, 9, 5, 22]
====================================
cloned = 20
killed = 6
cloned = 16
killed = 19
cloned = 7
killed = 3
cloned = 15
killed = 14
cloned = 18
killed = 10
cloned = 12
killed = 11
cloned = 13
killed = 21
cloned = 4
killed = 8
cloned = 0
killed = 2
cloned = 9
killed = 17
cloned = 5
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 16, 5, 18, 15, 21, 13, 0, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 19, 20, 6, 14, 8, 2, 1, 3, 10, 17, 22]
====================================
cloned = 11
killed = 9
cloned = 19
killed = 7
cloned = 20
killed = 16
cloned = 6
killed = 5
cloned = 14
killed = 18
cloned = 8
killed = 15
cloned = 2
killed = 21
cloned = 1
killed = 13
cloned = 3
killed = 0
cloned = 10
killed = 4
cloned = 17
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 16, 11, 17, 15, 9, 2, 7, 20, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 13, 19, 18, 3, 12, 10, 8, 4, 0, 14, 22]
====================================
cloned = 1
killed = 6
cloned = 13
killed = 5
cloned = 19
killed = 16
cloned = 18
killed = 11
cloned = 3
killed = 17
cloned = 12
killed = 15
cloned = 10
killed = 9
cloned = 8
killed = 2
cloned = 4
killed = 7
cloned = 0
killed = 20
cloned = 14
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 9, 18, 5, 2, 7, 17, 19, 21, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 8, 6, 11, 0, 12, 20, 13, 3, 14, 15, 22]
====================================
cloned = 10
killed = 16
cloned = 8
killed = 9
cloned = 6
killed = 18
cloned = 11
killed = 5
cloned = 0
killed = 2
cloned = 12
killed = 7
cloned = 20
killed = 17
cloned = 13
killed = 19
cloned = 3
killed = 21
cloned = 14
killed = 4
cloned = 15
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 5, 12, 21, 18, 19, 16, 2, 8, 14, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 9, 17, 7, 0, 1, 3, 13, 10, 20, 4, 22]
====================================
cloned = 6
killed = 11
cloned = 9
killed = 5
cloned = 17
killed = 12
cloned = 7
killed = 21
cloned = 0
killed = 18
cloned = 1
killed = 19
cloned = 3
killed = 16
cloned = 13
killed = 2
cloned = 10
killed = 8
cloned = 20
killed = 14
cloned = 4
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 19, 14, 1, 7, 2, 12, 16, 20, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 15, 11, 18, 17, 10, 6, 13, 21, 4, 3, 22]
====================================
cloned = 0
killed = 8
cloned = 15
killed = 5
cloned = 11
killed = 19
cloned = 18
killed = 14
cloned = 17
killed = 1
cloned = 10
killed = 7
cloned = 6
killed = 2
cloned = 13
killed = 12
cloned = 21
killed = 16
cloned = 4
killed = 20
cloned = 3
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 5, 17, 15, 19, 4, 16, 1, 2, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 21, 11, 18, 7, 10, 12, 14, 9, 8, 22]
====================================
cloned = 0
killed = 3
cloned = 6
killed = 20
cloned = 21
killed = 5
cloned = 11
killed = 17
cloned = 18
killed = 15
cloned = 7
killed = 19
cloned = 10
killed = 4
cloned = 12
killed = 16
cloned = 14
killed = 1
cloned = 9
killed = 2
cloned = 8
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 2, 8, 19, 11, 14, 0, 6, 13, 3, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 7, 5, 20, 12, 21, 1, 16, 9, 10, 4, 22]
====================================
cloned = 15
killed = 17
cloned = 7
killed = 2
cloned = 5
killed = 8
cloned = 20
killed = 19
cloned = 12
killed = 11
cloned = 21
killed = 14
cloned = 1
killed = 0
cloned = 16
killed = 6
cloned = 9
killed = 13
cloned = 10
killed = 3
cloned = 4
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 21, 9, 19, 18, 11, 16, 3, 12, 2, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 4, 15, 17, 20, 1, 13, 0, 10, 5, 6, 22]
====================================
cloned = 7
killed = 14
cloned = 4
killed = 21
cloned = 15
killed = 9
cloned = 17
killed = 19
cloned = 20
killed = 18
cloned = 1
killed = 11
cloned = 13
killed = 16
cloned = 0
killed = 3
cloned = 10
killed = 12
cloned = 5
killed = 2
cloned = 6
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 14, 15, 21, 20, 2, 1, 0, 4, 16, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 3, 10, 11, 5, 7, 9, 6, 19, 17, 12, 22]
====================================
cloned = 8
killed = 18
cloned = 3
killed = 14
cloned = 10
killed = 15
cloned = 11
killed = 21
cloned = 5
killed = 20
cloned = 7
killed = 2
cloned = 9
killed = 1
cloned = 6
killed = 0
cloned = 19
killed = 4
cloned = 17
killed = 16
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 21, 3, 16, 10, 19, 8, 4, 1, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 18, 13, 2, 11, 17, 5, 0, 20, 14, 7, 22]
====================================
cloned = 15
killed = 9
cloned = 18
killed = 21
cloned = 13
killed = 3
cloned = 2
killed = 16
cloned = 11
killed = 10
cloned = 17
killed = 19
cloned = 5
killed = 8
cloned = 0
killed = 4
cloned = 20
killed = 1
cloned = 14
killed = 6
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 20, 16, 21, 6, 4, 11, 9, 14, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 19, 13, 5, 3, 15, 10, 17, 2, 7, 1, 22]
====================================
cloned = 18
killed = 0
cloned = 19
killed = 12
cloned = 13
killed = 20
cloned = 5
killed = 16
cloned = 3
killed = 21
cloned = 15
killed = 6
cloned = 10
killed = 4
cloned = 17
killed = 11
cloned = 2
killed = 9
cloned = 7
killed = 14
cloned = 1
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 18, 0, 15, 5, 4, 9, 20, 14, 12, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 7, 1, 11, 2, 21, 10, 16, 17, 19, 6, 22]
====================================
cloned = 13
killed = 8
cloned = 7
killed = 18
cloned = 1
killed = 0
cloned = 11
killed = 15
cloned = 2
killed = 5
cloned = 21
killed = 4
cloned = 10
killed = 9
cloned = 16
killed = 20
cloned = 17
killed = 14
cloned = 19
killed = 12
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 7, 5, 17, 13, 21, 14, 19, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 16, 6, 12, 3, 15, 0, 4, 10, 1, 22]
====================================
cloned = 20
killed = 11
cloned = 18
killed = 8
cloned = 16
killed = 7
cloned = 6
killed = 5
cloned = 12
killed = 17
cloned = 3
killed = 13
cloned = 15
killed = 21
cloned = 0
killed = 14
cloned = 4
killed = 19
cloned = 10
killed = 9
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 11, 6, 13, 8, 2, 19, 4, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 16, 21, 12, 10, 14, 15, 1, 0, 7, 18, 22]
====================================
cloned = 20
killed = 17
cloned = 16
killed = 9
cloned = 21
killed = 11
cloned = 12
killed = 6
cloned = 10
killed = 13
cloned = 14
killed = 8
cloned = 15
killed = 2
cloned = 1
killed = 19
cloned = 0
killed = 4
cloned = 7
killed = 5
cloned = 18
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 5, 9, 3, 18, 12, 20, 11, 19, 4, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 0, 15, 10, 2, 14, 8, 16, 6, 1, 7, 22]
====================================
cloned = 17
killed = 13
cloned = 0
killed = 5
cloned = 15
killed = 9
cloned = 10
killed = 3
cloned = 2
killed = 18
cloned = 14
killed = 12
cloned = 8
killed = 20
cloned = 16
killed = 11
cloned = 6
killed = 19
cloned = 1
killed = 4
cloned = 7
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 18, 12, 17, 7, 21, 20, 9, 6, 16, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 3, 5, 15, 11, 8, 13, 0, 1, 10, 2, 22]
====================================
cloned = 14
killed = 4
cloned = 3
killed = 18
cloned = 5
killed = 12
cloned = 15
killed = 17
cloned = 11
killed = 7
cloned = 8
killed = 21
cloned = 13
killed = 20
cloned = 0
killed = 9
cloned = 1
killed = 6
cloned = 10
killed = 16
cloned = 2
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 6, 19, 9, 13, 21, 3, 7, 15, 4, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 5, 16, 20, 14, 12, 10, 17, 11, 0, 8, 22]
====================================
cloned = 1
killed = 18
cloned = 5
killed = 6
cloned = 16
killed = 19
cloned = 20
killed = 9
cloned = 14
killed = 13
cloned = 12
killed = 21
cloned = 10
killed = 3
cloned = 17
killed = 7
cloned = 11
killed = 15
cloned = 0
killed = 4
cloned = 8
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 14, 5, 21, 0, 1, 2, 4, 3, 17, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 20, 18, 11, 8, 9, 19, 7, 10, 16, 22]
====================================
cloned = 12
killed = 6
cloned = 15
killed = 14
cloned = 20
killed = 5
cloned = 18
killed = 21
cloned = 11
killed = 0
cloned = 8
killed = 1
cloned = 9
killed = 2
cloned = 19
killed = 4
cloned = 7
killed = 3
cloned = 10
killed = 17
cloned = 16
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 2, 11, 10, 12, 6, 18, 21, 1, 3, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 17, 16, 20, 0, 13, 4, 5, 8, 7, 9, 22]
====================================
cloned = 15
killed = 19
cloned = 17
killed = 2
cloned = 16
killed = 11
cloned = 20
killed = 10
cloned = 0
killed = 12
cloned = 13
killed = 6
cloned = 4
killed = 18
cloned = 5
killed = 21
cloned = 8
killed = 1
cloned = 7
killed = 3
cloned = 9
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 21, 7, 5, 8, 4, 14, 1, 16, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 15, 11, 3, 17, 20, 18, 13, 19, 6, 12, 22]
====================================
cloned = 0
killed = 10
cloned = 15
killed = 2
cloned = 11
killed = 21
cloned = 3
killed = 7
cloned = 17
killed = 5
cloned = 20
killed = 8
cloned = 18
killed = 4
cloned = 13
killed = 14
cloned = 19
killed = 1
cloned = 6
killed = 16
cloned = 12
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 12, 2, 0, 19, 11, 4, 21, 13, 16, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 6, 9, 1, 10, 8, 20, 18, 17, 7, 14, 22]
====================================
cloned = 3
killed = 5
cloned = 6
killed = 12
cloned = 9
killed = 2
cloned = 1
killed = 0
cloned = 10
killed = 19
cloned = 8
killed = 11
cloned = 20
killed = 4
cloned = 18
killed = 21
cloned = 17
killed = 13
cloned = 7
killed = 16
cloned = 14
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 19, 9, 0, 7, 8, 17, 20, 12, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 14, 6, 10, 3, 13, 4, 21, 11, 18, 15, 22]
====================================
cloned = 5
killed = 16
cloned = 14
killed = 19
cloned = 6
killed = 9
cloned = 10
killed = 0
cloned = 3
killed = 7
cloned = 13
killed = 8
cloned = 4
killed = 17
cloned = 21
killed = 20
cloned = 11
killed = 12
cloned = 18
killed = 2
cloned = 15
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 19, 15, 20, 10, 0, 4, 13, 9, 11, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 5, 12, 8, 3, 2, 18, 6, 16, 7, 17, 22]
====================================
cloned = 1
killed = 14
cloned = 5
killed = 19
cloned = 12
killed = 15
cloned = 8
killed = 20
cloned = 3
killed = 10
cloned = 2
killed = 0
cloned = 18
killed = 4
cloned = 6
killed = 13
cloned = 16
killed = 9
cloned = 7
killed = 11
cloned = 17
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 9, 16, 11, 17, 4, 12, 21, 19, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 8, 3, 1, 15, 18, 13, 14, 2, 10, 7, 22]
====================================
cloned = 20
killed = 0
cloned = 8
killed = 6
cloned = 3
killed = 9
cloned = 1
killed = 16
cloned = 15
killed = 11
cloned = 18
killed = 17
cloned = 13
killed = 4
cloned = 14
killed = 12
cloned = 2
killed = 21
cloned = 10
killed = 19
cloned = 7
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 6, 19, 10, 17, 15, 11, 21, 18, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 2, 8, 9, 14, 0, 4, 13, 20, 1, 16, 22]
====================================
cloned = 7
killed = 3
cloned = 2
killed = 12
cloned = 8
killed = 6
cloned = 9
killed = 19
cloned = 14
killed = 10
cloned = 0
killed = 17
cloned = 4
killed = 15
cloned = 13
killed = 11
cloned = 20
killed = 21
cloned = 1
killed = 18
cloned = 16
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 19, 14, 4, 0, 13, 15, 16, 9, 5, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 8, 10, 21, 20, 7, 2, 1, 12, 6, 22]
====================================
cloned = 3
killed = 11
cloned = 18
killed = 19
cloned = 8
killed = 14
cloned = 10
killed = 4
cloned = 21
killed = 0
cloned = 20
killed = 13
cloned = 7
killed = 15
cloned = 2
killed = 16
cloned = 1
killed = 9
cloned = 12
killed = 5
cloned = 6
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 13, 20, 6, 21, 7, 9, 10, 0, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 16, 3, 15, 8, 18, 5, 19, 11, 14, 12, 22]
====================================
cloned = 2
killed = 1
cloned = 16
killed = 4
cloned = 3
killed = 13
cloned = 15
killed = 20
cloned = 8
killed = 6
cloned = 18
killed = 21
cloned = 5
killed = 7
cloned = 19
killed = 9
cloned = 11
killed = 10
cloned = 14
killed = 0
cloned = 12
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 11, 8, 17, 3, 19, 14, 5, 18, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 6, 9, 2, 1, 21, 15, 0, 10, 20, 7, 22]
====================================
cloned = 13
killed = 4
cloned = 6
killed = 12
cloned = 9
killed = 11
cloned = 2
killed = 8
cloned = 1
killed = 17
cloned = 21
killed = 3
cloned = 15
killed = 19
cloned = 0
killed = 14
cloned = 10
killed = 5
cloned = 20
killed = 18
cloned = 7
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 7, 4, 19, 9, 16, 20, 5, 18, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 12, 14, 6, 0, 15, 1, 8, 17, 3, 10, 22]
====================================
cloned = 21
killed = 13
cloned = 12
killed = 2
cloned = 14
killed = 7
cloned = 6
killed = 4
cloned = 0
killed = 19
cloned = 15
killed = 9
cloned = 1
killed = 16
cloned = 8
killed = 20
cloned = 17
killed = 5
cloned = 3
killed = 18
cloned = 10
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 13, 7, 9, 6, 15, 10, 8, 16, 1, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 11, 18, 5, 19, 4, 0, 2, 12, 17, 20, 22]
====================================
cloned = 3
killed = 21
cloned = 11
killed = 13
cloned = 18
killed = 7
cloned = 5
killed = 9
cloned = 19
killed = 6
cloned = 4
killed = 15
cloned = 0
killed = 10
cloned = 2
killed = 8
cloned = 12
killed = 16
cloned = 17
killed = 1
cloned = 20
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 6, 16, 18, 9, 5, 1, 8, 20, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 0, 7, 11, 14, 10, 17, 19, 3, 4, 12, 22]
====================================
cloned = 15
killed = 13
cloned = 0
killed = 2
cloned = 7
killed = 6
cloned = 11
killed = 16
cloned = 14
killed = 18
cloned = 10
killed = 9
cloned = 17
killed = 5
cloned = 19
killed = 1
cloned = 3
killed = 8
cloned = 4
killed = 20
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 19, 9, 13, 11, 21, 3, 0, 20, 10, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 16, 1, 7, 18, 14, 4, 8, 12, 2, 5, 22]
====================================
cloned = 17
killed = 6
cloned = 16
killed = 19
cloned = 1
killed = 9
cloned = 7
killed = 13
cloned = 18
killed = 11
cloned = 14
killed = 21
cloned = 4
killed = 3
cloned = 8
killed = 0
cloned = 12
killed = 20
cloned = 2
killed = 10
cloned = 5
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 10, 9, 14, 6, 7, 20, 21, 11, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 13, 0, 17, 8, 16, 5, 4, 18, 1, 2, 22]
====================================
cloned = 19
killed = 12
cloned = 13
killed = 3
cloned = 0
killed = 10
cloned = 17
killed = 9
cloned = 8
killed = 14
cloned = 16
killed = 6
cloned = 5
killed = 7
cloned = 4
killed = 20
cloned = 18
killed = 21
cloned = 1
killed = 11
cloned = 2
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 7, 14, 21, 0, 3, 9, 1, 13, 15, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 4, 6, 2, 20, 18, 10, 17, 5, 11, 12, 22]
====================================
cloned = 16
killed = 19
cloned = 4
killed = 7
cloned = 6
killed = 14
cloned = 2
killed = 21
cloned = 20
killed = 0
cloned = 18
killed = 3
cloned = 10
killed = 9
cloned = 17
killed = 1
cloned = 5
killed = 13
cloned = 11
killed = 15
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 18, 4, 10, 2, 17, 0, 14, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 21, 7, 13, 1, 15, 5, 6, 11, 19, 16, 22]
====================================
cloned = 12
killed = 20
cloned = 21
killed = 9
cloned = 7
killed = 18
cloned = 13
killed = 4
cloned = 1
killed = 10
cloned = 15
killed = 2
cloned = 5
killed = 17
cloned = 6
killed = 0
cloned = 11
killed = 14
cloned = 19
killed = 8
cloned = 16
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 14, 3, 0, 12, 11, 13, 19, 5, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 10, 17, 18, 16, 21, 2, 15, 20, 1, 9, 22]
====================================
cloned = 6
killed = 4
cloned = 10
killed = 8
cloned = 17
killed = 14
cloned = 18
killed = 3
cloned = 16
killed = 0
cloned = 21
killed = 12
cloned = 2
killed = 11
cloned = 15
killed = 13
cloned = 20
killed = 19
cloned = 1
killed = 5
cloned = 9
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 5, 14, 15, 11, 18, 19, 6, 1, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 8, 21, 17, 16, 12, 0, 2, 9, 13, 20, 22]
====================================
cloned = 4
killed = 10
cloned = 8
killed = 7
cloned = 21
killed = 5
cloned = 17
killed = 14
cloned = 16
killed = 15
cloned = 12
killed = 11
cloned = 0
killed = 18
cloned = 2
killed = 19
cloned = 9
killed = 6
cloned = 13
killed = 1
cloned = 20
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 11, 16, 18, 7, 14, 21, 0, 4, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 12, 1, 8, 10, 5, 17, 9, 3, 15, 19, 22]
====================================
cloned = 6
killed = 13
cloned = 12
killed = 2
cloned = 1
killed = 11
cloned = 8
killed = 16
cloned = 10
killed = 18
cloned = 5
killed = 7
cloned = 17
killed = 14
cloned = 9
killed = 21
cloned = 3
killed = 0
cloned = 15
killed = 4
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 4, 8, 10, 20, 11, 1, 17, 0, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 2, 15, 12, 14, 6, 3, 7, 19, 21, 13, 22]
====================================
cloned = 5
killed = 18
cloned = 2
killed = 9
cloned = 15
killed = 4
cloned = 12
killed = 8
cloned = 14
killed = 10
cloned = 6
killed = 20
cloned = 3
killed = 11
cloned = 7
killed = 1
cloned = 19
killed = 17
cloned = 21
killed = 0
cloned = 13
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 18, 20, 0, 1, 16, 17, 11, 10, 5, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 9, 19, 12, 2, 4, 13, 7, 8, 3, 21, 22]
====================================
cloned = 6
killed = 14
cloned = 9
killed = 18
cloned = 19
killed = 20
cloned = 12
killed = 0
cloned = 2
killed = 1
cloned = 4
killed = 16
cloned = 13
killed = 17
cloned = 7
killed = 11
cloned = 8
killed = 10
cloned = 3
killed = 5
cloned = 21
killed = 15
Trial run 11/seed 866:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.190000000000005,
  55.99,
  59.345,
  54.765,
  51.89,
  54.645,
  54.81999999999999,
  36.96,
  44.65500000000001,
  28.974999999999994,
  48.055,
  50.849999999999994,
  47.764999999999986,
  52.315,
  56.254999999999995,
  36.800000000000004,
  51.805,
  47.065000000000005,
  46.614999999999995,
  43.88500000000001,
  34.910000000000004,
  55.375,
  53.515],
 [65.7,
  64.66,
  65.75,
  62.870000000000005,
  62.525000000000006,
  62.16,
  61.35,
  65.7,
  64.34500000000001,
  65.75,
  62.870000000000005,
  62.53,
  62.160000000000004,
  63.540000000000006,
  58.70999999999999,
  61.465,
  62.58,
  63.540000000000006,
  58.904999999999994,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.18500000000001,
 56.489999999999995,
 59.335,
 54.665,
 52.445,
 54.050000000000004,
 54.919999999999995,
 36.8,
 44.910000000000004,
 27.425000000000004,
 47.915,
 50.599999999999994,
 46.81999999999999,
 52.535,
 56.559999999999995,
 37.12,
 51.61,
 48.98,
 46.25,
 44.425000000000004,
 35.18000000000001,
 55.44499999999999,
 53.545]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.61
Upper: 51.61
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.315,
 65.75,
 62.870000000000005,
 62.585,
 62.16,
 61.33,
 65.7,
 63.885000000000005,
 65.75,
 62.870000000000005,
 62.36,
 62.160000000000004,
 63.540000000000006,
 58.63999999999999,
 60.815,
 62.58,
 63.540000000000006,
 58.699999999999996,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 9
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 11, 12, 14, 15, 18, 19, 21, 20, 16]
lower threshold: [22]
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 4, 7, 8, 9, 10, 13, 17]
====================================
cloned = 0
killed = 5
cloned = 1
killed = 6
cloned = 2
killed = 11
cloned = 3
killed = 12
cloned = 4
killed = 14
cloned = 7
killed = 15
cloned = 8
killed = 18
cloned = 9
killed = 19
cloned = 10
killed = 21
cloned = 13
killed = 20
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[65.84,
 67.52,
 65.92,
 57.72,
 64.41499999999999,
 65.84,
 67.65,
 65.84,
 67.64999999999999,
 65.92,
 57.72,
 65.91999999999999,
 57.72,
 64.14,
 64.74,
 65.84,
 64.13999999999999,
 64.13999999999999,
 67.62,
 65.91999999999999,
 64.14,
 57.72,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 10, 12, 13, 14, 16, 17, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 5, 7, 15]
upper:           [1, 2, 6, 8, 9, 11, 18, 19, 5, 7, 0, 15]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 4
cloned = 6
killed = 10
cloned = 8
killed = 12
cloned = 9
killed = 13
cloned = 11
killed = 14
cloned = 18
killed = 16
cloned = 19
killed = 17
cloned = 5
killed = 20
cloned = 7
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 64.99999999999999,
 65.83999999999999,
 64.99999999999999,
 65.83999999999999,
 65.68,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.83999999999999,
 65.0,
 65.83999999999999,
 65.83999999999997,
 65.68,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 6, 8, 10, 12, 16, 18, 7, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 5, 7, 15, 20, 21, 22]
upper:           [2, 4, 9, 11, 13, 14, 17, 19, 20, 21, 15, 22]
====================================
cloned = 2
killed = 1
cloned = 4
killed = 3
cloned = 9
killed = 6
cloned = 11
killed = 8
cloned = 13
killed = 10
cloned = 14
killed = 12
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 20
killed = 7
cloned = 21
killed = 5
cloned = 15
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 3, 20, 10, 6, 11, 18, 17, 12, 4, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 5, 7, 13, 21, 1, 9, 15, 14, 2, 19, 22]
====================================
cloned = 8
killed = 0
cloned = 5
killed = 3
cloned = 7
killed = 20
cloned = 13
killed = 10
cloned = 21
killed = 6
cloned = 1
killed = 11
cloned = 9
killed = 18
cloned = 15
killed = 17
cloned = 14
killed = 12
cloned = 2
killed = 4
cloned = 19
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 1, 12, 18, 2, 10, 6, 16, 19, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 13, 9, 0, 8, 3, 14, 21, 17, 5, 7, 22]
====================================
cloned = 15
killed = 4
cloned = 13
killed = 11
cloned = 9
killed = 1
cloned = 0
killed = 12
cloned = 8
killed = 18
cloned = 3
killed = 2
cloned = 14
killed = 10
cloned = 21
killed = 6
cloned = 17
killed = 16
cloned = 5
killed = 19
cloned = 7
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 18, 4, 10, 9, 20, 19, 1, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 8, 15, 12, 7, 17, 14, 5, 2, 21, 6, 22]
====================================
cloned = 16
killed = 13
cloned = 8
killed = 3
cloned = 15
killed = 18
cloned = 12
killed = 4
cloned = 7
killed = 10
cloned = 17
killed = 9
cloned = 14
killed = 20
cloned = 5
killed = 19
cloned = 2
killed = 1
cloned = 21
killed = 11
cloned = 6
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 21, 10, 0, 4, 6, 12, 20, 13, 15, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 16, 9, 19, 14, 1, 5, 7, 2, 3, 8, 22]
====================================
cloned = 11
killed = 17
cloned = 16
killed = 21
cloned = 9
killed = 10
cloned = 19
killed = 0
cloned = 14
killed = 4
cloned = 1
killed = 6
cloned = 5
killed = 12
cloned = 7
killed = 20
cloned = 2
killed = 13
cloned = 3
killed = 15
cloned = 8
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 19, 20, 18, 9, 10, 5, 14, 8, 21, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 13, 11, 4, 0, 6, 15, 1, 7, 12, 16, 22]
====================================
cloned = 2
killed = 3
cloned = 13
killed = 19
cloned = 11
killed = 20
cloned = 4
killed = 18
cloned = 0
killed = 9
cloned = 6
killed = 10
cloned = 15
killed = 5
cloned = 1
killed = 14
cloned = 7
killed = 8
cloned = 12
killed = 21
cloned = 16
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 20, 0, 1, 19, 18, 3, 9, 10, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 17, 5, 8, 11, 21, 2, 7, 12, 14, 16, 22]
====================================
cloned = 13
killed = 6
cloned = 17
killed = 4
cloned = 5
killed = 20
cloned = 8
killed = 0
cloned = 11
killed = 1
cloned = 21
killed = 19
cloned = 2
killed = 18
cloned = 7
killed = 3
cloned = 12
killed = 9
cloned = 14
killed = 10
cloned = 16
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 19, 4, 20, 9, 5, 2, 3, 14, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 18, 1, 15, 16, 6, 17, 13, 10, 21, 0, 22]
====================================
cloned = 7
killed = 12
cloned = 18
killed = 8
cloned = 1
killed = 19
cloned = 15
killed = 4
cloned = 16
killed = 20
cloned = 6
killed = 9
cloned = 17
killed = 5
cloned = 13
killed = 2
cloned = 10
killed = 3
cloned = 21
killed = 14
cloned = 0
killed = 11
Trial run 12/seed 867:
..................................................
winner: Evolved FSM 6
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Evolved HMM 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 23})]
--------------------------------------------------
Score:
[[61.18500000000001,
  56.489999999999995,
  59.335,
  54.665,
  52.445,
  54.050000000000004,
  54.919999999999995,
  36.8,
  44.910000000000004,
  27.425000000000004,
  47.915,
  50.599999999999994,
  46.81999999999999,
  52.535,
  56.559999999999995,
  37.12,
  51.61,
  48.98,
  46.25,
  44.425000000000004,
  35.18000000000001,
  55.44499999999999,
  53.545],
 [65.7,
  64.315,
  65.75,
  62.870000000000005,
  62.585,
  62.16,
  61.33,
  65.7,
  63.885000000000005,
  65.75,
  62.870000000000005,
  62.36,
  62.160000000000004,
  63.540000000000006,
  58.63999999999999,
  60.815,
  62.58,
  63.540000000000006,
  58.699999999999996,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  67.52,
  65.92,
  57.72,
  64.41499999999999,
  65.84,
  67.65,
  65.84,
  67.64999999999999,
  65.92,
  57.72,
  65.91999999999999,
  57.72,
  64.14,
  64.74,
  65.84,
  64.13999999999999,
  64.13999999999999,
  67.62,
  65.91999999999999,
  64.14,
  57.72,
  64.14],
 [65.68,
  64.99999999999999,
  65.83999999999999,
  64.99999999999999,
  65.83999999999999,
  65.68,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.83999999999999,
  65.0,
  65.83999999999999,
  65.83999999999997,
  65.68,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.445,
 55.955000000000005,
 59.23,
 54.51,
 52.27500000000001,
 54.115,
 54.589999999999996,
 37.34,
 44.82,
 33.555,
 48.01,
 50.71999999999999,
 47.66,
 52.455,
 56.33999999999999,
 36.660000000000004,
 50.42,
 49.21,
 46.27499999999999,
 42.005,
 34.77,
 55.459999999999994,
 53.28]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 50.71999999999999
Upper: 50.71999999999999
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20]
lower threshold: [11]
....................................
upper threshold: [11]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 12
cloned = 5
killed = 15
cloned = 6
killed = 16
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 62.585,
 65.75,
 62.870000000000005,
 62.51,
 62.16,
 61.35,
 65.7,
 61.67000000000001,
 65.75,
 62.870000000000005,
 60.72,
 62.19499999999999,
 63.540000000000006,
 56.08999999999999,
 62.16,
 61.964999999999996,
 63.540000000000006,
 56.44,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.51
Upper: 62.51
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 8, 11, 12, 14, 15, 16, 18, 19, 21]
lower threshold: [4]
....................................
upper threshold: [4]
upper:           [0, 1, 2, 3, 7, 9, 10, 13, 17, 20, 22]
====================================
cloned = 0
killed = 5
cloned = 1
killed = 6
cloned = 2
killed = 8
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 9
killed = 14
cloned = 10
killed = 15
cloned = 13
killed = 16
cloned = 17
killed = 18
cloned = 20
killed = 19
cloned = 22
killed = 21
######################################
~~~ Scores: ~~~
[65.92,
 69.03,
 65.96000000000001,
 61.86,
 65.335,
 65.92,
 69.09,
 65.92,
 65.96000000000001,
 65.96,
 61.86,
 61.86,
 65.92,
 65.07,
 65.96,
 61.86,
 65.07,
 65.07,
 65.07,
 65.07,
 65.07,
 65.07,
 65.07]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.07
Upper: 65.07
====================================
lower list size: 4
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 15, 18, 20, 17, 13, 16, 21, 19]
lower threshold: [22]
....................................
upper threshold: [13, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14]
====================================
cloned = 0
killed = 3
cloned = 1
killed = 10
cloned = 2
killed = 11
cloned = 4
killed = 15
cloned = 5
killed = 18
cloned = 6
killed = 20
cloned = 7
killed = 17
cloned = 8
killed = 13
cloned = 9
killed = 16
cloned = 12
killed = 21
cloned = 14
killed = 19
######################################
~~~ Scores: ~~~
[65.84,
 64.96999999999998,
 65.91999999999999,
 65.84,
 64.82,
 65.84,
 65.05499999999999,
 65.84,
 65.91999999999999,
 65.92,
 64.88,
 65.91999999999999,
 65.84,
 65.91999999999999,
 65.91999999999999,
 64.81,
 65.91999999999999,
 65.84,
 65.84,
 65.91999999999999,
 65.035,
 65.84,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 7
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 6, 10, 15, 20, 22, 0, 17, 5, 18]
lower threshold: []
....................................
upper threshold: [0, 3, 5, 7, 12, 17, 18, 21]
upper:           [2, 8, 9, 11, 13, 14, 16, 19, 12, 7, 3, 21]
====================================
cloned = 2
killed = 1
cloned = 8
killed = 4
cloned = 9
killed = 6
cloned = 11
killed = 10
cloned = 13
killed = 15
cloned = 14
killed = 20
cloned = 16
killed = 22
cloned = 19
killed = 0
cloned = 12
killed = 17
cloned = 7
killed = 5
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 13, 20, 16, 1, 2, 10, 7, 18, 17, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 21, 0, 19, 4, 6, 5, 9, 3, 8, 22]
====================================
cloned = 12
killed = 14
cloned = 15
killed = 13
cloned = 21
killed = 20
cloned = 0
killed = 16
cloned = 19
killed = 1
cloned = 4
killed = 2
cloned = 6
killed = 10
cloned = 5
killed = 7
cloned = 9
killed = 18
cloned = 3
killed = 17
cloned = 8
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 15, 6, 11, 1, 20, 12, 0, 13, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 3, 14, 17, 19, 7, 4, 16, 2, 21, 18, 22]
====================================
cloned = 9
killed = 8
cloned = 3
killed = 5
cloned = 14
killed = 15
cloned = 17
killed = 6
cloned = 19
killed = 11
cloned = 7
killed = 1
cloned = 4
killed = 20
cloned = 16
killed = 12
cloned = 2
killed = 0
cloned = 21
killed = 13
cloned = 18
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 15, 9, 21, 4, 10, 1, 11, 20, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 13, 8, 16, 18, 19, 0, 17, 6, 7, 2, 22]
====================================
cloned = 12
killed = 3
cloned = 13
killed = 5
cloned = 8
killed = 15
cloned = 16
killed = 9
cloned = 18
killed = 21
cloned = 19
killed = 4
cloned = 0
killed = 10
cloned = 17
killed = 1
cloned = 6
killed = 11
cloned = 7
killed = 20
cloned = 2
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 17, 7, 16, 21, 2, 13, 18, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 15, 10, 20, 9, 5, 3, 6, 1, 19, 0, 22]
====================================
cloned = 14
killed = 8
cloned = 15
killed = 11
cloned = 10
killed = 17
cloned = 20
killed = 7
cloned = 9
killed = 16
cloned = 5
killed = 21
cloned = 3
killed = 2
cloned = 6
killed = 13
cloned = 1
killed = 18
cloned = 19
killed = 12
cloned = 0
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 15, 14, 13, 16, 11, 3, 9, 18, 6, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 0, 8, 5, 17, 10, 19, 1, 4, 12, 2, 22]
====================================
cloned = 20
killed = 7
cloned = 0
killed = 15
cloned = 8
killed = 14
cloned = 5
killed = 13
cloned = 17
killed = 16
cloned = 10
killed = 11
cloned = 19
killed = 3
cloned = 1
killed = 9
cloned = 4
killed = 18
cloned = 12
killed = 6
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 2, 6, 8, 12, 4, 0, 10, 7, 5, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 16, 3, 21, 1, 13, 9, 11, 15, 18, 19, 22]
====================================
cloned = 20
killed = 14
cloned = 16
killed = 2
cloned = 3
killed = 6
cloned = 21
killed = 8
cloned = 1
killed = 12
cloned = 13
killed = 4
cloned = 9
killed = 0
cloned = 11
killed = 10
cloned = 15
killed = 7
cloned = 18
killed = 5
cloned = 19
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 5, 16, 8, 10, 0, 12, 7, 3, 11, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 6, 1, 14, 9, 13, 4, 21, 19, 20, 17, 22]
====================================
cloned = 18
killed = 15
cloned = 6
killed = 5
cloned = 1
killed = 16
cloned = 14
killed = 8
cloned = 9
killed = 10
cloned = 13
killed = 0
cloned = 4
killed = 12
cloned = 21
killed = 7
cloned = 19
killed = 3
cloned = 20
killed = 11
cloned = 17
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 17, 18, 12, 6, 7, 10, 0, 11, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 9, 21, 15, 3, 19, 1, 8, 16, 13, 2, 22]
====================================
cloned = 20
killed = 5
cloned = 9
killed = 4
cloned = 21
killed = 17
cloned = 15
killed = 18
cloned = 3
killed = 12
cloned = 19
killed = 6
cloned = 1
killed = 7
cloned = 8
killed = 10
cloned = 16
killed = 0
cloned = 13
killed = 11
cloned = 2
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 4, 15, 1, 18, 16, 3, 20, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 5, 21, 17, 10, 8, 14, 19, 11, 0, 2, 22]
====================================
cloned = 13
killed = 6
cloned = 5
killed = 7
cloned = 21
killed = 4
cloned = 17
killed = 15
cloned = 10
killed = 1
cloned = 8
killed = 18
cloned = 14
killed = 16
cloned = 19
killed = 3
cloned = 11
killed = 20
cloned = 0
killed = 12
cloned = 2
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 7, 20, 3, 8, 17, 14, 2, 4, 5, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 21, 6, 11, 19, 1, 13, 12, 18, 9, 15, 22]
====================================
cloned = 10
killed = 16
cloned = 21
killed = 7
cloned = 6
killed = 20
cloned = 11
killed = 3
cloned = 19
killed = 8
cloned = 1
killed = 17
cloned = 13
killed = 14
cloned = 12
killed = 2
cloned = 18
killed = 4
cloned = 9
killed = 5
cloned = 15
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 16, 13, 11, 8, 6, 12, 1, 9, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 20, 0, 10, 19, 3, 18, 21, 17, 14, 5, 22]
====================================
cloned = 4
killed = 7
cloned = 20
killed = 2
cloned = 0
killed = 16
cloned = 10
killed = 13
cloned = 19
killed = 11
cloned = 3
killed = 8
cloned = 18
killed = 6
cloned = 21
killed = 12
cloned = 17
killed = 1
cloned = 14
killed = 9
cloned = 5
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 17, 10, 0, 8, 5, 6, 7, 19, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 13, 11, 2, 20, 12, 21, 1, 3, 18, 14, 22]
====================================
cloned = 16
killed = 9
cloned = 13
killed = 15
cloned = 11
killed = 17
cloned = 2
killed = 10
cloned = 20
killed = 0
cloned = 12
killed = 8
cloned = 21
killed = 5
cloned = 1
killed = 6
cloned = 3
killed = 7
cloned = 18
killed = 19
cloned = 14
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 10, 14, 16, 8, 20, 13, 21, 12, 3, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 6, 2, 4, 9, 0, 17, 11, 5, 1, 19, 22]
====================================
cloned = 7
killed = 15
cloned = 6
killed = 10
cloned = 2
killed = 14
cloned = 4
killed = 16
cloned = 9
killed = 8
cloned = 0
killed = 20
cloned = 17
killed = 13
cloned = 11
killed = 21
cloned = 5
killed = 12
cloned = 1
killed = 3
cloned = 19
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 19, 7, 11, 12, 20, 8, 13, 5, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 4, 14, 9, 18, 15, 21, 10, 17, 1, 3, 22]
====================================
cloned = 2
killed = 0
cloned = 4
killed = 6
cloned = 14
killed = 19
cloned = 9
killed = 7
cloned = 18
killed = 11
cloned = 15
killed = 12
cloned = 21
killed = 20
cloned = 10
killed = 8
cloned = 17
killed = 13
cloned = 1
killed = 5
cloned = 3
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 7, 12, 0, 8, 4, 2, 17, 5, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 18, 14, 21, 3, 19, 13, 6, 16, 1, 10, 22]
====================================
cloned = 9
killed = 11
cloned = 18
killed = 20
cloned = 14
killed = 7
cloned = 21
killed = 12
cloned = 3
killed = 0
cloned = 19
killed = 8
cloned = 13
killed = 4
cloned = 6
killed = 2
cloned = 16
killed = 17
cloned = 1
killed = 5
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 4, 6, 3, 21, 8, 13, 11, 2, 10, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 20, 9, 0, 14, 12, 17, 18, 5, 7, 15, 22]
====================================
cloned = 19
killed = 16
cloned = 20
killed = 4
cloned = 9
killed = 6
cloned = 0
killed = 3
cloned = 14
killed = 21
cloned = 12
killed = 8
cloned = 17
killed = 13
cloned = 18
killed = 11
cloned = 5
killed = 2
cloned = 7
killed = 10
cloned = 15
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 0, 17, 15, 16, 6, 2, 19, 4, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 21, 1, 12, 18, 20, 9, 10, 14, 8, 11, 22]
====================================
cloned = 7
killed = 3
cloned = 21
killed = 5
cloned = 1
killed = 0
cloned = 12
killed = 17
cloned = 18
killed = 15
cloned = 20
killed = 16
cloned = 9
killed = 6
cloned = 10
killed = 2
cloned = 14
killed = 19
cloned = 8
killed = 4
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 21, 11, 10, 16, 19, 3, 2, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 15, 4, 9, 13, 7, 14, 18, 12, 20, 5, 22]
====================================
cloned = 17
killed = 1
cloned = 15
killed = 6
cloned = 4
killed = 21
cloned = 9
killed = 11
cloned = 13
killed = 10
cloned = 7
killed = 16
cloned = 14
killed = 19
cloned = 18
killed = 3
cloned = 12
killed = 2
cloned = 20
killed = 0
cloned = 5
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 3, 7, 9, 20, 10, 18, 16, 11, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 19, 4, 14, 5, 6, 13, 17, 1, 8, 21, 22]
====================================
cloned = 0
killed = 15
cloned = 19
killed = 3
cloned = 4
killed = 7
cloned = 14
killed = 9
cloned = 5
killed = 20
cloned = 6
killed = 10
cloned = 13
killed = 18
cloned = 17
killed = 16
cloned = 1
killed = 11
cloned = 8
killed = 2
cloned = 21
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 0, 19, 1, 6, 16, 21, 5, 2, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 3, 7, 17, 11, 8, 13, 15, 20, 9, 18, 22]
====================================
cloned = 14
killed = 4
cloned = 3
killed = 0
cloned = 7
killed = 19
cloned = 17
killed = 1
cloned = 11
killed = 6
cloned = 8
killed = 16
cloned = 13
killed = 21
cloned = 15
killed = 5
cloned = 20
killed = 2
cloned = 9
killed = 12
cloned = 18
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 19, 1, 13, 0, 11, 6, 4, 15, 2, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 10, 5, 3, 17, 12, 20, 16, 18, 8, 7, 22]
====================================
cloned = 9
killed = 14
cloned = 10
killed = 19
cloned = 5
killed = 1
cloned = 3
killed = 13
cloned = 17
killed = 0
cloned = 12
killed = 11
cloned = 20
killed = 6
cloned = 16
killed = 4
cloned = 18
killed = 15
cloned = 8
killed = 2
cloned = 7
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 21, 3, 12, 5, 18, 20, 4, 6, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 17, 14, 9, 15, 16, 11, 13, 0, 10, 19, 22]
====================================
cloned = 1
killed = 8
cloned = 17
killed = 7
cloned = 14
killed = 21
cloned = 9
killed = 3
cloned = 15
killed = 12
cloned = 16
killed = 5
cloned = 11
killed = 18
cloned = 13
killed = 20
cloned = 0
killed = 4
cloned = 10
killed = 6
cloned = 19
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 14, 20, 1, 0, 17, 5, 13, 10, 11, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 12, 16, 21, 7, 3, 9, 19, 8, 6, 4, 22]
====================================
cloned = 18
killed = 2
cloned = 12
killed = 14
cloned = 16
killed = 20
cloned = 21
killed = 1
cloned = 7
killed = 0
cloned = 3
killed = 17
cloned = 9
killed = 5
cloned = 19
killed = 13
cloned = 8
killed = 10
cloned = 6
killed = 11
cloned = 4
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 8, 16, 3, 17, 2, 12, 18, 13, 15, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 10, 0, 6, 20, 5, 1, 19, 9, 7, 21, 22]
====================================
cloned = 11
killed = 14
cloned = 10
killed = 8
cloned = 0
killed = 16
cloned = 6
killed = 3
cloned = 20
killed = 17
cloned = 5
killed = 2
cloned = 1
killed = 12
cloned = 19
killed = 18
cloned = 9
killed = 13
cloned = 7
killed = 15
cloned = 21
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 10, 17, 11, 3, 9, 7, 8, 1, 14, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 18, 20, 5, 4, 16, 13, 2, 15, 0, 21, 22]
====================================
cloned = 12
killed = 19
cloned = 18
killed = 10
cloned = 20
killed = 17
cloned = 5
killed = 11
cloned = 4
killed = 3
cloned = 16
killed = 9
cloned = 13
killed = 7
cloned = 2
killed = 8
cloned = 15
killed = 1
cloned = 0
killed = 14
cloned = 21
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 13, 9, 2, 20, 8, 18, 14, 0, 15, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 7, 5, 4, 12, 3, 21, 19, 17, 6, 10, 22]
====================================
cloned = 11
killed = 1
cloned = 7
killed = 13
cloned = 5
killed = 9
cloned = 4
killed = 2
cloned = 12
killed = 20
cloned = 3
killed = 8
cloned = 21
killed = 18
cloned = 19
killed = 14
cloned = 17
killed = 0
cloned = 6
killed = 15
cloned = 10
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 9, 21, 18, 12, 4, 10, 0, 16, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 17, 11, 8, 2, 3, 19, 15, 1, 13, 20, 22]
====================================
cloned = 6
killed = 5
cloned = 17
killed = 14
cloned = 11
killed = 9
cloned = 8
killed = 21
cloned = 2
killed = 18
cloned = 3
killed = 12
cloned = 19
killed = 4
cloned = 15
killed = 10
cloned = 1
killed = 0
cloned = 13
killed = 16
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 7, 8, 18, 19, 11, 12, 5, 17, 0, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 4, 10, 9, 3, 6, 1, 13, 20, 16, 2, 22]
====================================
cloned = 15
killed = 14
cloned = 4
killed = 7
cloned = 10
killed = 8
cloned = 9
killed = 18
cloned = 3
killed = 19
cloned = 6
killed = 11
cloned = 1
killed = 12
cloned = 13
killed = 5
cloned = 20
killed = 17
cloned = 16
killed = 0
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 20, 15, 11, 0, 10, 16, 7, 19, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 6, 5, 17, 9, 13, 3, 21, 1, 18, 2, 22]
====================================
cloned = 4
killed = 12
cloned = 6
killed = 8
cloned = 5
killed = 20
cloned = 17
killed = 15
cloned = 9
killed = 11
cloned = 13
killed = 0
cloned = 3
killed = 10
cloned = 21
killed = 16
cloned = 1
killed = 7
cloned = 18
killed = 19
cloned = 2
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 5, 9, 0, 4, 2, 15, 1, 7, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 16, 8, 19, 6, 21, 18, 20, 11, 13, 10, 22]
====================================
cloned = 17
killed = 14
cloned = 16
killed = 5
cloned = 8
killed = 9
cloned = 19
killed = 0
cloned = 6
killed = 4
cloned = 21
killed = 2
cloned = 18
killed = 15
cloned = 20
killed = 1
cloned = 11
killed = 7
cloned = 13
killed = 3
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 11, 17, 9, 21, 3, 0, 10, 2, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 15, 7, 4, 5, 12, 16, 19, 20, 14, 18, 22]
====================================
cloned = 13
killed = 6
cloned = 15
killed = 1
cloned = 7
killed = 11
cloned = 4
killed = 17
cloned = 5
killed = 9
cloned = 12
killed = 21
cloned = 16
killed = 3
cloned = 19
killed = 0
cloned = 20
killed = 10
cloned = 14
killed = 2
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 6, 4, 7, 13, 16, 17, 12, 18, 9, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 3, 8, 11, 5, 1, 2, 19, 14, 20, 21, 22]
====================================
cloned = 10
killed = 15
cloned = 3
killed = 6
cloned = 8
killed = 4
cloned = 11
killed = 7
cloned = 5
killed = 13
cloned = 1
killed = 16
cloned = 2
killed = 17
cloned = 19
killed = 12
cloned = 14
killed = 18
cloned = 20
killed = 9
cloned = 21
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 19, 4, 17, 21, 11, 6, 0, 20, 16, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 14, 13, 15, 1, 8, 9, 10, 7, 12, 2, 22]
====================================
cloned = 3
killed = 5
cloned = 14
killed = 19
cloned = 13
killed = 4
cloned = 15
killed = 17
cloned = 1
killed = 21
cloned = 8
killed = 11
cloned = 9
killed = 6
cloned = 10
killed = 0
cloned = 7
killed = 20
cloned = 12
killed = 16
cloned = 2
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 2, 14, 18, 6, 3, 21, 11, 15, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 13, 5, 17, 16, 4, 7, 9, 1, 12, 10, 22]
====================================
cloned = 20
killed = 19
cloned = 13
killed = 2
cloned = 5
killed = 14
cloned = 17
killed = 18
cloned = 16
killed = 6
cloned = 4
killed = 3
cloned = 7
killed = 21
cloned = 9
killed = 11
cloned = 1
killed = 15
cloned = 12
killed = 0
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 19, 4, 8, 0, 11, 7, 5, 10, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 2, 1, 15, 21, 18, 20, 16, 12, 14, 13, 22]
====================================
cloned = 9
killed = 17
cloned = 2
killed = 19
cloned = 1
killed = 4
cloned = 15
killed = 8
cloned = 21
killed = 0
cloned = 18
killed = 11
cloned = 20
killed = 7
cloned = 16
killed = 5
cloned = 12
killed = 10
cloned = 14
killed = 3
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 13, 6, 1, 10, 20, 12, 0, 11, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 8, 16, 4, 18, 19, 15, 3, 7, 2, 9, 22]
====================================
cloned = 17
killed = 5
cloned = 8
killed = 14
cloned = 16
killed = 13
cloned = 4
killed = 6
cloned = 18
killed = 1
cloned = 19
killed = 10
cloned = 15
killed = 20
cloned = 3
killed = 12
cloned = 7
killed = 0
cloned = 2
killed = 11
cloned = 9
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 18, 5, 17, 19, 13, 8, 0, 15, 1, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 6, 11, 4, 12, 7, 21, 10, 16, 3, 20, 22]
====================================
cloned = 2
killed = 9
cloned = 6
killed = 18
cloned = 11
killed = 5
cloned = 4
killed = 17
cloned = 12
killed = 19
cloned = 7
killed = 13
cloned = 21
killed = 8
cloned = 10
killed = 0
cloned = 16
killed = 15
cloned = 3
killed = 1
cloned = 20
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 15, 14, 11, 1, 3, 0, 2, 8, 17, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 6, 7, 21, 10, 9, 4, 19, 13, 5, 16, 22]
====================================
cloned = 18
killed = 20
cloned = 6
killed = 15
cloned = 7
killed = 14
cloned = 21
killed = 11
cloned = 10
killed = 1
cloned = 9
killed = 3
cloned = 4
killed = 0
cloned = 19
killed = 2
cloned = 13
killed = 8
cloned = 5
killed = 17
cloned = 16
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 18, 13, 5, 14, 0, 6, 12, 15, 2, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 9, 16, 10, 7, 3, 21, 19, 20, 11, 22]
====================================
cloned = 1
killed = 4
cloned = 8
killed = 18
cloned = 9
killed = 13
cloned = 16
killed = 5
cloned = 10
killed = 14
cloned = 7
killed = 0
cloned = 3
killed = 6
cloned = 21
killed = 12
cloned = 19
killed = 15
cloned = 20
killed = 2
cloned = 11
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 0, 16, 8, 4, 17, 20, 21, 5, 10, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 19, 9, 13, 1, 7, 18, 14, 15, 6, 11, 22]
====================================
cloned = 2
killed = 12
cloned = 19
killed = 0
cloned = 9
killed = 16
cloned = 13
killed = 8
cloned = 1
killed = 4
cloned = 7
killed = 17
cloned = 18
killed = 20
cloned = 14
killed = 21
cloned = 15
killed = 5
cloned = 6
killed = 10
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 3, 13, 15, 6, 18, 17, 11, 7, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 5, 16, 8, 10, 2, 21, 1, 20, 14, 9, 22]
====================================
cloned = 4
killed = 19
cloned = 5
killed = 3
cloned = 16
killed = 13
cloned = 8
killed = 15
cloned = 10
killed = 6
cloned = 2
killed = 18
cloned = 21
killed = 17
cloned = 1
killed = 11
cloned = 20
killed = 7
cloned = 14
killed = 12
cloned = 9
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 0, 6, 18, 9, 20, 12, 2, 5, 11, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 17, 4, 13, 21, 1, 7, 10, 8, 16, 3, 22]
====================================
cloned = 19
killed = 15
cloned = 17
killed = 0
cloned = 4
killed = 6
cloned = 13
killed = 18
cloned = 21
killed = 9
cloned = 1
killed = 20
cloned = 7
killed = 12
cloned = 10
killed = 2
cloned = 8
killed = 5
cloned = 16
killed = 11
cloned = 3
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 0, 6, 18, 1, 13, 15, 10, 4, 16, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 20, 5, 2, 17, 9, 3, 8, 7, 12, 22]
====================================
cloned = 19
killed = 21
cloned = 14
killed = 0
cloned = 20
killed = 6
cloned = 5
killed = 18
cloned = 2
killed = 1
cloned = 17
killed = 13
cloned = 9
killed = 15
cloned = 3
killed = 10
cloned = 8
killed = 4
cloned = 7
killed = 16
cloned = 12
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 20, 14, 8, 18, 12, 10, 7, 1, 4, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 3, 5, 6, 16, 2, 17, 13, 0, 21, 9, 22]
====================================
cloned = 11
killed = 19
cloned = 3
killed = 20
cloned = 5
killed = 14
cloned = 6
killed = 8
cloned = 16
killed = 18
cloned = 2
killed = 12
cloned = 17
killed = 10
cloned = 13
killed = 7
cloned = 0
killed = 1
cloned = 21
killed = 4
cloned = 9
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 20, 14, 10, 1, 5, 15, 8, 6, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 3, 18, 2, 11, 4, 13, 16, 12, 9, 0, 22]
====================================
cloned = 17
killed = 21
cloned = 3
killed = 7
cloned = 18
killed = 20
cloned = 2
killed = 14
cloned = 11
killed = 10
cloned = 4
killed = 1
cloned = 13
killed = 5
cloned = 16
killed = 15
cloned = 12
killed = 8
cloned = 9
killed = 6
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 15, 19, 12, 9, 6, 10, 11, 14, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 21, 2, 18, 0, 13, 20, 17, 4, 7, 3, 22]
====================================
cloned = 8
killed = 16
cloned = 21
killed = 15
cloned = 2
killed = 19
cloned = 18
killed = 12
cloned = 0
killed = 9
cloned = 13
killed = 6
cloned = 20
killed = 10
cloned = 17
killed = 11
cloned = 4
killed = 14
cloned = 7
killed = 1
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 5, 16, 0, 13, 21, 14, 17, 11, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 15, 2, 19, 3, 1, 10, 8, 18, 7, 9, 22]
====================================
cloned = 12
killed = 6
cloned = 15
killed = 4
cloned = 2
killed = 5
cloned = 19
killed = 16
cloned = 3
killed = 0
cloned = 1
killed = 13
cloned = 10
killed = 21
cloned = 8
killed = 14
cloned = 18
killed = 17
cloned = 7
killed = 11
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 20, 21, 9, 0, 16, 11, 15, 14, 3, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 18, 17, 12, 7, 10, 8, 2, 4, 6, 1, 22]
====================================
cloned = 5
killed = 19
cloned = 18
killed = 20
cloned = 17
killed = 21
cloned = 12
killed = 9
cloned = 7
killed = 0
cloned = 10
killed = 16
cloned = 8
killed = 11
cloned = 2
killed = 15
cloned = 4
killed = 14
cloned = 6
killed = 3
cloned = 1
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 8, 1, 9, 20, 18, 3, 5, 17, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 13, 12, 21, 6, 11, 0, 14, 10, 7, 22]
====================================
cloned = 2
killed = 4
cloned = 15
killed = 16
cloned = 13
killed = 8
cloned = 12
killed = 1
cloned = 21
killed = 9
cloned = 6
killed = 20
cloned = 11
killed = 18
cloned = 0
killed = 3
cloned = 14
killed = 5
cloned = 10
killed = 17
cloned = 7
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 0, 1, 11, 21, 15, 18, 3, 16, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 19, 2, 17, 6, 14, 7, 12, 9, 8, 5, 22]
====================================
cloned = 4
killed = 10
cloned = 19
killed = 20
cloned = 2
killed = 0
cloned = 17
killed = 1
cloned = 6
killed = 11
cloned = 14
killed = 21
cloned = 7
killed = 15
cloned = 12
killed = 18
cloned = 9
killed = 3
cloned = 8
killed = 16
cloned = 5
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 21, 12, 15, 1, 18, 20, 2, 9, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 7, 17, 8, 3, 6, 10, 19, 14, 4, 5, 22]
====================================
cloned = 0
killed = 11
cloned = 7
killed = 13
cloned = 17
killed = 21
cloned = 8
killed = 12
cloned = 3
killed = 15
cloned = 6
killed = 1
cloned = 10
killed = 18
cloned = 19
killed = 20
cloned = 14
killed = 2
cloned = 4
killed = 9
cloned = 5
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 14, 10, 19, 13, 3, 8, 1, 11, 18, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 20, 17, 16, 6, 7, 4, 9, 21, 15, 22]
====================================
cloned = 12
killed = 5
cloned = 0
killed = 14
cloned = 20
killed = 10
cloned = 17
killed = 19
cloned = 16
killed = 13
cloned = 6
killed = 3
cloned = 7
killed = 8
cloned = 4
killed = 1
cloned = 9
killed = 11
cloned = 21
killed = 18
cloned = 15
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 18, 19, 7, 15, 21, 20, 13, 9, 16, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 1, 2, 17, 0, 14, 8, 6, 5, 4, 11, 22]
====================================
cloned = 10
killed = 3
cloned = 1
killed = 18
cloned = 2
killed = 19
cloned = 17
killed = 7
cloned = 0
killed = 15
cloned = 14
killed = 21
cloned = 8
killed = 20
cloned = 6
killed = 13
cloned = 5
killed = 9
cloned = 4
killed = 16
cloned = 11
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 17, 13, 8, 9, 10, 16, 11, 1, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 3, 0, 4, 20, 12, 15, 21, 18, 19, 14, 22]
====================================
cloned = 5
killed = 2
cloned = 3
killed = 17
cloned = 0
killed = 13
cloned = 4
killed = 8
cloned = 20
killed = 9
cloned = 12
killed = 10
cloned = 15
killed = 16
cloned = 21
killed = 11
cloned = 18
killed = 1
cloned = 19
killed = 6
cloned = 14
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 6, 15, 10, 8, 13, 19, 1, 17, 20, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 3, 11, 9, 14, 12, 7, 2, 21, 0, 22]
====================================
cloned = 5
killed = 18
cloned = 4
killed = 6
cloned = 3
killed = 15
cloned = 11
killed = 10
cloned = 9
killed = 8
cloned = 14
killed = 13
cloned = 12
killed = 19
cloned = 7
killed = 1
cloned = 2
killed = 17
cloned = 21
killed = 20
cloned = 0
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 17, 3, 6, 21, 7, 4, 20, 12, 15, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 1, 18, 0, 13, 14, 9, 10, 19, 2, 16, 22]
====================================
cloned = 5
killed = 11
cloned = 1
killed = 17
cloned = 18
killed = 3
cloned = 0
killed = 6
cloned = 13
killed = 21
cloned = 14
killed = 7
cloned = 9
killed = 4
cloned = 10
killed = 20
cloned = 19
killed = 12
cloned = 2
killed = 15
cloned = 16
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 20, 5, 12, 16, 7, 15, 1, 14, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 11, 2, 13, 8, 17, 6, 21, 9, 19, 0, 22]
====================================
cloned = 3
killed = 10
cloned = 11
killed = 4
cloned = 2
killed = 20
cloned = 13
killed = 5
cloned = 8
killed = 12
cloned = 17
killed = 16
cloned = 6
killed = 7
cloned = 21
killed = 15
cloned = 9
killed = 1
cloned = 19
killed = 14
cloned = 0
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 4, 19, 18, 12, 21, 14, 9, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 11, 13, 17, 15, 20, 8, 1, 2, 7, 22]
====================================
cloned = 3
killed = 0
cloned = 16
killed = 6
cloned = 11
killed = 4
cloned = 13
killed = 19
cloned = 17
killed = 18
cloned = 15
killed = 12
cloned = 20
killed = 21
cloned = 8
killed = 14
cloned = 1
killed = 9
cloned = 2
killed = 10
cloned = 7
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 7, 5, 20, 1, 0, 10, 6, 3, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 17, 21, 18, 15, 19, 4, 8, 13, 16, 12, 22]
====================================
cloned = 11
killed = 14
cloned = 17
killed = 7
cloned = 21
killed = 5
cloned = 18
killed = 20
cloned = 15
killed = 1
cloned = 19
killed = 0
cloned = 4
killed = 10
cloned = 8
killed = 6
cloned = 13
killed = 3
cloned = 16
killed = 9
cloned = 12
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 20, 19, 15, 16, 7, 4, 8, 5, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 14, 21, 13, 17, 0, 10, 3, 2, 11, 1, 22]
====================================
cloned = 9
killed = 12
cloned = 14
killed = 6
cloned = 21
killed = 20
cloned = 13
killed = 19
cloned = 17
killed = 15
cloned = 0
killed = 16
cloned = 10
killed = 7
cloned = 3
killed = 4
cloned = 2
killed = 8
cloned = 11
killed = 5
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 1, 11, 20, 17, 5, 0, 9, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 6, 14, 16, 12, 18, 2, 13, 21, 19, 4, 22]
====================================
cloned = 15
killed = 7
cloned = 6
killed = 10
cloned = 14
killed = 1
cloned = 16
killed = 11
cloned = 12
killed = 20
cloned = 18
killed = 17
cloned = 2
killed = 5
cloned = 13
killed = 0
cloned = 21
killed = 9
cloned = 19
killed = 8
cloned = 4
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 7, 2, 3, 18, 14, 19, 4, 20, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 6, 13, 9, 10, 12, 21, 17, 0, 5, 15, 22]
====================================
cloned = 8
killed = 16
cloned = 6
killed = 7
cloned = 13
killed = 2
cloned = 9
killed = 3
cloned = 10
killed = 18
cloned = 12
killed = 14
cloned = 21
killed = 19
cloned = 17
killed = 4
cloned = 0
killed = 20
cloned = 5
killed = 1
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 15, 8, 6, 11, 4, 5, 9, 16, 21, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 3, 13, 14, 20, 0, 7, 12, 10, 18, 1, 22]
====================================
cloned = 17
killed = 2
cloned = 3
killed = 15
cloned = 13
killed = 8
cloned = 14
killed = 6
cloned = 20
killed = 11
cloned = 0
killed = 4
cloned = 7
killed = 5
cloned = 12
killed = 9
cloned = 10
killed = 16
cloned = 18
killed = 21
cloned = 1
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 15, 14, 17, 16, 20, 19, 21, 5, 12, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 11, 10, 0, 13, 6, 9, 18, 8, 3, 22]
====================================
cloned = 1
killed = 2
cloned = 4
killed = 15
cloned = 11
killed = 14
cloned = 10
killed = 17
cloned = 0
killed = 16
cloned = 13
killed = 20
cloned = 6
killed = 19
cloned = 9
killed = 21
cloned = 18
killed = 5
cloned = 8
killed = 12
cloned = 3
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 13, 12, 7, 6, 5, 9, 2, 10, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 8, 4, 18, 19, 16, 3, 14, 17, 0, 21, 22]
====================================
cloned = 20
killed = 15
cloned = 8
killed = 13
cloned = 4
killed = 12
cloned = 18
killed = 7
cloned = 19
killed = 6
cloned = 16
killed = 5
cloned = 3
killed = 9
cloned = 14
killed = 2
cloned = 17
killed = 10
cloned = 0
killed = 1
cloned = 21
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 3, 6, 13, 20, 5, 12, 14, 18, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 19, 15, 9, 0, 17, 1, 4, 11, 8, 10, 22]
====================================
cloned = 21
killed = 7
cloned = 19
killed = 3
cloned = 15
killed = 6
cloned = 9
killed = 13
cloned = 0
killed = 20
cloned = 17
killed = 5
cloned = 1
killed = 12
cloned = 4
killed = 14
cloned = 11
killed = 18
cloned = 8
killed = 16
cloned = 10
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 17, 12, 21, 18, 14, 10, 7, 15, 3, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 13, 5, 6, 4, 0, 1, 2, 19, 8, 16, 22]
====================================
cloned = 11
killed = 9
cloned = 13
killed = 17
cloned = 5
killed = 12
cloned = 6
killed = 21
cloned = 4
killed = 18
cloned = 0
killed = 14
cloned = 1
killed = 10
cloned = 2
killed = 7
cloned = 19
killed = 15
cloned = 8
killed = 3
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 6, 1, 16, 15, 0, 18, 9, 10, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 7, 17, 5, 8, 21, 4, 14, 12, 20, 19, 22]
====================================
cloned = 11
killed = 13
cloned = 7
killed = 2
cloned = 17
killed = 6
cloned = 5
killed = 1
cloned = 8
killed = 16
cloned = 21
killed = 15
cloned = 4
killed = 0
cloned = 14
killed = 18
cloned = 12
killed = 9
cloned = 20
killed = 10
cloned = 19
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 0, 4, 3, 9, 14, 7, 18, 20, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 5, 12, 16, 10, 6, 19, 17, 21, 15, 8, 22]
====================================
cloned = 2
killed = 13
cloned = 5
killed = 1
cloned = 12
killed = 0
cloned = 16
killed = 4
cloned = 10
killed = 3
cloned = 6
killed = 9
cloned = 19
killed = 14
cloned = 17
killed = 7
cloned = 21
killed = 18
cloned = 15
killed = 20
cloned = 8
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 4, 16, 18, 10, 15, 3, 5, 13, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 1, 19, 2, 21, 17, 7, 14, 8, 6, 22]
====================================
cloned = 12
killed = 11
cloned = 0
killed = 20
cloned = 1
killed = 4
cloned = 19
killed = 16
cloned = 2
killed = 18
cloned = 21
killed = 10
cloned = 17
killed = 15
cloned = 7
killed = 3
cloned = 14
killed = 5
cloned = 8
killed = 13
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 7, 6, 12, 4, 9, 13, 1, 10, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 5, 17, 20, 15, 0, 18, 19, 16, 14, 8, 22]
====================================
cloned = 11
killed = 3
cloned = 5
killed = 2
cloned = 17
killed = 7
cloned = 20
killed = 6
cloned = 15
killed = 12
cloned = 0
killed = 4
cloned = 18
killed = 9
cloned = 19
killed = 13
cloned = 16
killed = 1
cloned = 14
killed = 10
cloned = 8
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 15, 21, 1, 13, 19, 2, 3, 10, 12, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 16, 20, 0, 18, 5, 8, 4, 7, 17, 22]
====================================
cloned = 14
killed = 6
cloned = 9
killed = 15
cloned = 16
killed = 21
cloned = 20
killed = 1
cloned = 0
killed = 13
cloned = 18
killed = 19
cloned = 5
killed = 2
cloned = 8
killed = 3
cloned = 4
killed = 10
cloned = 7
killed = 12
cloned = 17
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 7, 8, 21, 4, 11, 13, 19, 20, 2, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 17, 0, 3, 12, 6, 16, 9, 5, 14, 1, 22]
====================================
cloned = 10
killed = 15
cloned = 17
killed = 7
cloned = 0
killed = 8
cloned = 3
killed = 21
cloned = 12
killed = 4
cloned = 6
killed = 11
cloned = 16
killed = 13
cloned = 9
killed = 19
cloned = 5
killed = 20
cloned = 14
killed = 2
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 3, 19, 0, 13, 18, 17, 6, 14, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 4, 20, 8, 2, 16, 12, 10, 21, 5, 1, 22]
====================================
cloned = 15
killed = 7
cloned = 4
killed = 3
cloned = 20
killed = 19
cloned = 8
killed = 0
cloned = 2
killed = 13
cloned = 16
killed = 18
cloned = 12
killed = 17
cloned = 10
killed = 6
cloned = 21
killed = 14
cloned = 5
killed = 9
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 3, 0, 5, 10, 8, 11, 15, 1, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 13, 18, 7, 21, 16, 19, 6, 20, 14, 2, 22]
====================================
cloned = 17
killed = 9
cloned = 13
killed = 4
cloned = 18
killed = 3
cloned = 7
killed = 0
cloned = 21
killed = 5
cloned = 16
killed = 10
cloned = 19
killed = 8
cloned = 6
killed = 11
cloned = 20
killed = 15
cloned = 14
killed = 1
cloned = 2
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 17, 12, 14, 11, 20, 8, 7, 6, 4, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 18, 16, 21, 9, 10, 1, 2, 0, 5, 13, 22]
====================================
cloned = 3
killed = 15
cloned = 18
killed = 17
cloned = 16
killed = 12
cloned = 21
killed = 14
cloned = 9
killed = 11
cloned = 10
killed = 20
cloned = 1
killed = 8
cloned = 2
killed = 7
cloned = 0
killed = 6
cloned = 5
killed = 4
cloned = 13
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 18, 17, 20, 5, 15, 12, 7, 19, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 9, 2, 21, 14, 8, 13, 10, 0, 1, 3, 22]
====================================
cloned = 16
killed = 6
cloned = 9
killed = 4
cloned = 2
killed = 18
cloned = 21
killed = 17
cloned = 14
killed = 20
cloned = 8
killed = 5
cloned = 13
killed = 15
cloned = 10
killed = 12
cloned = 0
killed = 7
cloned = 1
killed = 19
cloned = 3
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 8, 13, 18, 10, 20, 5, 0, 14, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 17, 15, 2, 3, 12, 7, 19, 6, 1, 21, 22]
====================================
cloned = 9
killed = 16
cloned = 17
killed = 8
cloned = 15
killed = 13
cloned = 2
killed = 18
cloned = 3
killed = 10
cloned = 12
killed = 20
cloned = 7
killed = 5
cloned = 19
killed = 0
cloned = 6
killed = 14
cloned = 1
killed = 11
cloned = 21
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 4, 13, 7, 14, 16, 21, 11, 3, 18, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 9, 1, 17, 20, 10, 19, 6, 5, 8, 15, 22]
====================================
cloned = 12
killed = 2
cloned = 9
killed = 4
cloned = 1
killed = 13
cloned = 17
killed = 7
cloned = 20
killed = 14
cloned = 10
killed = 16
cloned = 19
killed = 21
cloned = 6
killed = 11
cloned = 5
killed = 3
cloned = 8
killed = 18
cloned = 15
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 5, 0, 15, 8, 19, 7, 21, 17, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 13, 14, 4, 1, 16, 3, 2, 18, 11, 20, 22]
====================================
cloned = 12
killed = 10
cloned = 13
killed = 5
cloned = 14
killed = 0
cloned = 4
killed = 15
cloned = 1
killed = 8
cloned = 16
killed = 19
cloned = 3
killed = 7
cloned = 2
killed = 21
cloned = 18
killed = 17
cloned = 11
killed = 9
cloned = 20
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 8, 14, 4, 10, 6, 1, 21, 15, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 11, 19, 17, 7, 20, 2, 3, 16, 13, 22]
====================================
cloned = 18
killed = 0
cloned = 5
killed = 12
cloned = 11
killed = 8
cloned = 19
killed = 14
cloned = 17
killed = 4
cloned = 7
killed = 10
cloned = 20
killed = 6
cloned = 2
killed = 1
cloned = 3
killed = 21
cloned = 16
killed = 15
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 7, 16, 17, 14, 19, 21, 15, 5, 12, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 13, 8, 11, 4, 3, 6, 10, 2, 18, 9, 22]
====================================
cloned = 1
killed = 20
cloned = 13
killed = 7
cloned = 8
killed = 16
cloned = 11
killed = 17
cloned = 4
killed = 14
cloned = 3
killed = 19
cloned = 6
killed = 21
cloned = 10
killed = 15
cloned = 2
killed = 5
cloned = 18
killed = 12
cloned = 9
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 2, 0, 7, 19, 8, 10, 13, 9, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 18, 1, 12, 11, 21, 6, 20, 16, 17, 15, 22]
====================================
cloned = 4
killed = 3
cloned = 18
killed = 14
cloned = 1
killed = 2
cloned = 12
killed = 0
cloned = 11
killed = 7
cloned = 21
killed = 19
cloned = 6
killed = 8
cloned = 20
killed = 10
cloned = 16
killed = 13
cloned = 17
killed = 9
cloned = 15
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 6, 12, 3, 15, 14, 21, 9, 19, 1, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 0, 13, 16, 20, 8, 18, 10, 2, 11, 5, 22]
====================================
cloned = 7
killed = 17
cloned = 0
killed = 6
cloned = 13
killed = 12
cloned = 16
killed = 3
cloned = 20
killed = 15
cloned = 8
killed = 14
cloned = 18
killed = 21
cloned = 10
killed = 9
cloned = 2
killed = 19
cloned = 11
killed = 1
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 14, 12, 13, 3, 21, 2, 6, 4, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 20, 10, 18, 11, 8, 1, 15, 7, 16, 17, 22]
====================================
cloned = 19
killed = 0
cloned = 20
killed = 14
cloned = 10
killed = 12
cloned = 18
killed = 13
cloned = 11
killed = 3
cloned = 8
killed = 21
cloned = 1
killed = 2
cloned = 15
killed = 6
cloned = 7
killed = 4
cloned = 16
killed = 5
cloned = 17
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 9, 18, 14, 6, 13, 16, 5, 15, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 10, 20, 1, 11, 17, 7, 3, 2, 8, 0, 22]
====================================
cloned = 19
killed = 4
cloned = 10
killed = 12
cloned = 20
killed = 9
cloned = 1
killed = 18
cloned = 11
killed = 14
cloned = 17
killed = 6
cloned = 7
killed = 13
cloned = 3
killed = 16
cloned = 2
killed = 5
cloned = 8
killed = 15
cloned = 0
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 17, 21, 10, 16, 2, 5, 15, 4, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 3, 1, 18, 9, 6, 8, 20, 7, 14, 11, 22]
====================================
cloned = 13
killed = 0
cloned = 3
killed = 12
cloned = 1
killed = 17
cloned = 18
killed = 21
cloned = 9
killed = 10
cloned = 6
killed = 16
cloned = 8
killed = 2
cloned = 20
killed = 5
cloned = 7
killed = 15
cloned = 14
killed = 4
cloned = 11
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 4, 16, 6, 0, 20, 15, 19, 18, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 9, 12, 2, 14, 1, 5, 17, 13, 3, 21, 22]
====================================
cloned = 7
killed = 11
cloned = 9
killed = 10
cloned = 12
killed = 4
cloned = 2
killed = 16
cloned = 14
killed = 6
cloned = 1
killed = 0
cloned = 5
killed = 20
cloned = 17
killed = 15
cloned = 13
killed = 19
cloned = 3
killed = 18
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 8, 19, 3, 7, 12, 15, 11, 18, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 5, 10, 14, 6, 21, 0, 17, 4, 16, 20, 22]
====================================
cloned = 2
killed = 9
cloned = 5
killed = 1
cloned = 10
killed = 8
cloned = 14
killed = 19
cloned = 6
killed = 3
cloned = 21
killed = 7
cloned = 0
killed = 12
cloned = 17
killed = 15
cloned = 4
killed = 11
cloned = 16
killed = 18
cloned = 20
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 3, 19, 17, 8, 6, 0, 16, 10, 5, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 21, 15, 1, 13, 7, 4, 11, 12, 20, 22]
====================================
cloned = 14
killed = 9
cloned = 2
killed = 3
cloned = 21
killed = 19
cloned = 15
killed = 17
cloned = 1
killed = 8
cloned = 13
killed = 6
cloned = 7
killed = 0
cloned = 4
killed = 16
cloned = 11
killed = 10
cloned = 12
killed = 5
cloned = 20
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 13, 10, 0, 2, 19, 9, 18, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 8, 11, 4, 14, 21, 16, 15, 7, 17, 20, 22]
====================================
cloned = 12
killed = 3
cloned = 8
killed = 6
cloned = 11
killed = 13
cloned = 4
killed = 10
cloned = 14
killed = 0
cloned = 21
killed = 2
cloned = 16
killed = 19
cloned = 15
killed = 9
cloned = 7
killed = 18
cloned = 17
killed = 1
cloned = 20
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 21, 18, 9, 17, 2, 14, 0, 3, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 1, 4, 10, 12, 8, 11, 5, 19, 7, 16, 22]
====================================
cloned = 20
killed = 13
cloned = 1
killed = 6
cloned = 4
killed = 21
cloned = 10
killed = 18
cloned = 12
killed = 9
cloned = 8
killed = 17
cloned = 11
killed = 2
cloned = 5
killed = 14
cloned = 19
killed = 0
cloned = 7
killed = 3
cloned = 16
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 5, 20, 19, 2, 6, 12, 16, 14, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 15, 3, 18, 21, 4, 7, 1, 10, 0, 8, 22]
====================================
cloned = 17
killed = 13
cloned = 15
killed = 5
cloned = 3
killed = 20
cloned = 18
killed = 19
cloned = 21
killed = 2
cloned = 4
killed = 6
cloned = 7
killed = 12
cloned = 1
killed = 16
cloned = 10
killed = 14
cloned = 0
killed = 9
cloned = 8
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 10, 14, 3, 16, 1, 7, 2, 13, 0, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 18, 21, 8, 20, 11, 15, 17, 9, 6, 4, 22]
====================================
cloned = 12
killed = 19
cloned = 18
killed = 10
cloned = 21
killed = 14
cloned = 8
killed = 3
cloned = 20
killed = 16
cloned = 11
killed = 1
cloned = 15
killed = 7
cloned = 17
killed = 2
cloned = 9
killed = 13
cloned = 6
killed = 0
cloned = 4
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 21, 2, 9, 15, 19, 10, 4, 17, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 3, 16, 8, 20, 14, 12, 13, 18, 0, 6, 22]
====================================
cloned = 7
killed = 1
cloned = 3
killed = 11
cloned = 16
killed = 21
cloned = 8
killed = 2
cloned = 20
killed = 9
cloned = 14
killed = 15
cloned = 12
killed = 19
cloned = 13
killed = 10
cloned = 18
killed = 4
cloned = 0
killed = 17
cloned = 6
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 16, 18, 21, 17, 11, 12, 9, 0, 6, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 1, 14, 8, 13, 7, 15, 19, 2, 20, 3, 22]
====================================
cloned = 4
killed = 5
cloned = 1
killed = 16
cloned = 14
killed = 18
cloned = 8
killed = 21
cloned = 13
killed = 17
cloned = 7
killed = 11
cloned = 15
killed = 12
cloned = 19
killed = 9
cloned = 2
killed = 0
cloned = 20
killed = 6
cloned = 3
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 14, 17, 3, 0, 20, 15, 16, 12, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 10, 8, 21, 1, 18, 9, 5, 19, 2, 11, 22]
====================================
cloned = 13
killed = 4
cloned = 10
killed = 14
cloned = 8
killed = 17
cloned = 21
killed = 3
cloned = 1
killed = 0
cloned = 18
killed = 20
cloned = 9
killed = 15
cloned = 5
killed = 16
cloned = 19
killed = 12
cloned = 2
killed = 6
cloned = 11
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 17, 7, 4, 10, 3, 15, 1, 9, 16, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 18, 20, 6, 21, 5, 12, 8, 14, 2, 11, 22]
====================================
cloned = 13
killed = 19
cloned = 18
killed = 17
cloned = 20
killed = 7
cloned = 6
killed = 4
cloned = 21
killed = 10
cloned = 5
killed = 3
cloned = 12
killed = 15
cloned = 8
killed = 1
cloned = 14
killed = 9
cloned = 2
killed = 16
cloned = 11
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 13, 2, 21, 12, 3, 1, 4, 17, 16, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 10, 7, 5, 15, 11, 6, 20, 18, 9, 19, 22]
====================================
cloned = 8
killed = 0
cloned = 10
killed = 13
cloned = 7
killed = 2
cloned = 5
killed = 21
cloned = 15
killed = 12
cloned = 11
killed = 3
cloned = 6
killed = 1
cloned = 20
killed = 4
cloned = 18
killed = 17
cloned = 9
killed = 16
cloned = 19
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 6, 17, 18, 7, 4, 11, 2, 15, 20, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 8, 21, 1, 0, 13, 14, 19, 12, 16, 3, 22]
====================================
cloned = 5
killed = 9
cloned = 8
killed = 6
cloned = 21
killed = 17
cloned = 1
killed = 18
cloned = 0
killed = 7
cloned = 13
killed = 4
cloned = 14
killed = 11
cloned = 19
killed = 2
cloned = 12
killed = 15
cloned = 16
killed = 20
cloned = 3
killed = 10
Trial run 13/seed 868:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Grudger': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'DBS: 0.75, 3, 4, 3, 5': 4,
          'Second by RichardHufford': 2,
          'Evolved HMM 5': 1}),
 Counter({'Evolved FSM 6': 8,
          'Tit For Tat': 8,
          'Second by RichardHufford': 4,
          'Evolved HMM 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 13, 'Evolved FSM 6': 10}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Tit For Tat': 17, 'Evolved FSM 6': 6}),
 Counter({'Tit For Tat': 15, 'Evolved FSM 6': 8}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 12, 'Tit For Tat': 11}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 14, 'Tit For Tat': 9}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 18, 'Tit For Tat': 5}),
 Counter({'Evolved FSM 6': 16, 'Tit For Tat': 7}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1}),
 Counter({'Evolved FSM 6': 22, 'Tit For Tat': 1})]
--------------------------------------------------
Score:
[[61.445,
  55.955000000000005,
  59.23,
  54.51,
  52.27500000000001,
  54.115,
  54.589999999999996,
  37.34,
  44.82,
  33.555,
  48.01,
  50.71999999999999,
  47.66,
  52.455,
  56.33999999999999,
  36.660000000000004,
  50.42,
  49.21,
  46.27499999999999,
  42.005,
  34.77,
  55.459999999999994,
  53.28],
 [65.7,
  62.585,
  65.75,
  62.870000000000005,
  62.51,
  62.16,
  61.35,
  65.7,
  61.67000000000001,
  65.75,
  62.870000000000005,
  60.72,
  62.19499999999999,
  63.540000000000006,
  56.08999999999999,
  62.16,
  61.964999999999996,
  63.540000000000006,
  56.44,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.92,
  69.03,
  65.96000000000001,
  61.86,
  65.335,
  65.92,
  69.09,
  65.92,
  65.96000000000001,
  65.96,
  61.86,
  61.86,
  65.92,
  65.07,
  65.96,
  61.86,
  65.07,
  65.07,
  65.07,
  65.07,
  65.07,
  65.07,
  65.07],
 [65.84,
  64.96999999999998,
  65.91999999999999,
  65.84,
  64.82,
  65.84,
  65.05499999999999,
  65.84,
  65.91999999999999,
  65.92,
  64.88,
  65.91999999999999,
  65.84,
  65.91999999999999,
  65.91999999999999,
  64.81,
  65.91999999999999,
  65.84,
  65.84,
  65.91999999999999,
  65.035,
  65.84,
  64.14],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.330000000000005,
 56.82,
 59.455,
 54.695,
 52.27499999999999,
 54.555,
 55.519999999999996,
 36.9,
 44.955000000000005,
 31.724999999999994,
 47.865,
 50.739999999999995,
 47.459999999999994,
 52.405,
 56.485,
 36.88,
 51.525000000000006,
 47.045,
 45.55,
 43.825,
 34.85000000000001,
 55.449999999999996,
 52.91]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.525000000000006
Upper: 51.525000000000006
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.27999999999999,
 65.75,
 62.870000000000005,
 62.47,
 62.16,
 62.495000000000005,
 65.7,
 65.40500000000002,
 65.75,
 62.870000000000005,
 62.385,
 62.160000000000004,
 63.540000000000006,
 59.084999999999994,
 61.025,
 62.58,
 63.540000000000006,
 58.629999999999995,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 16]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 20, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 20
killed = 16
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 7, 4, 0, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 7
killed = 20
cloned = 4
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 0, 20, 12]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 21, 7, 4, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 21
killed = 0
cloned = 7
killed = 20
cloned = 4
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 17, 16, 14, 7, 18, 5, 20, 4, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 6, 21, 9, 12, 15, 2, 3, 19, 0, 10, 22]
====================================
cloned = 11
killed = 13
cloned = 6
killed = 1
cloned = 21
killed = 17
cloned = 9
killed = 16
cloned = 12
killed = 14
cloned = 15
killed = 7
cloned = 2
killed = 18
cloned = 3
killed = 5
cloned = 19
killed = 20
cloned = 0
killed = 4
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 15, 6, 5, 3, 21, 18, 11, 19, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 16, 9, 12, 4, 10, 1, 7, 8, 0, 22]
====================================
cloned = 14
killed = 13
cloned = 2
killed = 17
cloned = 16
killed = 15
cloned = 9
killed = 6
cloned = 12
killed = 5
cloned = 4
killed = 3
cloned = 10
killed = 21
cloned = 1
killed = 18
cloned = 7
killed = 11
cloned = 8
killed = 19
cloned = 0
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 10, 6, 19, 11, 13, 21, 8, 1, 9, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 12, 0, 18, 7, 5, 15, 3, 14, 2, 17, 22]
====================================
cloned = 16
killed = 20
cloned = 12
killed = 10
cloned = 0
killed = 6
cloned = 18
killed = 19
cloned = 7
killed = 11
cloned = 5
killed = 13
cloned = 15
killed = 21
cloned = 3
killed = 8
cloned = 14
killed = 1
cloned = 2
killed = 9
cloned = 17
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 0, 8, 7, 15, 13, 12, 4, 19, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 1, 3, 21, 20, 5, 14, 2, 6, 17, 11, 22]
====================================
cloned = 16
killed = 18
cloned = 1
killed = 9
cloned = 3
killed = 0
cloned = 21
killed = 8
cloned = 20
killed = 7
cloned = 5
killed = 15
cloned = 14
killed = 13
cloned = 2
killed = 12
cloned = 6
killed = 4
cloned = 17
killed = 19
cloned = 11
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 6, 21, 4, 18, 16, 15, 7, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 3, 8, 20, 13, 17, 14, 12, 0, 10, 19, 22]
====================================
cloned = 9
killed = 1
cloned = 3
killed = 2
cloned = 8
killed = 6
cloned = 20
killed = 21
cloned = 13
killed = 4
cloned = 17
killed = 18
cloned = 14
killed = 16
cloned = 12
killed = 15
cloned = 0
killed = 7
cloned = 10
killed = 5
cloned = 19
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 15, 4, 3, 9, 2, 0, 7, 18, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 11, 20, 8, 14, 6, 10, 13, 17, 16, 19, 22]
====================================
cloned = 12
killed = 21
cloned = 11
killed = 15
cloned = 20
killed = 4
cloned = 8
killed = 3
cloned = 14
killed = 9
cloned = 6
killed = 2
cloned = 10
killed = 0
cloned = 13
killed = 7
cloned = 17
killed = 18
cloned = 16
killed = 1
cloned = 19
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 13, 10, 11, 16, 20, 15, 6, 12, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 14, 19, 2, 8, 0, 9, 4, 3, 21, 1, 22]
====================================
cloned = 18
killed = 17
cloned = 14
killed = 13
cloned = 19
killed = 10
cloned = 2
killed = 11
cloned = 8
killed = 16
cloned = 0
killed = 20
cloned = 9
killed = 15
cloned = 4
killed = 6
cloned = 3
killed = 12
cloned = 21
killed = 7
cloned = 1
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 2, 20, 7, 18, 10, 15, 5, 12, 13, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 16, 19, 9, 17, 1, 14, 11, 0, 4, 6, 22]
====================================
cloned = 8
killed = 21
cloned = 16
killed = 2
cloned = 19
killed = 20
cloned = 9
killed = 7
cloned = 17
killed = 18
cloned = 1
killed = 10
cloned = 14
killed = 15
cloned = 11
killed = 5
cloned = 0
killed = 12
cloned = 4
killed = 13
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 8, 6, 19, 9, 3, 15, 4, 10, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 12, 0, 13, 1, 2, 17, 14, 16, 21, 7, 22]
====================================
cloned = 18
killed = 20
cloned = 12
killed = 8
cloned = 0
killed = 6
cloned = 13
killed = 19
cloned = 1
killed = 9
cloned = 2
killed = 3
cloned = 17
killed = 15
cloned = 14
killed = 4
cloned = 16
killed = 10
cloned = 21
killed = 5
cloned = 7
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 5, 9, 4, 1, 12, 16, 17, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 6, 18, 2, 15, 3, 20, 14, 19, 21, 10, 22]
====================================
cloned = 7
killed = 11
cloned = 6
killed = 0
cloned = 18
killed = 5
cloned = 2
killed = 9
cloned = 15
killed = 4
cloned = 3
killed = 1
cloned = 20
killed = 12
cloned = 14
killed = 16
cloned = 19
killed = 17
cloned = 21
killed = 13
cloned = 10
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 19, 14, 10, 8, 13, 0, 16, 15, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 20, 21, 7, 9, 2, 1, 3, 18, 5, 17, 22]
====================================
cloned = 12
killed = 11
cloned = 20
killed = 4
cloned = 21
killed = 19
cloned = 7
killed = 14
cloned = 9
killed = 10
cloned = 2
killed = 8
cloned = 1
killed = 13
cloned = 3
killed = 0
cloned = 18
killed = 16
cloned = 5
killed = 15
cloned = 17
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 9, 11, 3, 7, 20, 8, 0, 21, 5, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 1, 17, 6, 16, 18, 19, 14, 13, 15, 4, 22]
====================================
cloned = 2
killed = 10
cloned = 1
killed = 9
cloned = 17
killed = 11
cloned = 6
killed = 3
cloned = 16
killed = 7
cloned = 18
killed = 20
cloned = 19
killed = 8
cloned = 14
killed = 0
cloned = 13
killed = 21
cloned = 15
killed = 5
cloned = 4
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 16, 21, 13, 20, 8, 6, 11, 2, 4, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 15, 17, 9, 18, 5, 1, 7, 12, 0, 19, 22]
====================================
cloned = 3
killed = 10
cloned = 15
killed = 16
cloned = 17
killed = 21
cloned = 9
killed = 13
cloned = 18
killed = 20
cloned = 5
killed = 8
cloned = 1
killed = 6
cloned = 7
killed = 11
cloned = 12
killed = 2
cloned = 0
killed = 4
cloned = 19
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 16, 7, 2, 18, 19, 14, 21, 20, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 15, 9, 13, 12, 11, 3, 6, 8, 17, 4, 22]
====================================
cloned = 0
killed = 1
cloned = 15
killed = 16
cloned = 9
killed = 7
cloned = 13
killed = 2
cloned = 12
killed = 18
cloned = 11
killed = 19
cloned = 3
killed = 14
cloned = 6
killed = 21
cloned = 8
killed = 20
cloned = 17
killed = 10
cloned = 4
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 2, 18, 4, 7, 9, 10, 0, 20, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 14, 1, 5, 11, 19, 15, 21, 8, 16, 12, 22]
====================================
cloned = 13
killed = 3
cloned = 14
killed = 6
cloned = 1
killed = 2
cloned = 5
killed = 18
cloned = 11
killed = 4
cloned = 19
killed = 7
cloned = 15
killed = 9
cloned = 21
killed = 10
cloned = 8
killed = 0
cloned = 16
killed = 20
cloned = 12
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 14, 10, 7, 17, 20, 6, 8, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 15, 2, 1, 13, 18, 5, 19, 0, 21, 22]
====================================
cloned = 3
killed = 4
cloned = 16
killed = 12
cloned = 15
killed = 14
cloned = 2
killed = 10
cloned = 1
killed = 7
cloned = 13
killed = 17
cloned = 18
killed = 20
cloned = 5
killed = 6
cloned = 19
killed = 8
cloned = 0
killed = 9
cloned = 21
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 14, 4, 0, 20, 6, 16, 17, 2, 13, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 15, 12, 1, 5, 10, 19, 8, 7, 21, 11, 22]
====================================
cloned = 9
killed = 18
cloned = 15
killed = 14
cloned = 12
killed = 4
cloned = 1
killed = 0
cloned = 5
killed = 20
cloned = 10
killed = 6
cloned = 19
killed = 16
cloned = 8
killed = 17
cloned = 7
killed = 2
cloned = 21
killed = 13
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 15, 6, 10, 7, 8, 3, 21, 17, 20, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 2, 13, 9, 19, 18, 1, 14, 12, 11, 22]
====================================
cloned = 5
killed = 16
cloned = 4
killed = 15
cloned = 2
killed = 6
cloned = 13
killed = 10
cloned = 9
killed = 7
cloned = 19
killed = 8
cloned = 18
killed = 3
cloned = 1
killed = 21
cloned = 14
killed = 17
cloned = 12
killed = 20
cloned = 11
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 21, 8, 11, 16, 2, 0, 5, 4, 3, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 14, 19, 1, 6, 12, 20, 17, 18, 13, 10, 22]
====================================
cloned = 9
killed = 15
cloned = 14
killed = 21
cloned = 19
killed = 8
cloned = 1
killed = 11
cloned = 6
killed = 16
cloned = 12
killed = 2
cloned = 20
killed = 0
cloned = 17
killed = 5
cloned = 18
killed = 4
cloned = 13
killed = 3
cloned = 10
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 7, 16, 8, 2, 19, 1, 12, 3, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 21, 18, 13, 10, 0, 15, 20, 17, 4, 9, 22]
====================================
cloned = 6
killed = 14
cloned = 21
killed = 7
cloned = 18
killed = 16
cloned = 13
killed = 8
cloned = 10
killed = 2
cloned = 0
killed = 19
cloned = 15
killed = 1
cloned = 20
killed = 12
cloned = 17
killed = 3
cloned = 4
killed = 5
cloned = 9
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 10, 0, 15, 9, 6, 18, 17, 16, 3, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 12, 2, 20, 4, 1, 8, 19, 11, 7, 13, 22]
====================================
cloned = 5
killed = 14
cloned = 12
killed = 10
cloned = 2
killed = 0
cloned = 20
killed = 15
cloned = 4
killed = 9
cloned = 1
killed = 6
cloned = 8
killed = 18
cloned = 19
killed = 17
cloned = 11
killed = 16
cloned = 7
killed = 3
cloned = 13
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 8, 11, 16, 1, 0, 15, 19, 4, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 14, 21, 18, 7, 17, 10, 2, 20, 3, 12, 22]
====================================
cloned = 9
killed = 13
cloned = 14
killed = 6
cloned = 21
killed = 8
cloned = 18
killed = 11
cloned = 7
killed = 16
cloned = 17
killed = 1
cloned = 10
killed = 0
cloned = 2
killed = 15
cloned = 20
killed = 19
cloned = 3
killed = 4
cloned = 12
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 18, 19, 8, 12, 6, 13, 11, 10, 1, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 21, 16, 4, 7, 17, 5, 14, 15, 2, 3, 22]
====================================
cloned = 0
killed = 20
cloned = 21
killed = 18
cloned = 16
killed = 19
cloned = 4
killed = 8
cloned = 7
killed = 12
cloned = 17
killed = 6
cloned = 5
killed = 13
cloned = 14
killed = 11
cloned = 15
killed = 10
cloned = 2
killed = 1
cloned = 3
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 3, 11, 5, 20, 16, 18, 15, 17, 13, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 0, 1, 10, 6, 14, 19, 9, 7, 2, 12, 22]
====================================
cloned = 21
killed = 8
cloned = 0
killed = 3
cloned = 1
killed = 11
cloned = 10
killed = 5
cloned = 6
killed = 20
cloned = 14
killed = 16
cloned = 19
killed = 18
cloned = 9
killed = 15
cloned = 7
killed = 17
cloned = 2
killed = 13
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 20, 9, 17, 2, 3, 13, 8, 15, 16, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 1, 21, 7, 5, 12, 6, 18, 4, 11, 0, 22]
====================================
cloned = 19
killed = 14
cloned = 1
killed = 20
cloned = 21
killed = 9
cloned = 7
killed = 17
cloned = 5
killed = 2
cloned = 12
killed = 3
cloned = 6
killed = 13
cloned = 18
killed = 8
cloned = 4
killed = 15
cloned = 11
killed = 16
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 2, 14, 8, 1, 13, 15, 4, 19, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 7, 10, 12, 9, 17, 18, 11, 0, 20, 21, 22]
====================================
cloned = 5
killed = 6
cloned = 7
killed = 3
cloned = 10
killed = 2
cloned = 12
killed = 14
cloned = 9
killed = 8
cloned = 17
killed = 1
cloned = 18
killed = 13
cloned = 11
killed = 15
cloned = 0
killed = 4
cloned = 20
killed = 19
cloned = 21
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 11, 9, 2, 21, 4, 12, 3, 20, 19, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 8, 5, 18, 6, 0, 16, 7, 15, 13, 14, 22]
====================================
cloned = 17
killed = 1
cloned = 8
killed = 11
cloned = 5
killed = 9
cloned = 18
killed = 2
cloned = 6
killed = 21
cloned = 0
killed = 4
cloned = 16
killed = 12
cloned = 7
killed = 3
cloned = 15
killed = 20
cloned = 13
killed = 19
cloned = 14
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 15, 3, 12, 18, 4, 5, 11, 17, 7, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 16, 6, 10, 19, 8, 1, 20, 9, 13, 21, 22]
====================================
cloned = 14
killed = 2
cloned = 16
killed = 15
cloned = 6
killed = 3
cloned = 10
killed = 12
cloned = 19
killed = 18
cloned = 8
killed = 4
cloned = 1
killed = 5
cloned = 20
killed = 11
cloned = 9
killed = 17
cloned = 13
killed = 7
cloned = 21
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 17, 16, 8, 12, 5, 19, 14, 9, 18, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 0, 4, 2, 3, 7, 21, 10, 6, 11, 13, 22]
====================================
cloned = 15
killed = 1
cloned = 0
killed = 17
cloned = 4
killed = 16
cloned = 2
killed = 8
cloned = 3
killed = 12
cloned = 7
killed = 5
cloned = 21
killed = 19
cloned = 10
killed = 14
cloned = 6
killed = 9
cloned = 11
killed = 18
cloned = 13
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 15, 14, 0, 6, 4, 17, 5, 13, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 12, 19, 11, 20, 1, 18, 16, 10, 8, 3, 22]
====================================
cloned = 21
killed = 2
cloned = 12
killed = 9
cloned = 19
killed = 15
cloned = 11
killed = 14
cloned = 20
killed = 0
cloned = 1
killed = 6
cloned = 18
killed = 4
cloned = 16
killed = 17
cloned = 10
killed = 5
cloned = 8
killed = 13
cloned = 3
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 15, 8, 19, 20, 17, 2, 10, 11, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 12, 13, 16, 7, 0, 21, 14, 1, 18, 9, 22]
====================================
cloned = 4
killed = 5
cloned = 12
killed = 15
cloned = 13
killed = 8
cloned = 16
killed = 19
cloned = 7
killed = 20
cloned = 0
killed = 17
cloned = 21
killed = 2
cloned = 14
killed = 10
cloned = 1
killed = 11
cloned = 18
killed = 6
cloned = 9
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 9, 5, 2, 7, 15, 20, 12, 8, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 17, 13, 10, 3, 21, 18, 6, 14, 16, 4, 22]
====================================
cloned = 1
killed = 19
cloned = 17
killed = 9
cloned = 13
killed = 5
cloned = 10
killed = 2
cloned = 3
killed = 7
cloned = 21
killed = 15
cloned = 18
killed = 20
cloned = 6
killed = 12
cloned = 14
killed = 8
cloned = 16
killed = 0
cloned = 4
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 10, 7, 18, 9, 14, 8, 19, 11, 3, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 4, 16, 1, 20, 13, 0, 6, 15, 17, 12, 22]
====================================
cloned = 2
killed = 5
cloned = 4
killed = 10
cloned = 16
killed = 7
cloned = 1
killed = 18
cloned = 20
killed = 9
cloned = 13
killed = 14
cloned = 0
killed = 8
cloned = 6
killed = 19
cloned = 15
killed = 11
cloned = 17
killed = 3
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 2, 14, 0, 19, 8, 9, 15, 18, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 17, 12, 6, 3, 21, 4, 7, 5, 13, 1, 22]
====================================
cloned = 16
killed = 10
cloned = 17
killed = 20
cloned = 12
killed = 2
cloned = 6
killed = 14
cloned = 3
killed = 0
cloned = 21
killed = 19
cloned = 4
killed = 8
cloned = 7
killed = 9
cloned = 5
killed = 15
cloned = 13
killed = 18
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 16, 7, 5, 3, 8, 13, 6, 4, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 15, 1, 12, 19, 20, 10, 9, 2, 17, 22]
====================================
cloned = 21
killed = 11
cloned = 18
killed = 0
cloned = 15
killed = 16
cloned = 1
killed = 7
cloned = 12
killed = 5
cloned = 19
killed = 3
cloned = 20
killed = 8
cloned = 10
killed = 13
cloned = 9
killed = 6
cloned = 2
killed = 4
cloned = 17
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 6, 3, 19, 20, 2, 12, 16, 1, 11, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 0, 8, 9, 15, 13, 5, 4, 18, 17, 10, 22]
====================================
cloned = 14
killed = 7
cloned = 0
killed = 6
cloned = 8
killed = 3
cloned = 9
killed = 19
cloned = 15
killed = 20
cloned = 13
killed = 2
cloned = 5
killed = 12
cloned = 4
killed = 16
cloned = 18
killed = 1
cloned = 17
killed = 11
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 16, 12, 11, 1, 7, 18, 17, 19, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 15, 2, 21, 14, 6, 9, 4, 5, 20, 22]
====================================
cloned = 8
killed = 3
cloned = 13
killed = 16
cloned = 15
killed = 12
cloned = 2
killed = 11
cloned = 21
killed = 1
cloned = 14
killed = 7
cloned = 6
killed = 18
cloned = 9
killed = 17
cloned = 4
killed = 19
cloned = 5
killed = 0
cloned = 20
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 7, 13, 16, 8, 12, 0, 9, 15, 2, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 10, 3, 17, 14, 1, 11, 4, 6, 5, 22]
====================================
cloned = 21
killed = 19
cloned = 18
killed = 7
cloned = 10
killed = 13
cloned = 3
killed = 16
cloned = 17
killed = 8
cloned = 14
killed = 12
cloned = 1
killed = 0
cloned = 11
killed = 9
cloned = 4
killed = 15
cloned = 6
killed = 2
cloned = 5
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 21, 17, 7, 12, 16, 6, 19, 8, 20, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 18, 5, 10, 0, 13, 2, 3, 14, 4, 11, 22]
====================================
cloned = 15
killed = 1
cloned = 18
killed = 21
cloned = 5
killed = 17
cloned = 10
killed = 7
cloned = 0
killed = 12
cloned = 13
killed = 16
cloned = 2
killed = 6
cloned = 3
killed = 19
cloned = 14
killed = 8
cloned = 4
killed = 20
cloned = 11
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 19, 13, 8, 0, 15, 16, 14, 1, 20, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 17, 3, 9, 10, 12, 11, 5, 2, 4, 21, 22]
====================================
cloned = 18
killed = 6
cloned = 17
killed = 19
cloned = 3
killed = 13
cloned = 9
killed = 8
cloned = 10
killed = 0
cloned = 12
killed = 15
cloned = 11
killed = 16
cloned = 5
killed = 14
cloned = 2
killed = 1
cloned = 4
killed = 20
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 20, 14, 6, 17, 4, 8, 0, 11, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 12, 15, 2, 16, 21, 19, 1, 7, 10, 13, 22]
====================================
cloned = 3
killed = 18
cloned = 12
killed = 9
cloned = 15
killed = 20
cloned = 2
killed = 14
cloned = 16
killed = 6
cloned = 21
killed = 17
cloned = 19
killed = 4
cloned = 1
killed = 8
cloned = 7
killed = 0
cloned = 10
killed = 11
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 17, 20, 2, 3, 8, 18, 16, 13, 5, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 10, 9, 12, 4, 7, 14, 1, 21, 0, 19, 22]
====================================
cloned = 15
killed = 6
cloned = 10
killed = 17
cloned = 9
killed = 20
cloned = 12
killed = 2
cloned = 4
killed = 3
cloned = 7
killed = 8
cloned = 14
killed = 18
cloned = 1
killed = 16
cloned = 21
killed = 13
cloned = 0
killed = 5
cloned = 19
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 15, 10, 8, 14, 5, 6, 1, 13, 21, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 20, 4, 16, 0, 12, 19, 18, 3, 11, 9, 22]
====================================
cloned = 2
killed = 17
cloned = 20
killed = 15
cloned = 4
killed = 10
cloned = 16
killed = 8
cloned = 0
killed = 14
cloned = 12
killed = 5
cloned = 19
killed = 6
cloned = 18
killed = 1
cloned = 3
killed = 13
cloned = 11
killed = 21
cloned = 9
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 0, 1, 2, 5, 10, 8, 18, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 13, 16, 17, 4, 6, 14, 11, 15, 7, 19, 22]
====================================
cloned = 21
killed = 20
cloned = 13
killed = 9
cloned = 16
killed = 0
cloned = 17
killed = 1
cloned = 4
killed = 2
cloned = 6
killed = 5
cloned = 14
killed = 10
cloned = 11
killed = 8
cloned = 15
killed = 18
cloned = 7
killed = 3
cloned = 19
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 3, 20, 10, 16, 19, 1, 0, 7, 9, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 13, 8, 18, 4, 5, 11, 12, 2, 21, 22]
====================================
cloned = 6
killed = 17
cloned = 14
killed = 3
cloned = 13
killed = 20
cloned = 8
killed = 10
cloned = 18
killed = 16
cloned = 4
killed = 19
cloned = 5
killed = 1
cloned = 11
killed = 0
cloned = 12
killed = 7
cloned = 2
killed = 9
cloned = 21
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 13, 4, 19, 18, 1, 15, 8, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 21, 0, 10, 17, 2, 7, 9, 11, 14, 12, 22]
====================================
cloned = 16
killed = 20
cloned = 21
killed = 3
cloned = 0
killed = 13
cloned = 10
killed = 4
cloned = 17
killed = 19
cloned = 2
killed = 18
cloned = 7
killed = 1
cloned = 9
killed = 15
cloned = 11
killed = 8
cloned = 14
killed = 5
cloned = 12
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 17, 3, 13, 5, 12, 19, 8, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 20, 11, 4, 1, 14, 10, 2, 18, 21, 16, 22]
====================================
cloned = 0
killed = 9
cloned = 20
killed = 15
cloned = 11
killed = 17
cloned = 4
killed = 3
cloned = 1
killed = 13
cloned = 14
killed = 5
cloned = 10
killed = 12
cloned = 2
killed = 19
cloned = 18
killed = 8
cloned = 21
killed = 6
cloned = 16
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 9, 17, 4, 11, 13, 6, 15, 16, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 18, 8, 0, 1, 5, 20, 14, 2, 21, 19, 22]
====================================
cloned = 10
killed = 7
cloned = 18
killed = 9
cloned = 8
killed = 17
cloned = 0
killed = 4
cloned = 1
killed = 11
cloned = 5
killed = 13
cloned = 20
killed = 6
cloned = 14
killed = 15
cloned = 2
killed = 16
cloned = 21
killed = 3
cloned = 19
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 0, 18, 7, 8, 4, 1, 19, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 6, 15, 14, 17, 2, 9, 5, 16, 13, 11, 22]
====================================
cloned = 21
killed = 20
cloned = 6
killed = 3
cloned = 15
killed = 0
cloned = 14
killed = 18
cloned = 17
killed = 7
cloned = 2
killed = 8
cloned = 9
killed = 4
cloned = 5
killed = 1
cloned = 16
killed = 19
cloned = 13
killed = 12
cloned = 11
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 21, 19, 11, 2, 1, 12, 13, 3, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 14, 8, 7, 20, 0, 6, 18, 16, 9, 22]
====================================
cloned = 5
killed = 17
cloned = 4
killed = 10
cloned = 14
killed = 21
cloned = 8
killed = 19
cloned = 7
killed = 11
cloned = 20
killed = 2
cloned = 0
killed = 1
cloned = 6
killed = 12
cloned = 18
killed = 13
cloned = 16
killed = 3
cloned = 9
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 14, 11, 17, 12, 1, 13, 7, 5, 2, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 6, 16, 8, 19, 20, 9, 3, 21, 18, 0, 22]
====================================
cloned = 15
killed = 4
cloned = 6
killed = 14
cloned = 16
killed = 11
cloned = 8
killed = 17
cloned = 19
killed = 12
cloned = 20
killed = 1
cloned = 9
killed = 13
cloned = 3
killed = 7
cloned = 21
killed = 5
cloned = 18
killed = 2
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 7, 10, 18, 3, 14, 11, 19, 17, 6, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 0, 20, 4, 13, 12, 15, 5, 1, 21, 9, 22]
====================================
cloned = 8
killed = 2
cloned = 0
killed = 7
cloned = 20
killed = 10
cloned = 4
killed = 18
cloned = 13
killed = 3
cloned = 12
killed = 14
cloned = 15
killed = 11
cloned = 5
killed = 19
cloned = 1
killed = 17
cloned = 21
killed = 6
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 19, 14, 10, 6, 3, 9, 1, 15, 11, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 7, 5, 2, 0, 20, 4, 16, 21, 13, 8, 22]
====================================
cloned = 12
killed = 18
cloned = 7
killed = 19
cloned = 5
killed = 14
cloned = 2
killed = 10
cloned = 0
killed = 6
cloned = 20
killed = 3
cloned = 4
killed = 9
cloned = 16
killed = 1
cloned = 21
killed = 15
cloned = 13
killed = 11
cloned = 8
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 21, 9, 0, 15, 10, 2, 18, 11, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 7, 5, 8, 19, 6, 20, 4, 12, 16, 1, 22]
====================================
cloned = 13
killed = 3
cloned = 7
killed = 14
cloned = 5
killed = 21
cloned = 8
killed = 9
cloned = 19
killed = 0
cloned = 6
killed = 15
cloned = 20
killed = 10
cloned = 4
killed = 2
cloned = 12
killed = 18
cloned = 16
killed = 11
cloned = 1
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 18, 9, 5, 3, 0, 20, 19, 10, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 11, 4, 6, 21, 15, 2, 16, 14, 13, 7, 22]
====================================
cloned = 1
killed = 12
cloned = 11
killed = 8
cloned = 4
killed = 18
cloned = 6
killed = 9
cloned = 21
killed = 5
cloned = 15
killed = 3
cloned = 2
killed = 0
cloned = 16
killed = 20
cloned = 14
killed = 19
cloned = 13
killed = 10
cloned = 7
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 9, 11, 8, 2, 15, 0, 13, 16, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 19, 4, 1, 7, 6, 17, 20, 12, 5, 18, 22]
====================================
cloned = 21
killed = 3
cloned = 19
killed = 10
cloned = 4
killed = 9
cloned = 1
killed = 11
cloned = 7
killed = 8
cloned = 6
killed = 2
cloned = 17
killed = 15
cloned = 20
killed = 0
cloned = 12
killed = 13
cloned = 5
killed = 16
cloned = 18
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 19, 18, 17, 12, 0, 1, 20, 16, 13, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 4, 15, 10, 9, 8, 5, 14, 11, 21, 6, 22]
====================================
cloned = 3
killed = 2
cloned = 4
killed = 19
cloned = 15
killed = 18
cloned = 10
killed = 17
cloned = 9
killed = 12
cloned = 8
killed = 0
cloned = 5
killed = 1
cloned = 14
killed = 20
cloned = 11
killed = 16
cloned = 21
killed = 13
cloned = 6
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 17, 20, 19, 1, 18, 6, 16, 21, 11, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 15, 5, 14, 3, 4, 9, 13, 7, 12, 2, 22]
====================================
cloned = 8
killed = 0
cloned = 15
killed = 17
cloned = 5
killed = 20
cloned = 14
killed = 19
cloned = 3
killed = 1
cloned = 4
killed = 18
cloned = 9
killed = 6
cloned = 13
killed = 16
cloned = 7
killed = 21
cloned = 12
killed = 11
cloned = 2
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 17, 12, 3, 14, 7, 21, 16, 13, 19, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 6, 20, 10, 15, 5, 1, 18, 4, 8, 2, 22]
====================================
cloned = 11
killed = 0
cloned = 6
killed = 17
cloned = 20
killed = 12
cloned = 10
killed = 3
cloned = 15
killed = 14
cloned = 5
killed = 7
cloned = 1
killed = 21
cloned = 18
killed = 16
cloned = 4
killed = 13
cloned = 8
killed = 19
cloned = 2
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 0, 20, 19, 2, 4, 13, 10, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 7, 3, 14, 21, 16, 5, 11, 6, 17, 18, 22]
====================================
cloned = 12
killed = 9
cloned = 7
killed = 15
cloned = 3
killed = 0
cloned = 14
killed = 20
cloned = 21
killed = 19
cloned = 16
killed = 2
cloned = 5
killed = 4
cloned = 11
killed = 13
cloned = 6
killed = 10
cloned = 17
killed = 1
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 21, 8, 2, 20, 12, 19, 18, 4, 15, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 13, 11, 17, 14, 10, 7, 6, 3, 16, 9, 22]
====================================
cloned = 1
killed = 5
cloned = 13
killed = 21
cloned = 11
killed = 8
cloned = 17
killed = 2
cloned = 14
killed = 20
cloned = 10
killed = 12
cloned = 7
killed = 19
cloned = 6
killed = 18
cloned = 3
killed = 4
cloned = 16
killed = 15
cloned = 9
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 17, 15, 10, 3, 9, 5, 14, 0, 20, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 8, 21, 4, 12, 7, 13, 6, 18, 16, 11, 22]
====================================
cloned = 19
killed = 1
cloned = 8
killed = 17
cloned = 21
killed = 15
cloned = 4
killed = 10
cloned = 12
killed = 3
cloned = 7
killed = 9
cloned = 13
killed = 5
cloned = 6
killed = 14
cloned = 18
killed = 0
cloned = 16
killed = 20
cloned = 11
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 21, 14, 6, 13, 8, 2, 19, 18, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 1, 15, 17, 7, 0, 20, 3, 9, 12, 22]
====================================
cloned = 4
killed = 5
cloned = 16
killed = 21
cloned = 1
killed = 14
cloned = 15
killed = 6
cloned = 17
killed = 13
cloned = 7
killed = 8
cloned = 0
killed = 2
cloned = 20
killed = 19
cloned = 3
killed = 18
cloned = 9
killed = 10
cloned = 12
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 14, 18, 12, 20, 9, 21, 16, 7, 2, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 8, 17, 4, 1, 13, 11, 19, 0, 5, 10, 22]
====================================
cloned = 15
killed = 6
cloned = 8
killed = 14
cloned = 17
killed = 18
cloned = 4
killed = 12
cloned = 1
killed = 20
cloned = 13
killed = 9
cloned = 11
killed = 21
cloned = 19
killed = 16
cloned = 0
killed = 7
cloned = 5
killed = 2
cloned = 10
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 6, 15, 19, 18, 5, 16, 11, 20, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 12, 13, 3, 8, 1, 10, 2, 21, 9, 22]
====================================
cloned = 14
killed = 0
cloned = 4
killed = 7
cloned = 12
killed = 6
cloned = 13
killed = 15
cloned = 3
killed = 19
cloned = 8
killed = 18
cloned = 1
killed = 5
cloned = 10
killed = 16
cloned = 2
killed = 11
cloned = 21
killed = 20
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 1, 4, 13, 12, 5, 20, 19, 16, 15, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 3, 7, 0, 11, 18, 14, 9, 17, 21, 8, 22]
====================================
cloned = 2
killed = 10
cloned = 3
killed = 1
cloned = 7
killed = 4
cloned = 0
killed = 13
cloned = 11
killed = 12
cloned = 18
killed = 5
cloned = 14
killed = 20
cloned = 9
killed = 19
cloned = 17
killed = 16
cloned = 21
killed = 15
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 20, 6, 7, 3, 14, 16, 11, 1, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 9, 13, 18, 5, 17, 10, 19, 4, 12, 21, 22]
====================================
cloned = 2
killed = 15
cloned = 9
killed = 20
cloned = 13
killed = 6
cloned = 18
killed = 7
cloned = 5
killed = 3
cloned = 17
killed = 14
cloned = 10
killed = 16
cloned = 19
killed = 11
cloned = 4
killed = 1
cloned = 12
killed = 0
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 5, 2, 8, 17, 3, 6, 19, 1, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 4, 7, 12, 15, 13, 18, 21, 9, 14, 20, 22]
====================================
cloned = 16
killed = 0
cloned = 4
killed = 5
cloned = 7
killed = 2
cloned = 12
killed = 8
cloned = 15
killed = 17
cloned = 13
killed = 3
cloned = 18
killed = 6
cloned = 21
killed = 19
cloned = 9
killed = 1
cloned = 14
killed = 10
cloned = 20
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 2, 20, 21, 0, 14, 1, 5, 4, 18, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 10, 8, 16, 9, 7, 17, 12, 19, 6, 15, 22]
====================================
cloned = 3
killed = 11
cloned = 10
killed = 2
cloned = 8
killed = 20
cloned = 16
killed = 21
cloned = 9
killed = 0
cloned = 7
killed = 14
cloned = 17
killed = 1
cloned = 12
killed = 5
cloned = 19
killed = 4
cloned = 6
killed = 18
cloned = 15
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 15, 2, 3, 5, 10, 8, 21, 16, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 17, 14, 19, 11, 0, 18, 20, 9, 1, 7, 22]
====================================
cloned = 4
killed = 13
cloned = 17
killed = 6
cloned = 14
killed = 15
cloned = 19
killed = 2
cloned = 11
killed = 3
cloned = 0
killed = 5
cloned = 18
killed = 10
cloned = 20
killed = 8
cloned = 9
killed = 21
cloned = 1
killed = 16
cloned = 7
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 16, 7, 12, 8, 15, 9, 13, 19, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 6, 21, 18, 3, 14, 4, 17, 11, 20, 10, 22]
====================================
cloned = 1
killed = 5
cloned = 6
killed = 2
cloned = 21
killed = 16
cloned = 18
killed = 7
cloned = 3
killed = 12
cloned = 14
killed = 8
cloned = 4
killed = 15
cloned = 17
killed = 9
cloned = 11
killed = 13
cloned = 20
killed = 19
cloned = 10
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 4, 15, 12, 14, 9, 6, 0, 16, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 21, 17, 10, 3, 7, 2, 13, 20, 11, 5, 22]
====================================
cloned = 18
killed = 19
cloned = 21
killed = 4
cloned = 17
killed = 15
cloned = 10
killed = 12
cloned = 3
killed = 14
cloned = 7
killed = 9
cloned = 2
killed = 6
cloned = 13
killed = 0
cloned = 20
killed = 16
cloned = 11
killed = 8
cloned = 5
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 17, 16, 0, 21, 2, 1, 20, 14, 4, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 13, 8, 15, 11, 12, 3, 7, 18, 6, 10, 22]
====================================
cloned = 9
killed = 19
cloned = 13
killed = 17
cloned = 8
killed = 16
cloned = 15
killed = 0
cloned = 11
killed = 21
cloned = 12
killed = 2
cloned = 3
killed = 1
cloned = 7
killed = 20
cloned = 18
killed = 14
cloned = 6
killed = 4
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 12, 21, 1, 10, 0, 3, 4, 19, 11, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 7, 6, 5, 17, 18, 8, 9, 2, 16, 14, 22]
====================================
cloned = 15
killed = 13
cloned = 7
killed = 12
cloned = 6
killed = 21
cloned = 5
killed = 1
cloned = 17
killed = 10
cloned = 18
killed = 0
cloned = 8
killed = 3
cloned = 9
killed = 4
cloned = 2
killed = 19
cloned = 16
killed = 11
cloned = 14
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 21, 6, 4, 18, 15, 9, 13, 10, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 7, 20, 19, 17, 5, 0, 2, 16, 8, 12, 22]
====================================
cloned = 14
killed = 11
cloned = 7
killed = 1
cloned = 20
killed = 21
cloned = 19
killed = 6
cloned = 17
killed = 4
cloned = 5
killed = 18
cloned = 0
killed = 15
cloned = 2
killed = 9
cloned = 16
killed = 13
cloned = 8
killed = 10
cloned = 12
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 12, 7, 20, 10, 9, 5, 8, 16, 14, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 3, 18, 17, 11, 1, 2, 4, 15, 19, 13, 22]
====================================
cloned = 0
killed = 21
cloned = 3
killed = 12
cloned = 18
killed = 7
cloned = 17
killed = 20
cloned = 11
killed = 10
cloned = 1
killed = 9
cloned = 2
killed = 5
cloned = 4
killed = 8
cloned = 15
killed = 16
cloned = 19
killed = 14
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 12, 18, 2, 21, 1, 7, 13, 8, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 9, 4, 16, 6, 17, 10, 5, 15, 19, 0, 22]
====================================
cloned = 11
killed = 20
cloned = 9
killed = 3
cloned = 4
killed = 12
cloned = 16
killed = 18
cloned = 6
killed = 2
cloned = 17
killed = 21
cloned = 10
killed = 1
cloned = 5
killed = 7
cloned = 15
killed = 13
cloned = 19
killed = 8
cloned = 0
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 7, 16, 10, 18, 5, 15, 1, 0, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 11, 9, 4, 19, 13, 8, 17, 6, 20, 21, 22]
====================================
cloned = 2
killed = 12
cloned = 11
killed = 3
cloned = 9
killed = 7
cloned = 4
killed = 16
cloned = 19
killed = 10
cloned = 13
killed = 18
cloned = 8
killed = 5
cloned = 17
killed = 15
cloned = 6
killed = 1
cloned = 20
killed = 0
cloned = 21
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 19, 0, 2, 9, 12, 11, 4, 15, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 18, 6, 20, 14, 5, 8, 1, 3, 17, 22]
====================================
cloned = 7
killed = 13
cloned = 10
killed = 16
cloned = 18
killed = 19
cloned = 6
killed = 0
cloned = 20
killed = 2
cloned = 14
killed = 9
cloned = 5
killed = 12
cloned = 8
killed = 11
cloned = 1
killed = 4
cloned = 3
killed = 15
cloned = 17
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 16, 3, 13, 12, 2, 11, 15, 7, 14, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 20, 21, 17, 5, 18, 9, 19, 8, 4, 1, 22]
====================================
cloned = 6
killed = 10
cloned = 20
killed = 16
cloned = 21
killed = 3
cloned = 17
killed = 13
cloned = 5
killed = 12
cloned = 18
killed = 2
cloned = 9
killed = 11
cloned = 19
killed = 15
cloned = 8
killed = 7
cloned = 4
killed = 14
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 20, 14, 6, 2, 9, 18, 4, 0, 7, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 11, 15, 13, 10, 16, 1, 5, 21, 12, 3, 22]
====================================
cloned = 8
killed = 17
cloned = 11
killed = 20
cloned = 15
killed = 14
cloned = 13
killed = 6
cloned = 10
killed = 2
cloned = 16
killed = 9
cloned = 1
killed = 18
cloned = 5
killed = 4
cloned = 21
killed = 0
cloned = 12
killed = 7
cloned = 3
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 21, 12, 19, 3, 17, 8, 6, 2, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 16, 15, 4, 11, 13, 5, 7, 10, 14, 22]
====================================
cloned = 20
killed = 1
cloned = 18
killed = 9
cloned = 16
killed = 21
cloned = 15
killed = 12
cloned = 4
killed = 19
cloned = 11
killed = 3
cloned = 13
killed = 17
cloned = 5
killed = 8
cloned = 7
killed = 6
cloned = 10
killed = 2
cloned = 14
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 9, 7, 12, 0, 10, 17, 18, 13, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 1, 5, 6, 20, 3, 21, 2, 14, 15, 4, 22]
====================================
cloned = 16
killed = 19
cloned = 1
killed = 9
cloned = 5
killed = 7
cloned = 6
killed = 12
cloned = 20
killed = 0
cloned = 3
killed = 10
cloned = 21
killed = 17
cloned = 2
killed = 18
cloned = 14
killed = 13
cloned = 15
killed = 8
cloned = 4
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 7, 1, 19, 17, 3, 2, 10, 16, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 20, 21, 12, 0, 14, 9, 8, 5, 18, 22]
====================================
cloned = 13
killed = 15
cloned = 4
killed = 7
cloned = 20
killed = 1
cloned = 21
killed = 19
cloned = 12
killed = 17
cloned = 0
killed = 3
cloned = 14
killed = 2
cloned = 9
killed = 10
cloned = 8
killed = 16
cloned = 5
killed = 6
cloned = 18
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 10, 3, 12, 11, 2, 1, 9, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 15, 21, 0, 8, 16, 17, 19, 18, 14, 5, 22]
====================================
cloned = 20
killed = 6
cloned = 15
killed = 13
cloned = 21
killed = 10
cloned = 0
killed = 3
cloned = 8
killed = 12
cloned = 16
killed = 11
cloned = 17
killed = 2
cloned = 19
killed = 1
cloned = 18
killed = 9
cloned = 14
killed = 7
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 15, 1, 6, 20, 11, 2, 12, 14, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 13, 7, 10, 8, 21, 0, 9, 16, 4, 17, 22]
====================================
cloned = 18
killed = 5
cloned = 13
killed = 3
cloned = 7
killed = 15
cloned = 10
killed = 1
cloned = 8
killed = 6
cloned = 21
killed = 20
cloned = 0
killed = 11
cloned = 9
killed = 2
cloned = 16
killed = 12
cloned = 4
killed = 14
cloned = 17
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 20, 9, 8, 3, 4, 18, 1, 19, 0, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 12, 17, 7, 21, 2, 14, 6, 16, 13, 15, 22]
====================================
cloned = 10
killed = 5
cloned = 12
killed = 20
cloned = 17
killed = 9
cloned = 7
killed = 8
cloned = 21
killed = 3
cloned = 2
killed = 4
cloned = 14
killed = 18
cloned = 6
killed = 1
cloned = 16
killed = 19
cloned = 13
killed = 0
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 4, 10, 0, 13, 14, 20, 9, 21, 18, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 6, 15, 5, 19, 1, 8, 17, 3, 2, 7, 22]
====================================
cloned = 12
killed = 11
cloned = 6
killed = 4
cloned = 15
killed = 10
cloned = 5
killed = 0
cloned = 19
killed = 13
cloned = 1
killed = 14
cloned = 8
killed = 20
cloned = 17
killed = 9
cloned = 3
killed = 21
cloned = 2
killed = 18
cloned = 7
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 21, 15, 13, 8, 0, 10, 7, 20, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 19, 16, 1, 14, 3, 5, 12, 11, 2, 18, 22]
====================================
cloned = 6
killed = 17
cloned = 19
killed = 21
cloned = 16
killed = 15
cloned = 1
killed = 13
cloned = 14
killed = 8
cloned = 3
killed = 0
cloned = 5
killed = 10
cloned = 12
killed = 7
cloned = 11
killed = 20
cloned = 2
killed = 4
cloned = 18
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 19, 7, 9, 17, 3, 13, 0, 4, 20, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 6, 5, 11, 1, 21, 8, 2, 12, 15, 16, 22]
====================================
cloned = 14
killed = 18
cloned = 6
killed = 19
cloned = 5
killed = 7
cloned = 11
killed = 9
cloned = 1
killed = 17
cloned = 21
killed = 3
cloned = 8
killed = 13
cloned = 2
killed = 0
cloned = 12
killed = 4
cloned = 15
killed = 20
cloned = 16
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 13, 16, 3, 20, 14, 19, 2, 11, 21, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 1, 8, 15, 10, 9, 4, 18, 17, 5, 12, 22]
====================================
cloned = 0
killed = 6
cloned = 1
killed = 13
cloned = 8
killed = 16
cloned = 15
killed = 3
cloned = 10
killed = 20
cloned = 9
killed = 14
cloned = 4
killed = 19
cloned = 18
killed = 2
cloned = 17
killed = 11
cloned = 5
killed = 21
cloned = 12
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 0, 4, 19, 8, 21, 16, 6, 17, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 14, 11, 2, 18, 5, 20, 13, 12, 9, 3, 22]
====================================
cloned = 1
killed = 10
cloned = 14
killed = 7
cloned = 11
killed = 0
cloned = 2
killed = 4
cloned = 18
killed = 19
cloned = 5
killed = 8
cloned = 20
killed = 21
cloned = 13
killed = 16
cloned = 12
killed = 6
cloned = 9
killed = 17
cloned = 3
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 19, 10, 18, 0, 11, 21, 15, 16, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 12, 2, 4, 17, 14, 8, 6, 9, 20, 22]
====================================
cloned = 5
killed = 3
cloned = 13
killed = 1
cloned = 12
killed = 19
cloned = 2
killed = 10
cloned = 4
killed = 18
cloned = 17
killed = 0
cloned = 14
killed = 11
cloned = 8
killed = 21
cloned = 6
killed = 15
cloned = 9
killed = 16
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 20, 8, 10, 11, 18, 17, 14, 16, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 5, 6, 13, 21, 15, 3, 19, 4, 7, 0, 22]
====================================
cloned = 12
killed = 2
cloned = 5
killed = 9
cloned = 6
killed = 20
cloned = 13
killed = 8
cloned = 21
killed = 10
cloned = 15
killed = 11
cloned = 3
killed = 18
cloned = 19
killed = 17
cloned = 4
killed = 14
cloned = 7
killed = 16
cloned = 0
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 1, 19, 14, 10, 11, 9, 13, 7, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 20, 16, 21, 12, 5, 6, 17, 0, 8, 4, 22]
====================================
cloned = 18
killed = 2
cloned = 20
killed = 3
cloned = 16
killed = 1
cloned = 21
killed = 19
cloned = 12
killed = 14
cloned = 5
killed = 10
cloned = 6
killed = 11
cloned = 17
killed = 9
cloned = 0
killed = 13
cloned = 8
killed = 7
cloned = 4
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 19, 16, 2, 4, 18, 21, 14, 7, 5, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 13, 12, 17, 3, 0, 9, 1, 10, 6, 8, 22]
====================================
cloned = 11
killed = 20
cloned = 13
killed = 19
cloned = 12
killed = 16
cloned = 17
killed = 2
cloned = 3
killed = 4
cloned = 0
killed = 18
cloned = 9
killed = 21
cloned = 1
killed = 14
cloned = 10
killed = 7
cloned = 6
killed = 5
cloned = 8
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 2, 3, 10, 0, 8, 5, 17, 16, 7, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 4, 6, 9, 15, 12, 14, 18, 19, 11, 13, 22]
====================================
cloned = 21
killed = 20
cloned = 4
killed = 2
cloned = 6
killed = 3
cloned = 9
killed = 10
cloned = 15
killed = 0
cloned = 12
killed = 8
cloned = 14
killed = 5
cloned = 18
killed = 17
cloned = 19
killed = 16
cloned = 11
killed = 7
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 3, 1, 0, 8, 17, 7, 15, 19, 13, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 5, 18, 10, 6, 14, 2, 9, 21, 11, 16, 22]
====================================
cloned = 12
killed = 4
cloned = 5
killed = 3
cloned = 18
killed = 1
cloned = 10
killed = 0
cloned = 6
killed = 8
cloned = 14
killed = 17
cloned = 2
killed = 7
cloned = 9
killed = 15
cloned = 21
killed = 19
cloned = 11
killed = 13
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 0, 15, 7, 9, 11, 10, 20, 4, 5, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 17, 2, 16, 19, 21, 18, 3, 12, 14, 13, 22]
====================================
cloned = 1
killed = 8
cloned = 17
killed = 0
cloned = 2
killed = 15
cloned = 16
killed = 7
cloned = 19
killed = 9
cloned = 21
killed = 11
cloned = 18
killed = 10
cloned = 3
killed = 20
cloned = 12
killed = 4
cloned = 14
killed = 5
cloned = 13
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 14, 12, 10, 19, 11, 13, 21, 15, 20, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 8, 6, 4, 2, 9, 1, 7, 17, 3, 18, 22]
====================================
cloned = 5
killed = 0
cloned = 8
killed = 14
cloned = 6
killed = 12
cloned = 4
killed = 10
cloned = 2
killed = 19
cloned = 9
killed = 11
cloned = 1
killed = 13
cloned = 7
killed = 21
cloned = 17
killed = 15
cloned = 3
killed = 20
cloned = 18
killed = 16
Trial run 14/seed 869:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'DBS: 0.75, 3, 4, 3, 5': 3}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.330000000000005,
  56.82,
  59.455,
  54.695,
  52.27499999999999,
  54.555,
  55.519999999999996,
  36.9,
  44.955000000000005,
  31.724999999999994,
  47.865,
  50.739999999999995,
  47.459999999999994,
  52.405,
  56.485,
  36.88,
  51.525000000000006,
  47.045,
  45.55,
  43.825,
  34.85000000000001,
  55.449999999999996,
  52.91],
 [65.7,
  64.27999999999999,
  65.75,
  62.870000000000005,
  62.47,
  62.16,
  62.495000000000005,
  65.7,
  65.40500000000002,
  65.75,
  62.870000000000005,
  62.385,
  62.160000000000004,
  63.540000000000006,
  59.084999999999994,
  61.025,
  62.58,
  63.540000000000006,
  58.629999999999995,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.440000000000005,
 55.864999999999995,
 59.345,
 54.910000000000004,
 52.269999999999996,
 54.035000000000004,
 52.584999999999994,
 36.720000000000006,
 44.790000000000006,
 29.509999999999998,
 48.085,
 50.709999999999994,
 45.77499999999999,
 52.335,
 55.88999999999999,
 36.985,
 51.72,
 47.185,
 46.214999999999996,
 43.86000000000001,
 34.995000000000005,
 55.434999999999995,
 53.53999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.72
Upper: 51.72
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 67.045,
 65.75,
 62.870000000000005,
 62.23,
 62.16,
 62.26499999999999,
 65.7,
 63.775000000000006,
 65.75,
 62.870000000000005,
 62.440000000000005,
 62.160000000000004,
 63.540000000000006,
 58.71999999999999,
 61.875,
 62.58,
 63.540000000000006,
 58.72,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 16]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 20, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 20
killed = 16
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 0, 7, 4, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 0
killed = 20
cloned = 7
killed = 21
cloned = 4
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 4, 20, 7]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 12, 0, 21, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 12
killed = 4
cloned = 0
killed = 20
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 19, 15, 17, 16, 12, 9, 1, 3, 14, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 0, 20, 8, 2, 11, 5, 18, 6, 4, 21, 22]
====================================
cloned = 10
killed = 13
cloned = 0
killed = 19
cloned = 20
killed = 15
cloned = 8
killed = 17
cloned = 2
killed = 16
cloned = 11
killed = 12
cloned = 5
killed = 9
cloned = 18
killed = 1
cloned = 6
killed = 3
cloned = 4
killed = 14
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 19, 5, 20, 15, 7, 6, 10, 18, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 0, 1, 17, 16, 11, 8, 21, 13, 3, 22]
====================================
cloned = 14
killed = 2
cloned = 4
killed = 19
cloned = 0
killed = 5
cloned = 1
killed = 20
cloned = 17
killed = 15
cloned = 16
killed = 7
cloned = 11
killed = 6
cloned = 8
killed = 10
cloned = 21
killed = 18
cloned = 13
killed = 12
cloned = 3
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 7, 12, 10, 3, 15, 16, 18, 6, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 20, 13, 4, 5, 0, 19, 14, 1, 8, 17, 22]
====================================
cloned = 21
killed = 11
cloned = 20
killed = 7
cloned = 13
killed = 12
cloned = 4
killed = 10
cloned = 5
killed = 3
cloned = 0
killed = 15
cloned = 19
killed = 16
cloned = 14
killed = 18
cloned = 1
killed = 6
cloned = 8
killed = 9
cloned = 17
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 2, 20, 7, 14, 11, 21, 3, 6, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 13, 12, 18, 19, 5, 0, 9, 1, 16, 17, 22]
====================================
cloned = 4
killed = 15
cloned = 13
killed = 2
cloned = 12
killed = 20
cloned = 18
killed = 7
cloned = 19
killed = 14
cloned = 5
killed = 11
cloned = 0
killed = 21
cloned = 9
killed = 3
cloned = 1
killed = 6
cloned = 16
killed = 8
cloned = 17
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 11, 0, 10, 5, 18, 3, 19, 2, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 13, 14, 16, 21, 9, 17, 20, 1, 6, 12, 22]
====================================
cloned = 15
killed = 8
cloned = 13
killed = 11
cloned = 14
killed = 0
cloned = 16
killed = 10
cloned = 21
killed = 5
cloned = 9
killed = 18
cloned = 17
killed = 3
cloned = 20
killed = 19
cloned = 1
killed = 2
cloned = 6
killed = 7
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 2, 5, 20, 0, 9, 3, 13, 16, 12, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 11, 17, 1, 4, 10, 8, 7, 21, 18, 19, 22]
====================================
cloned = 6
killed = 14
cloned = 11
killed = 2
cloned = 17
killed = 5
cloned = 1
killed = 20
cloned = 4
killed = 0
cloned = 10
killed = 9
cloned = 8
killed = 3
cloned = 7
killed = 13
cloned = 21
killed = 16
cloned = 18
killed = 12
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 19, 6, 14, 15, 11, 10, 8, 2, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 0, 18, 5, 20, 13, 4, 16, 21, 7, 9, 22]
====================================
cloned = 1
killed = 12
cloned = 0
killed = 3
cloned = 18
killed = 19
cloned = 5
killed = 6
cloned = 20
killed = 14
cloned = 13
killed = 15
cloned = 4
killed = 11
cloned = 16
killed = 10
cloned = 21
killed = 8
cloned = 7
killed = 2
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 8, 21, 15, 2, 20, 0, 18, 16, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 5, 6, 10, 9, 4, 3, 19, 1, 17, 13, 22]
====================================
cloned = 14
killed = 11
cloned = 5
killed = 8
cloned = 6
killed = 21
cloned = 10
killed = 15
cloned = 9
killed = 2
cloned = 4
killed = 20
cloned = 3
killed = 0
cloned = 19
killed = 18
cloned = 1
killed = 16
cloned = 17
killed = 7
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 17, 12, 15, 7, 0, 20, 5, 8, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 21, 6, 1, 11, 19, 2, 13, 18, 3, 4, 22]
====================================
cloned = 14
killed = 16
cloned = 21
killed = 17
cloned = 6
killed = 12
cloned = 1
killed = 15
cloned = 11
killed = 7
cloned = 19
killed = 0
cloned = 2
killed = 20
cloned = 13
killed = 5
cloned = 18
killed = 8
cloned = 3
killed = 9
cloned = 4
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 5, 19, 10, 14, 18, 2, 7, 15, 21, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 12, 11, 8, 9, 17, 0, 1, 16, 20, 22]
====================================
cloned = 13
killed = 6
cloned = 4
killed = 5
cloned = 12
killed = 19
cloned = 11
killed = 10
cloned = 8
killed = 14
cloned = 9
killed = 18
cloned = 17
killed = 2
cloned = 0
killed = 7
cloned = 1
killed = 15
cloned = 16
killed = 21
cloned = 20
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 8, 15, 4, 16, 21, 20, 0, 13, 7, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 5, 3, 9, 6, 11, 14, 12, 19, 2, 1, 22]
====================================
cloned = 10
killed = 17
cloned = 5
killed = 8
cloned = 3
killed = 15
cloned = 9
killed = 4
cloned = 6
killed = 16
cloned = 11
killed = 21
cloned = 14
killed = 20
cloned = 12
killed = 0
cloned = 19
killed = 13
cloned = 2
killed = 7
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 20, 3, 13, 9, 16, 2, 19, 18, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 6, 12, 7, 0, 14, 10, 21, 15, 4, 8, 22]
====================================
cloned = 5
killed = 17
cloned = 6
killed = 20
cloned = 12
killed = 3
cloned = 7
killed = 13
cloned = 0
killed = 9
cloned = 14
killed = 16
cloned = 10
killed = 2
cloned = 21
killed = 19
cloned = 15
killed = 18
cloned = 4
killed = 1
cloned = 8
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 17, 3, 11, 19, 10, 12, 14, 18, 13, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 9, 2, 16, 4, 20, 21, 0, 8, 7, 15, 22]
====================================
cloned = 6
killed = 1
cloned = 9
killed = 17
cloned = 2
killed = 3
cloned = 16
killed = 11
cloned = 4
killed = 19
cloned = 20
killed = 10
cloned = 21
killed = 12
cloned = 0
killed = 14
cloned = 8
killed = 18
cloned = 7
killed = 13
cloned = 15
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 18, 20, 7, 14, 17, 21, 1, 10, 19, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 12, 9, 16, 11, 13, 8, 5, 0, 4, 22]
====================================
cloned = 2
killed = 3
cloned = 15
killed = 18
cloned = 12
killed = 20
cloned = 9
killed = 7
cloned = 16
killed = 14
cloned = 11
killed = 17
cloned = 13
killed = 21
cloned = 8
killed = 1
cloned = 5
killed = 10
cloned = 0
killed = 19
cloned = 4
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 16, 18, 5, 11, 13, 6, 20, 14, 1, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 15, 8, 3, 2, 7, 17, 12, 9, 0, 19, 22]
====================================
cloned = 21
killed = 10
cloned = 15
killed = 16
cloned = 8
killed = 18
cloned = 3
killed = 5
cloned = 2
killed = 11
cloned = 7
killed = 13
cloned = 17
killed = 6
cloned = 12
killed = 20
cloned = 9
killed = 14
cloned = 0
killed = 1
cloned = 19
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 2, 19, 14, 11, 12, 4, 6, 0, 18, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 17, 8, 7, 16, 5, 13, 10, 3, 15, 20, 22]
====================================
cloned = 21
killed = 1
cloned = 17
killed = 2
cloned = 8
killed = 19
cloned = 7
killed = 14
cloned = 16
killed = 11
cloned = 5
killed = 12
cloned = 13
killed = 4
cloned = 10
killed = 6
cloned = 3
killed = 0
cloned = 15
killed = 18
cloned = 20
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 15, 21, 14, 7, 5, 17, 10, 8, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 11, 18, 4, 19, 1, 2, 9, 13, 20, 3, 22]
====================================
cloned = 16
killed = 0
cloned = 11
killed = 6
cloned = 18
killed = 15
cloned = 4
killed = 21
cloned = 19
killed = 14
cloned = 1
killed = 7
cloned = 2
killed = 5
cloned = 9
killed = 17
cloned = 13
killed = 10
cloned = 20
killed = 8
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 18, 19, 4, 14, 7, 5, 16, 11, 3, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 0, 20, 2, 21, 6, 12, 17, 15, 13, 1, 22]
====================================
cloned = 8
killed = 10
cloned = 0
killed = 18
cloned = 20
killed = 19
cloned = 2
killed = 4
cloned = 21
killed = 14
cloned = 6
killed = 7
cloned = 12
killed = 5
cloned = 17
killed = 16
cloned = 15
killed = 11
cloned = 13
killed = 3
cloned = 1
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 11, 15, 8, 6, 5, 20, 14, 4, 19, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 18, 3, 0, 1, 9, 7, 10, 21, 17, 2, 22]
====================================
cloned = 13
killed = 16
cloned = 18
killed = 11
cloned = 3
killed = 15
cloned = 0
killed = 8
cloned = 1
killed = 6
cloned = 9
killed = 5
cloned = 7
killed = 20
cloned = 10
killed = 14
cloned = 21
killed = 4
cloned = 17
killed = 19
cloned = 2
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 19, 21, 8, 9, 5, 20, 14, 6, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 1, 0, 15, 17, 3, 16, 7, 4, 18, 13, 22]
====================================
cloned = 11
killed = 2
cloned = 1
killed = 19
cloned = 0
killed = 21
cloned = 15
killed = 8
cloned = 17
killed = 9
cloned = 3
killed = 5
cloned = 16
killed = 20
cloned = 7
killed = 14
cloned = 4
killed = 6
cloned = 18
killed = 12
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 5, 4, 2, 10, 6, 15, 19, 7, 11, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 13, 14, 16, 12, 3, 8, 21, 0, 18, 17, 22]
====================================
cloned = 9
killed = 20
cloned = 13
killed = 5
cloned = 14
killed = 4
cloned = 16
killed = 2
cloned = 12
killed = 10
cloned = 3
killed = 6
cloned = 8
killed = 15
cloned = 21
killed = 19
cloned = 0
killed = 7
cloned = 18
killed = 11
cloned = 17
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 17, 4, 15, 14, 8, 20, 6, 7, 9, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 11, 21, 2, 1, 0, 18, 16, 13, 3, 5, 22]
====================================
cloned = 12
killed = 10
cloned = 11
killed = 17
cloned = 21
killed = 4
cloned = 2
killed = 15
cloned = 1
killed = 14
cloned = 0
killed = 8
cloned = 18
killed = 20
cloned = 16
killed = 6
cloned = 13
killed = 7
cloned = 3
killed = 9
cloned = 5
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 16, 20, 6, 13, 4, 18, 9, 3, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 8, 21, 0, 11, 14, 7, 15, 5, 2, 22]
====================================
cloned = 10
killed = 12
cloned = 19
killed = 1
cloned = 8
killed = 16
cloned = 21
killed = 20
cloned = 0
killed = 6
cloned = 11
killed = 13
cloned = 14
killed = 4
cloned = 7
killed = 18
cloned = 15
killed = 9
cloned = 5
killed = 3
cloned = 2
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 19, 13, 5, 7, 17, 1, 16, 6, 21, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 8, 14, 9, 12, 20, 2, 11, 18, 0, 15, 22]
====================================
cloned = 10
killed = 3
cloned = 8
killed = 19
cloned = 14
killed = 13
cloned = 9
killed = 5
cloned = 12
killed = 7
cloned = 20
killed = 17
cloned = 2
killed = 1
cloned = 11
killed = 16
cloned = 18
killed = 6
cloned = 0
killed = 21
cloned = 15
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 14, 10, 11, 17, 6, 9, 20, 2, 8, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 7, 3, 5, 16, 13, 0, 4, 1, 21, 12, 22]
====================================
cloned = 19
killed = 15
cloned = 7
killed = 14
cloned = 3
killed = 10
cloned = 5
killed = 11
cloned = 16
killed = 17
cloned = 13
killed = 6
cloned = 0
killed = 9
cloned = 4
killed = 20
cloned = 1
killed = 2
cloned = 21
killed = 8
cloned = 12
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 14, 18, 13, 19, 17, 7, 21, 5, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 0, 10, 3, 9, 1, 8, 20, 6, 11, 22]
====================================
cloned = 2
killed = 4
cloned = 15
killed = 16
cloned = 0
killed = 14
cloned = 10
killed = 18
cloned = 3
killed = 13
cloned = 9
killed = 19
cloned = 1
killed = 17
cloned = 8
killed = 7
cloned = 20
killed = 21
cloned = 6
killed = 5
cloned = 11
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 15, 7, 11, 3, 20, 0, 5, 14, 16, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 18, 10, 9, 12, 6, 17, 2, 1, 13, 19, 22]
====================================
cloned = 8
killed = 4
cloned = 18
killed = 15
cloned = 10
killed = 7
cloned = 9
killed = 11
cloned = 12
killed = 3
cloned = 6
killed = 20
cloned = 17
killed = 0
cloned = 2
killed = 5
cloned = 1
killed = 14
cloned = 13
killed = 16
cloned = 19
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 5, 14, 9, 7, 17, 3, 2, 16, 4, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 11, 6, 10, 13, 12, 15, 20, 1, 8, 0, 22]
====================================
cloned = 18
killed = 21
cloned = 11
killed = 5
cloned = 6
killed = 14
cloned = 10
killed = 9
cloned = 13
killed = 7
cloned = 12
killed = 17
cloned = 15
killed = 3
cloned = 20
killed = 2
cloned = 1
killed = 16
cloned = 8
killed = 4
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 0, 11, 12, 6, 5, 8, 14, 10, 2, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 3, 1, 17, 19, 15, 4, 21, 7, 9, 22]
====================================
cloned = 20
killed = 13
cloned = 18
killed = 0
cloned = 3
killed = 11
cloned = 1
killed = 12
cloned = 17
killed = 6
cloned = 19
killed = 5
cloned = 15
killed = 8
cloned = 4
killed = 14
cloned = 21
killed = 10
cloned = 7
killed = 2
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 15, 0, 14, 3, 2, 12, 6, 1, 7, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 11, 21, 10, 8, 9, 19, 18, 4, 5, 16, 22]
====================================
cloned = 17
killed = 13
cloned = 11
killed = 15
cloned = 21
killed = 0
cloned = 10
killed = 14
cloned = 8
killed = 3
cloned = 9
killed = 2
cloned = 19
killed = 12
cloned = 18
killed = 6
cloned = 4
killed = 1
cloned = 5
killed = 7
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 0, 10, 19, 11, 6, 17, 18, 16, 15, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 8, 21, 14, 4, 9, 20, 1, 7, 13, 5, 22]
====================================
cloned = 3
killed = 2
cloned = 8
killed = 0
cloned = 21
killed = 10
cloned = 14
killed = 19
cloned = 4
killed = 11
cloned = 9
killed = 6
cloned = 20
killed = 17
cloned = 1
killed = 18
cloned = 7
killed = 16
cloned = 13
killed = 15
cloned = 5
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 21, 18, 0, 14, 15, 11, 5, 10, 20, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 17, 1, 12, 6, 13, 8, 3, 4, 19, 16, 22]
====================================
cloned = 7
killed = 2
cloned = 17
killed = 21
cloned = 1
killed = 18
cloned = 12
killed = 0
cloned = 6
killed = 14
cloned = 13
killed = 15
cloned = 8
killed = 11
cloned = 3
killed = 5
cloned = 4
killed = 10
cloned = 19
killed = 20
cloned = 16
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 4, 17, 2, 9, 16, 15, 7, 19, 8, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 11, 10, 5, 0, 21, 1, 12, 3, 13, 20, 22]
====================================
cloned = 14
killed = 18
cloned = 11
killed = 4
cloned = 10
killed = 17
cloned = 5
killed = 2
cloned = 0
killed = 9
cloned = 21
killed = 16
cloned = 1
killed = 15
cloned = 12
killed = 7
cloned = 3
killed = 19
cloned = 13
killed = 8
cloned = 20
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 18, 7, 11, 1, 13, 15, 0, 17, 8, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 9, 19, 12, 16, 20, 14, 21, 3, 2, 5, 22]
====================================
cloned = 4
killed = 6
cloned = 9
killed = 18
cloned = 19
killed = 7
cloned = 12
killed = 11
cloned = 16
killed = 1
cloned = 20
killed = 13
cloned = 14
killed = 15
cloned = 21
killed = 0
cloned = 3
killed = 17
cloned = 2
killed = 8
cloned = 5
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 9, 13, 17, 8, 19, 18, 5, 7, 10, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 3, 2, 16, 20, 4, 15, 1, 0, 21, 12, 22]
====================================
cloned = 14
killed = 6
cloned = 3
killed = 9
cloned = 2
killed = 13
cloned = 16
killed = 17
cloned = 20
killed = 8
cloned = 4
killed = 19
cloned = 15
killed = 18
cloned = 1
killed = 5
cloned = 0
killed = 7
cloned = 21
killed = 10
cloned = 12
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 2, 5, 10, 14, 4, 17, 15, 9, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 18, 7, 6, 13, 16, 21, 3, 19, 20, 12, 22]
====================================
cloned = 8
killed = 11
cloned = 18
killed = 1
cloned = 7
killed = 2
cloned = 6
killed = 5
cloned = 13
killed = 10
cloned = 16
killed = 14
cloned = 21
killed = 4
cloned = 3
killed = 17
cloned = 19
killed = 15
cloned = 20
killed = 9
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 18, 5, 8, 9, 6, 14, 13, 16, 1, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 2, 20, 10, 11, 4, 15, 21, 12, 7, 0, 22]
====================================
cloned = 3
killed = 19
cloned = 2
killed = 18
cloned = 20
killed = 5
cloned = 10
killed = 8
cloned = 11
killed = 9
cloned = 4
killed = 6
cloned = 15
killed = 14
cloned = 21
killed = 13
cloned = 12
killed = 16
cloned = 7
killed = 1
cloned = 0
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 6, 19, 3, 17, 9, 16, 8, 2, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 12, 1, 18, 20, 13, 0, 5, 11, 21, 14, 22]
====================================
cloned = 15
killed = 10
cloned = 12
killed = 7
cloned = 1
killed = 6
cloned = 18
killed = 19
cloned = 20
killed = 3
cloned = 13
killed = 17
cloned = 0
killed = 9
cloned = 5
killed = 16
cloned = 11
killed = 8
cloned = 21
killed = 2
cloned = 14
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 14, 10, 3, 4, 20, 5, 9, 1, 13, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 17, 12, 2, 21, 7, 15, 18, 16, 0, 19, 22]
====================================
cloned = 8
killed = 6
cloned = 17
killed = 14
cloned = 12
killed = 10
cloned = 2
killed = 3
cloned = 21
killed = 4
cloned = 7
killed = 20
cloned = 15
killed = 5
cloned = 18
killed = 9
cloned = 16
killed = 1
cloned = 0
killed = 13
cloned = 19
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 11, 21, 0, 8, 17, 19, 9, 7, 20, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 16, 1, 18, 10, 4, 6, 14, 13, 2, 3, 22]
====================================
cloned = 12
killed = 5
cloned = 16
killed = 11
cloned = 1
killed = 21
cloned = 18
killed = 0
cloned = 10
killed = 8
cloned = 4
killed = 17
cloned = 6
killed = 19
cloned = 14
killed = 9
cloned = 13
killed = 7
cloned = 2
killed = 20
cloned = 3
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 15, 8, 18, 10, 2, 6, 3, 5, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 1, 19, 17, 21, 16, 4, 14, 20, 7, 12, 22]
====================================
cloned = 13
killed = 9
cloned = 1
killed = 15
cloned = 19
killed = 8
cloned = 17
killed = 18
cloned = 21
killed = 10
cloned = 16
killed = 2
cloned = 4
killed = 6
cloned = 14
killed = 3
cloned = 20
killed = 5
cloned = 7
killed = 11
cloned = 12
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 1, 18, 9, 4, 19, 3, 14, 12, 15, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 21, 6, 11, 0, 20, 2, 5, 10, 16, 13, 22]
====================================
cloned = 8
killed = 7
cloned = 21
killed = 1
cloned = 6
killed = 18
cloned = 11
killed = 9
cloned = 0
killed = 4
cloned = 20
killed = 19
cloned = 2
killed = 3
cloned = 5
killed = 14
cloned = 10
killed = 12
cloned = 16
killed = 15
cloned = 13
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 16, 14, 8, 19, 11, 15, 2, 0, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 18, 12, 1, 21, 4, 17, 5, 10, 7, 3, 22]
====================================
cloned = 9
killed = 13
cloned = 18
killed = 6
cloned = 12
killed = 16
cloned = 1
killed = 14
cloned = 21
killed = 8
cloned = 4
killed = 19
cloned = 17
killed = 11
cloned = 5
killed = 15
cloned = 10
killed = 2
cloned = 7
killed = 0
cloned = 3
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 17, 6, 10, 14, 0, 9, 20, 2, 7, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 15, 8, 5, 21, 4, 1, 3, 12, 13, 16, 22]
====================================
cloned = 19
killed = 11
cloned = 15
killed = 17
cloned = 8
killed = 6
cloned = 5
killed = 10
cloned = 21
killed = 14
cloned = 4
killed = 0
cloned = 1
killed = 9
cloned = 3
killed = 20
cloned = 12
killed = 2
cloned = 13
killed = 7
cloned = 16
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 18, 8, 17, 3, 5, 20, 0, 21, 13, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 11, 6, 16, 15, 10, 19, 7, 9, 14, 12, 22]
====================================
cloned = 1
killed = 4
cloned = 11
killed = 18
cloned = 6
killed = 8
cloned = 16
killed = 17
cloned = 15
killed = 3
cloned = 10
killed = 5
cloned = 19
killed = 20
cloned = 7
killed = 0
cloned = 9
killed = 21
cloned = 14
killed = 13
cloned = 12
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 20, 11, 18, 3, 6, 15, 13, 10, 2, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 12, 4, 9, 8, 19, 21, 1, 5, 14, 16, 22]
====================================
cloned = 7
killed = 0
cloned = 12
killed = 20
cloned = 4
killed = 11
cloned = 9
killed = 18
cloned = 8
killed = 3
cloned = 19
killed = 6
cloned = 21
killed = 15
cloned = 1
killed = 13
cloned = 5
killed = 10
cloned = 14
killed = 2
cloned = 16
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 9, 0, 1, 7, 11, 2, 19, 5, 16, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 10, 6, 20, 4, 12, 3, 18, 17, 21, 22]
====================================
cloned = 8
killed = 15
cloned = 13
killed = 9
cloned = 10
killed = 0
cloned = 6
killed = 1
cloned = 20
killed = 7
cloned = 4
killed = 11
cloned = 12
killed = 2
cloned = 3
killed = 19
cloned = 18
killed = 5
cloned = 17
killed = 16
cloned = 21
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 11, 18, 10, 7, 1, 6, 12, 0, 19, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 15, 4, 21, 13, 2, 17, 20, 5, 9, 14, 22]
====================================
cloned = 3
killed = 16
cloned = 15
killed = 11
cloned = 4
killed = 18
cloned = 21
killed = 10
cloned = 13
killed = 7
cloned = 2
killed = 1
cloned = 17
killed = 6
cloned = 20
killed = 12
cloned = 5
killed = 0
cloned = 9
killed = 19
cloned = 14
killed = 8
Trial run 15/seed 870:
..................................................
winner: Evolved FSM 6
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'DBS: 0.75, 3, 4, 3, 5': 3}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 23})]
--------------------------------------------------
Score:
[[61.440000000000005,
  55.864999999999995,
  59.345,
  54.910000000000004,
  52.269999999999996,
  54.035000000000004,
  52.584999999999994,
  36.720000000000006,
  44.790000000000006,
  29.509999999999998,
  48.085,
  50.709999999999994,
  45.77499999999999,
  52.335,
  55.88999999999999,
  36.985,
  51.72,
  47.185,
  46.214999999999996,
  43.86000000000001,
  34.995000000000005,
  55.434999999999995,
  53.53999999999999],
 [65.7,
  67.045,
  65.75,
  62.870000000000005,
  62.23,
  62.16,
  62.26499999999999,
  65.7,
  63.775000000000006,
  65.75,
  62.870000000000005,
  62.440000000000005,
  62.160000000000004,
  63.540000000000006,
  58.71999999999999,
  61.875,
  62.58,
  63.540000000000006,
  58.72,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.34000000000001,
 56.215,
 59.3,
 54.675000000000004,
 52.01500000000001,
 54.48500000000001,
 53.599999999999994,
 36.78,
 44.790000000000006,
 31.589999999999996,
 48.04,
 50.81999999999999,
 45.834999999999994,
 52.485,
 56.324999999999996,
 37.06,
 50.745000000000005,
 47.265,
 45.485,
 44.165000000000006,
 34.96500000000001,
 55.535,
 53.49499999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 50.81999999999999
Upper: 50.81999999999999
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20]
lower threshold: [11]
....................................
upper threshold: [11]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 12
cloned = 5
killed = 15
cloned = 6
killed = 16
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 61.830000000000005,
 65.75,
 62.870000000000005,
 62.285,
 62.16,
 61.985,
 65.7,
 62.395,
 65.75,
 62.870000000000005,
 60.72,
 62.26,
 63.540000000000006,
 56.43999999999999,
 62.16,
 61.004999999999995,
 63.540000000000006,
 56.21,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.47
Upper: 62.47
====================================
lower list size: 11
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [1, 4, 5, 6, 8, 11, 12, 14, 15, 16, 18]
lower threshold: []
....................................
upper threshold: [19, 21]
upper:           [0, 2, 3, 7, 9, 10, 13, 17, 20, 22, 19, 21]
====================================
cloned = 0
killed = 1
cloned = 2
killed = 4
cloned = 3
killed = 5
cloned = 7
killed = 6
cloned = 9
killed = 8
cloned = 10
killed = 11
cloned = 13
killed = 12
cloned = 17
killed = 14
cloned = 20
killed = 15
cloned = 22
killed = 16
cloned = 19
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 13, 14, 2, 1, 7, 11, 3, 20, 8, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 0, 15, 21, 17, 19, 16, 9, 18, 6, 22]
====================================
cloned = 12
killed = 10
cloned = 4
killed = 13
cloned = 0
killed = 14
cloned = 15
killed = 2
cloned = 21
killed = 1
cloned = 17
killed = 7
cloned = 19
killed = 11
cloned = 16
killed = 3
cloned = 9
killed = 20
cloned = 18
killed = 8
cloned = 6
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 18, 4, 12, 5, 9, 8, 19, 14, 10, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 17, 13, 11, 7, 2, 21, 20, 16, 0, 3, 22]
====================================
cloned = 15
killed = 6
cloned = 17
killed = 18
cloned = 13
killed = 4
cloned = 11
killed = 12
cloned = 7
killed = 5
cloned = 2
killed = 9
cloned = 21
killed = 8
cloned = 20
killed = 19
cloned = 16
killed = 14
cloned = 0
killed = 10
cloned = 3
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 21, 2, 6, 19, 0, 4, 8, 16, 5, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 14, 15, 20, 11, 7, 18, 10, 17, 12, 13, 22]
====================================
cloned = 1
killed = 3
cloned = 14
killed = 21
cloned = 15
killed = 2
cloned = 20
killed = 6
cloned = 11
killed = 19
cloned = 7
killed = 0
cloned = 18
killed = 4
cloned = 10
killed = 8
cloned = 17
killed = 16
cloned = 12
killed = 5
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 12, 4, 19, 1, 3, 16, 7, 10, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 15, 21, 13, 20, 0, 11, 17, 14, 6, 18, 22]
====================================
cloned = 5
killed = 9
cloned = 15
killed = 2
cloned = 21
killed = 12
cloned = 13
killed = 4
cloned = 20
killed = 19
cloned = 0
killed = 1
cloned = 11
killed = 3
cloned = 17
killed = 16
cloned = 14
killed = 7
cloned = 6
killed = 10
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 4, 21, 16, 1, 3, 7, 0, 13, 2, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 8, 14, 15, 10, 19, 6, 11, 12, 5, 20, 22]
====================================
cloned = 9
killed = 17
cloned = 8
killed = 4
cloned = 14
killed = 21
cloned = 15
killed = 16
cloned = 10
killed = 1
cloned = 19
killed = 3
cloned = 6
killed = 7
cloned = 11
killed = 0
cloned = 12
killed = 13
cloned = 5
killed = 2
cloned = 20
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 10, 0, 17, 11, 16, 14, 9, 7, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 20, 5, 12, 15, 6, 2, 13, 19, 4, 18, 22]
====================================
cloned = 3
killed = 21
cloned = 20
killed = 1
cloned = 5
killed = 10
cloned = 12
killed = 0
cloned = 15
killed = 17
cloned = 6
killed = 11
cloned = 2
killed = 16
cloned = 13
killed = 14
cloned = 19
killed = 9
cloned = 4
killed = 7
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 20, 7, 18, 12, 10, 6, 13, 14, 11, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 19, 21, 0, 2, 17, 9, 4, 3, 1, 15, 22]
====================================
cloned = 5
killed = 8
cloned = 19
killed = 20
cloned = 21
killed = 7
cloned = 0
killed = 18
cloned = 2
killed = 12
cloned = 17
killed = 10
cloned = 9
killed = 6
cloned = 4
killed = 13
cloned = 3
killed = 14
cloned = 1
killed = 11
cloned = 15
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 16, 3, 0, 18, 1, 2, 7, 8, 6, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 17, 10, 11, 21, 20, 15, 19, 12, 9, 13, 22]
====================================
cloned = 4
killed = 14
cloned = 17
killed = 16
cloned = 10
killed = 3
cloned = 11
killed = 0
cloned = 21
killed = 18
cloned = 20
killed = 1
cloned = 15
killed = 2
cloned = 19
killed = 7
cloned = 12
killed = 8
cloned = 9
killed = 6
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 21, 5, 16, 4, 3, 18, 20, 13, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 15, 0, 14, 9, 17, 11, 7, 1, 19, 22]
====================================
cloned = 8
killed = 2
cloned = 12
killed = 10
cloned = 15
killed = 21
cloned = 0
killed = 5
cloned = 14
killed = 16
cloned = 9
killed = 4
cloned = 17
killed = 3
cloned = 11
killed = 18
cloned = 7
killed = 20
cloned = 1
killed = 13
cloned = 19
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 4, 6, 14, 18, 8, 12, 15, 17, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 0, 11, 20, 9, 5, 21, 1, 13, 2, 3, 22]
====================================
cloned = 16
killed = 7
cloned = 0
killed = 10
cloned = 11
killed = 4
cloned = 20
killed = 6
cloned = 9
killed = 14
cloned = 5
killed = 18
cloned = 21
killed = 8
cloned = 1
killed = 12
cloned = 13
killed = 15
cloned = 2
killed = 17
cloned = 3
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 1, 4, 13, 11, 0, 12, 16, 17, 3, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 21, 20, 14, 5, 8, 7, 10, 18, 15, 9, 22]
====================================
cloned = 2
killed = 6
cloned = 21
killed = 1
cloned = 20
killed = 4
cloned = 14
killed = 13
cloned = 5
killed = 11
cloned = 8
killed = 0
cloned = 7
killed = 12
cloned = 10
killed = 16
cloned = 18
killed = 17
cloned = 15
killed = 3
cloned = 9
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 11, 2, 18, 20, 8, 10, 17, 3, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 14, 21, 19, 16, 6, 9, 7, 5, 13, 0, 22]
====================================
cloned = 15
killed = 4
cloned = 14
killed = 12
cloned = 21
killed = 11
cloned = 19
killed = 2
cloned = 16
killed = 18
cloned = 6
killed = 20
cloned = 9
killed = 8
cloned = 7
killed = 10
cloned = 5
killed = 17
cloned = 13
killed = 3
cloned = 0
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 8, 21, 20, 19, 15, 6, 2, 9, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 10, 11, 18, 17, 4, 7, 12, 3, 16, 13, 22]
====================================
cloned = 14
killed = 0
cloned = 10
killed = 8
cloned = 11
killed = 21
cloned = 18
killed = 20
cloned = 17
killed = 19
cloned = 4
killed = 15
cloned = 7
killed = 6
cloned = 12
killed = 2
cloned = 3
killed = 9
cloned = 16
killed = 1
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 13, 14, 1, 5, 8, 12, 10, 9, 4, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 20, 0, 15, 7, 6, 17, 11, 19, 3, 18, 22]
====================================
cloned = 2
killed = 16
cloned = 20
killed = 13
cloned = 0
killed = 14
cloned = 15
killed = 1
cloned = 7
killed = 5
cloned = 6
killed = 8
cloned = 17
killed = 12
cloned = 11
killed = 10
cloned = 19
killed = 9
cloned = 3
killed = 4
cloned = 18
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 6, 0, 19, 21, 8, 15, 13, 10, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 1, 5, 17, 3, 4, 2, 18, 12, 20, 22]
====================================
cloned = 14
killed = 7
cloned = 9
killed = 11
cloned = 1
killed = 6
cloned = 5
killed = 0
cloned = 17
killed = 19
cloned = 3
killed = 21
cloned = 4
killed = 8
cloned = 2
killed = 15
cloned = 18
killed = 13
cloned = 12
killed = 10
cloned = 20
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 7, 19, 8, 13, 21, 17, 12, 11, 4, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 2, 5, 20, 18, 16, 14, 10, 3, 15, 1, 22]
====================================
cloned = 0
killed = 9
cloned = 2
killed = 7
cloned = 5
killed = 19
cloned = 20
killed = 8
cloned = 18
killed = 13
cloned = 16
killed = 21
cloned = 14
killed = 17
cloned = 10
killed = 12
cloned = 3
killed = 11
cloned = 15
killed = 4
cloned = 1
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 16, 1, 11, 4, 6, 21, 12, 14, 8, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 5, 10, 19, 3, 18, 7, 17, 2, 20, 9, 22]
====================================
cloned = 15
killed = 0
cloned = 5
killed = 16
cloned = 10
killed = 1
cloned = 19
killed = 11
cloned = 3
killed = 4
cloned = 18
killed = 6
cloned = 7
killed = 21
cloned = 17
killed = 12
cloned = 2
killed = 14
cloned = 20
killed = 8
cloned = 9
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 17, 4, 0, 16, 8, 5, 20, 13, 9, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 3, 2, 1, 21, 10, 14, 11, 15, 19, 7, 22]
====================================
cloned = 12
killed = 6
cloned = 3
killed = 17
cloned = 2
killed = 4
cloned = 1
killed = 0
cloned = 21
killed = 16
cloned = 10
killed = 8
cloned = 14
killed = 5
cloned = 11
killed = 20
cloned = 15
killed = 13
cloned = 19
killed = 9
cloned = 7
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 13, 7, 16, 18, 9, 8, 4, 21, 0, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 3, 11, 2, 17, 20, 12, 14, 1, 6, 19, 22]
====================================
cloned = 5
killed = 10
cloned = 3
killed = 13
cloned = 11
killed = 7
cloned = 2
killed = 16
cloned = 17
killed = 18
cloned = 20
killed = 9
cloned = 12
killed = 8
cloned = 14
killed = 4
cloned = 1
killed = 21
cloned = 6
killed = 0
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 6, 5, 1, 12, 3, 7, 9, 21, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 11, 14, 15, 19, 4, 2, 17, 16, 0, 13, 22]
====================================
cloned = 18
killed = 10
cloned = 11
killed = 8
cloned = 14
killed = 6
cloned = 15
killed = 5
cloned = 19
killed = 1
cloned = 4
killed = 12
cloned = 2
killed = 3
cloned = 17
killed = 7
cloned = 16
killed = 9
cloned = 0
killed = 21
cloned = 13
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 20, 0, 18, 12, 6, 8, 17, 16, 4, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 15, 21, 2, 9, 14, 5, 11, 19, 13, 7, 22]
====================================
cloned = 3
killed = 1
cloned = 15
killed = 20
cloned = 21
killed = 0
cloned = 2
killed = 18
cloned = 9
killed = 12
cloned = 14
killed = 6
cloned = 5
killed = 8
cloned = 11
killed = 17
cloned = 19
killed = 16
cloned = 13
killed = 4
cloned = 7
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 5, 16, 2, 6, 19, 13, 14, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 11, 0, 20, 10, 4, 8, 9, 18, 15, 21, 22]
====================================
cloned = 17
killed = 3
cloned = 11
killed = 12
cloned = 0
killed = 5
cloned = 20
killed = 16
cloned = 10
killed = 2
cloned = 4
killed = 6
cloned = 8
killed = 19
cloned = 9
killed = 13
cloned = 18
killed = 14
cloned = 15
killed = 1
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 13, 11, 19, 17, 12, 0, 10, 8, 1, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 7, 3, 14, 5, 20, 6, 18, 4, 21, 9, 22]
====================================
cloned = 16
killed = 2
cloned = 7
killed = 13
cloned = 3
killed = 11
cloned = 14
killed = 19
cloned = 5
killed = 17
cloned = 20
killed = 12
cloned = 6
killed = 0
cloned = 18
killed = 10
cloned = 4
killed = 8
cloned = 21
killed = 1
cloned = 9
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 12, 15, 2, 14, 19, 21, 1, 16, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 11, 17, 7, 8, 6, 20, 4, 3, 5, 18, 22]
====================================
cloned = 9
killed = 13
cloned = 11
killed = 12
cloned = 17
killed = 15
cloned = 7
killed = 2
cloned = 8
killed = 14
cloned = 6
killed = 19
cloned = 20
killed = 21
cloned = 4
killed = 1
cloned = 3
killed = 16
cloned = 5
killed = 0
cloned = 18
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 19, 9, 8, 10, 13, 5, 21, 20, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 11, 15, 0, 17, 12, 7, 14, 2, 18, 3, 22]
====================================
cloned = 16
killed = 6
cloned = 11
killed = 19
cloned = 15
killed = 9
cloned = 0
killed = 8
cloned = 17
killed = 10
cloned = 12
killed = 13
cloned = 7
killed = 5
cloned = 14
killed = 21
cloned = 2
killed = 20
cloned = 18
killed = 4
cloned = 3
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 14, 15, 4, 13, 5, 9, 21, 16, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 6, 19, 18, 7, 0, 11, 3, 8, 20, 10, 22]
====================================
cloned = 17
killed = 12
cloned = 6
killed = 14
cloned = 19
killed = 15
cloned = 18
killed = 4
cloned = 7
killed = 13
cloned = 0
killed = 5
cloned = 11
killed = 9
cloned = 3
killed = 21
cloned = 8
killed = 16
cloned = 20
killed = 2
cloned = 10
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 5, 12, 17, 3, 0, 4, 18, 2, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 21, 15, 20, 16, 11, 6, 10, 9, 1, 22]
====================================
cloned = 19
killed = 8
cloned = 14
killed = 7
cloned = 21
killed = 5
cloned = 15
killed = 12
cloned = 20
killed = 17
cloned = 16
killed = 3
cloned = 11
killed = 0
cloned = 6
killed = 4
cloned = 10
killed = 18
cloned = 9
killed = 2
cloned = 1
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 9, 18, 17, 12, 10, 14, 13, 0, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 1, 21, 4, 15, 3, 16, 11, 5, 6, 22]
====================================
cloned = 20
killed = 8
cloned = 7
killed = 2
cloned = 1
killed = 9
cloned = 21
killed = 18
cloned = 4
killed = 17
cloned = 15
killed = 12
cloned = 3
killed = 10
cloned = 16
killed = 14
cloned = 11
killed = 13
cloned = 5
killed = 0
cloned = 6
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 20, 4, 15, 21, 7, 12, 5, 16, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 17, 10, 14, 2, 19, 3, 9, 13, 11, 18, 22]
====================================
cloned = 1
killed = 0
cloned = 17
killed = 6
cloned = 10
killed = 20
cloned = 14
killed = 4
cloned = 2
killed = 15
cloned = 19
killed = 21
cloned = 3
killed = 7
cloned = 9
killed = 12
cloned = 13
killed = 5
cloned = 11
killed = 16
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 14, 12, 9, 1, 7, 2, 18, 0, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 21, 16, 19, 6, 4, 17, 15, 20, 11, 5, 22]
====================================
cloned = 13
killed = 10
cloned = 21
killed = 14
cloned = 16
killed = 12
cloned = 19
killed = 9
cloned = 6
killed = 1
cloned = 4
killed = 7
cloned = 17
killed = 2
cloned = 15
killed = 18
cloned = 20
killed = 0
cloned = 11
killed = 8
cloned = 5
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 16, 5, 0, 7, 8, 15, 1, 2, 12, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 19, 10, 6, 21, 20, 9, 17, 18, 4, 22]
====================================
cloned = 14
killed = 11
cloned = 13
killed = 16
cloned = 19
killed = 5
cloned = 10
killed = 0
cloned = 6
killed = 7
cloned = 21
killed = 8
cloned = 20
killed = 15
cloned = 9
killed = 1
cloned = 17
killed = 2
cloned = 18
killed = 12
cloned = 4
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 9, 3, 18, 16, 21, 15, 19, 14, 17, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 10, 11, 1, 13, 2, 5, 0, 4, 7, 8, 22]
====================================
cloned = 6
killed = 12
cloned = 10
killed = 9
cloned = 11
killed = 3
cloned = 1
killed = 18
cloned = 13
killed = 16
cloned = 2
killed = 21
cloned = 5
killed = 15
cloned = 0
killed = 19
cloned = 4
killed = 14
cloned = 7
killed = 17
cloned = 8
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 21, 4, 11, 19, 9, 17, 5, 13, 6, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 0, 15, 10, 8, 20, 7, 14, 2, 18, 16, 22]
====================================
cloned = 1
killed = 3
cloned = 0
killed = 21
cloned = 15
killed = 4
cloned = 10
killed = 11
cloned = 8
killed = 19
cloned = 20
killed = 9
cloned = 7
killed = 17
cloned = 14
killed = 5
cloned = 2
killed = 13
cloned = 18
killed = 6
cloned = 16
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 21, 0, 15, 17, 5, 6, 1, 12, 3, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 4, 18, 7, 14, 13, 16, 2, 8, 10, 9, 22]
====================================
cloned = 19
killed = 11
cloned = 4
killed = 21
cloned = 18
killed = 0
cloned = 7
killed = 15
cloned = 14
killed = 17
cloned = 13
killed = 5
cloned = 16
killed = 6
cloned = 2
killed = 1
cloned = 8
killed = 12
cloned = 10
killed = 3
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 21, 16, 13, 15, 3, 4, 0, 10, 9, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 20, 11, 7, 12, 6, 1, 2, 17, 5, 14, 22]
====================================
cloned = 19
killed = 8
cloned = 20
killed = 21
cloned = 11
killed = 16
cloned = 7
killed = 13
cloned = 12
killed = 15
cloned = 6
killed = 3
cloned = 1
killed = 4
cloned = 2
killed = 0
cloned = 17
killed = 10
cloned = 5
killed = 9
cloned = 14
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 1, 8, 13, 4, 15, 6, 0, 10, 7, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 20, 16, 2, 21, 12, 11, 18, 19, 5, 9, 22]
====================================
cloned = 3
killed = 14
cloned = 20
killed = 1
cloned = 16
killed = 8
cloned = 2
killed = 13
cloned = 21
killed = 4
cloned = 12
killed = 15
cloned = 11
killed = 6
cloned = 18
killed = 0
cloned = 19
killed = 10
cloned = 5
killed = 7
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 16, 20, 7, 19, 4, 18, 9, 21, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 8, 1, 2, 6, 15, 13, 17, 3, 14, 10, 22]
====================================
cloned = 5
killed = 11
cloned = 8
killed = 12
cloned = 1
killed = 16
cloned = 2
killed = 20
cloned = 6
killed = 7
cloned = 15
killed = 19
cloned = 13
killed = 4
cloned = 17
killed = 18
cloned = 3
killed = 9
cloned = 14
killed = 21
cloned = 10
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 10, 7, 14, 18, 20, 19, 16, 1, 11, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 8, 6, 2, 5, 15, 13, 17, 21, 3, 22]
====================================
cloned = 12
killed = 0
cloned = 4
killed = 10
cloned = 8
killed = 7
cloned = 6
killed = 14
cloned = 2
killed = 18
cloned = 5
killed = 20
cloned = 15
killed = 19
cloned = 13
killed = 16
cloned = 17
killed = 1
cloned = 21
killed = 11
cloned = 3
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 20, 18, 14, 17, 8, 19, 13, 12, 7, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 11, 2, 16, 3, 10, 4, 5, 1, 0, 6, 22]
====================================
cloned = 15
killed = 21
cloned = 11
killed = 20
cloned = 2
killed = 18
cloned = 16
killed = 14
cloned = 3
killed = 17
cloned = 10
killed = 8
cloned = 4
killed = 19
cloned = 5
killed = 13
cloned = 1
killed = 12
cloned = 0
killed = 7
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 16, 15, 14, 17, 0, 5, 20, 8, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 13, 4, 21, 7, 3, 12, 1, 19, 18, 10, 22]
====================================
cloned = 6
killed = 2
cloned = 13
killed = 11
cloned = 4
killed = 16
cloned = 21
killed = 15
cloned = 7
killed = 14
cloned = 3
killed = 17
cloned = 12
killed = 0
cloned = 1
killed = 5
cloned = 19
killed = 20
cloned = 18
killed = 8
cloned = 10
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 18, 5, 6, 15, 1, 9, 20, 3, 14, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 17, 13, 7, 4, 11, 10, 2, 0, 16, 12, 22]
====================================
cloned = 8
killed = 21
cloned = 17
killed = 18
cloned = 13
killed = 5
cloned = 7
killed = 6
cloned = 4
killed = 15
cloned = 11
killed = 1
cloned = 10
killed = 9
cloned = 2
killed = 20
cloned = 0
killed = 3
cloned = 16
killed = 14
cloned = 12
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 19, 7, 15, 1, 9, 6, 10, 4, 20, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 21, 17, 13, 0, 2, 11, 8, 3, 18, 14, 22]
====================================
cloned = 5
killed = 16
cloned = 21
killed = 19
cloned = 17
killed = 7
cloned = 13
killed = 15
cloned = 0
killed = 1
cloned = 2
killed = 9
cloned = 11
killed = 6
cloned = 8
killed = 10
cloned = 3
killed = 4
cloned = 18
killed = 20
cloned = 14
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 6, 17, 8, 2, 18, 4, 11, 5, 7, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 1, 21, 19, 9, 0, 20, 16, 3, 13, 10, 22]
====================================
cloned = 14
killed = 15
cloned = 1
killed = 6
cloned = 21
killed = 17
cloned = 19
killed = 8
cloned = 9
killed = 2
cloned = 0
killed = 18
cloned = 20
killed = 4
cloned = 16
killed = 11
cloned = 3
killed = 5
cloned = 13
killed = 7
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 12, 8, 15, 11, 3, 20, 18, 5, 17, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 1, 4, 16, 0, 6, 10, 7, 2, 21, 19, 22]
====================================
cloned = 9
killed = 13
cloned = 1
killed = 12
cloned = 4
killed = 8
cloned = 16
killed = 15
cloned = 0
killed = 11
cloned = 6
killed = 3
cloned = 10
killed = 20
cloned = 7
killed = 18
cloned = 2
killed = 5
cloned = 21
killed = 17
cloned = 19
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 15, 0, 8, 4, 12, 5, 7, 21, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 17, 19, 1, 10, 14, 18, 6, 20, 9, 16, 22]
====================================
cloned = 3
killed = 13
cloned = 17
killed = 2
cloned = 19
killed = 15
cloned = 1
killed = 0
cloned = 10
killed = 8
cloned = 14
killed = 4
cloned = 18
killed = 12
cloned = 6
killed = 5
cloned = 20
killed = 7
cloned = 9
killed = 21
cloned = 16
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 6, 15, 18, 12, 17, 5, 11, 21, 0, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 2, 14, 7, 9, 20, 1, 3, 16, 4, 22]
====================================
cloned = 10
killed = 13
cloned = 19
killed = 6
cloned = 2
killed = 15
cloned = 14
killed = 18
cloned = 7
killed = 12
cloned = 9
killed = 17
cloned = 20
killed = 5
cloned = 1
killed = 11
cloned = 3
killed = 21
cloned = 16
killed = 0
cloned = 4
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 3, 15, 9, 13, 10, 5, 0, 20, 2, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 14, 19, 12, 11, 16, 21, 8, 1, 17, 6, 22]
====================================
cloned = 4
killed = 18
cloned = 14
killed = 3
cloned = 19
killed = 15
cloned = 12
killed = 9
cloned = 11
killed = 13
cloned = 16
killed = 10
cloned = 21
killed = 5
cloned = 8
killed = 0
cloned = 1
killed = 20
cloned = 17
killed = 2
cloned = 6
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 21, 3, 4, 16, 11, 9, 5, 17, 10, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 12, 20, 2, 6, 19, 1, 0, 7, 14, 18, 22]
====================================
cloned = 13
killed = 8
cloned = 12
killed = 21
cloned = 20
killed = 3
cloned = 2
killed = 4
cloned = 6
killed = 16
cloned = 19
killed = 11
cloned = 1
killed = 9
cloned = 0
killed = 5
cloned = 7
killed = 17
cloned = 14
killed = 10
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 21, 13, 10, 11, 20, 15, 18, 12, 7, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 6, 0, 14, 5, 9, 16, 8, 4, 19, 2, 22]
====================================
cloned = 17
killed = 1
cloned = 6
killed = 21
cloned = 0
killed = 13
cloned = 14
killed = 10
cloned = 5
killed = 11
cloned = 9
killed = 20
cloned = 16
killed = 15
cloned = 8
killed = 18
cloned = 4
killed = 12
cloned = 19
killed = 7
cloned = 2
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 18, 5, 3, 10, 0, 19, 21, 12, 17, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 11, 7, 20, 8, 1, 14, 13, 6, 2, 15, 22]
====================================
cloned = 9
killed = 4
cloned = 11
killed = 18
cloned = 7
killed = 5
cloned = 20
killed = 3
cloned = 8
killed = 10
cloned = 1
killed = 0
cloned = 14
killed = 19
cloned = 13
killed = 21
cloned = 6
killed = 12
cloned = 2
killed = 17
cloned = 15
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 12, 3, 21, 0, 20, 18, 2, 6, 10, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 15, 9, 8, 19, 1, 17, 13, 5, 14, 7, 22]
====================================
cloned = 11
killed = 4
cloned = 15
killed = 12
cloned = 9
killed = 3
cloned = 8
killed = 21
cloned = 19
killed = 0
cloned = 1
killed = 20
cloned = 17
killed = 18
cloned = 13
killed = 2
cloned = 5
killed = 6
cloned = 14
killed = 10
cloned = 7
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 2, 1, 0, 15, 6, 20, 14, 19, 4, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 17, 7, 12, 11, 13, 8, 21, 3, 18, 5, 22]
====================================
cloned = 9
killed = 10
cloned = 17
killed = 2
cloned = 7
killed = 1
cloned = 12
killed = 0
cloned = 11
killed = 15
cloned = 13
killed = 6
cloned = 8
killed = 20
cloned = 21
killed = 14
cloned = 3
killed = 19
cloned = 18
killed = 4
cloned = 5
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 16, 4, 7, 19, 17, 18, 14, 21, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 5, 11, 10, 15, 13, 0, 20, 8, 3, 12, 22]
====================================
cloned = 2
killed = 9
cloned = 5
killed = 16
cloned = 11
killed = 4
cloned = 10
killed = 7
cloned = 15
killed = 19
cloned = 13
killed = 17
cloned = 0
killed = 18
cloned = 20
killed = 14
cloned = 8
killed = 21
cloned = 3
killed = 6
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 17, 14, 4, 13, 11, 20, 12, 9, 16, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 0, 19, 15, 6, 1, 2, 3, 21, 10, 18, 22]
====================================
cloned = 5
killed = 7
cloned = 0
killed = 17
cloned = 19
killed = 14
cloned = 15
killed = 4
cloned = 6
killed = 13
cloned = 1
killed = 11
cloned = 2
killed = 20
cloned = 3
killed = 12
cloned = 21
killed = 9
cloned = 10
killed = 16
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 2, 18, 20, 0, 3, 19, 13, 12, 16, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 10, 15, 14, 7, 9, 21, 11, 17, 1, 5, 22]
====================================
cloned = 6
killed = 4
cloned = 10
killed = 2
cloned = 15
killed = 18
cloned = 14
killed = 20
cloned = 7
killed = 0
cloned = 9
killed = 3
cloned = 21
killed = 19
cloned = 11
killed = 13
cloned = 17
killed = 12
cloned = 1
killed = 16
cloned = 5
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 11, 1, 5, 4, 18, 12, 17, 15, 20, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 2, 16, 6, 14, 19, 8, 0, 21, 9, 3, 22]
====================================
cloned = 13
killed = 10
cloned = 2
killed = 11
cloned = 16
killed = 1
cloned = 6
killed = 5
cloned = 14
killed = 4
cloned = 19
killed = 18
cloned = 8
killed = 12
cloned = 0
killed = 17
cloned = 21
killed = 15
cloned = 9
killed = 20
cloned = 3
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 0, 19, 18, 13, 8, 4, 1, 12, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 17, 7, 20, 21, 5, 9, 16, 15, 2, 11, 22]
====================================
cloned = 6
killed = 3
cloned = 17
killed = 14
cloned = 7
killed = 0
cloned = 20
killed = 19
cloned = 21
killed = 18
cloned = 5
killed = 13
cloned = 9
killed = 8
cloned = 16
killed = 4
cloned = 15
killed = 1
cloned = 2
killed = 12
cloned = 11
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 12, 4, 1, 16, 0, 19, 7, 20, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 17, 15, 9, 5, 14, 21, 11, 8, 3, 6, 22]
====================================
cloned = 18
killed = 13
cloned = 17
killed = 2
cloned = 15
killed = 12
cloned = 9
killed = 4
cloned = 5
killed = 1
cloned = 14
killed = 16
cloned = 21
killed = 0
cloned = 11
killed = 19
cloned = 8
killed = 7
cloned = 3
killed = 20
cloned = 6
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 20, 5, 2, 10, 13, 8, 1, 0, 12, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 17, 18, 6, 16, 3, 7, 14, 4, 15, 21, 22]
====================================
cloned = 9
killed = 19
cloned = 17
killed = 20
cloned = 18
killed = 5
cloned = 6
killed = 2
cloned = 16
killed = 10
cloned = 3
killed = 13
cloned = 7
killed = 8
cloned = 14
killed = 1
cloned = 4
killed = 0
cloned = 15
killed = 12
cloned = 21
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 5, 4, 6, 15, 18, 20, 8, 7, 13, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 11, 14, 16, 3, 0, 12, 2, 17, 10, 9, 22]
====================================
cloned = 21
killed = 19
cloned = 11
killed = 5
cloned = 14
killed = 4
cloned = 16
killed = 6
cloned = 3
killed = 15
cloned = 0
killed = 18
cloned = 12
killed = 20
cloned = 2
killed = 8
cloned = 17
killed = 7
cloned = 10
killed = 13
cloned = 9
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 17, 14, 8, 21, 15, 9, 2, 11, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 6, 20, 3, 7, 18, 19, 4, 16, 10, 13, 22]
====================================
cloned = 5
killed = 12
cloned = 6
killed = 1
cloned = 20
killed = 17
cloned = 3
killed = 14
cloned = 7
killed = 8
cloned = 18
killed = 21
cloned = 19
killed = 15
cloned = 4
killed = 9
cloned = 16
killed = 2
cloned = 10
killed = 11
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 21, 1, 6, 2, 12, 17, 15, 3, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 4, 14, 11, 0, 13, 9, 20, 16, 10, 19, 22]
====================================
cloned = 5
killed = 18
cloned = 4
killed = 21
cloned = 14
killed = 1
cloned = 11
killed = 6
cloned = 0
killed = 2
cloned = 13
killed = 12
cloned = 9
killed = 17
cloned = 20
killed = 15
cloned = 16
killed = 3
cloned = 10
killed = 8
cloned = 19
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 5, 2, 14, 18, 17, 11, 12, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 6, 20, 16, 4, 19, 15, 3, 1, 9, 21, 22]
====================================
cloned = 10
killed = 7
cloned = 6
killed = 0
cloned = 20
killed = 5
cloned = 16
killed = 2
cloned = 4
killed = 14
cloned = 19
killed = 18
cloned = 15
killed = 17
cloned = 3
killed = 11
cloned = 1
killed = 12
cloned = 9
killed = 13
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 9, 18, 16, 21, 17, 20, 2, 1, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 19, 4, 15, 11, 13, 12, 6, 10, 7, 14, 22]
====================================
cloned = 5
killed = 8
cloned = 19
killed = 9
cloned = 4
killed = 18
cloned = 15
killed = 16
cloned = 11
killed = 21
cloned = 13
killed = 17
cloned = 12
killed = 20
cloned = 6
killed = 2
cloned = 10
killed = 1
cloned = 7
killed = 3
cloned = 14
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 6, 8, 12, 18, 0, 2, 5, 13, 21, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 1, 11, 15, 3, 16, 4, 17, 7, 9, 22]
====================================
cloned = 20
killed = 10
cloned = 14
killed = 6
cloned = 1
killed = 8
cloned = 11
killed = 12
cloned = 15
killed = 18
cloned = 3
killed = 0
cloned = 16
killed = 2
cloned = 4
killed = 5
cloned = 17
killed = 13
cloned = 7
killed = 21
cloned = 9
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 6, 10, 9, 11, 13, 5, 20, 0, 4, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 14, 1, 12, 3, 18, 15, 2, 8, 19, 7, 22]
====================================
cloned = 17
killed = 21
cloned = 14
killed = 6
cloned = 1
killed = 10
cloned = 12
killed = 9
cloned = 3
killed = 11
cloned = 18
killed = 13
cloned = 15
killed = 5
cloned = 2
killed = 20
cloned = 8
killed = 0
cloned = 19
killed = 4
cloned = 7
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 21, 5, 6, 4, 12, 1, 3, 8, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 16, 0, 20, 11, 14, 7, 10, 13, 15, 17, 22]
====================================
cloned = 19
killed = 18
cloned = 16
killed = 21
cloned = 0
killed = 5
cloned = 20
killed = 6
cloned = 11
killed = 4
cloned = 14
killed = 12
cloned = 7
killed = 1
cloned = 10
killed = 3
cloned = 13
killed = 8
cloned = 15
killed = 9
cloned = 17
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 11, 2, 21, 17, 14, 10, 12, 19, 16, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 6, 0, 5, 8, 15, 9, 13, 18, 1, 4, 22]
====================================
cloned = 7
killed = 3
cloned = 6
killed = 11
cloned = 0
killed = 2
cloned = 5
killed = 21
cloned = 8
killed = 17
cloned = 15
killed = 14
cloned = 9
killed = 10
cloned = 13
killed = 12
cloned = 18
killed = 19
cloned = 1
killed = 16
cloned = 4
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 10, 4, 8, 6, 3, 18, 0, 12, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 1, 13, 9, 19, 5, 20, 14, 2, 17, 16, 22]
====================================
cloned = 11
killed = 21
cloned = 1
killed = 7
cloned = 13
killed = 10
cloned = 9
killed = 4
cloned = 19
killed = 8
cloned = 5
killed = 6
cloned = 20
killed = 3
cloned = 14
killed = 18
cloned = 2
killed = 0
cloned = 17
killed = 12
cloned = 16
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 11, 6, 7, 4, 16, 9, 15, 21, 13, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 3, 8, 1, 18, 10, 12, 20, 19, 17, 5, 22]
====================================
cloned = 14
killed = 0
cloned = 3
killed = 11
cloned = 8
killed = 6
cloned = 1
killed = 7
cloned = 18
killed = 4
cloned = 10
killed = 16
cloned = 12
killed = 9
cloned = 20
killed = 15
cloned = 19
killed = 21
cloned = 17
killed = 13
cloned = 5
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 14, 12, 8, 19, 11, 3, 10, 4, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 18, 2, 7, 13, 21, 9, 17, 6, 16, 20, 22]
====================================
cloned = 5
killed = 1
cloned = 18
killed = 0
cloned = 2
killed = 14
cloned = 7
killed = 12
cloned = 13
killed = 8
cloned = 21
killed = 19
cloned = 9
killed = 11
cloned = 17
killed = 3
cloned = 6
killed = 10
cloned = 16
killed = 4
cloned = 20
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 2, 20, 11, 19, 14, 6, 21, 8, 1, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 9, 18, 13, 16, 3, 4, 17, 12, 10, 5, 22]
====================================
cloned = 7
killed = 15
cloned = 9
killed = 2
cloned = 18
killed = 20
cloned = 13
killed = 11
cloned = 16
killed = 19
cloned = 3
killed = 14
cloned = 4
killed = 6
cloned = 17
killed = 21
cloned = 12
killed = 8
cloned = 10
killed = 1
cloned = 5
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 18, 4, 11, 19, 20, 15, 3, 16, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 13, 2, 5, 10, 9, 12, 1, 17, 8, 14, 22]
====================================
cloned = 7
killed = 0
cloned = 13
killed = 6
cloned = 2
killed = 18
cloned = 5
killed = 4
cloned = 10
killed = 11
cloned = 9
killed = 19
cloned = 12
killed = 20
cloned = 1
killed = 15
cloned = 17
killed = 3
cloned = 8
killed = 16
cloned = 14
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 7, 8, 10, 12, 1, 19, 0, 3, 9, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 4, 20, 2, 17, 5, 18, 11, 13, 16, 6, 22]
====================================
cloned = 14
killed = 21
cloned = 4
killed = 7
cloned = 20
killed = 8
cloned = 2
killed = 10
cloned = 17
killed = 12
cloned = 5
killed = 1
cloned = 18
killed = 19
cloned = 11
killed = 0
cloned = 13
killed = 3
cloned = 16
killed = 9
cloned = 6
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 10, 20, 0, 5, 15, 7, 3, 2, 17, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 16, 1, 11, 18, 19, 9, 4, 6, 12, 8, 22]
====================================
cloned = 13
killed = 21
cloned = 16
killed = 10
cloned = 1
killed = 20
cloned = 11
killed = 0
cloned = 18
killed = 5
cloned = 19
killed = 15
cloned = 9
killed = 7
cloned = 4
killed = 3
cloned = 6
killed = 2
cloned = 12
killed = 17
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 3, 1, 0, 4, 6, 7, 21, 8, 16, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 15, 18, 9, 17, 10, 11, 19, 5, 20, 12, 22]
====================================
cloned = 13
killed = 2
cloned = 15
killed = 3
cloned = 18
killed = 1
cloned = 9
killed = 0
cloned = 17
killed = 4
cloned = 10
killed = 6
cloned = 11
killed = 7
cloned = 19
killed = 21
cloned = 5
killed = 8
cloned = 20
killed = 16
cloned = 12
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 18, 10, 2, 5, 15, 0, 20, 13, 17, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 14, 9, 16, 3, 1, 11, 6, 12, 19, 21, 22]
====================================
cloned = 8
killed = 4
cloned = 14
killed = 18
cloned = 9
killed = 10
cloned = 16
killed = 2
cloned = 3
killed = 5
cloned = 1
killed = 15
cloned = 11
killed = 0
cloned = 6
killed = 20
cloned = 12
killed = 13
cloned = 19
killed = 17
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 21, 12, 16, 2, 8, 13, 6, 11, 10, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 3, 18, 7, 0, 4, 14, 19, 15, 9, 1, 22]
====================================
cloned = 17
killed = 5
cloned = 3
killed = 21
cloned = 18
killed = 12
cloned = 7
killed = 16
cloned = 0
killed = 2
cloned = 4
killed = 8
cloned = 14
killed = 13
cloned = 19
killed = 6
cloned = 15
killed = 11
cloned = 9
killed = 10
cloned = 1
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 13, 6, 0, 20, 7, 17, 5, 1, 8, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 3, 12, 18, 9, 11, 4, 19, 14, 16, 10, 22]
====================================
cloned = 15
killed = 2
cloned = 3
killed = 13
cloned = 12
killed = 6
cloned = 18
killed = 0
cloned = 9
killed = 20
cloned = 11
killed = 7
cloned = 4
killed = 17
cloned = 19
killed = 5
cloned = 14
killed = 1
cloned = 16
killed = 8
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 19, 10, 4, 13, 2, 5, 9, 11, 18, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 16, 14, 8, 17, 20, 6, 7, 3, 0, 1, 22]
====================================
cloned = 15
killed = 21
cloned = 16
killed = 19
cloned = 14
killed = 10
cloned = 8
killed = 4
cloned = 17
killed = 13
cloned = 20
killed = 2
cloned = 6
killed = 5
cloned = 7
killed = 9
cloned = 3
killed = 11
cloned = 0
killed = 18
cloned = 1
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 8, 20, 5, 3, 21, 15, 17, 9, 11, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 13, 10, 2, 7, 4, 12, 6, 18, 0, 22]
====================================
cloned = 19
killed = 16
cloned = 14
killed = 8
cloned = 13
killed = 20
cloned = 10
killed = 5
cloned = 2
killed = 3
cloned = 7
killed = 21
cloned = 4
killed = 15
cloned = 12
killed = 17
cloned = 6
killed = 9
cloned = 18
killed = 11
cloned = 0
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 21, 7, 18, 17, 14, 1, 10, 3, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 0, 9, 20, 8, 15, 11, 19, 16, 4, 13, 22]
====================================
cloned = 6
killed = 5
cloned = 0
killed = 21
cloned = 9
killed = 7
cloned = 20
killed = 18
cloned = 8
killed = 17
cloned = 15
killed = 14
cloned = 11
killed = 1
cloned = 19
killed = 10
cloned = 16
killed = 3
cloned = 4
killed = 2
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 14, 15, 6, 4, 7, 2, 8, 18, 10, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 19, 16, 17, 20, 21, 11, 3, 0, 13, 5, 22]
====================================
cloned = 12
killed = 1
cloned = 19
killed = 14
cloned = 16
killed = 15
cloned = 17
killed = 6
cloned = 20
killed = 4
cloned = 21
killed = 7
cloned = 11
killed = 2
cloned = 3
killed = 8
cloned = 0
killed = 18
cloned = 13
killed = 10
cloned = 5
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 14, 2, 17, 4, 8, 3, 6, 20, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 10, 15, 18, 19, 13, 1, 21, 16, 9, 5, 22]
====================================
cloned = 12
killed = 11
cloned = 10
killed = 0
cloned = 15
killed = 14
cloned = 18
killed = 2
cloned = 19
killed = 17
cloned = 13
killed = 4
cloned = 1
killed = 8
cloned = 21
killed = 3
cloned = 16
killed = 6
cloned = 9
killed = 20
cloned = 5
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 1, 7, 4, 20, 5, 12, 19, 17, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 14, 6, 15, 13, 9, 3, 0, 8, 21, 16, 22]
====================================
cloned = 18
killed = 2
cloned = 14
killed = 11
cloned = 6
killed = 1
cloned = 15
killed = 7
cloned = 13
killed = 4
cloned = 9
killed = 20
cloned = 3
killed = 5
cloned = 0
killed = 12
cloned = 8
killed = 19
cloned = 21
killed = 17
cloned = 16
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 1, 4, 3, 17, 6, 7, 14, 16, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 9, 2, 19, 21, 18, 10, 12, 20, 8, 0, 22]
====================================
cloned = 5
killed = 11
cloned = 9
killed = 13
cloned = 2
killed = 1
cloned = 19
killed = 4
cloned = 21
killed = 3
cloned = 18
killed = 17
cloned = 10
killed = 6
cloned = 12
killed = 7
cloned = 20
killed = 14
cloned = 8
killed = 16
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 16, 10, 7, 9, 18, 13, 15, 2, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 8, 12, 20, 11, 4, 17, 3, 1, 5, 21, 22]
====================================
cloned = 19
killed = 0
cloned = 8
killed = 6
cloned = 12
killed = 16
cloned = 20
killed = 10
cloned = 11
killed = 7
cloned = 4
killed = 9
cloned = 17
killed = 18
cloned = 3
killed = 13
cloned = 1
killed = 15
cloned = 5
killed = 2
cloned = 21
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 17, 10, 14, 2, 1, 16, 4, 6, 18, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 20, 5, 21, 3, 7, 19, 8, 15, 9, 0, 22]
====================================
cloned = 13
killed = 11
cloned = 20
killed = 17
cloned = 5
killed = 10
cloned = 21
killed = 14
cloned = 3
killed = 2
cloned = 7
killed = 1
cloned = 19
killed = 16
cloned = 8
killed = 4
cloned = 15
killed = 6
cloned = 9
killed = 18
cloned = 0
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 18, 21, 5, 7, 20, 13, 3, 16, 10, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 19, 1, 4, 8, 17, 6, 9, 11, 12, 0, 22]
====================================
cloned = 2
killed = 15
cloned = 19
killed = 18
cloned = 1
killed = 21
cloned = 4
killed = 5
cloned = 8
killed = 7
cloned = 17
killed = 20
cloned = 6
killed = 13
cloned = 9
killed = 3
cloned = 11
killed = 16
cloned = 12
killed = 10
cloned = 0
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 9, 17, 2, 1, 16, 12, 13, 7, 4, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 19, 21, 5, 8, 3, 6, 11, 14, 20, 10, 22]
====================================
cloned = 0
killed = 18
cloned = 19
killed = 9
cloned = 21
killed = 17
cloned = 5
killed = 2
cloned = 8
killed = 1
cloned = 3
killed = 16
cloned = 6
killed = 12
cloned = 11
killed = 13
cloned = 14
killed = 7
cloned = 20
killed = 4
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 1, 6, 0, 13, 10, 7, 11, 12, 14, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 8, 19, 15, 5, 2, 20, 17, 16, 3, 4, 22]
====================================
cloned = 9
killed = 18
cloned = 8
killed = 1
cloned = 19
killed = 6
cloned = 15
killed = 0
cloned = 5
killed = 13
cloned = 2
killed = 10
cloned = 20
killed = 7
cloned = 17
killed = 11
cloned = 16
killed = 12
cloned = 3
killed = 14
cloned = 4
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 2, 19, 6, 17, 7, 5, 14, 9, 12, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 13, 1, 21, 20, 4, 0, 3, 11, 15, 16, 22]
====================================
cloned = 10
killed = 8
cloned = 13
killed = 2
cloned = 1
killed = 19
cloned = 21
killed = 6
cloned = 20
killed = 17
cloned = 4
killed = 7
cloned = 0
killed = 5
cloned = 3
killed = 14
cloned = 11
killed = 9
cloned = 15
killed = 12
cloned = 16
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 4, 6, 2, 17, 14, 8, 5, 21, 3, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 15, 1, 10, 12, 13, 16, 19, 11, 18, 9, 22]
====================================
cloned = 20
killed = 0
cloned = 15
killed = 4
cloned = 1
killed = 6
cloned = 10
killed = 2
cloned = 12
killed = 17
cloned = 13
killed = 14
cloned = 16
killed = 8
cloned = 19
killed = 5
cloned = 11
killed = 21
cloned = 18
killed = 3
cloned = 9
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 19, 15, 9, 14, 18, 6, 7, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 10, 20, 5, 12, 1, 11, 8, 16, 21, 0, 22]
====================================
cloned = 4
killed = 13
cloned = 10
killed = 17
cloned = 20
killed = 19
cloned = 5
killed = 15
cloned = 12
killed = 9
cloned = 1
killed = 14
cloned = 11
killed = 18
cloned = 8
killed = 6
cloned = 16
killed = 7
cloned = 21
killed = 3
cloned = 0
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 14, 13, 7, 12, 2, 4, 15, 19, 20, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 11, 1, 9, 21, 0, 8, 17, 16, 5, 3, 22]
====================================
cloned = 10
killed = 6
cloned = 11
killed = 14
cloned = 1
killed = 13
cloned = 9
killed = 7
cloned = 21
killed = 12
cloned = 0
killed = 2
cloned = 8
killed = 4
cloned = 17
killed = 15
cloned = 16
killed = 19
cloned = 5
killed = 20
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 12, 16, 18, 9, 0, 14, 6, 21, 13, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 19, 20, 11, 3, 1, 5, 4, 15, 8, 2, 22]
====================================
cloned = 7
killed = 17
cloned = 19
killed = 12
cloned = 20
killed = 16
cloned = 11
killed = 18
cloned = 3
killed = 9
cloned = 1
killed = 0
cloned = 5
killed = 14
cloned = 4
killed = 6
cloned = 15
killed = 21
cloned = 8
killed = 13
cloned = 2
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 7, 12, 20, 13, 8, 21, 18, 16, 2, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 10, 14, 6, 9, 17, 11, 15, 5, 3, 19, 22]
====================================
cloned = 4
killed = 1
cloned = 10
killed = 7
cloned = 14
killed = 12
cloned = 6
killed = 20
cloned = 9
killed = 13
cloned = 17
killed = 8
cloned = 11
killed = 21
cloned = 15
killed = 18
cloned = 5
killed = 16
cloned = 3
killed = 2
cloned = 19
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 21, 15, 6, 18, 5, 14, 7, 12, 16, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 8, 13, 9, 17, 4, 10, 2, 3, 11, 19, 22]
====================================
cloned = 20
killed = 0
cloned = 8
killed = 21
cloned = 13
killed = 15
cloned = 9
killed = 6
cloned = 17
killed = 18
cloned = 4
killed = 5
cloned = 10
killed = 14
cloned = 2
killed = 7
cloned = 3
killed = 12
cloned = 11
killed = 16
cloned = 19
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 20, 15, 19, 6, 7, 1, 8, 14, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 21, 18, 3, 16, 13, 10, 5, 12, 11, 2, 22]
====================================
cloned = 17
killed = 0
cloned = 21
killed = 9
cloned = 18
killed = 20
cloned = 3
killed = 15
cloned = 16
killed = 19
cloned = 13
killed = 6
cloned = 10
killed = 7
cloned = 5
killed = 1
cloned = 12
killed = 8
cloned = 11
killed = 14
cloned = 2
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 5, 4, 11, 7, 13, 16, 19, 6, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 20, 8, 0, 18, 21, 1, 17, 9, 14, 10, 22]
====================================
cloned = 12
killed = 3
cloned = 20
killed = 2
cloned = 8
killed = 5
cloned = 0
killed = 4
cloned = 18
killed = 11
cloned = 21
killed = 7
cloned = 1
killed = 13
cloned = 17
killed = 16
cloned = 9
killed = 19
cloned = 14
killed = 6
cloned = 10
killed = 15
Trial run 16/seed 871:
..................................................
winner: {'DBS: 0.75, 3, 4, 3, 5', 'Tit For 2 Tats'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Grudger': 1}),
 Counter({'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'DBS: 0.75, 3, 4, 3, 5': 4,
          'Evolved ANN 5': 3}),
 Counter({'Evolved ANN 5': 6,
          'DBS: 0.75, 3, 4, 3, 5': 5,
          'Evolved FSM 6': 4,
          'Tit For Tat': 4,
          'Tit For 2 Tats': 4}),
 Counter({'DBS: 0.75, 3, 4, 3, 5': 9,
          'Tit For Tat': 4,
          'Tit For 2 Tats': 4,
          'Evolved ANN 5': 4,
          'Evolved FSM 6': 2}),
 Counter({'DBS: 0.75, 3, 4, 3, 5': 7,
          'Tit For 2 Tats': 6,
          'Evolved ANN 5': 4,
          'Tit For Tat': 4,
          'Evolved FSM 6': 2}),
 Counter({'DBS: 0.75, 3, 4, 3, 5': 7,
          'Tit For 2 Tats': 6,
          'Tit For Tat': 6,
          'Evolved ANN 5': 4}),
 Counter({'Tit For Tat': 8,
          'DBS: 0.75, 3, 4, 3, 5': 7,
          'Evolved ANN 5': 6,
          'Tit For 2 Tats': 2}),
 Counter({'Tit For Tat': 10,
          'DBS: 0.75, 3, 4, 3, 5': 7,
          'Evolved ANN 5': 4,
          'Tit For 2 Tats': 2}),
 Counter({'Tit For Tat': 10,
          'DBS: 0.75, 3, 4, 3, 5': 7,
          'Evolved ANN 5': 4,
          'Tit For 2 Tats': 2}),
 Counter({'Tit For Tat': 10,
          'DBS: 0.75, 3, 4, 3, 5': 7,
          'Tit For 2 Tats': 4,
          'Evolved ANN 5': 2}),
 Counter({'Tit For Tat': 12,
          'DBS: 0.75, 3, 4, 3, 5': 5,
          'Evolved ANN 5': 4,
          'Tit For 2 Tats': 2}),
 Counter({'Tit For Tat': 14,
          'DBS: 0.75, 3, 4, 3, 5': 5,
          'Evolved ANN 5': 2,
          'Tit For 2 Tats': 2}),
 Counter({'Tit For Tat': 14,
          'DBS: 0.75, 3, 4, 3, 5': 5,
          'Evolved ANN 5': 2,
          'Tit For 2 Tats': 2}),
 Counter({'Tit For Tat': 14,
          'DBS: 0.75, 3, 4, 3, 5': 5,
          'Evolved ANN 5': 2,
          'Tit For 2 Tats': 2}),
 Counter({'Tit For Tat': 16, 'Tit For 2 Tats': 4, 'DBS: 0.75, 3, 4, 3, 5': 3}),
 Counter({'Tit For Tat': 16, 'Tit For 2 Tats': 4, 'DBS: 0.75, 3, 4, 3, 5': 3}),
 Counter({'Tit For Tat': 20, 'Tit For 2 Tats': 2, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 18, 'Tit For 2 Tats': 4, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Tit For 2 Tats': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 18, 'Tit For 2 Tats': 4, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Tit For 2 Tats': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Tit For 2 Tats': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 14, 'Tit For 2 Tats': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 12, 'Tit For 2 Tats': 10, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Tit For 2 Tats': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 16, 'Tit For 2 Tats': 6, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 14, 'Tit For 2 Tats': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For Tat': 14, 'Tit For 2 Tats': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 14, 'Tit For Tat': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 14, 'Tit For Tat': 8, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 12, 'Tit For Tat': 10, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 18, 'Tit For Tat': 4, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 18, 'Tit For Tat': 4, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 20, 'Tit For Tat': 2, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 20, 'Tit For Tat': 2, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 20, 'Tit For Tat': 2, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 18, 'Tit For Tat': 4, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 20, 'Tit For Tat': 2, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Tit For 2 Tats': 22, 'DBS: 0.75, 3, 4, 3, 5': 1})]
--------------------------------------------------
Score:
[[61.34000000000001,
  56.215,
  59.3,
  54.675000000000004,
  52.01500000000001,
  54.48500000000001,
  53.599999999999994,
  36.78,
  44.790000000000006,
  31.589999999999996,
  48.04,
  50.81999999999999,
  45.834999999999994,
  52.485,
  56.324999999999996,
  37.06,
  50.745000000000005,
  47.265,
  45.485,
  44.165000000000006,
  34.96500000000001,
  55.535,
  53.49499999999999],
 [65.7,
  61.830000000000005,
  65.75,
  62.870000000000005,
  62.285,
  62.16,
  61.985,
  65.7,
  62.395,
  65.75,
  62.870000000000005,
  60.72,
  62.26,
  63.540000000000006,
  56.43999999999999,
  62.16,
  61.004999999999995,
  63.540000000000006,
  56.21,
  62.47,
  62.58,
  62.47,
  62.58],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.46,
 55.760000000000005,
 59.36,
 54.625,
 51.82,
 54.36000000000001,
 54.78999999999999,
 37.1,
 44.67,
 28.66000000000001,
 47.89000000000001,
 50.699999999999996,
 47.91499999999999,
 52.315,
 56.379999999999995,
 37.199999999999996,
 51.655,
 49.120000000000005,
 46.47,
 41.825,
 34.75500000000001,
 55.5,
 53.05]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.655
Upper: 51.655
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 63.864999999999995,
 65.75,
 62.870000000000005,
 62.44499999999999,
 62.16,
 61.045,
 65.7,
 64.23500000000001,
 65.75,
 62.870000000000005,
 62.465,
 62.160000000000004,
 63.540000000000006,
 58.984999999999985,
 61.425,
 62.58,
 63.540000000000006,
 58.695,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 0, 4, 7, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 0
killed = 20
cloned = 4
killed = 21
cloned = 7
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 12, 21, 4]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 7, 20, 0, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 7
killed = 12
cloned = 20
killed = 21
cloned = 0
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 19, 9, 4, 14, 13, 7, 2, 20, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 12, 3, 8, 0, 16, 21, 18, 6, 10, 15, 22]
====================================
cloned = 17
killed = 5
cloned = 12
killed = 1
cloned = 3
killed = 19
cloned = 8
killed = 9
cloned = 0
killed = 4
cloned = 16
killed = 14
cloned = 21
killed = 13
cloned = 18
killed = 7
cloned = 6
killed = 2
cloned = 10
killed = 20
cloned = 15
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 2, 20, 21, 13, 14, 4, 5, 6, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 12, 10, 11, 17, 7, 15, 8, 16, 1, 19, 22]
====================================
cloned = 9
killed = 18
cloned = 12
killed = 2
cloned = 10
killed = 20
cloned = 11
killed = 21
cloned = 17
killed = 13
cloned = 7
killed = 14
cloned = 15
killed = 4
cloned = 8
killed = 5
cloned = 16
killed = 6
cloned = 1
killed = 0
cloned = 19
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 21, 0, 4, 3, 10, 8, 15, 17, 20, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 14, 9, 7, 19, 2, 16, 18, 12, 1, 13, 22]
====================================
cloned = 11
killed = 6
cloned = 14
killed = 21
cloned = 9
killed = 0
cloned = 7
killed = 4
cloned = 19
killed = 3
cloned = 2
killed = 10
cloned = 16
killed = 8
cloned = 18
killed = 15
cloned = 12
killed = 17
cloned = 1
killed = 20
cloned = 13
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 20, 6, 2, 5, 10, 9, 3, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 8, 14, 19, 21, 15, 16, 1, 0, 13, 12, 22]
====================================
cloned = 18
killed = 17
cloned = 8
killed = 7
cloned = 14
killed = 20
cloned = 19
killed = 6
cloned = 21
killed = 2
cloned = 15
killed = 5
cloned = 16
killed = 10
cloned = 1
killed = 9
cloned = 0
killed = 3
cloned = 13
killed = 11
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 18, 4, 21, 12, 13, 8, 10, 6, 16, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 1, 5, 2, 15, 9, 0, 17, 3, 19, 22]
====================================
cloned = 20
killed = 11
cloned = 14
killed = 18
cloned = 1
killed = 4
cloned = 5
killed = 21
cloned = 2
killed = 12
cloned = 15
killed = 13
cloned = 9
killed = 8
cloned = 0
killed = 10
cloned = 17
killed = 6
cloned = 3
killed = 16
cloned = 19
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 5, 7, 12, 18, 2, 1, 17, 15, 3, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 20, 6, 11, 16, 13, 19, 14, 4, 9, 21, 22]
====================================
cloned = 0
killed = 8
cloned = 20
killed = 5
cloned = 6
killed = 7
cloned = 11
killed = 12
cloned = 16
killed = 18
cloned = 13
killed = 2
cloned = 19
killed = 1
cloned = 14
killed = 17
cloned = 4
killed = 15
cloned = 9
killed = 3
cloned = 21
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 18, 3, 20, 10, 21, 13, 14, 5, 6, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 0, 15, 11, 7, 1, 17, 4, 2, 8, 16, 22]
====================================
cloned = 9
killed = 12
cloned = 0
killed = 18
cloned = 15
killed = 3
cloned = 11
killed = 20
cloned = 7
killed = 10
cloned = 1
killed = 21
cloned = 17
killed = 13
cloned = 4
killed = 14
cloned = 2
killed = 5
cloned = 8
killed = 6
cloned = 16
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 2, 11, 15, 6, 20, 10, 3, 8, 17, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 14, 7, 0, 16, 19, 18, 13, 9, 5, 12, 22]
====================================
cloned = 4
killed = 21
cloned = 14
killed = 2
cloned = 7
killed = 11
cloned = 0
killed = 15
cloned = 16
killed = 6
cloned = 19
killed = 20
cloned = 18
killed = 10
cloned = 13
killed = 3
cloned = 9
killed = 8
cloned = 5
killed = 17
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 15, 16, 14, 17, 6, 20, 4, 18, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 12, 8, 3, 0, 10, 7, 9, 11, 2, 5, 22]
====================================
cloned = 21
killed = 13
cloned = 12
killed = 1
cloned = 8
killed = 15
cloned = 3
killed = 16
cloned = 0
killed = 14
cloned = 10
killed = 17
cloned = 7
killed = 6
cloned = 9
killed = 20
cloned = 11
killed = 4
cloned = 2
killed = 18
cloned = 5
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 6, 9, 8, 13, 11, 14, 21, 20, 17, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 12, 0, 10, 3, 15, 4, 7, 19, 5, 1, 22]
====================================
cloned = 18
killed = 16
cloned = 12
killed = 6
cloned = 0
killed = 9
cloned = 10
killed = 8
cloned = 3
killed = 13
cloned = 15
killed = 11
cloned = 4
killed = 14
cloned = 7
killed = 21
cloned = 19
killed = 20
cloned = 5
killed = 17
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 20, 10, 17, 0, 8, 15, 1, 4, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 12, 16, 3, 18, 9, 14, 13, 19, 21, 7, 22]
====================================
cloned = 2
killed = 5
cloned = 12
killed = 20
cloned = 16
killed = 10
cloned = 3
killed = 17
cloned = 18
killed = 0
cloned = 9
killed = 8
cloned = 14
killed = 15
cloned = 13
killed = 1
cloned = 19
killed = 4
cloned = 21
killed = 6
cloned = 7
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 17, 4, 10, 8, 9, 18, 16, 15, 2, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 20, 12, 6, 5, 13, 19, 1, 14, 21, 11, 22]
====================================
cloned = 0
killed = 3
cloned = 20
killed = 17
cloned = 12
killed = 4
cloned = 6
killed = 10
cloned = 5
killed = 8
cloned = 13
killed = 9
cloned = 19
killed = 18
cloned = 1
killed = 16
cloned = 14
killed = 15
cloned = 21
killed = 2
cloned = 11
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 17, 3, 11, 21, 1, 15, 8, 12, 6, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 20, 7, 19, 9, 14, 0, 2, 4, 16, 5, 22]
====================================
cloned = 10
killed = 13
cloned = 20
killed = 17
cloned = 7
killed = 3
cloned = 19
killed = 11
cloned = 9
killed = 21
cloned = 14
killed = 1
cloned = 0
killed = 15
cloned = 2
killed = 8
cloned = 4
killed = 12
cloned = 16
killed = 6
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 21, 5, 8, 7, 1, 3, 17, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 16, 14, 0, 12, 2, 13, 18, 15, 6, 4, 22]
====================================
cloned = 19
killed = 10
cloned = 16
killed = 20
cloned = 14
killed = 21
cloned = 0
killed = 5
cloned = 12
killed = 8
cloned = 2
killed = 7
cloned = 13
killed = 1
cloned = 18
killed = 3
cloned = 15
killed = 17
cloned = 6
killed = 9
cloned = 4
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 14, 5, 6, 19, 15, 9, 10, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 17, 1, 3, 7, 18, 12, 4, 16, 21, 20, 22]
====================================
cloned = 0
killed = 13
cloned = 17
killed = 2
cloned = 1
killed = 14
cloned = 3
killed = 5
cloned = 7
killed = 6
cloned = 18
killed = 19
cloned = 12
killed = 15
cloned = 4
killed = 9
cloned = 16
killed = 10
cloned = 21
killed = 8
cloned = 20
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 19, 16, 11, 2, 17, 1, 6, 21, 15, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 10, 14, 5, 12, 0, 9, 20, 4, 7, 18, 22]
====================================
cloned = 3
killed = 13
cloned = 10
killed = 19
cloned = 14
killed = 16
cloned = 5
killed = 11
cloned = 12
killed = 2
cloned = 0
killed = 17
cloned = 9
killed = 1
cloned = 20
killed = 6
cloned = 4
killed = 21
cloned = 7
killed = 15
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 18, 2, 1, 15, 13, 7, 20, 21, 17, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 5, 16, 8, 4, 3, 14, 10, 19, 0, 12, 22]
====================================
cloned = 11
killed = 9
cloned = 5
killed = 18
cloned = 16
killed = 2
cloned = 8
killed = 1
cloned = 4
killed = 15
cloned = 3
killed = 13
cloned = 14
killed = 7
cloned = 10
killed = 20
cloned = 19
killed = 21
cloned = 0
killed = 17
cloned = 12
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 9, 0, 12, 7, 10, 4, 11, 18, 19, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 21, 8, 17, 13, 3, 14, 20, 2, 5, 15, 22]
====================================
cloned = 16
killed = 1
cloned = 21
killed = 9
cloned = 8
killed = 0
cloned = 17
killed = 12
cloned = 13
killed = 7
cloned = 3
killed = 10
cloned = 14
killed = 4
cloned = 20
killed = 11
cloned = 2
killed = 18
cloned = 5
killed = 19
cloned = 15
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 2, 8, 13, 19, 5, 3, 4, 17, 7, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 0, 12, 11, 21, 1, 9, 14, 20, 16, 10, 22]
====================================
cloned = 6
killed = 18
cloned = 0
killed = 2
cloned = 12
killed = 8
cloned = 11
killed = 13
cloned = 21
killed = 19
cloned = 1
killed = 5
cloned = 9
killed = 3
cloned = 14
killed = 4
cloned = 20
killed = 17
cloned = 16
killed = 7
cloned = 10
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 4, 6, 10, 18, 8, 15, 0, 7, 16, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 3, 12, 20, 1, 14, 21, 17, 13, 2, 5, 22]
====================================
cloned = 11
killed = 19
cloned = 3
killed = 4
cloned = 12
killed = 6
cloned = 20
killed = 10
cloned = 1
killed = 18
cloned = 14
killed = 8
cloned = 21
killed = 15
cloned = 17
killed = 0
cloned = 13
killed = 7
cloned = 2
killed = 16
cloned = 5
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 19, 5, 13, 15, 1, 4, 10, 21, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 11, 2, 7, 20, 17, 3, 18, 9, 6, 8, 22]
====================================
cloned = 14
killed = 16
cloned = 11
killed = 19
cloned = 2
killed = 5
cloned = 7
killed = 13
cloned = 20
killed = 15
cloned = 17
killed = 1
cloned = 3
killed = 4
cloned = 18
killed = 10
cloned = 9
killed = 21
cloned = 6
killed = 0
cloned = 8
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 0, 11, 10, 15, 5, 19, 12, 17, 8, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 13, 16, 2, 4, 18, 9, 20, 7, 6, 21, 22]
====================================
cloned = 1
killed = 3
cloned = 13
killed = 0
cloned = 16
killed = 11
cloned = 2
killed = 10
cloned = 4
killed = 15
cloned = 18
killed = 5
cloned = 9
killed = 19
cloned = 20
killed = 12
cloned = 7
killed = 17
cloned = 6
killed = 8
cloned = 21
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 11, 16, 21, 19, 4, 2, 18, 9, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 1, 13, 17, 10, 3, 0, 14, 12, 6, 7, 22]
====================================
cloned = 20
killed = 5
cloned = 1
killed = 8
cloned = 13
killed = 11
cloned = 17
killed = 16
cloned = 10
killed = 21
cloned = 3
killed = 19
cloned = 0
killed = 4
cloned = 14
killed = 2
cloned = 12
killed = 18
cloned = 6
killed = 9
cloned = 7
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 18, 11, 6, 5, 8, 13, 20, 21, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 12, 4, 7, 1, 0, 15, 14, 19, 3, 2, 22]
====================================
cloned = 16
killed = 17
cloned = 12
killed = 9
cloned = 4
killed = 18
cloned = 7
killed = 11
cloned = 1
killed = 6
cloned = 0
killed = 5
cloned = 15
killed = 8
cloned = 14
killed = 13
cloned = 19
killed = 20
cloned = 3
killed = 21
cloned = 2
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 14, 3, 0, 19, 13, 16, 12, 20, 17, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 15, 6, 9, 7, 2, 11, 5, 4, 18, 10, 22]
====================================
cloned = 8
killed = 1
cloned = 15
killed = 14
cloned = 6
killed = 3
cloned = 9
killed = 0
cloned = 7
killed = 19
cloned = 2
killed = 13
cloned = 11
killed = 16
cloned = 5
killed = 12
cloned = 4
killed = 20
cloned = 18
killed = 17
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 10, 19, 3, 14, 15, 16, 5, 0, 20, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 18, 17, 11, 21, 2, 7, 8, 6, 13, 9, 22]
====================================
cloned = 12
killed = 4
cloned = 18
killed = 10
cloned = 17
killed = 19
cloned = 11
killed = 3
cloned = 21
killed = 14
cloned = 2
killed = 15
cloned = 7
killed = 16
cloned = 8
killed = 5
cloned = 6
killed = 0
cloned = 13
killed = 20
cloned = 9
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 21, 16, 10, 17, 5, 0, 12, 13, 19, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 1, 20, 11, 2, 7, 4, 8, 3, 18, 14, 22]
====================================
cloned = 9
killed = 6
cloned = 1
killed = 21
cloned = 20
killed = 16
cloned = 11
killed = 10
cloned = 2
killed = 17
cloned = 7
killed = 5
cloned = 4
killed = 0
cloned = 8
killed = 12
cloned = 3
killed = 13
cloned = 18
killed = 19
cloned = 14
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 12, 5, 19, 1, 21, 7, 2, 15, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 14, 10, 18, 17, 11, 16, 4, 8, 9, 20, 22]
====================================
cloned = 13
killed = 0
cloned = 14
killed = 12
cloned = 10
killed = 5
cloned = 18
killed = 19
cloned = 17
killed = 1
cloned = 11
killed = 21
cloned = 16
killed = 7
cloned = 4
killed = 2
cloned = 8
killed = 15
cloned = 9
killed = 3
cloned = 20
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 19, 3, 0, 10, 18, 4, 12, 9, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 8, 7, 17, 2, 6, 15, 13, 20, 14, 11, 22]
====================================
cloned = 16
killed = 5
cloned = 8
killed = 1
cloned = 7
killed = 19
cloned = 17
killed = 3
cloned = 2
killed = 0
cloned = 6
killed = 10
cloned = 15
killed = 18
cloned = 13
killed = 4
cloned = 20
killed = 12
cloned = 14
killed = 9
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 15, 4, 21, 14, 9, 20, 3, 12, 17, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 7, 6, 0, 13, 19, 2, 5, 10, 11, 8, 22]
====================================
cloned = 16
killed = 18
cloned = 7
killed = 15
cloned = 6
killed = 4
cloned = 0
killed = 21
cloned = 13
killed = 14
cloned = 19
killed = 9
cloned = 2
killed = 20
cloned = 5
killed = 3
cloned = 10
killed = 12
cloned = 11
killed = 17
cloned = 8
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 18, 6, 13, 1, 15, 2, 10, 3, 9, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 5, 12, 21, 16, 17, 0, 19, 11, 8, 7, 22]
====================================
cloned = 4
killed = 20
cloned = 5
killed = 18
cloned = 12
killed = 6
cloned = 21
killed = 13
cloned = 16
killed = 1
cloned = 17
killed = 15
cloned = 0
killed = 2
cloned = 19
killed = 10
cloned = 11
killed = 3
cloned = 8
killed = 9
cloned = 7
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 16, 0, 3, 18, 12, 9, 8, 20, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 15, 4, 11, 13, 21, 19, 2, 6, 5, 10, 22]
====================================
cloned = 1
killed = 17
cloned = 15
killed = 7
cloned = 4
killed = 16
cloned = 11
killed = 0
cloned = 13
killed = 3
cloned = 21
killed = 18
cloned = 19
killed = 12
cloned = 2
killed = 9
cloned = 6
killed = 8
cloned = 5
killed = 20
cloned = 10
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 13, 7, 17, 4, 15, 10, 5, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 1, 19, 0, 8, 20, 6, 12, 14, 21, 2, 22]
====================================
cloned = 18
killed = 16
cloned = 1
killed = 3
cloned = 19
killed = 13
cloned = 0
killed = 7
cloned = 8
killed = 17
cloned = 20
killed = 4
cloned = 6
killed = 15
cloned = 12
killed = 10
cloned = 14
killed = 5
cloned = 21
killed = 9
cloned = 2
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 11, 14, 12, 18, 13, 2, 0, 3, 5, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 7, 10, 17, 20, 8, 6, 15, 19, 9, 16, 22]
====================================
cloned = 1
killed = 21
cloned = 7
killed = 11
cloned = 10
killed = 14
cloned = 17
killed = 12
cloned = 20
killed = 18
cloned = 8
killed = 13
cloned = 6
killed = 2
cloned = 15
killed = 0
cloned = 19
killed = 3
cloned = 9
killed = 5
cloned = 16
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 13, 19, 14, 9, 8, 12, 0, 4, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 7, 16, 18, 1, 6, 15, 17, 20, 11, 2, 22]
====================================
cloned = 21
killed = 5
cloned = 7
killed = 3
cloned = 16
killed = 13
cloned = 18
killed = 19
cloned = 1
killed = 14
cloned = 6
killed = 9
cloned = 15
killed = 8
cloned = 17
killed = 12
cloned = 20
killed = 0
cloned = 11
killed = 4
cloned = 2
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 16, 0, 5, 14, 8, 13, 9, 1, 3, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 6, 12, 15, 21, 18, 10, 2, 20, 17, 4, 22]
====================================
cloned = 19
killed = 11
cloned = 6
killed = 16
cloned = 12
killed = 0
cloned = 15
killed = 5
cloned = 21
killed = 14
cloned = 18
killed = 8
cloned = 10
killed = 13
cloned = 2
killed = 9
cloned = 20
killed = 1
cloned = 17
killed = 3
cloned = 4
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 18, 0, 11, 14, 7, 21, 9, 15, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 12, 4, 2, 19, 20, 16, 17, 10, 6, 22]
====================================
cloned = 8
killed = 3
cloned = 13
killed = 18
cloned = 12
killed = 0
cloned = 4
killed = 11
cloned = 2
killed = 14
cloned = 19
killed = 7
cloned = 20
killed = 21
cloned = 16
killed = 9
cloned = 17
killed = 15
cloned = 10
killed = 5
cloned = 6
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 18, 2, 10, 6, 19, 5, 14, 9, 0, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 3, 17, 11, 12, 20, 1, 16, 7, 8, 13, 22]
====================================
cloned = 15
killed = 21
cloned = 3
killed = 18
cloned = 17
killed = 2
cloned = 11
killed = 10
cloned = 12
killed = 6
cloned = 20
killed = 19
cloned = 1
killed = 5
cloned = 16
killed = 14
cloned = 7
killed = 9
cloned = 8
killed = 0
cloned = 13
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 6, 7, 11, 10, 21, 18, 17, 2, 8, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 13, 1, 5, 16, 12, 9, 4, 19, 15, 22]
====================================
cloned = 20
killed = 0
cloned = 14
killed = 6
cloned = 13
killed = 7
cloned = 1
killed = 11
cloned = 5
killed = 10
cloned = 16
killed = 21
cloned = 12
killed = 18
cloned = 9
killed = 17
cloned = 4
killed = 2
cloned = 19
killed = 8
cloned = 15
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 12, 14, 4, 11, 20, 6, 18, 3, 21, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 5, 9, 1, 16, 0, 17, 8, 7, 19, 2, 22]
====================================
cloned = 15
killed = 10
cloned = 5
killed = 12
cloned = 9
killed = 14
cloned = 1
killed = 4
cloned = 16
killed = 11
cloned = 0
killed = 20
cloned = 17
killed = 6
cloned = 8
killed = 18
cloned = 7
killed = 3
cloned = 19
killed = 21
cloned = 2
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 16, 18, 5, 8, 1, 20, 0, 15, 2, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 10, 7, 12, 14, 17, 9, 19, 6, 13, 3, 22]
====================================
cloned = 21
killed = 4
cloned = 10
killed = 16
cloned = 7
killed = 18
cloned = 12
killed = 5
cloned = 14
killed = 8
cloned = 17
killed = 1
cloned = 9
killed = 20
cloned = 19
killed = 0
cloned = 6
killed = 15
cloned = 13
killed = 2
cloned = 3
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 1, 19, 14, 11, 13, 21, 0, 7, 2, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 12, 3, 5, 6, 15, 16, 4, 9, 20, 8, 22]
====================================
cloned = 10
killed = 17
cloned = 12
killed = 1
cloned = 3
killed = 19
cloned = 5
killed = 14
cloned = 6
killed = 11
cloned = 15
killed = 13
cloned = 16
killed = 21
cloned = 4
killed = 0
cloned = 9
killed = 7
cloned = 20
killed = 2
cloned = 8
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 16, 14, 8, 7, 4, 12, 17, 9, 11, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 0, 1, 19, 10, 3, 5, 6, 2, 18, 20, 22]
====================================
cloned = 15
killed = 21
cloned = 0
killed = 16
cloned = 1
killed = 14
cloned = 19
killed = 8
cloned = 10
killed = 7
cloned = 3
killed = 4
cloned = 5
killed = 12
cloned = 6
killed = 17
cloned = 2
killed = 9
cloned = 18
killed = 11
cloned = 20
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 9, 7, 0, 5, 20, 12, 15, 13, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 6, 11, 4, 14, 10, 2, 18, 8, 17, 19, 22]
====================================
cloned = 21
killed = 16
cloned = 6
killed = 3
cloned = 11
killed = 9
cloned = 4
killed = 7
cloned = 14
killed = 0
cloned = 10
killed = 5
cloned = 2
killed = 20
cloned = 18
killed = 12
cloned = 8
killed = 15
cloned = 17
killed = 13
cloned = 19
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 3, 8, 9, 1, 4, 11, 18, 16, 21, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 7, 0, 14, 13, 12, 10, 6, 5, 15, 20, 22]
====================================
cloned = 17
killed = 19
cloned = 7
killed = 3
cloned = 0
killed = 8
cloned = 14
killed = 9
cloned = 13
killed = 1
cloned = 12
killed = 4
cloned = 10
killed = 11
cloned = 6
killed = 18
cloned = 5
killed = 16
cloned = 15
killed = 21
cloned = 20
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 8, 13, 16, 7, 15, 21, 11, 0, 2, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 6, 10, 18, 19, 9, 12, 5, 1, 17, 4, 22]
====================================
cloned = 3
killed = 20
cloned = 6
killed = 8
cloned = 10
killed = 13
cloned = 18
killed = 16
cloned = 19
killed = 7
cloned = 9
killed = 15
cloned = 12
killed = 21
cloned = 5
killed = 11
cloned = 1
killed = 0
cloned = 17
killed = 2
cloned = 4
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 2, 15, 6, 13, 3, 18, 5, 19, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 20, 7, 16, 8, 1, 11, 0, 12, 4, 17, 22]
====================================
cloned = 14
killed = 9
cloned = 20
killed = 10
cloned = 7
killed = 2
cloned = 16
killed = 15
cloned = 8
killed = 6
cloned = 1
killed = 13
cloned = 11
killed = 3
cloned = 0
killed = 18
cloned = 12
killed = 5
cloned = 4
killed = 19
cloned = 17
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 0, 3, 14, 4, 5, 12, 19, 13, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 17, 20, 21, 18, 9, 2, 6, 1, 16, 8, 22]
====================================
cloned = 11
killed = 10
cloned = 17
killed = 7
cloned = 20
killed = 0
cloned = 21
killed = 3
cloned = 18
killed = 14
cloned = 9
killed = 4
cloned = 2
killed = 5
cloned = 6
killed = 12
cloned = 1
killed = 19
cloned = 16
killed = 13
cloned = 8
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 11, 13, 18, 9, 20, 10, 4, 0, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 16, 21, 15, 2, 7, 12, 8, 14, 17, 1, 22]
====================================
cloned = 5
killed = 19
cloned = 16
killed = 11
cloned = 21
killed = 13
cloned = 15
killed = 18
cloned = 2
killed = 9
cloned = 7
killed = 20
cloned = 12
killed = 10
cloned = 8
killed = 4
cloned = 14
killed = 0
cloned = 17
killed = 6
cloned = 1
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 19, 13, 15, 2, 12, 3, 1, 7, 4, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 20, 21, 0, 11, 18, 16, 17, 8, 5, 9, 22]
====================================
cloned = 6
killed = 10
cloned = 20
killed = 19
cloned = 21
killed = 13
cloned = 0
killed = 15
cloned = 11
killed = 2
cloned = 18
killed = 12
cloned = 16
killed = 3
cloned = 17
killed = 1
cloned = 8
killed = 7
cloned = 5
killed = 4
cloned = 9
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 4, 9, 8, 19, 16, 7, 1, 3, 14, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 12, 0, 15, 13, 11, 17, 20, 2, 5, 18, 22]
====================================
cloned = 21
killed = 6
cloned = 12
killed = 4
cloned = 0
killed = 9
cloned = 15
killed = 8
cloned = 13
killed = 19
cloned = 11
killed = 16
cloned = 17
killed = 7
cloned = 20
killed = 1
cloned = 2
killed = 3
cloned = 5
killed = 14
cloned = 18
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 12, 9, 20, 17, 0, 3, 7, 2, 10, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 15, 13, 8, 4, 1, 19, 18, 11, 21, 16, 22]
====================================
cloned = 6
killed = 14
cloned = 15
killed = 12
cloned = 13
killed = 9
cloned = 8
killed = 20
cloned = 4
killed = 17
cloned = 1
killed = 0
cloned = 19
killed = 3
cloned = 18
killed = 7
cloned = 11
killed = 2
cloned = 21
killed = 10
cloned = 16
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 0, 18, 14, 12, 19, 15, 21, 2, 16, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 7, 10, 3, 20, 4, 8, 11, 17, 13, 6, 22]
====================================
cloned = 1
killed = 5
cloned = 7
killed = 0
cloned = 10
killed = 18
cloned = 3
killed = 14
cloned = 20
killed = 12
cloned = 4
killed = 19
cloned = 8
killed = 15
cloned = 11
killed = 21
cloned = 17
killed = 2
cloned = 13
killed = 16
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 5, 18, 1, 2, 11, 10, 14, 17, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 8, 9, 16, 15, 4, 19, 0, 20, 7, 3, 22]
====================================
cloned = 13
killed = 12
cloned = 8
killed = 6
cloned = 9
killed = 5
cloned = 16
killed = 18
cloned = 15
killed = 1
cloned = 4
killed = 2
cloned = 19
killed = 11
cloned = 0
killed = 10
cloned = 20
killed = 14
cloned = 7
killed = 17
cloned = 3
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 1, 0, 20, 3, 19, 18, 4, 17, 7, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 11, 2, 8, 6, 10, 9, 21, 14, 16, 15, 22]
====================================
cloned = 5
killed = 12
cloned = 11
killed = 1
cloned = 2
killed = 0
cloned = 8
killed = 20
cloned = 6
killed = 3
cloned = 10
killed = 19
cloned = 9
killed = 18
cloned = 21
killed = 4
cloned = 14
killed = 17
cloned = 16
killed = 7
cloned = 15
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 17, 21, 13, 0, 6, 2, 3, 19, 20, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 7, 12, 4, 9, 10, 1, 5, 8, 11, 15, 22]
====================================
cloned = 14
killed = 18
cloned = 7
killed = 17
cloned = 12
killed = 21
cloned = 4
killed = 13
cloned = 9
killed = 0
cloned = 10
killed = 6
cloned = 1
killed = 2
cloned = 5
killed = 3
cloned = 8
killed = 19
cloned = 11
killed = 20
cloned = 15
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 21, 13, 2, 6, 16, 5, 7, 1, 12, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 10, 19, 8, 15, 11, 9, 3, 17, 0, 20, 22]
====================================
cloned = 18
killed = 4
cloned = 10
killed = 21
cloned = 19
killed = 13
cloned = 8
killed = 2
cloned = 15
killed = 6
cloned = 11
killed = 16
cloned = 9
killed = 5
cloned = 3
killed = 7
cloned = 17
killed = 1
cloned = 0
killed = 12
cloned = 20
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 1, 3, 14, 0, 19, 18, 12, 16, 15, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 8, 4, 13, 11, 7, 10, 17, 5, 6, 2, 22]
====================================
cloned = 20
killed = 9
cloned = 8
killed = 1
cloned = 4
killed = 3
cloned = 13
killed = 14
cloned = 11
killed = 0
cloned = 7
killed = 19
cloned = 10
killed = 18
cloned = 17
killed = 12
cloned = 5
killed = 16
cloned = 6
killed = 15
cloned = 2
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 20, 19, 10, 17, 9, 14, 21, 8, 4, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 12, 13, 6, 7, 18, 16, 1, 2, 3, 11, 22]
====================================
cloned = 0
killed = 15
cloned = 12
killed = 20
cloned = 13
killed = 19
cloned = 6
killed = 10
cloned = 7
killed = 17
cloned = 18
killed = 9
cloned = 16
killed = 14
cloned = 1
killed = 21
cloned = 2
killed = 8
cloned = 3
killed = 4
cloned = 11
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 7, 8, 10, 15, 19, 13, 2, 0, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 6, 18, 4, 5, 20, 12, 21, 17, 14, 9, 22]
====================================
cloned = 11
killed = 3
cloned = 6
killed = 1
cloned = 18
killed = 7
cloned = 4
killed = 8
cloned = 5
killed = 10
cloned = 20
killed = 15
cloned = 12
killed = 19
cloned = 21
killed = 13
cloned = 17
killed = 2
cloned = 14
killed = 0
cloned = 9
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 1, 15, 5, 21, 0, 18, 20, 2, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 9, 17, 4, 8, 13, 3, 6, 19, 11, 22]
====================================
cloned = 7
killed = 16
cloned = 10
killed = 12
cloned = 9
killed = 1
cloned = 17
killed = 15
cloned = 4
killed = 5
cloned = 8
killed = 21
cloned = 13
killed = 0
cloned = 3
killed = 18
cloned = 6
killed = 20
cloned = 19
killed = 2
cloned = 11
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 14, 12, 8, 20, 17, 3, 7, 18, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 15, 4, 2, 10, 0, 11, 21, 5, 16, 9, 22]
====================================
cloned = 19
killed = 13
cloned = 15
killed = 1
cloned = 4
killed = 14
cloned = 2
killed = 12
cloned = 10
killed = 8
cloned = 0
killed = 20
cloned = 11
killed = 17
cloned = 21
killed = 3
cloned = 5
killed = 7
cloned = 16
killed = 18
cloned = 9
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 11, 3, 7, 18, 21, 6, 2, 12, 14, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 15, 20, 4, 16, 19, 13, 10, 8, 9, 1, 22]
====================================
cloned = 0
killed = 5
cloned = 15
killed = 11
cloned = 20
killed = 3
cloned = 4
killed = 7
cloned = 16
killed = 18
cloned = 19
killed = 21
cloned = 13
killed = 6
cloned = 10
killed = 2
cloned = 8
killed = 12
cloned = 9
killed = 14
cloned = 1
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 0, 20, 10, 8, 18, 19, 2, 14, 16, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 6, 9, 15, 5, 17, 4, 7, 21, 12, 13, 22]
====================================
cloned = 1
killed = 11
cloned = 6
killed = 0
cloned = 9
killed = 20
cloned = 15
killed = 10
cloned = 5
killed = 8
cloned = 17
killed = 18
cloned = 4
killed = 19
cloned = 7
killed = 2
cloned = 21
killed = 14
cloned = 12
killed = 16
cloned = 13
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 19, 7, 2, 4, 9, 21, 20, 15, 0, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 17, 8, 14, 6, 10, 13, 11, 1, 18, 5, 22]
====================================
cloned = 16
killed = 3
cloned = 17
killed = 19
cloned = 8
killed = 7
cloned = 14
killed = 2
cloned = 6
killed = 4
cloned = 10
killed = 9
cloned = 13
killed = 21
cloned = 11
killed = 20
cloned = 1
killed = 15
cloned = 18
killed = 0
cloned = 5
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 13, 4, 16, 0, 6, 11, 10, 14, 2, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 3, 15, 18, 7, 21, 1, 5, 19, 8, 17, 22]
====================================
cloned = 12
killed = 20
cloned = 3
killed = 13
cloned = 15
killed = 4
cloned = 18
killed = 16
cloned = 7
killed = 0
cloned = 21
killed = 6
cloned = 1
killed = 11
cloned = 5
killed = 10
cloned = 19
killed = 14
cloned = 8
killed = 2
cloned = 17
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 10, 11, 1, 2, 20, 16, 0, 9, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 15, 19, 18, 17, 12, 5, 13, 7, 8, 6, 22]
====================================
cloned = 14
killed = 21
cloned = 15
killed = 10
cloned = 19
killed = 11
cloned = 18
killed = 1
cloned = 17
killed = 2
cloned = 12
killed = 20
cloned = 5
killed = 16
cloned = 13
killed = 0
cloned = 7
killed = 9
cloned = 8
killed = 4
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 11, 0, 14, 6, 13, 15, 7, 8, 12, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 4, 5, 20, 3, 19, 1, 21, 10, 16, 9, 22]
====================================
cloned = 18
killed = 2
cloned = 4
killed = 11
cloned = 5
killed = 0
cloned = 20
killed = 14
cloned = 3
killed = 6
cloned = 19
killed = 13
cloned = 1
killed = 15
cloned = 21
killed = 7
cloned = 10
killed = 8
cloned = 16
killed = 12
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 0, 7, 13, 11, 2, 21, 15, 18, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 10, 4, 1, 17, 9, 16, 6, 19, 8, 5, 22]
====================================
cloned = 14
killed = 20
cloned = 10
killed = 0
cloned = 4
killed = 7
cloned = 1
killed = 13
cloned = 17
killed = 11
cloned = 9
killed = 2
cloned = 16
killed = 21
cloned = 6
killed = 15
cloned = 19
killed = 18
cloned = 8
killed = 3
cloned = 5
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 1, 6, 16, 17, 21, 9, 14, 2, 3, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 5, 15, 0, 8, 4, 10, 11, 18, 12, 19, 22]
====================================
cloned = 7
killed = 13
cloned = 5
killed = 1
cloned = 15
killed = 6
cloned = 0
killed = 16
cloned = 8
killed = 17
cloned = 4
killed = 21
cloned = 10
killed = 9
cloned = 11
killed = 14
cloned = 18
killed = 2
cloned = 12
killed = 3
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 2, 15, 17, 4, 10, 3, 7, 8, 0, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 12, 20, 11, 16, 5, 13, 21, 6, 18, 14, 22]
====================================
cloned = 1
killed = 19
cloned = 12
killed = 2
cloned = 20
killed = 15
cloned = 11
killed = 17
cloned = 16
killed = 4
cloned = 5
killed = 10
cloned = 13
killed = 3
cloned = 21
killed = 7
cloned = 6
killed = 8
cloned = 18
killed = 0
cloned = 14
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 19, 9, 8, 17, 2, 5, 1, 3, 11, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 16, 7, 13, 21, 14, 12, 18, 0, 6, 4, 22]
====================================
cloned = 15
killed = 10
cloned = 16
killed = 19
cloned = 7
killed = 9
cloned = 13
killed = 8
cloned = 21
killed = 17
cloned = 14
killed = 2
cloned = 12
killed = 5
cloned = 18
killed = 1
cloned = 0
killed = 3
cloned = 6
killed = 11
cloned = 4
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 7, 4, 1, 14, 15, 5, 12, 17, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 10, 8, 9, 19, 2, 11, 16, 18, 20, 3, 22]
====================================
cloned = 21
killed = 0
cloned = 10
killed = 7
cloned = 8
killed = 4
cloned = 9
killed = 1
cloned = 19
killed = 14
cloned = 2
killed = 15
cloned = 11
killed = 5
cloned = 16
killed = 12
cloned = 18
killed = 17
cloned = 20
killed = 6
cloned = 3
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 19, 17, 7, 0, 14, 11, 5, 12, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 13, 10, 15, 8, 2, 16, 1, 20, 18, 21, 22]
====================================
cloned = 4
killed = 6
cloned = 13
killed = 3
cloned = 10
killed = 19
cloned = 15
killed = 17
cloned = 8
killed = 7
cloned = 2
killed = 0
cloned = 16
killed = 14
cloned = 1
killed = 11
cloned = 20
killed = 5
cloned = 18
killed = 12
cloned = 21
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 20, 19, 16, 18, 3, 1, 15, 12, 8, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 0, 13, 7, 4, 11, 5, 2, 9, 14, 6, 22]
====================================
cloned = 21
killed = 10
cloned = 0
killed = 20
cloned = 13
killed = 19
cloned = 7
killed = 16
cloned = 4
killed = 18
cloned = 11
killed = 3
cloned = 5
killed = 1
cloned = 2
killed = 15
cloned = 9
killed = 12
cloned = 14
killed = 8
cloned = 6
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 14, 21, 15, 9, 18, 5, 10, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 19, 16, 7, 11, 0, 4, 12, 2, 6, 20, 22]
====================================
cloned = 17
killed = 3
cloned = 19
killed = 13
cloned = 16
killed = 14
cloned = 7
killed = 21
cloned = 11
killed = 15
cloned = 0
killed = 9
cloned = 4
killed = 18
cloned = 12
killed = 5
cloned = 2
killed = 10
cloned = 6
killed = 8
cloned = 20
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 21, 14, 9, 18, 5, 19, 0, 2, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 20, 17, 16, 4, 8, 13, 15, 3, 11, 10, 22]
====================================
cloned = 1
killed = 12
cloned = 20
killed = 21
cloned = 17
killed = 14
cloned = 16
killed = 9
cloned = 4
killed = 18
cloned = 8
killed = 5
cloned = 13
killed = 19
cloned = 15
killed = 0
cloned = 3
killed = 2
cloned = 11
killed = 7
cloned = 10
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 2, 3, 19, 9, 6, 17, 10, 15, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 16, 18, 7, 5, 12, 4, 20, 14, 13, 21, 22]
====================================
cloned = 8
killed = 1
cloned = 16
killed = 0
cloned = 18
killed = 2
cloned = 7
killed = 3
cloned = 5
killed = 19
cloned = 12
killed = 9
cloned = 4
killed = 6
cloned = 20
killed = 17
cloned = 14
killed = 10
cloned = 13
killed = 15
cloned = 21
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 11, 10, 8, 5, 16, 21, 12, 18, 6, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 14, 19, 0, 17, 15, 13, 1, 3, 2, 9, 22]
====================================
cloned = 7
killed = 4
cloned = 14
killed = 11
cloned = 19
killed = 10
cloned = 0
killed = 8
cloned = 17
killed = 5
cloned = 15
killed = 16
cloned = 13
killed = 21
cloned = 1
killed = 12
cloned = 3
killed = 18
cloned = 2
killed = 6
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 18, 0, 10, 21, 17, 13, 20, 3, 5, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 16, 15, 14, 12, 2, 6, 11, 8, 19, 9, 22]
====================================
cloned = 4
killed = 7
cloned = 16
killed = 18
cloned = 15
killed = 0
cloned = 14
killed = 10
cloned = 12
killed = 21
cloned = 2
killed = 17
cloned = 6
killed = 13
cloned = 11
killed = 20
cloned = 8
killed = 3
cloned = 19
killed = 5
cloned = 9
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 19, 11, 10, 8, 17, 7, 5, 12, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 1, 15, 13, 0, 18, 16, 9, 14, 3, 4, 22]
====================================
cloned = 2
killed = 20
cloned = 1
killed = 6
cloned = 15
killed = 19
cloned = 13
killed = 11
cloned = 0
killed = 10
cloned = 18
killed = 8
cloned = 16
killed = 17
cloned = 9
killed = 7
cloned = 14
killed = 5
cloned = 3
killed = 12
cloned = 4
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 14, 0, 20, 4, 17, 9, 11, 16, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 12, 10, 6, 2, 3, 7, 19, 21, 15, 22]
====================================
cloned = 8
killed = 5
cloned = 13
killed = 1
cloned = 12
killed = 14
cloned = 10
killed = 0
cloned = 6
killed = 20
cloned = 2
killed = 4
cloned = 3
killed = 17
cloned = 7
killed = 9
cloned = 19
killed = 11
cloned = 21
killed = 16
cloned = 15
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 10, 8, 14, 12, 17, 15, 19, 1, 3, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 5, 13, 2, 20, 16, 11, 6, 18, 9, 4, 22]
====================================
cloned = 0
killed = 21
cloned = 5
killed = 10
cloned = 13
killed = 8
cloned = 2
killed = 14
cloned = 20
killed = 12
cloned = 16
killed = 17
cloned = 11
killed = 15
cloned = 6
killed = 19
cloned = 18
killed = 1
cloned = 9
killed = 3
cloned = 4
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 19, 21, 12, 20, 0, 10, 2, 6, 16, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 11, 17, 18, 3, 7, 15, 8, 5, 9, 14, 22]
====================================
cloned = 13
killed = 1
cloned = 11
killed = 19
cloned = 17
killed = 21
cloned = 18
killed = 12
cloned = 3
killed = 20
cloned = 7
killed = 0
cloned = 15
killed = 10
cloned = 8
killed = 2
cloned = 5
killed = 6
cloned = 9
killed = 16
cloned = 14
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 13, 0, 3, 7, 18, 8, 14, 10, 2, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 15, 12, 11, 20, 1, 16, 9, 4, 5, 6, 22]
====================================
cloned = 17
killed = 21
cloned = 15
killed = 13
cloned = 12
killed = 0
cloned = 11
killed = 3
cloned = 20
killed = 7
cloned = 1
killed = 18
cloned = 16
killed = 8
cloned = 9
killed = 14
cloned = 4
killed = 10
cloned = 5
killed = 2
cloned = 6
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 6, 11, 10, 1, 9, 16, 2, 14, 15, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 13, 3, 4, 17, 8, 20, 12, 0, 7, 5, 22]
====================================
cloned = 21
killed = 18
cloned = 13
killed = 6
cloned = 3
killed = 11
cloned = 4
killed = 10
cloned = 17
killed = 1
cloned = 8
killed = 9
cloned = 20
killed = 16
cloned = 12
killed = 2
cloned = 0
killed = 14
cloned = 7
killed = 15
cloned = 5
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 9, 18, 2, 11, 8, 19, 13, 10, 4, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 20, 5, 7, 17, 6, 0, 3, 1, 15, 12, 22]
====================================
cloned = 14
killed = 16
cloned = 20
killed = 9
cloned = 5
killed = 18
cloned = 7
killed = 2
cloned = 17
killed = 11
cloned = 6
killed = 8
cloned = 0
killed = 19
cloned = 3
killed = 13
cloned = 1
killed = 10
cloned = 15
killed = 4
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 10, 21, 6, 16, 0, 14, 11, 4, 5, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 2, 3, 20, 15, 18, 12, 7, 13, 9, 8, 22]
====================================
cloned = 1
killed = 17
cloned = 2
killed = 10
cloned = 3
killed = 21
cloned = 20
killed = 6
cloned = 15
killed = 16
cloned = 18
killed = 0
cloned = 12
killed = 14
cloned = 7
killed = 11
cloned = 13
killed = 4
cloned = 9
killed = 5
cloned = 8
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 12, 13, 0, 3, 8, 7, 6, 5, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 9, 17, 15, 19, 18, 10, 20, 16, 4, 2, 22]
====================================
cloned = 11
killed = 21
cloned = 9
killed = 1
cloned = 17
killed = 12
cloned = 15
killed = 13
cloned = 19
killed = 0
cloned = 18
killed = 3
cloned = 10
killed = 8
cloned = 20
killed = 7
cloned = 16
killed = 6
cloned = 4
killed = 5
cloned = 2
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 11, 14, 16, 18, 21, 4, 17, 1, 5, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 9, 2, 3, 0, 15, 7, 8, 10, 20, 6, 22]
====================================
cloned = 13
killed = 12
cloned = 9
killed = 11
cloned = 2
killed = 14
cloned = 3
killed = 16
cloned = 0
killed = 18
cloned = 15
killed = 21
cloned = 7
killed = 4
cloned = 8
killed = 17
cloned = 10
killed = 1
cloned = 20
killed = 5
cloned = 6
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 5, 16, 0, 4, 2, 19, 1, 15, 6, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 21, 13, 12, 9, 18, 20, 14, 17, 11, 22]
====================================
cloned = 7
killed = 3
cloned = 10
killed = 5
cloned = 21
killed = 16
cloned = 13
killed = 0
cloned = 12
killed = 4
cloned = 9
killed = 2
cloned = 18
killed = 19
cloned = 20
killed = 1
cloned = 14
killed = 15
cloned = 17
killed = 6
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 19, 3, 12, 1, 14, 11, 8, 5, 16, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 17, 0, 2, 7, 13, 18, 20, 21, 15, 4, 22]
====================================
cloned = 6
killed = 10
cloned = 17
killed = 19
cloned = 0
killed = 3
cloned = 2
killed = 12
cloned = 7
killed = 1
cloned = 13
killed = 14
cloned = 18
killed = 11
cloned = 20
killed = 8
cloned = 21
killed = 5
cloned = 15
killed = 16
cloned = 4
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 16, 8, 11, 20, 6, 2, 7, 12, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 5, 21, 13, 1, 17, 3, 0, 10, 4, 14, 22]
====================================
cloned = 15
killed = 9
cloned = 5
killed = 19
cloned = 21
killed = 16
cloned = 13
killed = 8
cloned = 1
killed = 11
cloned = 17
killed = 20
cloned = 3
killed = 6
cloned = 0
killed = 2
cloned = 10
killed = 7
cloned = 4
killed = 12
cloned = 14
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 17, 10, 3, 14, 7, 13, 19, 11, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 15, 4, 18, 6, 2, 9, 12, 20, 8, 16, 22]
====================================
cloned = 21
killed = 1
cloned = 15
killed = 0
cloned = 4
killed = 17
cloned = 18
killed = 10
cloned = 6
killed = 3
cloned = 2
killed = 14
cloned = 9
killed = 7
cloned = 12
killed = 13
cloned = 20
killed = 19
cloned = 8
killed = 11
cloned = 16
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 8, 4, 6, 16, 0, 17, 20, 18, 13, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 19, 5, 15, 10, 9, 14, 21, 2, 3, 11, 22]
====================================
cloned = 7
killed = 12
cloned = 19
killed = 8
cloned = 5
killed = 4
cloned = 15
killed = 6
cloned = 10
killed = 16
cloned = 9
killed = 0
cloned = 14
killed = 17
cloned = 21
killed = 20
cloned = 2
killed = 18
cloned = 3
killed = 13
cloned = 11
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 3, 16, 9, 8, 20, 21, 5, 12, 6, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 19, 7, 10, 4, 1, 15, 13, 2, 14, 18, 22]
====================================
cloned = 11
killed = 17
cloned = 19
killed = 3
cloned = 7
killed = 16
cloned = 10
killed = 9
cloned = 4
killed = 8
cloned = 1
killed = 20
cloned = 15
killed = 21
cloned = 13
killed = 5
cloned = 2
killed = 12
cloned = 14
killed = 6
cloned = 18
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 1, 12, 21, 5, 8, 19, 3, 0, 4, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 13, 11, 14, 17, 2, 15, 6, 9, 16, 7, 22]
====================================
cloned = 20
killed = 18
cloned = 13
killed = 1
cloned = 11
killed = 12
cloned = 14
killed = 21
cloned = 17
killed = 5
cloned = 2
killed = 8
cloned = 15
killed = 19
cloned = 6
killed = 3
cloned = 9
killed = 0
cloned = 16
killed = 4
cloned = 7
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 16, 14, 0, 20, 3, 2, 1, 10, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 17, 11, 8, 9, 13, 12, 18, 15, 4, 21, 22]
====================================
cloned = 5
killed = 6
cloned = 17
killed = 7
cloned = 11
killed = 16
cloned = 8
killed = 14
cloned = 9
killed = 0
cloned = 13
killed = 20
cloned = 12
killed = 3
cloned = 18
killed = 2
cloned = 15
killed = 1
cloned = 4
killed = 10
cloned = 21
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 4, 15, 19, 12, 11, 3, 21, 1, 8, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 13, 9, 0, 10, 7, 20, 17, 2, 18, 6, 22]
====================================
cloned = 5
killed = 16
cloned = 13
killed = 4
cloned = 9
killed = 15
cloned = 0
killed = 19
cloned = 10
killed = 12
cloned = 7
killed = 11
cloned = 20
killed = 3
cloned = 17
killed = 21
cloned = 2
killed = 1
cloned = 18
killed = 8
cloned = 6
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 15, 6, 11, 18, 3, 2, 0, 4, 7, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 5, 10, 17, 8, 13, 9, 1, 14, 12, 19, 22]
====================================
cloned = 20
killed = 16
cloned = 5
killed = 15
cloned = 10
killed = 6
cloned = 17
killed = 11
cloned = 8
killed = 18
cloned = 13
killed = 3
cloned = 9
killed = 2
cloned = 1
killed = 0
cloned = 14
killed = 4
cloned = 12
killed = 7
cloned = 19
killed = 21
Trial run 17/seed 872:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.46,
  55.760000000000005,
  59.36,
  54.625,
  51.82,
  54.36000000000001,
  54.78999999999999,
  37.1,
  44.67,
  28.66000000000001,
  47.89000000000001,
  50.699999999999996,
  47.91499999999999,
  52.315,
  56.379999999999995,
  37.199999999999996,
  51.655,
  49.120000000000005,
  46.47,
  41.825,
  34.75500000000001,
  55.5,
  53.05],
 [65.7,
  63.864999999999995,
  65.75,
  62.870000000000005,
  62.44499999999999,
  62.16,
  61.045,
  65.7,
  64.23500000000001,
  65.75,
  62.870000000000005,
  62.465,
  62.160000000000004,
  63.540000000000006,
  58.984999999999985,
  61.425,
  62.58,
  63.540000000000006,
  58.695,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.48500000000001,
 56.455,
 59.324999999999996,
 54.735,
 52.144999999999996,
 54.03000000000001,
 53.02499999999999,
 37.26,
 44.835,
 31.94,
 47.915,
 50.849999999999994,
 45.66499999999999,
 52.46,
 56.059999999999995,
 36.92,
 52.14,
 49.050000000000004,
 46.41,
 42.255,
 34.92,
 55.535,
 52.925]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 52.14
Upper: 52.14
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.18999999999998,
 65.75,
 62.870000000000005,
 62.455,
 62.16,
 61.14,
 65.7,
 63.91000000000001,
 65.75,
 62.870000000000005,
 62.36,
 62.160000000000004,
 63.540000000000006,
 58.65999999999999,
 61.5,
 62.58,
 63.540000000000006,
 59.144999999999996,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 4, 0, 7, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 4
killed = 20
cloned = 0
killed = 21
cloned = 7
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 4, 12, 21]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 0, 7, 20, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 0
killed = 4
cloned = 7
killed = 12
cloned = 20
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 17, 15, 6, 18, 21, 19, 3, 5, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 16, 12, 11, 4, 0, 10, 8, 7, 13, 22]
====================================
cloned = 14
killed = 20
cloned = 9
killed = 17
cloned = 16
killed = 15
cloned = 12
killed = 6
cloned = 11
killed = 18
cloned = 4
killed = 21
cloned = 0
killed = 19
cloned = 10
killed = 3
cloned = 8
killed = 5
cloned = 7
killed = 2
cloned = 13
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 15, 20, 9, 4, 7, 13, 16, 18, 17, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 0, 5, 8, 21, 12, 11, 2, 3, 1, 19, 22]
====================================
cloned = 10
killed = 6
cloned = 0
killed = 15
cloned = 5
killed = 20
cloned = 8
killed = 9
cloned = 21
killed = 4
cloned = 12
killed = 7
cloned = 11
killed = 13
cloned = 2
killed = 16
cloned = 3
killed = 18
cloned = 1
killed = 17
cloned = 19
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 13, 11, 12, 19, 21, 10, 9, 8, 20, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 4, 7, 16, 15, 1, 14, 0, 3, 18, 6, 22]
====================================
cloned = 2
killed = 17
cloned = 4
killed = 13
cloned = 7
killed = 11
cloned = 16
killed = 12
cloned = 15
killed = 19
cloned = 1
killed = 21
cloned = 14
killed = 10
cloned = 0
killed = 9
cloned = 3
killed = 8
cloned = 18
killed = 20
cloned = 6
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 4, 1, 21, 10, 8, 3, 11, 2, 20, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 17, 13, 0, 15, 14, 16, 6, 18, 12, 19, 22]
====================================
cloned = 7
killed = 5
cloned = 17
killed = 4
cloned = 13
killed = 1
cloned = 0
killed = 21
cloned = 15
killed = 10
cloned = 14
killed = 8
cloned = 16
killed = 3
cloned = 6
killed = 11
cloned = 18
killed = 2
cloned = 12
killed = 20
cloned = 19
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 4, 19, 20, 16, 18, 14, 17, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 0, 10, 21, 15, 9, 12, 11, 2, 3, 1, 22]
====================================
cloned = 7
killed = 5
cloned = 0
killed = 8
cloned = 10
killed = 4
cloned = 21
killed = 19
cloned = 15
killed = 20
cloned = 9
killed = 16
cloned = 12
killed = 18
cloned = 11
killed = 14
cloned = 2
killed = 17
cloned = 3
killed = 6
cloned = 1
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 16, 20, 6, 3, 10, 2, 13, 19, 7, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 8, 0, 15, 17, 1, 21, 4, 18, 14, 22]
====================================
cloned = 9
killed = 12
cloned = 5
killed = 16
cloned = 8
killed = 20
cloned = 0
killed = 6
cloned = 15
killed = 3
cloned = 17
killed = 10
cloned = 1
killed = 2
cloned = 21
killed = 13
cloned = 4
killed = 19
cloned = 18
killed = 7
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 21, 9, 15, 7, 18, 16, 2, 13, 19, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 17, 14, 5, 20, 12, 1, 11, 8, 0, 6, 22]
====================================
cloned = 4
killed = 10
cloned = 17
killed = 21
cloned = 14
killed = 9
cloned = 5
killed = 15
cloned = 20
killed = 7
cloned = 12
killed = 18
cloned = 1
killed = 16
cloned = 11
killed = 2
cloned = 8
killed = 13
cloned = 0
killed = 19
cloned = 6
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 6, 14, 4, 12, 2, 8, 17, 10, 16, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 5, 19, 9, 15, 21, 11, 13, 0, 7, 20, 22]
====================================
cloned = 18
killed = 3
cloned = 5
killed = 6
cloned = 19
killed = 14
cloned = 9
killed = 4
cloned = 15
killed = 12
cloned = 21
killed = 2
cloned = 11
killed = 8
cloned = 13
killed = 17
cloned = 0
killed = 10
cloned = 7
killed = 16
cloned = 20
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 0, 12, 2, 11, 19, 4, 20, 10, 1, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 13, 15, 16, 6, 17, 9, 21, 14, 3, 5, 22]
====================================
cloned = 8
killed = 7
cloned = 13
killed = 0
cloned = 15
killed = 12
cloned = 16
killed = 2
cloned = 6
killed = 11
cloned = 17
killed = 19
cloned = 9
killed = 4
cloned = 21
killed = 20
cloned = 14
killed = 10
cloned = 3
killed = 1
cloned = 5
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 2, 1, 16, 7, 19, 21, 6, 15, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 18, 13, 10, 14, 17, 0, 8, 11, 20, 3, 22]
====================================
cloned = 12
killed = 9
cloned = 18
killed = 4
cloned = 13
killed = 2
cloned = 10
killed = 1
cloned = 14
killed = 16
cloned = 17
killed = 7
cloned = 0
killed = 19
cloned = 8
killed = 21
cloned = 11
killed = 6
cloned = 20
killed = 15
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 11, 4, 13, 3, 21, 19, 10, 14, 18, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 20, 16, 17, 1, 8, 6, 12, 0, 7, 2, 22]
====================================
cloned = 5
killed = 9
cloned = 20
killed = 11
cloned = 16
killed = 4
cloned = 17
killed = 13
cloned = 1
killed = 3
cloned = 8
killed = 21
cloned = 6
killed = 19
cloned = 12
killed = 10
cloned = 0
killed = 14
cloned = 7
killed = 18
cloned = 2
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 1, 7, 18, 0, 12, 15, 5, 19, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 4, 20, 10, 2, 9, 21, 8, 3, 16, 6, 22]
====================================
cloned = 17
killed = 11
cloned = 4
killed = 13
cloned = 20
killed = 1
cloned = 10
killed = 7
cloned = 2
killed = 18
cloned = 9
killed = 0
cloned = 21
killed = 12
cloned = 8
killed = 15
cloned = 3
killed = 5
cloned = 16
killed = 19
cloned = 6
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 16, 8, 0, 1, 9, 12, 18, 4, 6, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 7, 21, 2, 10, 15, 14, 3, 11, 5, 13, 22]
====================================
cloned = 19
killed = 20
cloned = 7
killed = 16
cloned = 21
killed = 8
cloned = 2
killed = 0
cloned = 10
killed = 1
cloned = 15
killed = 9
cloned = 14
killed = 12
cloned = 3
killed = 18
cloned = 11
killed = 4
cloned = 5
killed = 6
cloned = 13
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 13, 18, 6, 7, 2, 4, 1, 8, 20, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 10, 21, 16, 12, 3, 9, 19, 14, 17, 11, 22]
====================================
cloned = 0
killed = 15
cloned = 10
killed = 13
cloned = 21
killed = 18
cloned = 16
killed = 6
cloned = 12
killed = 7
cloned = 3
killed = 2
cloned = 9
killed = 4
cloned = 19
killed = 1
cloned = 14
killed = 8
cloned = 17
killed = 20
cloned = 11
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 16, 13, 8, 7, 17, 12, 5, 2, 9, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 6, 10, 14, 0, 20, 18, 11, 1, 3, 19, 22]
====================================
cloned = 4
killed = 21
cloned = 6
killed = 16
cloned = 10
killed = 13
cloned = 14
killed = 8
cloned = 0
killed = 7
cloned = 20
killed = 17
cloned = 18
killed = 12
cloned = 11
killed = 5
cloned = 1
killed = 2
cloned = 3
killed = 9
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 15, 14, 0, 6, 7, 10, 19, 8, 16, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 12, 2, 1, 9, 18, 5, 4, 21, 20, 11, 22]
====================================
cloned = 3
killed = 13
cloned = 12
killed = 15
cloned = 2
killed = 14
cloned = 1
killed = 0
cloned = 9
killed = 6
cloned = 18
killed = 7
cloned = 5
killed = 10
cloned = 4
killed = 19
cloned = 21
killed = 8
cloned = 20
killed = 16
cloned = 11
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 2, 13, 10, 4, 9, 5, 3, 15, 20, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 18, 1, 14, 0, 12, 16, 11, 17, 7, 8, 22]
====================================
cloned = 21
killed = 19
cloned = 18
killed = 2
cloned = 1
killed = 13
cloned = 14
killed = 10
cloned = 0
killed = 4
cloned = 12
killed = 9
cloned = 16
killed = 5
cloned = 11
killed = 3
cloned = 17
killed = 15
cloned = 7
killed = 20
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 14, 17, 1, 10, 2, 8, 21, 3, 20, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 5, 12, 19, 15, 4, 13, 11, 16, 18, 6, 22]
====================================
cloned = 7
killed = 0
cloned = 5
killed = 14
cloned = 12
killed = 17
cloned = 19
killed = 1
cloned = 15
killed = 10
cloned = 4
killed = 2
cloned = 13
killed = 8
cloned = 11
killed = 21
cloned = 16
killed = 3
cloned = 18
killed = 20
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 18, 2, 20, 16, 8, 9, 17, 19, 14, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 7, 21, 10, 4, 0, 15, 3, 13, 5, 1, 22]
====================================
cloned = 12
killed = 6
cloned = 7
killed = 18
cloned = 21
killed = 2
cloned = 10
killed = 20
cloned = 4
killed = 16
cloned = 0
killed = 8
cloned = 15
killed = 9
cloned = 3
killed = 17
cloned = 13
killed = 19
cloned = 5
killed = 14
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 1, 17, 5, 7, 21, 9, 19, 20, 8, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 6, 13, 0, 10, 12, 11, 16, 14, 2, 3, 22]
====================================
cloned = 15
killed = 4
cloned = 6
killed = 1
cloned = 13
killed = 17
cloned = 0
killed = 5
cloned = 10
killed = 7
cloned = 12
killed = 21
cloned = 11
killed = 9
cloned = 16
killed = 19
cloned = 14
killed = 20
cloned = 2
killed = 8
cloned = 3
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 19, 13, 20, 14, 8, 16, 15, 12, 9, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 6, 10, 3, 7, 11, 5, 18, 2, 1, 4, 22]
====================================
cloned = 0
killed = 21
cloned = 6
killed = 19
cloned = 10
killed = 13
cloned = 3
killed = 20
cloned = 7
killed = 14
cloned = 11
killed = 8
cloned = 5
killed = 16
cloned = 18
killed = 15
cloned = 2
killed = 12
cloned = 1
killed = 9
cloned = 4
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 8, 4, 2, 15, 3, 21, 0, 11, 5, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 9, 19, 14, 13, 17, 16, 10, 7, 12, 1, 22]
====================================
cloned = 6
killed = 18
cloned = 9
killed = 8
cloned = 19
killed = 4
cloned = 14
killed = 2
cloned = 13
killed = 15
cloned = 17
killed = 3
cloned = 16
killed = 21
cloned = 10
killed = 0
cloned = 7
killed = 11
cloned = 12
killed = 5
cloned = 1
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 9, 1, 0, 5, 13, 7, 14, 6, 3, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 15, 17, 10, 12, 4, 21, 16, 19, 8, 22]
====================================
cloned = 20
killed = 11
cloned = 18
killed = 9
cloned = 15
killed = 1
cloned = 17
killed = 0
cloned = 10
killed = 5
cloned = 12
killed = 13
cloned = 4
killed = 7
cloned = 21
killed = 14
cloned = 16
killed = 6
cloned = 19
killed = 3
cloned = 8
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 14, 11, 2, 4, 16, 15, 6, 10, 1, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 8, 19, 13, 21, 12, 9, 17, 5, 0, 7, 22]
====================================
cloned = 3
killed = 20
cloned = 8
killed = 14
cloned = 19
killed = 11
cloned = 13
killed = 2
cloned = 21
killed = 4
cloned = 12
killed = 16
cloned = 9
killed = 15
cloned = 17
killed = 6
cloned = 5
killed = 10
cloned = 0
killed = 1
cloned = 7
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 14, 5, 3, 4, 16, 9, 6, 13, 8, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 17, 10, 21, 15, 2, 12, 0, 1, 20, 18, 22]
====================================
cloned = 11
killed = 7
cloned = 17
killed = 14
cloned = 10
killed = 5
cloned = 21
killed = 3
cloned = 15
killed = 4
cloned = 2
killed = 16
cloned = 12
killed = 9
cloned = 0
killed = 6
cloned = 1
killed = 13
cloned = 20
killed = 8
cloned = 18
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 5, 18, 11, 4, 7, 6, 8, 0, 19, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 10, 12, 13, 2, 9, 1, 15, 14, 20, 3, 22]
====================================
cloned = 17
killed = 21
cloned = 10
killed = 5
cloned = 12
killed = 18
cloned = 13
killed = 11
cloned = 2
killed = 4
cloned = 9
killed = 7
cloned = 1
killed = 6
cloned = 15
killed = 8
cloned = 14
killed = 0
cloned = 20
killed = 19
cloned = 3
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 9, 15, 20, 16, 12, 21, 11, 2, 18, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 6, 13, 17, 14, 7, 8, 3, 19, 10, 5, 22]
====================================
cloned = 1
killed = 0
cloned = 6
killed = 9
cloned = 13
killed = 15
cloned = 17
killed = 20
cloned = 14
killed = 16
cloned = 7
killed = 12
cloned = 8
killed = 21
cloned = 3
killed = 11
cloned = 19
killed = 2
cloned = 10
killed = 18
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 17, 4, 3, 20, 16, 14, 2, 15, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 1, 5, 0, 7, 19, 21, 12, 13, 11, 18, 22]
====================================
cloned = 9
killed = 6
cloned = 1
killed = 10
cloned = 5
killed = 17
cloned = 0
killed = 4
cloned = 7
killed = 3
cloned = 19
killed = 20
cloned = 21
killed = 16
cloned = 12
killed = 14
cloned = 13
killed = 2
cloned = 11
killed = 15
cloned = 18
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 21, 10, 0, 15, 18, 12, 4, 1, 5, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 17, 9, 14, 6, 2, 7, 20, 11, 3, 13, 22]
====================================
cloned = 16
killed = 19
cloned = 17
killed = 21
cloned = 9
killed = 10
cloned = 14
killed = 0
cloned = 6
killed = 15
cloned = 2
killed = 18
cloned = 7
killed = 12
cloned = 20
killed = 4
cloned = 11
killed = 1
cloned = 3
killed = 5
cloned = 13
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 18, 19, 12, 14, 10, 6, 20, 2, 3, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 0, 21, 9, 15, 8, 7, 5, 11, 4, 17, 22]
====================================
cloned = 13
killed = 1
cloned = 0
killed = 18
cloned = 21
killed = 19
cloned = 9
killed = 12
cloned = 15
killed = 14
cloned = 8
killed = 10
cloned = 7
killed = 6
cloned = 5
killed = 20
cloned = 11
killed = 2
cloned = 4
killed = 3
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 4, 16, 12, 18, 7, 6, 11, 20, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 19, 1, 13, 5, 15, 8, 9, 17, 21, 14, 22]
====================================
cloned = 10
killed = 3
cloned = 19
killed = 2
cloned = 1
killed = 4
cloned = 13
killed = 16
cloned = 5
killed = 12
cloned = 15
killed = 18
cloned = 8
killed = 7
cloned = 9
killed = 6
cloned = 17
killed = 11
cloned = 21
killed = 20
cloned = 14
killed = 0
Trial run 18/seed 873:
..................................................
winner: Evolved FSM 6
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 23})]
--------------------------------------------------
Score:
[[61.48500000000001,
  56.455,
  59.324999999999996,
  54.735,
  52.144999999999996,
  54.03000000000001,
  53.02499999999999,
  37.26,
  44.835,
  31.94,
  47.915,
  50.849999999999994,
  45.66499999999999,
  52.46,
  56.059999999999995,
  36.92,
  52.14,
  49.050000000000004,
  46.41,
  42.255,
  34.92,
  55.535,
  52.925],
 [65.7,
  64.18999999999998,
  65.75,
  62.870000000000005,
  62.455,
  62.16,
  61.14,
  65.7,
  63.91000000000001,
  65.75,
  62.870000000000005,
  62.36,
  62.160000000000004,
  63.540000000000006,
  58.65999999999999,
  61.5,
  62.58,
  63.540000000000006,
  59.144999999999996,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.595000000000006,
 56.16,
 59.464999999999996,
 54.945,
 51.910000000000004,
 54.095000000000006,
 52.904999999999994,
 36.58,
 44.940000000000005,
 27.424999999999997,
 47.965,
 50.61999999999999,
 46.25999999999999,
 52.46,
 56.404999999999994,
 36.839999999999996,
 51.765,
 47.125,
 46.349999999999994,
 43.76500000000001,
 34.98000000000001,
 55.55499999999999,
 53.42]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.765
Upper: 51.765
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.255,
 65.75,
 62.870000000000005,
 62.635,
 62.16,
 60.815,
 65.7,
 64.83000000000001,
 65.75,
 62.870000000000005,
 62.515,
 62.160000000000004,
 63.540000000000006,
 58.79999999999999,
 61.985,
 62.58,
 63.540000000000006,
 58.79,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 9
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 11, 12, 14, 15, 18, 19, 21, 20, 16]
lower threshold: [22]
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 4, 7, 8, 9, 10, 13, 17]
====================================
cloned = 0
killed = 5
cloned = 1
killed = 6
cloned = 2
killed = 11
cloned = 3
killed = 12
cloned = 4
killed = 14
cloned = 7
killed = 15
cloned = 8
killed = 18
cloned = 9
killed = 19
cloned = 10
killed = 21
cloned = 13
killed = 20
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[65.84,
 67.72,
 65.92,
 57.72,
 64.69,
 65.84,
 67.5,
 65.84,
 67.61999999999999,
 65.92,
 57.72,
 65.91999999999999,
 57.72,
 64.14,
 64.905,
 65.84,
 64.13999999999999,
 64.13999999999999,
 67.71500000000002,
 65.91999999999999,
 64.14,
 57.72,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 4, 10, 12, 13, 14, 16, 17, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 5, 7, 15]
upper:           [1, 2, 6, 8, 9, 11, 18, 19, 5, 7, 0, 15]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 4
cloned = 6
killed = 10
cloned = 8
killed = 12
cloned = 9
killed = 13
cloned = 11
killed = 14
cloned = 18
killed = 16
cloned = 19
killed = 17
cloned = 5
killed = 20
cloned = 7
killed = 21
cloned = 0
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 64.99999999999999,
 65.83999999999999,
 64.99999999999999,
 65.83999999999999,
 65.68,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.83999999999999,
 65.0,
 65.83999999999999,
 65.83999999999997,
 65.68,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 6, 8, 10, 12, 16, 18, 5, 21, 20]
lower threshold: []
....................................
upper threshold: [0, 5, 7, 15, 20, 21, 22]
upper:           [2, 4, 9, 11, 13, 14, 17, 19, 7, 0, 15, 22]
====================================
cloned = 2
killed = 1
cloned = 4
killed = 3
cloned = 9
killed = 6
cloned = 11
killed = 8
cloned = 13
killed = 10
cloned = 14
killed = 12
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 7
killed = 5
cloned = 0
killed = 21
cloned = 15
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 2, 16, 13, 20, 8, 0, 7, 10, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 21, 15, 9, 17, 4, 18, 12, 6, 19, 11, 22]
====================================
cloned = 14
killed = 5
cloned = 21
killed = 1
cloned = 15
killed = 2
cloned = 9
killed = 16
cloned = 17
killed = 13
cloned = 4
killed = 20
cloned = 18
killed = 8
cloned = 12
killed = 0
cloned = 6
killed = 7
cloned = 19
killed = 10
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 14, 1, 5, 4, 15, 18, 10, 21, 20, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 12, 16, 8, 13, 2, 9, 7, 11, 6, 17, 22]
====================================
cloned = 3
killed = 0
cloned = 12
killed = 14
cloned = 16
killed = 1
cloned = 8
killed = 5
cloned = 13
killed = 4
cloned = 2
killed = 15
cloned = 9
killed = 18
cloned = 7
killed = 10
cloned = 11
killed = 21
cloned = 6
killed = 20
cloned = 17
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 4, 19, 12, 18, 16, 7, 3, 14, 2, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 6, 21, 0, 10, 15, 13, 1, 11, 17, 22]
====================================
cloned = 9
killed = 8
cloned = 5
killed = 4
cloned = 6
killed = 19
cloned = 21
killed = 12
cloned = 0
killed = 18
cloned = 10
killed = 16
cloned = 15
killed = 7
cloned = 13
killed = 3
cloned = 1
killed = 14
cloned = 11
killed = 2
cloned = 17
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 2, 3, 9, 13, 19, 20, 1, 0, 7, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 8, 16, 18, 12, 10, 11, 14, 17, 15, 4, 22]
====================================
cloned = 21
killed = 6
cloned = 8
killed = 2
cloned = 16
killed = 3
cloned = 18
killed = 9
cloned = 12
killed = 13
cloned = 10
killed = 19
cloned = 11
killed = 20
cloned = 14
killed = 1
cloned = 17
killed = 0
cloned = 15
killed = 7
cloned = 4
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 21, 14, 11, 3, 2, 17, 13, 6, 16, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 20, 10, 15, 8, 7, 1, 12, 18, 4, 5, 22]
====================================
cloned = 9
killed = 19
cloned = 20
killed = 21
cloned = 10
killed = 14
cloned = 15
killed = 11
cloned = 8
killed = 3
cloned = 7
killed = 2
cloned = 1
killed = 17
cloned = 12
killed = 13
cloned = 18
killed = 6
cloned = 4
killed = 16
cloned = 5
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 12, 6, 0, 8, 2, 10, 7, 1, 20, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 18, 3, 15, 17, 11, 19, 16, 21, 5, 22]
====================================
cloned = 14
killed = 9
cloned = 13
killed = 12
cloned = 18
killed = 6
cloned = 3
killed = 0
cloned = 15
killed = 8
cloned = 17
killed = 2
cloned = 11
killed = 10
cloned = 19
killed = 7
cloned = 16
killed = 1
cloned = 21
killed = 20
cloned = 5
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 16, 11, 14, 12, 21, 1, 18, 20, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 0, 13, 5, 4, 9, 8, 3, 19, 15, 10, 22]
====================================
cloned = 17
killed = 2
cloned = 0
killed = 16
cloned = 13
killed = 11
cloned = 5
killed = 14
cloned = 4
killed = 12
cloned = 9
killed = 21
cloned = 8
killed = 1
cloned = 3
killed = 18
cloned = 19
killed = 20
cloned = 15
killed = 6
cloned = 10
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 5, 8, 15, 18, 21, 1, 10, 2, 16, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 11, 9, 0, 14, 19, 7, 20, 17, 3, 12, 22]
====================================
cloned = 6
killed = 13
cloned = 11
killed = 5
cloned = 9
killed = 8
cloned = 0
killed = 15
cloned = 14
killed = 18
cloned = 19
killed = 21
cloned = 7
killed = 1
cloned = 20
killed = 10
cloned = 17
killed = 2
cloned = 3
killed = 16
cloned = 12
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 21, 12, 19, 8, 10, 1, 5, 17, 15, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 18, 4, 11, 14, 0, 16, 3, 2, 13, 20, 22]
====================================
cloned = 6
killed = 9
cloned = 18
killed = 21
cloned = 4
killed = 12
cloned = 11
killed = 19
cloned = 14
killed = 8
cloned = 0
killed = 10
cloned = 16
killed = 1
cloned = 3
killed = 5
cloned = 2
killed = 17
cloned = 13
killed = 15
cloned = 20
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 14, 21, 0, 17, 18, 15, 16, 6, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 13, 5, 1, 9, 4, 11, 3, 19, 12, 20, 22]
====================================
cloned = 7
killed = 10
cloned = 13
killed = 8
cloned = 5
killed = 14
cloned = 1
killed = 21
cloned = 9
killed = 0
cloned = 4
killed = 17
cloned = 11
killed = 18
cloned = 3
killed = 15
cloned = 19
killed = 16
cloned = 12
killed = 6
cloned = 20
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 2, 15, 13, 10, 5, 18, 12, 17, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 16, 8, 11, 21, 14, 3, 7, 4, 9, 19, 22]
====================================
cloned = 6
killed = 1
cloned = 16
killed = 0
cloned = 8
killed = 2
cloned = 11
killed = 15
cloned = 21
killed = 13
cloned = 14
killed = 10
cloned = 3
killed = 5
cloned = 7
killed = 18
cloned = 4
killed = 12
cloned = 9
killed = 17
cloned = 19
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 18, 10, 21, 16, 7, 4, 11, 12, 0, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 20, 5, 17, 6, 19, 1, 8, 9, 3, 2, 22]
====================================
cloned = 13
killed = 14
cloned = 20
killed = 18
cloned = 5
killed = 10
cloned = 17
killed = 21
cloned = 6
killed = 16
cloned = 19
killed = 7
cloned = 1
killed = 4
cloned = 8
killed = 11
cloned = 9
killed = 12
cloned = 3
killed = 0
cloned = 2
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 12, 10, 2, 1, 16, 20, 19, 5, 8, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 9, 17, 3, 15, 18, 11, 6, 0, 7, 21, 22]
====================================
cloned = 13
killed = 14
cloned = 9
killed = 12
cloned = 17
killed = 10
cloned = 3
killed = 2
cloned = 15
killed = 1
cloned = 18
killed = 16
cloned = 11
killed = 20
cloned = 6
killed = 19
cloned = 0
killed = 5
cloned = 7
killed = 8
cloned = 21
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 10, 16, 17, 7, 8, 12, 0, 18, 9, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 5, 1, 13, 4, 14, 19, 2, 6, 3, 11, 22]
====================================
cloned = 20
killed = 15
cloned = 5
killed = 10
cloned = 1
killed = 16
cloned = 13
killed = 17
cloned = 4
killed = 7
cloned = 14
killed = 8
cloned = 19
killed = 12
cloned = 2
killed = 0
cloned = 6
killed = 18
cloned = 3
killed = 9
cloned = 11
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 16, 8, 18, 19, 14, 6, 21, 17, 13, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 3, 1, 2, 12, 20, 15, 0, 10, 4, 7, 22]
====================================
cloned = 5
killed = 9
cloned = 3
killed = 16
cloned = 1
killed = 8
cloned = 2
killed = 18
cloned = 12
killed = 19
cloned = 20
killed = 14
cloned = 15
killed = 6
cloned = 0
killed = 21
cloned = 10
killed = 17
cloned = 4
killed = 13
cloned = 7
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 1, 10, 16, 18, 3, 17, 7, 20, 19, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 13, 6, 21, 9, 4, 8, 2, 12, 5, 0, 22]
====================================
cloned = 14
killed = 11
cloned = 13
killed = 1
cloned = 6
killed = 10
cloned = 21
killed = 16
cloned = 9
killed = 18
cloned = 4
killed = 3
cloned = 8
killed = 17
cloned = 2
killed = 7
cloned = 12
killed = 20
cloned = 5
killed = 19
cloned = 0
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 20, 11, 14, 7, 2, 5, 10, 18, 4, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 3, 15, 9, 17, 13, 1, 0, 6, 12, 19, 22]
====================================
cloned = 16
killed = 8
cloned = 3
killed = 20
cloned = 15
killed = 11
cloned = 9
killed = 14
cloned = 17
killed = 7
cloned = 13
killed = 2
cloned = 1
killed = 5
cloned = 0
killed = 10
cloned = 6
killed = 18
cloned = 12
killed = 4
cloned = 19
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 1, 12, 14, 10, 7, 4, 18, 15, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 21, 19, 6, 2, 9, 5, 17, 13, 0, 20, 22]
====================================
cloned = 16
killed = 3
cloned = 21
killed = 1
cloned = 19
killed = 12
cloned = 6
killed = 14
cloned = 2
killed = 10
cloned = 9
killed = 7
cloned = 5
killed = 4
cloned = 17
killed = 18
cloned = 13
killed = 15
cloned = 0
killed = 8
cloned = 20
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 4, 2, 8, 14, 10, 0, 11, 17, 13, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 15, 7, 18, 21, 1, 16, 6, 19, 12, 5, 22]
====================================
cloned = 20
killed = 9
cloned = 15
killed = 4
cloned = 7
killed = 2
cloned = 18
killed = 8
cloned = 21
killed = 14
cloned = 1
killed = 10
cloned = 16
killed = 0
cloned = 6
killed = 11
cloned = 19
killed = 17
cloned = 12
killed = 13
cloned = 5
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 7, 8, 9, 0, 11, 15, 21, 4, 20, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 6, 18, 12, 14, 10, 16, 19, 13, 2, 1, 22]
====================================
cloned = 3
killed = 17
cloned = 6
killed = 7
cloned = 18
killed = 8
cloned = 12
killed = 9
cloned = 14
killed = 0
cloned = 10
killed = 11
cloned = 16
killed = 15
cloned = 19
killed = 21
cloned = 13
killed = 4
cloned = 2
killed = 20
cloned = 1
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 14, 19, 12, 5, 6, 21, 18, 9, 1, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 13, 11, 10, 2, 8, 7, 4, 0, 17, 22]
====================================
cloned = 3
killed = 20
cloned = 16
killed = 14
cloned = 13
killed = 19
cloned = 11
killed = 12
cloned = 10
killed = 5
cloned = 2
killed = 6
cloned = 8
killed = 21
cloned = 7
killed = 18
cloned = 4
killed = 9
cloned = 0
killed = 1
cloned = 17
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 8, 14, 17, 12, 15, 2, 10, 1, 13, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 20, 11, 4, 9, 6, 5, 0, 7, 19, 22]
====================================
cloned = 3
killed = 21
cloned = 16
killed = 8
cloned = 20
killed = 14
cloned = 11
killed = 17
cloned = 4
killed = 12
cloned = 9
killed = 15
cloned = 6
killed = 2
cloned = 5
killed = 10
cloned = 0
killed = 1
cloned = 7
killed = 13
cloned = 19
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 3, 13, 18, 5, 4, 0, 2, 6, 9, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 15, 8, 14, 11, 21, 1, 16, 20, 10, 17, 22]
====================================
cloned = 7
killed = 12
cloned = 15
killed = 3
cloned = 8
killed = 13
cloned = 14
killed = 18
cloned = 11
killed = 5
cloned = 21
killed = 4
cloned = 1
killed = 0
cloned = 16
killed = 2
cloned = 20
killed = 6
cloned = 10
killed = 9
cloned = 17
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 19, 12, 18, 16, 7, 13, 15, 9, 20, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 14, 8, 5, 1, 3, 2, 10, 4, 0, 6, 22]
====================================
cloned = 21
killed = 11
cloned = 14
killed = 19
cloned = 8
killed = 12
cloned = 5
killed = 18
cloned = 1
killed = 16
cloned = 3
killed = 7
cloned = 2
killed = 13
cloned = 10
killed = 15
cloned = 4
killed = 9
cloned = 0
killed = 20
cloned = 6
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 2, 8, 9, 5, 10, 21, 4, 7, 3, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 11, 16, 6, 1, 13, 14, 19, 17, 20, 18, 22]
====================================
cloned = 0
killed = 12
cloned = 11
killed = 2
cloned = 16
killed = 8
cloned = 6
killed = 9
cloned = 1
killed = 5
cloned = 13
killed = 10
cloned = 14
killed = 21
cloned = 19
killed = 4
cloned = 17
killed = 7
cloned = 20
killed = 3
cloned = 18
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 6, 10, 20, 5, 21, 15, 19, 0, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 14, 12, 4, 18, 9, 17, 16, 1, 7, 11, 22]
====================================
cloned = 13
killed = 2
cloned = 14
killed = 8
cloned = 12
killed = 6
cloned = 4
killed = 10
cloned = 18
killed = 20
cloned = 9
killed = 5
cloned = 17
killed = 21
cloned = 16
killed = 15
cloned = 1
killed = 19
cloned = 7
killed = 0
cloned = 11
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 17, 14, 16, 11, 15, 5, 2, 12, 9, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 0, 7, 10, 20, 1, 19, 8, 4, 3, 18, 22]
====================================
cloned = 21
killed = 6
cloned = 0
killed = 17
cloned = 7
killed = 14
cloned = 10
killed = 16
cloned = 20
killed = 11
cloned = 1
killed = 15
cloned = 19
killed = 5
cloned = 8
killed = 2
cloned = 4
killed = 12
cloned = 3
killed = 9
cloned = 18
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 19, 10, 3, 2, 9, 14, 20, 18, 17, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 11, 5, 16, 7, 4, 6, 12, 15, 13, 0, 22]
====================================
cloned = 8
killed = 1
cloned = 11
killed = 19
cloned = 5
killed = 10
cloned = 16
killed = 3
cloned = 7
killed = 2
cloned = 4
killed = 9
cloned = 6
killed = 14
cloned = 12
killed = 20
cloned = 15
killed = 18
cloned = 13
killed = 17
cloned = 0
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 3, 11, 6, 7, 19, 8, 12, 9, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 1, 14, 5, 20, 15, 2, 10, 0, 16, 18, 22]
====================================
cloned = 4
killed = 21
cloned = 1
killed = 17
cloned = 14
killed = 3
cloned = 5
killed = 11
cloned = 20
killed = 6
cloned = 15
killed = 7
cloned = 2
killed = 19
cloned = 10
killed = 8
cloned = 0
killed = 12
cloned = 16
killed = 9
cloned = 18
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 14, 15, 8, 16, 9, 17, 20, 6, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 10, 1, 12, 11, 21, 18, 19, 4, 5, 13, 22]
====================================
cloned = 7
killed = 2
cloned = 10
killed = 14
cloned = 1
killed = 15
cloned = 12
killed = 8
cloned = 11
killed = 16
cloned = 21
killed = 9
cloned = 18
killed = 17
cloned = 19
killed = 20
cloned = 4
killed = 6
cloned = 5
killed = 3
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 3, 6, 4, 17, 2, 11, 21, 10, 9, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 0, 18, 14, 13, 8, 20, 1, 7, 15, 5, 22]
====================================
cloned = 12
killed = 16
cloned = 0
killed = 3
cloned = 18
killed = 6
cloned = 14
killed = 4
cloned = 13
killed = 17
cloned = 8
killed = 2
cloned = 20
killed = 11
cloned = 1
killed = 21
cloned = 7
killed = 10
cloned = 15
killed = 9
cloned = 5
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 17, 11, 13, 8, 21, 14, 15, 20, 4, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 3, 19, 18, 7, 9, 1, 10, 12, 0, 6, 22]
====================================
cloned = 2
killed = 5
cloned = 3
killed = 17
cloned = 19
killed = 11
cloned = 18
killed = 13
cloned = 7
killed = 8
cloned = 9
killed = 21
cloned = 1
killed = 14
cloned = 10
killed = 15
cloned = 12
killed = 20
cloned = 0
killed = 4
cloned = 6
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 6, 11, 1, 7, 2, 15, 0, 10, 4, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 13, 9, 3, 8, 17, 16, 14, 21, 12, 19, 22]
====================================
cloned = 20
killed = 5
cloned = 13
killed = 6
cloned = 9
killed = 11
cloned = 3
killed = 1
cloned = 8
killed = 7
cloned = 17
killed = 2
cloned = 16
killed = 15
cloned = 14
killed = 0
cloned = 21
killed = 10
cloned = 12
killed = 4
cloned = 19
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 1, 14, 6, 15, 10, 12, 4, 21, 19, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 2, 17, 5, 20, 9, 3, 13, 18, 16, 8, 22]
====================================
cloned = 11
killed = 0
cloned = 2
killed = 1
cloned = 17
killed = 14
cloned = 5
killed = 6
cloned = 20
killed = 15
cloned = 9
killed = 10
cloned = 3
killed = 12
cloned = 13
killed = 4
cloned = 18
killed = 21
cloned = 16
killed = 19
cloned = 8
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 20, 7, 8, 10, 1, 4, 6, 2, 0, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 18, 15, 5, 12, 11, 13, 3, 9, 14, 17, 22]
====================================
cloned = 19
killed = 21
cloned = 18
killed = 20
cloned = 15
killed = 7
cloned = 5
killed = 8
cloned = 12
killed = 10
cloned = 11
killed = 1
cloned = 13
killed = 4
cloned = 3
killed = 6
cloned = 9
killed = 2
cloned = 14
killed = 0
cloned = 17
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 7, 19, 8, 18, 3, 13, 16, 0, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 17, 11, 21, 10, 20, 14, 12, 4, 5, 1, 22]
====================================
cloned = 15
killed = 2
cloned = 17
killed = 9
cloned = 11
killed = 7
cloned = 21
killed = 19
cloned = 10
killed = 8
cloned = 20
killed = 18
cloned = 14
killed = 3
cloned = 12
killed = 13
cloned = 4
killed = 16
cloned = 5
killed = 0
cloned = 1
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 18, 8, 11, 16, 6, 1, 2, 9, 20, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 19, 4, 15, 10, 14, 17, 13, 21, 12, 3, 22]
====================================
cloned = 0
killed = 5
cloned = 19
killed = 18
cloned = 4
killed = 8
cloned = 15
killed = 11
cloned = 10
killed = 16
cloned = 14
killed = 6
cloned = 17
killed = 1
cloned = 13
killed = 2
cloned = 21
killed = 9
cloned = 12
killed = 20
cloned = 3
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 4, 10, 18, 13, 5, 3, 6, 0, 1, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 15, 8, 12, 20, 11, 17, 9, 19, 16, 21, 22]
====================================
cloned = 2
killed = 14
cloned = 15
killed = 4
cloned = 8
killed = 10
cloned = 12
killed = 18
cloned = 20
killed = 13
cloned = 11
killed = 5
cloned = 17
killed = 3
cloned = 9
killed = 6
cloned = 19
killed = 0
cloned = 16
killed = 1
cloned = 21
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 16, 2, 19, 14, 0, 5, 10, 12, 15, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 8, 20, 6, 13, 11, 17, 18, 9, 7, 3, 22]
====================================
cloned = 21
killed = 1
cloned = 8
killed = 16
cloned = 20
killed = 2
cloned = 6
killed = 19
cloned = 13
killed = 14
cloned = 11
killed = 0
cloned = 17
killed = 5
cloned = 18
killed = 10
cloned = 9
killed = 12
cloned = 7
killed = 15
cloned = 3
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 20, 21, 11, 19, 16, 15, 0, 17, 3, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 4, 14, 13, 6, 5, 8, 2, 7, 1, 18, 22]
====================================
cloned = 12
killed = 9
cloned = 4
killed = 20
cloned = 14
killed = 21
cloned = 13
killed = 11
cloned = 6
killed = 19
cloned = 5
killed = 16
cloned = 8
killed = 15
cloned = 2
killed = 0
cloned = 7
killed = 17
cloned = 1
killed = 3
cloned = 18
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 19, 11, 14, 8, 0, 1, 18, 16, 7, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 9, 2, 3, 5, 10, 17, 6, 13, 15, 21, 22]
====================================
cloned = 12
killed = 20
cloned = 9
killed = 19
cloned = 2
killed = 11
cloned = 3
killed = 14
cloned = 5
killed = 8
cloned = 10
killed = 0
cloned = 17
killed = 1
cloned = 6
killed = 18
cloned = 13
killed = 16
cloned = 15
killed = 7
cloned = 21
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 0, 1, 3, 15, 9, 17, 7, 11, 6, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 4, 8, 20, 10, 5, 12, 19, 18, 2, 16, 22]
====================================
cloned = 13
killed = 21
cloned = 4
killed = 0
cloned = 8
killed = 1
cloned = 20
killed = 3
cloned = 10
killed = 15
cloned = 5
killed = 9
cloned = 12
killed = 17
cloned = 19
killed = 7
cloned = 18
killed = 11
cloned = 2
killed = 6
cloned = 16
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 19, 5, 21, 8, 7, 17, 9, 10, 6, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 14, 2, 18, 4, 13, 11, 20, 16, 15, 0, 22]
====================================
cloned = 1
killed = 12
cloned = 14
killed = 19
cloned = 2
killed = 5
cloned = 18
killed = 21
cloned = 4
killed = 8
cloned = 13
killed = 7
cloned = 11
killed = 17
cloned = 20
killed = 9
cloned = 16
killed = 10
cloned = 15
killed = 6
cloned = 0
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 16, 15, 9, 7, 10, 17, 3, 19, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 13, 11, 20, 14, 6, 18, 12, 2, 21, 1, 22]
====================================
cloned = 4
killed = 5
cloned = 13
killed = 8
cloned = 11
killed = 16
cloned = 20
killed = 15
cloned = 14
killed = 9
cloned = 6
killed = 7
cloned = 18
killed = 10
cloned = 12
killed = 17
cloned = 2
killed = 3
cloned = 21
killed = 19
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 5, 2, 10, 16, 14, 18, 19, 13, 6, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 9, 8, 15, 17, 11, 21, 0, 4, 12, 7, 22]
====================================
cloned = 3
killed = 20
cloned = 9
killed = 5
cloned = 8
killed = 2
cloned = 15
killed = 10
cloned = 17
killed = 16
cloned = 11
killed = 14
cloned = 21
killed = 18
cloned = 0
killed = 19
cloned = 4
killed = 13
cloned = 12
killed = 6
cloned = 7
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 21, 9, 5, 18, 14, 0, 20, 6, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 17, 8, 11, 10, 2, 4, 16, 1, 19, 15, 22]
====================================
cloned = 13
killed = 3
cloned = 17
killed = 12
cloned = 8
killed = 21
cloned = 11
killed = 9
cloned = 10
killed = 5
cloned = 2
killed = 18
cloned = 4
killed = 14
cloned = 16
killed = 0
cloned = 1
killed = 20
cloned = 19
killed = 6
cloned = 15
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 15, 1, 4, 7, 5, 9, 0, 11, 21, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 6, 8, 20, 10, 17, 3, 19, 12, 2, 14, 22]
====================================
cloned = 16
killed = 13
cloned = 6
killed = 15
cloned = 8
killed = 1
cloned = 20
killed = 4
cloned = 10
killed = 7
cloned = 17
killed = 5
cloned = 3
killed = 9
cloned = 19
killed = 0
cloned = 12
killed = 11
cloned = 2
killed = 21
cloned = 14
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 13, 5, 14, 3, 18, 19, 17, 16, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 12, 6, 4, 7, 2, 8, 20, 11, 1, 15, 22]
====================================
cloned = 21
killed = 9
cloned = 12
killed = 13
cloned = 6
killed = 5
cloned = 4
killed = 14
cloned = 7
killed = 3
cloned = 2
killed = 18
cloned = 8
killed = 19
cloned = 20
killed = 17
cloned = 11
killed = 16
cloned = 1
killed = 0
cloned = 15
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 10, 17, 0, 5, 20, 11, 21, 7, 14, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 15, 16, 12, 13, 4, 9, 1, 8, 3, 18, 22]
====================================
cloned = 19
killed = 6
cloned = 15
killed = 10
cloned = 16
killed = 17
cloned = 12
killed = 0
cloned = 13
killed = 5
cloned = 4
killed = 20
cloned = 9
killed = 11
cloned = 1
killed = 21
cloned = 8
killed = 7
cloned = 3
killed = 14
cloned = 18
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 21, 7, 17, 4, 12, 18, 20, 16, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 1, 11, 0, 5, 19, 2, 10, 3, 9, 6, 22]
====================================
cloned = 15
killed = 14
cloned = 1
killed = 21
cloned = 11
killed = 7
cloned = 0
killed = 17
cloned = 5
killed = 4
cloned = 19
killed = 12
cloned = 2
killed = 18
cloned = 10
killed = 20
cloned = 3
killed = 16
cloned = 9
killed = 13
cloned = 6
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 16, 3, 8, 4, 12, 7, 11, 13, 0, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 5, 17, 21, 19, 14, 1, 2, 6, 9, 18, 22]
====================================
cloned = 20
killed = 15
cloned = 5
killed = 16
cloned = 17
killed = 3
cloned = 21
killed = 8
cloned = 19
killed = 4
cloned = 14
killed = 12
cloned = 1
killed = 7
cloned = 2
killed = 11
cloned = 6
killed = 13
cloned = 9
killed = 0
cloned = 18
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 13, 9, 11, 16, 18, 0, 15, 2, 20, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 5, 6, 10, 14, 17, 4, 3, 12, 8, 7, 22]
====================================
cloned = 1
killed = 19
cloned = 5
killed = 13
cloned = 6
killed = 9
cloned = 10
killed = 11
cloned = 14
killed = 16
cloned = 17
killed = 18
cloned = 4
killed = 0
cloned = 3
killed = 15
cloned = 12
killed = 2
cloned = 8
killed = 20
cloned = 7
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 8, 9, 2, 11, 1, 7, 0, 13, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 3, 5, 17, 18, 10, 19, 15, 6, 14, 20, 22]
====================================
cloned = 4
killed = 16
cloned = 3
killed = 12
cloned = 5
killed = 8
cloned = 17
killed = 9
cloned = 18
killed = 2
cloned = 10
killed = 11
cloned = 19
killed = 1
cloned = 15
killed = 7
cloned = 6
killed = 0
cloned = 14
killed = 13
cloned = 20
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 13, 20, 4, 8, 2, 10, 9, 11, 1, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 17, 16, 7, 14, 5, 19, 15, 12, 0, 18, 22]
====================================
cloned = 21
killed = 3
cloned = 17
killed = 13
cloned = 16
killed = 20
cloned = 7
killed = 4
cloned = 14
killed = 8
cloned = 5
killed = 2
cloned = 19
killed = 10
cloned = 15
killed = 9
cloned = 12
killed = 11
cloned = 0
killed = 1
cloned = 18
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 18, 0, 5, 19, 16, 21, 2, 11, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 4, 1, 13, 15, 9, 17, 8, 6, 14, 10, 22]
====================================
cloned = 7
killed = 20
cloned = 4
killed = 3
cloned = 1
killed = 18
cloned = 13
killed = 0
cloned = 15
killed = 5
cloned = 9
killed = 19
cloned = 17
killed = 16
cloned = 8
killed = 21
cloned = 6
killed = 2
cloned = 14
killed = 11
cloned = 10
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 12, 7, 13, 5, 2, 4, 17, 3, 14, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 10, 8, 9, 6, 16, 11, 0, 18, 1, 19, 22]
====================================
cloned = 21
killed = 20
cloned = 10
killed = 12
cloned = 8
killed = 7
cloned = 9
killed = 13
cloned = 6
killed = 5
cloned = 16
killed = 2
cloned = 11
killed = 4
cloned = 0
killed = 17
cloned = 18
killed = 3
cloned = 1
killed = 14
cloned = 19
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 4, 10, 0, 8, 18, 12, 19, 1, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 14, 21, 13, 7, 15, 16, 17, 11, 20, 3, 22]
====================================
cloned = 6
killed = 2
cloned = 14
killed = 9
cloned = 21
killed = 4
cloned = 13
killed = 10
cloned = 7
killed = 0
cloned = 15
killed = 8
cloned = 16
killed = 18
cloned = 17
killed = 12
cloned = 11
killed = 19
cloned = 20
killed = 1
cloned = 3
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 20, 19, 15, 17, 1, 21, 0, 16, 14, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 8, 11, 5, 3, 13, 18, 10, 7, 9, 12, 22]
====================================
cloned = 6
killed = 4
cloned = 8
killed = 20
cloned = 11
killed = 19
cloned = 5
killed = 15
cloned = 3
killed = 17
cloned = 13
killed = 1
cloned = 18
killed = 21
cloned = 10
killed = 0
cloned = 7
killed = 16
cloned = 9
killed = 14
cloned = 12
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 7, 18, 16, 15, 2, 5, 3, 8, 21, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 6, 0, 14, 12, 9, 1, 11, 17, 19, 20, 22]
====================================
cloned = 4
killed = 10
cloned = 6
killed = 7
cloned = 0
killed = 18
cloned = 14
killed = 16
cloned = 12
killed = 15
cloned = 9
killed = 2
cloned = 1
killed = 5
cloned = 11
killed = 3
cloned = 17
killed = 8
cloned = 19
killed = 21
cloned = 20
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 10, 21, 1, 19, 2, 6, 0, 9, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 13, 17, 15, 7, 18, 16, 12, 5, 11, 8, 22]
====================================
cloned = 4
killed = 20
cloned = 13
killed = 3
cloned = 17
killed = 10
cloned = 15
killed = 21
cloned = 7
killed = 1
cloned = 18
killed = 19
cloned = 16
killed = 2
cloned = 12
killed = 6
cloned = 5
killed = 0
cloned = 11
killed = 9
cloned = 8
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 14, 2, 21, 13, 11, 16, 15, 7, 4, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 0, 12, 10, 8, 3, 18, 1, 20, 19, 9, 22]
====================================
cloned = 17
killed = 6
cloned = 0
killed = 14
cloned = 12
killed = 2
cloned = 10
killed = 21
cloned = 8
killed = 13
cloned = 3
killed = 11
cloned = 18
killed = 16
cloned = 1
killed = 15
cloned = 20
killed = 7
cloned = 19
killed = 4
cloned = 9
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 20, 7, 10, 16, 0, 17, 8, 19, 15, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 12, 6, 18, 3, 9, 4, 14, 5, 11, 21, 22]
====================================
cloned = 13
killed = 2
cloned = 12
killed = 20
cloned = 6
killed = 7
cloned = 18
killed = 10
cloned = 3
killed = 16
cloned = 9
killed = 0
cloned = 4
killed = 17
cloned = 14
killed = 8
cloned = 5
killed = 19
cloned = 11
killed = 15
cloned = 21
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 2, 17, 5, 7, 19, 10, 14, 8, 12, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 15, 16, 9, 18, 21, 3, 4, 11, 0, 20, 22]
====================================
cloned = 1
killed = 13
cloned = 15
killed = 2
cloned = 16
killed = 17
cloned = 9
killed = 5
cloned = 18
killed = 7
cloned = 21
killed = 19
cloned = 3
killed = 10
cloned = 4
killed = 14
cloned = 11
killed = 8
cloned = 0
killed = 12
cloned = 20
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 19, 20, 3, 1, 2, 17, 21, 14, 0, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 5, 6, 15, 4, 8, 13, 12, 7, 11, 9, 22]
====================================
cloned = 16
killed = 10
cloned = 5
killed = 19
cloned = 6
killed = 20
cloned = 15
killed = 3
cloned = 4
killed = 1
cloned = 8
killed = 2
cloned = 13
killed = 17
cloned = 12
killed = 21
cloned = 7
killed = 14
cloned = 11
killed = 0
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 15, 8, 2, 16, 11, 9, 6, 12, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 1, 7, 5, 17, 18, 20, 19, 14, 21, 0, 22]
====================================
cloned = 10
killed = 13
cloned = 1
killed = 3
cloned = 7
killed = 15
cloned = 5
killed = 8
cloned = 17
killed = 2
cloned = 18
killed = 16
cloned = 20
killed = 11
cloned = 19
killed = 9
cloned = 14
killed = 6
cloned = 21
killed = 12
cloned = 0
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 4, 14, 3, 21, 17, 7, 2, 8, 20, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 5, 12, 18, 9, 0, 11, 6, 19, 10, 16, 22]
====================================
cloned = 1
killed = 15
cloned = 5
killed = 4
cloned = 12
killed = 14
cloned = 18
killed = 3
cloned = 9
killed = 21
cloned = 0
killed = 17
cloned = 11
killed = 7
cloned = 6
killed = 2
cloned = 19
killed = 8
cloned = 10
killed = 20
cloned = 16
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 20, 18, 8, 2, 21, 15, 5, 7, 10, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 4, 9, 13, 1, 16, 12, 6, 11, 3, 19, 22]
====================================
cloned = 17
killed = 0
cloned = 4
killed = 20
cloned = 9
killed = 18
cloned = 13
killed = 8
cloned = 1
killed = 2
cloned = 16
killed = 21
cloned = 12
killed = 15
cloned = 6
killed = 5
cloned = 11
killed = 7
cloned = 3
killed = 10
cloned = 19
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 9, 10, 8, 14, 3, 21, 18, 6, 12, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 1, 16, 15, 19, 4, 17, 20, 2, 13, 7, 22]
====================================
cloned = 0
killed = 5
cloned = 1
killed = 9
cloned = 16
killed = 10
cloned = 15
killed = 8
cloned = 19
killed = 14
cloned = 4
killed = 3
cloned = 17
killed = 21
cloned = 20
killed = 18
cloned = 2
killed = 6
cloned = 13
killed = 12
cloned = 7
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 6, 14, 9, 7, 17, 12, 4, 21, 8, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 13, 3, 5, 11, 15, 10, 19, 16, 0, 20, 22]
====================================
cloned = 18
killed = 2
cloned = 13
killed = 6
cloned = 3
killed = 14
cloned = 5
killed = 9
cloned = 11
killed = 7
cloned = 15
killed = 17
cloned = 10
killed = 12
cloned = 19
killed = 4
cloned = 16
killed = 21
cloned = 0
killed = 8
cloned = 20
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 5, 2, 14, 13, 3, 10, 18, 17, 8, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 1, 16, 15, 21, 6, 4, 0, 11, 7, 9, 22]
====================================
cloned = 19
killed = 12
cloned = 1
killed = 5
cloned = 16
killed = 2
cloned = 15
killed = 14
cloned = 21
killed = 13
cloned = 6
killed = 3
cloned = 4
killed = 10
cloned = 0
killed = 18
cloned = 11
killed = 17
cloned = 7
killed = 8
cloned = 9
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 14, 4, 7, 21, 10, 1, 15, 5, 16, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 18, 12, 20, 19, 9, 3, 8, 0, 11, 6, 22]
====================================
cloned = 17
killed = 13
cloned = 18
killed = 14
cloned = 12
killed = 4
cloned = 20
killed = 7
cloned = 19
killed = 21
cloned = 9
killed = 10
cloned = 3
killed = 1
cloned = 8
killed = 15
cloned = 0
killed = 5
cloned = 11
killed = 16
cloned = 6
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 15, 12, 10, 14, 16, 0, 13, 4, 2, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 8, 21, 17, 6, 7, 3, 1, 11, 5, 9, 22]
====================================
cloned = 20
killed = 18
cloned = 8
killed = 15
cloned = 21
killed = 12
cloned = 17
killed = 10
cloned = 6
killed = 14
cloned = 7
killed = 16
cloned = 3
killed = 0
cloned = 1
killed = 13
cloned = 11
killed = 4
cloned = 5
killed = 2
cloned = 9
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 8, 18, 3, 5, 17, 16, 19, 4, 0, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 20, 12, 21, 6, 2, 15, 1, 7, 9, 11, 22]
====================================
cloned = 14
killed = 10
cloned = 20
killed = 8
cloned = 12
killed = 18
cloned = 21
killed = 3
cloned = 6
killed = 5
cloned = 2
killed = 17
cloned = 15
killed = 16
cloned = 1
killed = 19
cloned = 7
killed = 4
cloned = 9
killed = 0
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 20, 19, 9, 21, 3, 6, 8, 12, 16, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 18, 7, 17, 15, 14, 1, 5, 2, 4, 13, 22]
====================================
cloned = 10
killed = 11
cloned = 18
killed = 20
cloned = 7
killed = 19
cloned = 17
killed = 9
cloned = 15
killed = 21
cloned = 14
killed = 3
cloned = 1
killed = 6
cloned = 5
killed = 8
cloned = 2
killed = 12
cloned = 4
killed = 16
cloned = 13
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 7, 19, 0, 15, 4, 14, 3, 16, 20, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 1, 2, 8, 21, 13, 10, 5, 9, 17, 18, 22]
====================================
cloned = 11
killed = 6
cloned = 1
killed = 7
cloned = 2
killed = 19
cloned = 8
killed = 0
cloned = 21
killed = 15
cloned = 13
killed = 4
cloned = 10
killed = 14
cloned = 5
killed = 3
cloned = 9
killed = 16
cloned = 17
killed = 20
cloned = 18
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 8, 11, 0, 16, 20, 12, 2, 6, 4, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 7, 15, 5, 21, 10, 14, 17, 18, 9, 19, 22]
====================================
cloned = 3
killed = 13
cloned = 7
killed = 8
cloned = 15
killed = 11
cloned = 5
killed = 0
cloned = 21
killed = 16
cloned = 10
killed = 20
cloned = 14
killed = 12
cloned = 17
killed = 2
cloned = 18
killed = 6
cloned = 9
killed = 4
cloned = 19
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 17, 7, 1, 2, 5, 18, 3, 8, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 21, 14, 16, 4, 11, 20, 19, 0, 10, 12, 22]
====================================
cloned = 9
killed = 15
cloned = 21
killed = 17
cloned = 14
killed = 7
cloned = 16
killed = 1
cloned = 4
killed = 2
cloned = 11
killed = 5
cloned = 20
killed = 18
cloned = 19
killed = 3
cloned = 0
killed = 8
cloned = 10
killed = 6
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 11, 19, 12, 5, 14, 16, 18, 13, 1, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 17, 3, 0, 15, 4, 8, 2, 10, 20, 6, 22]
====================================
cloned = 21
killed = 7
cloned = 17
killed = 11
cloned = 3
killed = 19
cloned = 0
killed = 12
cloned = 15
killed = 5
cloned = 4
killed = 14
cloned = 8
killed = 16
cloned = 2
killed = 18
cloned = 10
killed = 13
cloned = 20
killed = 1
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 15, 1, 6, 0, 9, 10, 8, 4, 11, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 12, 2, 20, 14, 19, 17, 13, 3, 18, 16, 22]
====================================
cloned = 5
killed = 7
cloned = 12
killed = 15
cloned = 2
killed = 1
cloned = 20
killed = 6
cloned = 14
killed = 0
cloned = 19
killed = 9
cloned = 17
killed = 10
cloned = 13
killed = 8
cloned = 3
killed = 4
cloned = 18
killed = 11
cloned = 16
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 13, 10, 20, 4, 14, 16, 0, 1, 8, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 7, 19, 12, 6, 18, 2, 5, 9, 21, 3, 22]
====================================
cloned = 15
killed = 11
cloned = 7
killed = 13
cloned = 19
killed = 10
cloned = 12
killed = 20
cloned = 6
killed = 4
cloned = 18
killed = 14
cloned = 2
killed = 16
cloned = 5
killed = 0
cloned = 9
killed = 1
cloned = 21
killed = 8
cloned = 3
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 15, 16, 6, 18, 21, 12, 4, 3, 20, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 2, 0, 9, 13, 19, 1, 14, 5, 10, 17, 22]
====================================
cloned = 11
killed = 8
cloned = 2
killed = 15
cloned = 0
killed = 16
cloned = 9
killed = 6
cloned = 13
killed = 18
cloned = 19
killed = 21
cloned = 1
killed = 12
cloned = 14
killed = 4
cloned = 5
killed = 3
cloned = 10
killed = 20
cloned = 17
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 6, 19, 12, 11, 9, 0, 8, 15, 5, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 21, 18, 13, 14, 2, 16, 10, 4, 17, 22]
====================================
cloned = 20
killed = 1
cloned = 7
killed = 6
cloned = 21
killed = 19
cloned = 18
killed = 12
cloned = 13
killed = 11
cloned = 14
killed = 9
cloned = 2
killed = 0
cloned = 16
killed = 8
cloned = 10
killed = 15
cloned = 4
killed = 5
cloned = 17
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 2, 15, 16, 19, 12, 20, 18, 4, 13, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 5, 0, 21, 14, 1, 8, 10, 9, 17, 6, 22]
====================================
cloned = 11
killed = 3
cloned = 5
killed = 2
cloned = 0
killed = 15
cloned = 21
killed = 16
cloned = 14
killed = 19
cloned = 1
killed = 12
cloned = 8
killed = 20
cloned = 10
killed = 18
cloned = 9
killed = 4
cloned = 17
killed = 13
cloned = 6
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 17, 5, 12, 13, 16, 8, 7, 11, 18, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 6, 9, 4, 21, 1, 10, 2, 14, 3, 0, 22]
====================================
cloned = 15
killed = 19
cloned = 6
killed = 17
cloned = 9
killed = 5
cloned = 4
killed = 12
cloned = 21
killed = 13
cloned = 1
killed = 16
cloned = 10
killed = 8
cloned = 2
killed = 7
cloned = 14
killed = 11
cloned = 3
killed = 18
cloned = 0
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 5, 11, 20, 10, 19, 3, 6, 8, 14, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 9, 2, 13, 15, 18, 4, 16, 7, 21, 17, 22]
====================================
cloned = 12
killed = 1
cloned = 9
killed = 5
cloned = 2
killed = 11
cloned = 13
killed = 20
cloned = 15
killed = 10
cloned = 18
killed = 19
cloned = 4
killed = 3
cloned = 16
killed = 6
cloned = 7
killed = 8
cloned = 21
killed = 14
cloned = 17
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 14, 17, 2, 12, 0, 21, 5, 19, 16, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 15, 10, 6, 13, 11, 20, 4, 8, 9, 18, 22]
====================================
cloned = 7
killed = 3
cloned = 15
killed = 14
cloned = 10
killed = 17
cloned = 6
killed = 2
cloned = 13
killed = 12
cloned = 11
killed = 0
cloned = 20
killed = 21
cloned = 4
killed = 5
cloned = 8
killed = 19
cloned = 9
killed = 16
cloned = 18
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 21, 3, 20, 9, 17, 6, 8, 12, 7, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 16, 0, 2, 10, 14, 5, 19, 13, 4, 1, 22]
====================================
cloned = 15
killed = 18
cloned = 16
killed = 21
cloned = 0
killed = 3
cloned = 2
killed = 20
cloned = 10
killed = 9
cloned = 14
killed = 17
cloned = 5
killed = 6
cloned = 19
killed = 8
cloned = 13
killed = 12
cloned = 4
killed = 7
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 18, 17, 19, 7, 3, 5, 14, 10, 21, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 20, 12, 8, 15, 6, 2, 9, 16, 4, 0, 22]
====================================
cloned = 1
killed = 13
cloned = 20
killed = 18
cloned = 12
killed = 17
cloned = 8
killed = 19
cloned = 15
killed = 7
cloned = 6
killed = 3
cloned = 2
killed = 5
cloned = 9
killed = 14
cloned = 16
killed = 10
cloned = 4
killed = 21
cloned = 0
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 20, 5, 19, 15, 1, 7, 11, 14, 10, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 13, 2, 9, 4, 17, 18, 21, 8, 12, 0, 22]
====================================
cloned = 6
killed = 16
cloned = 13
killed = 20
cloned = 2
killed = 5
cloned = 9
killed = 19
cloned = 4
killed = 15
cloned = 17
killed = 1
cloned = 18
killed = 7
cloned = 21
killed = 11
cloned = 8
killed = 14
cloned = 12
killed = 10
cloned = 0
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 0, 1, 17, 2, 8, 19, 16, 12, 11, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 3, 21, 5, 10, 20, 4, 15, 6, 9, 18, 22]
====================================
cloned = 7
killed = 14
cloned = 3
killed = 0
cloned = 21
killed = 1
cloned = 5
killed = 17
cloned = 10
killed = 2
cloned = 20
killed = 8
cloned = 4
killed = 19
cloned = 15
killed = 16
cloned = 6
killed = 12
cloned = 9
killed = 11
cloned = 18
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 18, 2, 7, 19, 14, 0, 6, 13, 1, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 21, 20, 9, 17, 8, 3, 16, 11, 4, 5, 22]
====================================
cloned = 12
killed = 15
cloned = 21
killed = 18
cloned = 20
killed = 2
cloned = 9
killed = 7
cloned = 17
killed = 19
cloned = 8
killed = 14
cloned = 3
killed = 0
cloned = 16
killed = 6
cloned = 11
killed = 13
cloned = 4
killed = 1
cloned = 5
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 6, 18, 16, 14, 4, 11, 3, 15, 8, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 0, 21, 12, 13, 9, 2, 17, 1, 10, 5, 22]
====================================
cloned = 20
killed = 19
cloned = 0
killed = 6
cloned = 21
killed = 18
cloned = 12
killed = 16
cloned = 13
killed = 14
cloned = 9
killed = 4
cloned = 2
killed = 11
cloned = 17
killed = 3
cloned = 1
killed = 15
cloned = 10
killed = 8
cloned = 5
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 20, 16, 0, 13, 21, 2, 6, 7, 14, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 5, 4, 10, 9, 19, 8, 3, 15, 17, 1, 22]
====================================
cloned = 11
killed = 12
cloned = 5
killed = 20
cloned = 4
killed = 16
cloned = 10
killed = 0
cloned = 9
killed = 13
cloned = 19
killed = 21
cloned = 8
killed = 2
cloned = 3
killed = 6
cloned = 15
killed = 7
cloned = 17
killed = 14
cloned = 1
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 21, 15, 5, 4, 1, 9, 6, 3, 11, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 20, 7, 13, 19, 10, 14, 17, 0, 16, 22]
====================================
cloned = 8
killed = 2
cloned = 12
killed = 21
cloned = 20
killed = 15
cloned = 7
killed = 5
cloned = 13
killed = 4
cloned = 19
killed = 1
cloned = 10
killed = 9
cloned = 14
killed = 6
cloned = 17
killed = 3
cloned = 0
killed = 11
cloned = 16
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 7, 1, 3, 21, 17, 2, 18, 5, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 19, 20, 9, 13, 11, 8, 10, 4, 14, 15, 22]
====================================
cloned = 0
killed = 12
cloned = 19
killed = 6
cloned = 20
killed = 7
cloned = 9
killed = 1
cloned = 13
killed = 3
cloned = 11
killed = 21
cloned = 8
killed = 17
cloned = 10
killed = 2
cloned = 4
killed = 18
cloned = 14
killed = 5
cloned = 15
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [18, 17, 7, 13, 3, 0, 12, 21, 19, 9, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 1, 5, 16, 10, 4, 2, 20, 15, 14, 8, 22]
====================================
cloned = 11
killed = 18
cloned = 1
killed = 17
cloned = 5
killed = 7
cloned = 16
killed = 13
cloned = 10
killed = 3
cloned = 4
killed = 0
cloned = 2
killed = 12
cloned = 20
killed = 21
cloned = 15
killed = 19
cloned = 14
killed = 9
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 20, 15, 12, 21, 14, 13, 4, 1, 19, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 17, 7, 11, 18, 2, 8, 16, 0, 5, 6, 22]
====================================
cloned = 10
killed = 3
cloned = 17
killed = 20
cloned = 7
killed = 15
cloned = 11
killed = 12
cloned = 18
killed = 21
cloned = 2
killed = 14
cloned = 8
killed = 13
cloned = 16
killed = 4
cloned = 0
killed = 1
cloned = 5
killed = 19
cloned = 6
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 4, 17, 13, 18, 12, 15, 20, 2, 6, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 9, 7, 19, 16, 8, 5, 14, 3, 11, 1, 22]
====================================
cloned = 21
killed = 10
cloned = 9
killed = 4
cloned = 7
killed = 17
cloned = 19
killed = 13
cloned = 16
killed = 18
cloned = 8
killed = 12
cloned = 5
killed = 15
cloned = 14
killed = 20
cloned = 3
killed = 2
cloned = 11
killed = 6
cloned = 1
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 17, 7, 20, 9, 13, 19, 4, 12, 18, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 1, 8, 16, 15, 6, 5, 14, 0, 21, 3, 22]
====================================
cloned = 10
killed = 11
cloned = 1
killed = 17
cloned = 8
killed = 7
cloned = 16
killed = 20
cloned = 15
killed = 9
cloned = 6
killed = 13
cloned = 5
killed = 19
cloned = 14
killed = 4
cloned = 0
killed = 12
cloned = 21
killed = 18
cloned = 3
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 9, 21, 1, 19, 3, 11, 2, 14, 18, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 0, 12, 10, 5, 17, 13, 6, 16, 8, 20, 22]
====================================
cloned = 15
killed = 4
cloned = 0
killed = 9
cloned = 12
killed = 21
cloned = 10
killed = 1
cloned = 5
killed = 19
cloned = 17
killed = 3
cloned = 13
killed = 11
cloned = 6
killed = 2
cloned = 16
killed = 14
cloned = 8
killed = 18
cloned = 20
killed = 7
Trial run 19/seed 874:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Evolved HMM 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.595000000000006,
  56.16,
  59.464999999999996,
  54.945,
  51.910000000000004,
  54.095000000000006,
  52.904999999999994,
  36.58,
  44.940000000000005,
  27.424999999999997,
  47.965,
  50.61999999999999,
  46.25999999999999,
  52.46,
  56.404999999999994,
  36.839999999999996,
  51.765,
  47.125,
  46.349999999999994,
  43.76500000000001,
  34.98000000000001,
  55.55499999999999,
  53.42],
 [65.7,
  64.255,
  65.75,
  62.870000000000005,
  62.635,
  62.16,
  60.815,
  65.7,
  64.83000000000001,
  65.75,
  62.870000000000005,
  62.515,
  62.160000000000004,
  63.540000000000006,
  58.79999999999999,
  61.985,
  62.58,
  63.540000000000006,
  58.79,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  67.72,
  65.92,
  57.72,
  64.69,
  65.84,
  67.5,
  65.84,
  67.61999999999999,
  65.92,
  57.72,
  65.91999999999999,
  57.72,
  64.14,
  64.905,
  65.84,
  64.13999999999999,
  64.13999999999999,
  67.71500000000002,
  65.91999999999999,
  64.14,
  57.72,
  64.14],
 [65.68,
  64.99999999999999,
  65.83999999999999,
  64.99999999999999,
  65.83999999999999,
  65.68,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.83999999999999,
  65.0,
  65.83999999999999,
  65.83999999999997,
  65.68,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
######################################
~~~ Scores: ~~~
[61.335,
 56.010000000000005,
 59.23,
 54.805,
 52.35,
 54.175000000000004,
 52.974999999999994,
 36.940000000000005,
 45.00000000000001,
 28.290000000000003,
 48.050000000000004,
 50.67999999999999,
 48.425,
 52.41,
 56.46499999999999,
 37.04,
 51.655,
 47.07,
 45.724999999999994,
 41.900000000000006,
 34.955000000000005,
 55.44499999999999,
 53.31999999999999]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 51.655
Upper: 51.655
====================================
lower list size: 11
upper list size: 11
====================================
*** Split into lower and upper lists: ***
lower:           [7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20]
lower threshold: [16]
....................................
upper threshold: [16]
upper:           [0, 1, 2, 3, 4, 5, 6, 13, 14, 21, 22]
====================================
cloned = 0
killed = 7
cloned = 1
killed = 8
cloned = 2
killed = 9
cloned = 3
killed = 10
cloned = 4
killed = 11
cloned = 5
killed = 12
cloned = 6
killed = 15
cloned = 13
killed = 17
cloned = 14
killed = 18
cloned = 21
killed = 19
cloned = 22
killed = 20
######################################
~~~ Scores: ~~~
[65.7,
 64.915,
 65.75,
 62.870000000000005,
 62.309999999999995,
 62.16,
 61.795,
 65.7,
 64.31,
 65.75,
 62.870000000000005,
 62.475,
 62.160000000000004,
 63.540000000000006,
 58.389999999999986,
 61.370000000000005,
 62.58,
 63.540000000000006,
 58.50999999999999,
 62.47,
 62.58,
 62.47,
 62.58]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 62.58
Upper: 62.58
====================================
lower list size: 10
upper list size: 10
====================================
*** Split into lower and upper lists: ***
lower:           [4, 5, 6, 11, 12, 14, 15, 18, 19, 21, 20]
lower threshold: []
....................................
upper threshold: [16, 20, 22]
upper:           [0, 1, 2, 3, 7, 8, 9, 10, 13, 17, 16, 22]
====================================
cloned = 0
killed = 4
cloned = 1
killed = 5
cloned = 2
killed = 6
cloned = 3
killed = 11
cloned = 7
killed = 12
cloned = 8
killed = 14
cloned = 9
killed = 15
cloned = 10
killed = 18
cloned = 13
killed = 19
cloned = 17
killed = 21
cloned = 16
killed = 20
######################################
~~~ Scores: ~~~
[65.84,
 68.91,
 65.91999999999999,
 57.72,
 65.84,
 68.91,
 65.91999999999999,
 65.84,
 68.91,
 65.91999999999999,
 57.72,
 57.72,
 65.84,
 64.14,
 68.91,
 65.91999999999999,
 64.13999999999999,
 64.14,
 57.72,
 64.14,
 64.13999999999999,
 64.14,
 64.14]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.84
Upper: 65.84
====================================
lower list size: 11
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12]
upper:           [1, 2, 5, 6, 8, 9, 14, 15, 0, 7, 4, 12]
====================================
cloned = 1
killed = 3
cloned = 2
killed = 10
cloned = 5
killed = 11
cloned = 6
killed = 13
cloned = 8
killed = 16
cloned = 9
killed = 17
cloned = 14
killed = 18
cloned = 15
killed = 19
cloned = 0
killed = 20
cloned = 7
killed = 21
cloned = 4
killed = 22
######################################
~~~ Scores: ~~~
[65.68,
 65.0,
 65.83999999999999,
 65.0,
 65.68,
 65.0,
 65.83999999999999,
 65.68,
 65.0,
 65.83999999999999,
 65.83999999999997,
 64.99999999999999,
 65.68,
 65.83999999999999,
 65.0,
 65.84,
 65.0,
 65.83999999999999,
 65.0,
 65.84,
 65.68,
 65.68,
 65.68]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 65.68
Upper: 65.68
====================================
lower list size: 8
upper list size: 8
====================================
*** Split into lower and upper lists: ***
lower:           [1, 3, 5, 8, 11, 14, 16, 18, 0, 7, 21]
lower threshold: []
....................................
upper threshold: [0, 4, 7, 12, 20, 21, 22]
upper:           [2, 6, 9, 10, 13, 15, 17, 19, 4, 20, 12, 22]
====================================
cloned = 2
killed = 1
cloned = 6
killed = 3
cloned = 9
killed = 5
cloned = 10
killed = 8
cloned = 13
killed = 11
cloned = 15
killed = 14
cloned = 17
killed = 16
cloned = 19
killed = 18
cloned = 4
killed = 0
cloned = 20
killed = 7
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 10, 3, 4, 16, 9, 8, 13, 18, 12, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 21, 11, 17, 0, 19, 6, 7, 1, 15, 20, 22]
====================================
cloned = 5
killed = 2
cloned = 21
killed = 10
cloned = 11
killed = 3
cloned = 17
killed = 4
cloned = 0
killed = 16
cloned = 19
killed = 9
cloned = 6
killed = 8
cloned = 7
killed = 13
cloned = 1
killed = 18
cloned = 15
killed = 12
cloned = 20
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 21, 19, 10, 6, 9, 3, 1, 15, 17, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 18, 14, 16, 11, 2, 8, 4, 13, 7, 0, 22]
====================================
cloned = 5
killed = 12
cloned = 18
killed = 21
cloned = 14
killed = 19
cloned = 16
killed = 10
cloned = 11
killed = 6
cloned = 2
killed = 9
cloned = 8
killed = 3
cloned = 4
killed = 1
cloned = 13
killed = 15
cloned = 7
killed = 17
cloned = 0
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 6, 18, 19, 0, 14, 12, 10, 1, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 5, 2, 21, 8, 3, 13, 11, 15, 7, 17, 22]
====================================
cloned = 16
killed = 20
cloned = 5
killed = 6
cloned = 2
killed = 18
cloned = 21
killed = 19
cloned = 8
killed = 0
cloned = 3
killed = 14
cloned = 13
killed = 12
cloned = 11
killed = 10
cloned = 15
killed = 1
cloned = 7
killed = 4
cloned = 17
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 16, 1, 3, 11, 8, 21, 5, 0, 13, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 14, 7, 12, 6, 17, 4, 18, 10, 20, 9, 22]
====================================
cloned = 2
killed = 15
cloned = 14
killed = 16
cloned = 7
killed = 1
cloned = 12
killed = 3
cloned = 6
killed = 11
cloned = 17
killed = 8
cloned = 4
killed = 21
cloned = 18
killed = 5
cloned = 10
killed = 0
cloned = 20
killed = 13
cloned = 9
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 5, 3, 0, 20, 15, 7, 6, 18, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 11, 1, 17, 10, 19, 21, 4, 14, 13, 12, 22]
====================================
cloned = 9
killed = 2
cloned = 11
killed = 8
cloned = 1
killed = 5
cloned = 17
killed = 3
cloned = 10
killed = 0
cloned = 19
killed = 20
cloned = 21
killed = 15
cloned = 4
killed = 7
cloned = 14
killed = 6
cloned = 13
killed = 18
cloned = 12
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 17, 10, 6, 19, 7, 2, 14, 5, 4, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 1, 21, 16, 9, 15, 13, 18, 0, 3, 20, 22]
====================================
cloned = 8
killed = 11
cloned = 1
killed = 17
cloned = 21
killed = 10
cloned = 16
killed = 6
cloned = 9
killed = 19
cloned = 15
killed = 7
cloned = 13
killed = 2
cloned = 18
killed = 14
cloned = 0
killed = 5
cloned = 3
killed = 4
cloned = 20
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 9, 12, 0, 5, 3, 15, 10, 8, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 7, 19, 6, 18, 14, 11, 20, 1, 21, 2, 22]
====================================
cloned = 17
killed = 4
cloned = 7
killed = 13
cloned = 19
killed = 9
cloned = 6
killed = 12
cloned = 18
killed = 0
cloned = 14
killed = 5
cloned = 11
killed = 3
cloned = 20
killed = 15
cloned = 1
killed = 10
cloned = 21
killed = 8
cloned = 2
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 4, 18, 2, 17, 5, 16, 6, 19, 1, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 21, 11, 12, 8, 7, 0, 3, 15, 10, 13, 22]
====================================
cloned = 20
killed = 14
cloned = 21
killed = 4
cloned = 11
killed = 18
cloned = 12
killed = 2
cloned = 8
killed = 17
cloned = 7
killed = 5
cloned = 0
killed = 16
cloned = 3
killed = 6
cloned = 15
killed = 19
cloned = 10
killed = 1
cloned = 13
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 1, 20, 17, 7, 14, 15, 13, 0, 2, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 8, 10, 16, 3, 18, 9, 4, 12, 11, 19, 22]
====================================
cloned = 6
killed = 21
cloned = 8
killed = 1
cloned = 10
killed = 20
cloned = 16
killed = 17
cloned = 3
killed = 7
cloned = 18
killed = 14
cloned = 9
killed = 15
cloned = 4
killed = 13
cloned = 12
killed = 0
cloned = 11
killed = 2
cloned = 19
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 8, 1, 12, 13, 11, 5, 17, 6, 4, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 15, 16, 19, 18, 20, 7, 14, 10, 0, 21, 22]
====================================
cloned = 9
killed = 2
cloned = 15
killed = 8
cloned = 16
killed = 1
cloned = 19
killed = 12
cloned = 18
killed = 13
cloned = 20
killed = 11
cloned = 7
killed = 5
cloned = 14
killed = 17
cloned = 10
killed = 6
cloned = 0
killed = 4
cloned = 21
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 20, 3, 18, 12, 19, 15, 4, 11, 13, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 10, 7, 9, 0, 5, 17, 16, 2, 8, 14, 22]
====================================
cloned = 1
killed = 21
cloned = 10
killed = 20
cloned = 7
killed = 3
cloned = 9
killed = 18
cloned = 0
killed = 12
cloned = 5
killed = 19
cloned = 17
killed = 15
cloned = 16
killed = 4
cloned = 2
killed = 11
cloned = 8
killed = 13
cloned = 14
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 13, 20, 16, 5, 9, 7, 18, 8, 3, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 1, 15, 19, 21, 14, 12, 10, 11, 17, 2, 22]
====================================
cloned = 6
killed = 4
cloned = 1
killed = 13
cloned = 15
killed = 20
cloned = 19
killed = 16
cloned = 21
killed = 5
cloned = 14
killed = 9
cloned = 12
killed = 7
cloned = 10
killed = 18
cloned = 11
killed = 8
cloned = 17
killed = 3
cloned = 2
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 12, 11, 6, 1, 9, 3, 0, 16, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 14, 21, 2, 8, 17, 20, 19, 18, 13, 15, 22]
====================================
cloned = 4
killed = 5
cloned = 14
killed = 7
cloned = 21
killed = 12
cloned = 2
killed = 11
cloned = 8
killed = 6
cloned = 17
killed = 1
cloned = 20
killed = 9
cloned = 19
killed = 3
cloned = 18
killed = 0
cloned = 13
killed = 16
cloned = 15
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 19, 1, 4, 0, 20, 21, 3, 11, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 2, 5, 9, 6, 18, 15, 16, 17, 10, 12, 22]
====================================
cloned = 14
killed = 7
cloned = 2
killed = 19
cloned = 5
killed = 1
cloned = 9
killed = 4
cloned = 6
killed = 0
cloned = 18
killed = 20
cloned = 15
killed = 21
cloned = 16
killed = 3
cloned = 17
killed = 11
cloned = 10
killed = 13
cloned = 12
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 3, 8, 1, 11, 5, 21, 20, 12, 4, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 7, 13, 2, 16, 18, 6, 10, 14, 9, 0, 22]
====================================
cloned = 17
killed = 15
cloned = 7
killed = 3
cloned = 13
killed = 8
cloned = 2
killed = 1
cloned = 16
killed = 11
cloned = 18
killed = 5
cloned = 6
killed = 21
cloned = 10
killed = 20
cloned = 14
killed = 12
cloned = 9
killed = 4
cloned = 0
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 7, 17, 15, 3, 9, 0, 16, 5, 6, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 21, 19, 20, 14, 13, 12, 10, 2, 1, 4, 22]
====================================
cloned = 18
killed = 8
cloned = 21
killed = 7
cloned = 19
killed = 17
cloned = 20
killed = 15
cloned = 14
killed = 3
cloned = 13
killed = 9
cloned = 12
killed = 0
cloned = 10
killed = 16
cloned = 2
killed = 5
cloned = 1
killed = 6
cloned = 4
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [6, 3, 1, 21, 10, 9, 14, 12, 2, 4, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 0, 5, 11, 16, 18, 8, 17, 20, 13, 19, 22]
====================================
cloned = 15
killed = 6
cloned = 0
killed = 3
cloned = 5
killed = 1
cloned = 11
killed = 21
cloned = 16
killed = 10
cloned = 18
killed = 9
cloned = 8
killed = 14
cloned = 17
killed = 12
cloned = 20
killed = 2
cloned = 13
killed = 4
cloned = 19
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 0, 7, 15, 6, 12, 14, 11, 18, 21, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 10, 1, 4, 16, 13, 17, 2, 8, 3, 19, 22]
====================================
cloned = 20
killed = 9
cloned = 10
killed = 0
cloned = 1
killed = 7
cloned = 4
killed = 15
cloned = 16
killed = 6
cloned = 13
killed = 12
cloned = 17
killed = 14
cloned = 2
killed = 11
cloned = 8
killed = 18
cloned = 3
killed = 21
cloned = 19
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 3, 21, 12, 14, 7, 4, 16, 10, 1, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 9, 17, 6, 19, 8, 15, 20, 5, 2, 11, 22]
====================================
cloned = 0
killed = 13
cloned = 9
killed = 3
cloned = 17
killed = 21
cloned = 6
killed = 12
cloned = 19
killed = 14
cloned = 8
killed = 7
cloned = 15
killed = 4
cloned = 20
killed = 16
cloned = 5
killed = 10
cloned = 2
killed = 1
cloned = 11
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 13, 16, 15, 5, 0, 18, 12, 4, 7, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 11, 21, 19, 8, 2, 14, 6, 9, 1, 17, 22]
====================================
cloned = 10
killed = 20
cloned = 11
killed = 13
cloned = 21
killed = 16
cloned = 19
killed = 15
cloned = 8
killed = 5
cloned = 2
killed = 0
cloned = 14
killed = 18
cloned = 6
killed = 12
cloned = 9
killed = 4
cloned = 1
killed = 7
cloned = 17
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 15, 5, 2, 18, 14, 7, 1, 10, 9, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 11, 12, 0, 4, 8, 21, 13, 3, 6, 16, 22]
====================================
cloned = 20
killed = 17
cloned = 11
killed = 15
cloned = 12
killed = 5
cloned = 0
killed = 2
cloned = 4
killed = 18
cloned = 8
killed = 14
cloned = 21
killed = 7
cloned = 13
killed = 1
cloned = 3
killed = 10
cloned = 6
killed = 9
cloned = 16
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 5, 16, 9, 11, 3, 0, 12, 4, 2, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 15, 10, 14, 21, 7, 19, 13, 8, 20, 6, 22]
====================================
cloned = 18
killed = 17
cloned = 15
killed = 5
cloned = 10
killed = 16
cloned = 14
killed = 9
cloned = 21
killed = 11
cloned = 7
killed = 3
cloned = 19
killed = 0
cloned = 13
killed = 12
cloned = 8
killed = 4
cloned = 20
killed = 2
cloned = 6
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 12, 8, 9, 10, 11, 21, 2, 20, 5, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 15, 1, 17, 13, 7, 16, 18, 3, 6, 0, 22]
====================================
cloned = 4
killed = 19
cloned = 15
killed = 12
cloned = 1
killed = 8
cloned = 17
killed = 9
cloned = 13
killed = 10
cloned = 7
killed = 11
cloned = 16
killed = 21
cloned = 18
killed = 2
cloned = 3
killed = 20
cloned = 6
killed = 5
cloned = 0
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 3, 12, 6, 18, 4, 0, 13, 7, 14, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 20, 5, 9, 17, 10, 1, 2, 19, 16, 11, 22]
====================================
cloned = 15
killed = 21
cloned = 20
killed = 3
cloned = 5
killed = 12
cloned = 9
killed = 6
cloned = 17
killed = 18
cloned = 10
killed = 4
cloned = 1
killed = 0
cloned = 2
killed = 13
cloned = 19
killed = 7
cloned = 16
killed = 14
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 17, 1, 11, 16, 3, 5, 18, 12, 20, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 9, 13, 8, 15, 21, 10, 4, 6, 0, 2, 22]
====================================
cloned = 14
killed = 19
cloned = 9
killed = 17
cloned = 13
killed = 1
cloned = 8
killed = 11
cloned = 15
killed = 16
cloned = 21
killed = 3
cloned = 10
killed = 5
cloned = 4
killed = 18
cloned = 6
killed = 12
cloned = 0
killed = 20
cloned = 2
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 15, 19, 1, 9, 7, 0, 14, 20, 2, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 18, 21, 8, 3, 4, 11, 12, 6, 10, 13, 22]
====================================
cloned = 16
killed = 5
cloned = 18
killed = 15
cloned = 21
killed = 19
cloned = 8
killed = 1
cloned = 3
killed = 9
cloned = 4
killed = 7
cloned = 11
killed = 0
cloned = 12
killed = 14
cloned = 6
killed = 20
cloned = 10
killed = 2
cloned = 13
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 2, 7, 15, 17, 5, 4, 11, 18, 0, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 1, 20, 8, 21, 10, 9, 14, 6, 13, 22]
====================================
cloned = 3
killed = 12
cloned = 16
killed = 2
cloned = 1
killed = 7
cloned = 20
killed = 15
cloned = 8
killed = 17
cloned = 21
killed = 5
cloned = 10
killed = 4
cloned = 9
killed = 11
cloned = 14
killed = 18
cloned = 6
killed = 0
cloned = 13
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 15, 11, 4, 12, 16, 21, 14, 6, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 5, 18, 7, 3, 1, 0, 2, 8, 17, 19, 22]
====================================
cloned = 10
killed = 20
cloned = 5
killed = 9
cloned = 18
killed = 15
cloned = 7
killed = 11
cloned = 3
killed = 4
cloned = 1
killed = 12
cloned = 0
killed = 16
cloned = 2
killed = 21
cloned = 8
killed = 14
cloned = 17
killed = 6
cloned = 19
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 10, 0, 17, 16, 1, 20, 21, 8, 13, 3]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 12, 15, 5, 4, 11, 9, 6, 2, 19, 18, 22]
====================================
cloned = 14
killed = 7
cloned = 12
killed = 10
cloned = 15
killed = 0
cloned = 5
killed = 17
cloned = 4
killed = 16
cloned = 11
killed = 1
cloned = 9
killed = 20
cloned = 6
killed = 21
cloned = 2
killed = 8
cloned = 19
killed = 13
cloned = 18
killed = 3
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 8, 16, 4, 1, 20, 18, 15, 19, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 2, 17, 10, 14, 12, 21, 3, 6, 7, 5, 22]
====================================
cloned = 0
killed = 13
cloned = 2
killed = 8
cloned = 17
killed = 16
cloned = 10
killed = 4
cloned = 14
killed = 1
cloned = 12
killed = 20
cloned = 21
killed = 18
cloned = 3
killed = 15
cloned = 6
killed = 19
cloned = 7
killed = 9
cloned = 5
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 19, 21, 2, 13, 9, 14, 15, 0, 7, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 1, 6, 16, 17, 8, 10, 18, 12, 11, 4, 22]
====================================
cloned = 5
killed = 3
cloned = 1
killed = 19
cloned = 6
killed = 21
cloned = 16
killed = 2
cloned = 17
killed = 13
cloned = 8
killed = 9
cloned = 10
killed = 14
cloned = 18
killed = 15
cloned = 12
killed = 0
cloned = 11
killed = 7
cloned = 4
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 13, 1, 8, 9, 17, 12, 7, 3, 18, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 14, 15, 21, 10, 2, 11, 6, 19, 5, 4, 22]
====================================
cloned = 16
killed = 20
cloned = 14
killed = 13
cloned = 15
killed = 1
cloned = 21
killed = 8
cloned = 10
killed = 9
cloned = 2
killed = 17
cloned = 11
killed = 12
cloned = 6
killed = 7
cloned = 19
killed = 3
cloned = 5
killed = 18
cloned = 4
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 17, 2, 21, 19, 3, 15, 13, 1, 4, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 9, 6, 18, 8, 10, 12, 0, 16, 7, 14, 22]
====================================
cloned = 5
killed = 20
cloned = 9
killed = 17
cloned = 6
killed = 2
cloned = 18
killed = 21
cloned = 8
killed = 19
cloned = 10
killed = 3
cloned = 12
killed = 15
cloned = 0
killed = 13
cloned = 16
killed = 1
cloned = 7
killed = 4
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 6, 8, 1, 3, 4, 15, 5, 19, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 9, 7, 13, 16, 10, 18, 20, 14, 2, 11, 22]
====================================
cloned = 0
killed = 21
cloned = 9
killed = 17
cloned = 7
killed = 6
cloned = 13
killed = 8
cloned = 16
killed = 1
cloned = 10
killed = 3
cloned = 18
killed = 4
cloned = 20
killed = 15
cloned = 14
killed = 5
cloned = 2
killed = 19
cloned = 11
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 8, 4, 15, 7, 1, 21, 3, 2, 11, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 13, 16, 0, 17, 18, 10, 6, 19, 12, 20, 22]
====================================
cloned = 9
killed = 5
cloned = 13
killed = 8
cloned = 16
killed = 4
cloned = 0
killed = 15
cloned = 17
killed = 7
cloned = 18
killed = 1
cloned = 10
killed = 21
cloned = 6
killed = 3
cloned = 19
killed = 2
cloned = 12
killed = 11
cloned = 20
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 6, 3, 12, 0, 13, 11, 5, 16, 9, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 7, 15, 8, 19, 2, 14, 1, 4, 18, 10, 22]
====================================
cloned = 20
killed = 17
cloned = 7
killed = 6
cloned = 15
killed = 3
cloned = 8
killed = 12
cloned = 19
killed = 0
cloned = 2
killed = 13
cloned = 14
killed = 11
cloned = 1
killed = 5
cloned = 4
killed = 16
cloned = 18
killed = 9
cloned = 10
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 10, 11, 14, 17, 15, 0, 5, 2, 7, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 3, 6, 1, 16, 21, 8, 4, 19, 13, 9, 22]
====================================
cloned = 20
killed = 12
cloned = 3
killed = 10
cloned = 6
killed = 11
cloned = 1
killed = 14
cloned = 16
killed = 17
cloned = 21
killed = 15
cloned = 8
killed = 0
cloned = 4
killed = 5
cloned = 19
killed = 2
cloned = 13
killed = 7
cloned = 9
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 14, 21, 4, 17, 20, 8, 5, 9, 3, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 0, 2, 18, 16, 7, 6, 10, 1, 11, 13, 22]
====================================
cloned = 15
killed = 19
cloned = 0
killed = 14
cloned = 2
killed = 21
cloned = 18
killed = 4
cloned = 16
killed = 17
cloned = 7
killed = 20
cloned = 6
killed = 8
cloned = 10
killed = 5
cloned = 1
killed = 9
cloned = 11
killed = 3
cloned = 13
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 17, 6, 10, 12, 4, 14, 2, 18, 1, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 21, 20, 16, 13, 19, 11, 7, 5, 0, 8, 22]
====================================
cloned = 3
killed = 15
cloned = 21
killed = 17
cloned = 20
killed = 6
cloned = 16
killed = 10
cloned = 13
killed = 12
cloned = 19
killed = 4
cloned = 11
killed = 14
cloned = 7
killed = 2
cloned = 5
killed = 18
cloned = 0
killed = 1
cloned = 8
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 20, 13, 8, 7, 11, 4, 17, 2, 5, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 0, 6, 3, 10, 9, 12, 19, 1, 16, 18, 22]
====================================
cloned = 15
killed = 14
cloned = 0
killed = 20
cloned = 6
killed = 13
cloned = 3
killed = 8
cloned = 10
killed = 7
cloned = 9
killed = 11
cloned = 12
killed = 4
cloned = 19
killed = 17
cloned = 1
killed = 2
cloned = 16
killed = 5
cloned = 18
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 3, 15, 13, 17, 9, 10, 7, 21, 20, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 0, 14, 12, 5, 16, 2, 18, 11, 6, 22]
====================================
cloned = 1
killed = 19
cloned = 4
killed = 3
cloned = 0
killed = 15
cloned = 14
killed = 13
cloned = 12
killed = 17
cloned = 5
killed = 9
cloned = 16
killed = 10
cloned = 2
killed = 7
cloned = 18
killed = 21
cloned = 11
killed = 20
cloned = 6
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 3, 13, 19, 18, 7, 0, 10, 4, 6, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 21, 12, 14, 15, 11, 2, 17, 16, 1, 9, 22]
====================================
cloned = 20
killed = 5
cloned = 21
killed = 3
cloned = 12
killed = 13
cloned = 14
killed = 19
cloned = 15
killed = 18
cloned = 11
killed = 7
cloned = 2
killed = 0
cloned = 17
killed = 10
cloned = 16
killed = 4
cloned = 1
killed = 6
cloned = 9
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 15, 21, 9, 7, 18, 14, 10, 4, 1, 16]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 12, 13, 20, 11, 17, 2, 3, 6, 0, 5, 22]
====================================
cloned = 8
killed = 19
cloned = 12
killed = 15
cloned = 13
killed = 21
cloned = 20
killed = 9
cloned = 11
killed = 7
cloned = 17
killed = 18
cloned = 2
killed = 14
cloned = 3
killed = 10
cloned = 6
killed = 4
cloned = 0
killed = 1
cloned = 5
killed = 16
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 5, 15, 0, 20, 8, 17, 14, 7, 21, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 4, 18, 1, 12, 16, 11, 9, 3, 19, 6, 22]
====================================
cloned = 2
killed = 13
cloned = 4
killed = 5
cloned = 18
killed = 15
cloned = 1
killed = 0
cloned = 12
killed = 20
cloned = 16
killed = 8
cloned = 11
killed = 17
cloned = 9
killed = 14
cloned = 3
killed = 7
cloned = 19
killed = 21
cloned = 6
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 8, 9, 17, 3, 6, 4, 18, 20, 2, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [5, 11, 13, 7, 1, 14, 19, 16, 10, 0, 12, 22]
====================================
cloned = 5
killed = 15
cloned = 11
killed = 8
cloned = 13
killed = 9
cloned = 7
killed = 17
cloned = 1
killed = 3
cloned = 14
killed = 6
cloned = 19
killed = 4
cloned = 16
killed = 18
cloned = 10
killed = 20
cloned = 0
killed = 2
cloned = 12
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 7, 21, 11, 2, 13, 4, 9, 14, 17, 18]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 0, 8, 6, 12, 1, 16, 20, 10, 3, 19, 22]
====================================
cloned = 15
killed = 5
cloned = 0
killed = 7
cloned = 8
killed = 21
cloned = 6
killed = 11
cloned = 12
killed = 2
cloned = 1
killed = 13
cloned = 16
killed = 4
cloned = 20
killed = 9
cloned = 10
killed = 14
cloned = 3
killed = 17
cloned = 19
killed = 18
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 9, 10, 6, 8, 1, 13, 15, 2, 12, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [0, 3, 11, 4, 21, 19, 16, 18, 7, 14, 20, 22]
====================================
cloned = 0
killed = 17
cloned = 3
killed = 9
cloned = 11
killed = 10
cloned = 4
killed = 6
cloned = 21
killed = 8
cloned = 19
killed = 1
cloned = 16
killed = 13
cloned = 18
killed = 15
cloned = 7
killed = 2
cloned = 14
killed = 12
cloned = 20
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 16, 14, 15, 21, 6, 13, 3, 2, 20, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 12, 4, 0, 5, 17, 8, 1, 9, 18, 10, 22]
====================================
cloned = 7
killed = 11
cloned = 12
killed = 16
cloned = 4
killed = 14
cloned = 0
killed = 15
cloned = 5
killed = 21
cloned = 17
killed = 6
cloned = 8
killed = 13
cloned = 1
killed = 3
cloned = 9
killed = 2
cloned = 18
killed = 20
cloned = 10
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 20, 5, 2, 17, 3, 6, 1, 7, 15, 14]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 18, 13, 12, 11, 16, 8, 0, 19, 10, 21, 22]
====================================
cloned = 4
killed = 9
cloned = 18
killed = 20
cloned = 13
killed = 5
cloned = 12
killed = 2
cloned = 11
killed = 17
cloned = 16
killed = 3
cloned = 8
killed = 6
cloned = 0
killed = 1
cloned = 19
killed = 7
cloned = 10
killed = 15
cloned = 21
killed = 14
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 17, 0, 11, 2, 14, 5, 15, 16, 19, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 4, 6, 12, 7, 8, 9, 1, 3, 20, 13, 22]
====================================
cloned = 18
killed = 21
cloned = 4
killed = 17
cloned = 6
killed = 0
cloned = 12
killed = 11
cloned = 7
killed = 2
cloned = 8
killed = 14
cloned = 9
killed = 5
cloned = 1
killed = 15
cloned = 3
killed = 16
cloned = 20
killed = 19
cloned = 13
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [21, 5, 19, 3, 12, 1, 15, 6, 4, 14, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 18, 16, 11, 7, 13, 8, 2, 20, 9, 0, 22]
====================================
cloned = 17
killed = 21
cloned = 18
killed = 5
cloned = 16
killed = 19
cloned = 11
killed = 3
cloned = 7
killed = 12
cloned = 13
killed = 1
cloned = 8
killed = 15
cloned = 2
killed = 6
cloned = 20
killed = 4
cloned = 9
killed = 14
cloned = 0
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 10, 11, 2, 15, 1, 8, 5, 21, 14, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 20, 18, 13, 4, 16, 17, 6, 12, 19, 3, 22]
====================================
cloned = 7
killed = 9
cloned = 20
killed = 10
cloned = 18
killed = 11
cloned = 13
killed = 2
cloned = 4
killed = 15
cloned = 16
killed = 1
cloned = 17
killed = 8
cloned = 6
killed = 5
cloned = 12
killed = 21
cloned = 19
killed = 14
cloned = 3
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 2, 7, 0, 13, 19, 21, 14, 16, 15, 1]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [8, 3, 10, 20, 18, 6, 4, 9, 17, 11, 12, 22]
====================================
cloned = 8
killed = 5
cloned = 3
killed = 2
cloned = 10
killed = 7
cloned = 20
killed = 0
cloned = 18
killed = 13
cloned = 6
killed = 19
cloned = 4
killed = 21
cloned = 9
killed = 14
cloned = 17
killed = 16
cloned = 11
killed = 15
cloned = 12
killed = 1
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 10, 15, 18, 0, 17, 12, 11, 21, 16, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 3, 2, 20, 19, 13, 4, 9, 5, 7, 14, 22]
====================================
cloned = 6
killed = 1
cloned = 3
killed = 10
cloned = 2
killed = 15
cloned = 20
killed = 18
cloned = 19
killed = 0
cloned = 13
killed = 17
cloned = 4
killed = 12
cloned = 9
killed = 11
cloned = 5
killed = 21
cloned = 7
killed = 16
cloned = 14
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 1, 6, 2, 7, 8, 14, 20, 4, 19, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 11, 17, 13, 9, 0, 3, 15, 18, 10, 16, 22]
====================================
cloned = 12
killed = 5
cloned = 11
killed = 1
cloned = 17
killed = 6
cloned = 13
killed = 2
cloned = 9
killed = 7
cloned = 0
killed = 8
cloned = 3
killed = 14
cloned = 15
killed = 20
cloned = 18
killed = 4
cloned = 10
killed = 19
cloned = 16
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 8, 16, 5, 21, 18, 19, 15, 2, 6, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 1, 0, 10, 7, 20, 4, 3, 12, 11, 9, 22]
====================================
cloned = 13
killed = 14
cloned = 1
killed = 8
cloned = 0
killed = 16
cloned = 10
killed = 5
cloned = 7
killed = 21
cloned = 20
killed = 18
cloned = 4
killed = 19
cloned = 3
killed = 15
cloned = 12
killed = 2
cloned = 11
killed = 6
cloned = 9
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 20, 3, 12, 6, 4, 0, 14, 17, 13, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [16, 9, 15, 2, 19, 10, 7, 11, 5, 18, 21, 22]
====================================
cloned = 16
killed = 1
cloned = 9
killed = 20
cloned = 15
killed = 3
cloned = 2
killed = 12
cloned = 19
killed = 6
cloned = 10
killed = 4
cloned = 7
killed = 0
cloned = 11
killed = 14
cloned = 5
killed = 17
cloned = 18
killed = 13
cloned = 21
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 2, 8, 0, 5, 3, 16, 20, 14, 18, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 7, 12, 21, 4, 17, 10, 15, 6, 1, 11, 22]
====================================
cloned = 19
killed = 9
cloned = 7
killed = 2
cloned = 12
killed = 8
cloned = 21
killed = 0
cloned = 4
killed = 5
cloned = 17
killed = 3
cloned = 10
killed = 16
cloned = 15
killed = 20
cloned = 6
killed = 14
cloned = 1
killed = 18
cloned = 11
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 4, 7, 17, 0, 15, 12, 1, 8, 2, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [19, 14, 5, 16, 6, 10, 3, 18, 20, 21, 11, 22]
====================================
cloned = 19
killed = 13
cloned = 14
killed = 4
cloned = 5
killed = 7
cloned = 16
killed = 17
cloned = 6
killed = 0
cloned = 10
killed = 15
cloned = 3
killed = 12
cloned = 18
killed = 1
cloned = 20
killed = 8
cloned = 21
killed = 2
cloned = 11
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 9, 14, 19, 17, 10, 12, 0, 5, 6, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 3, 13, 2, 16, 11, 15, 7, 20, 4, 1, 22]
====================================
cloned = 18
killed = 8
cloned = 3
killed = 9
cloned = 13
killed = 14
cloned = 2
killed = 19
cloned = 16
killed = 17
cloned = 11
killed = 10
cloned = 15
killed = 12
cloned = 7
killed = 0
cloned = 20
killed = 5
cloned = 4
killed = 6
cloned = 1
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 1, 9, 0, 2, 6, 7, 18, 19, 13, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 11, 5, 3, 15, 21, 12, 14, 8, 20, 17, 22]
====================================
cloned = 4
killed = 16
cloned = 11
killed = 1
cloned = 5
killed = 9
cloned = 3
killed = 0
cloned = 15
killed = 2
cloned = 21
killed = 6
cloned = 12
killed = 7
cloned = 14
killed = 18
cloned = 8
killed = 19
cloned = 20
killed = 13
cloned = 17
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 9, 6, 0, 15, 13, 12, 21, 18, 8, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 11, 2, 7, 14, 16, 17, 3, 5, 19, 1, 22]
====================================
cloned = 10
killed = 20
cloned = 11
killed = 9
cloned = 2
killed = 6
cloned = 7
killed = 0
cloned = 14
killed = 15
cloned = 16
killed = 13
cloned = 17
killed = 12
cloned = 3
killed = 21
cloned = 5
killed = 18
cloned = 19
killed = 8
cloned = 1
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 3, 7, 21, 18, 20, 8, 13, 5, 0, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 11, 19, 6, 9, 10, 2, 15, 16, 14, 12, 22]
====================================
cloned = 1
killed = 4
cloned = 11
killed = 3
cloned = 19
killed = 7
cloned = 6
killed = 21
cloned = 9
killed = 18
cloned = 10
killed = 20
cloned = 2
killed = 8
cloned = 15
killed = 13
cloned = 16
killed = 5
cloned = 14
killed = 0
cloned = 12
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 18, 5, 8, 12, 17, 13, 19, 10, 0, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [4, 2, 6, 20, 7, 14, 15, 3, 11, 1, 16, 22]
====================================
cloned = 4
killed = 9
cloned = 2
killed = 18
cloned = 6
killed = 5
cloned = 20
killed = 8
cloned = 7
killed = 12
cloned = 14
killed = 17
cloned = 15
killed = 13
cloned = 3
killed = 19
cloned = 11
killed = 10
cloned = 1
killed = 0
cloned = 16
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 6, 16, 8, 13, 18, 4, 21, 1, 9, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 5, 19, 3, 20, 0, 14, 11, 2, 15, 17, 22]
====================================
cloned = 7
killed = 12
cloned = 5
killed = 6
cloned = 19
killed = 16
cloned = 3
killed = 8
cloned = 20
killed = 13
cloned = 0
killed = 18
cloned = 14
killed = 4
cloned = 11
killed = 21
cloned = 2
killed = 1
cloned = 15
killed = 9
cloned = 17
killed = 10
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 16, 13, 17, 3, 21, 1, 19, 4, 9, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 2, 15, 18, 10, 14, 8, 12, 5, 7, 6, 22]
====================================
cloned = 20
killed = 0
cloned = 2
killed = 16
cloned = 15
killed = 13
cloned = 18
killed = 17
cloned = 10
killed = 3
cloned = 14
killed = 21
cloned = 8
killed = 1
cloned = 12
killed = 19
cloned = 5
killed = 4
cloned = 7
killed = 9
cloned = 6
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 8, 0, 21, 16, 11, 12, 17, 1, 4, 9]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [13, 2, 10, 18, 5, 3, 20, 14, 6, 15, 7, 22]
====================================
cloned = 13
killed = 19
cloned = 2
killed = 8
cloned = 10
killed = 0
cloned = 18
killed = 21
cloned = 5
killed = 16
cloned = 3
killed = 11
cloned = 20
killed = 12
cloned = 14
killed = 17
cloned = 6
killed = 1
cloned = 15
killed = 4
cloned = 7
killed = 9
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 12, 20, 9, 18, 21, 7, 15, 10, 11, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 14, 8, 4, 6, 17, 0, 5, 2, 3, 13, 22]
====================================
cloned = 1
killed = 16
cloned = 14
killed = 12
cloned = 8
killed = 20
cloned = 4
killed = 9
cloned = 6
killed = 18
cloned = 17
killed = 21
cloned = 0
killed = 7
cloned = 5
killed = 15
cloned = 2
killed = 10
cloned = 3
killed = 11
cloned = 13
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 10, 4, 16, 3, 0, 17, 6, 13, 12, 15]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 7, 14, 20, 8, 18, 21, 1, 19, 5, 9, 22]
====================================
cloned = 2
killed = 11
cloned = 7
killed = 10
cloned = 14
killed = 4
cloned = 20
killed = 16
cloned = 8
killed = 3
cloned = 18
killed = 0
cloned = 21
killed = 17
cloned = 1
killed = 6
cloned = 19
killed = 13
cloned = 5
killed = 12
cloned = 9
killed = 15
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 7, 5, 10, 0, 17, 4, 13, 16, 1, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [6, 20, 18, 19, 14, 9, 21, 15, 2, 12, 11, 22]
====================================
cloned = 6
killed = 3
cloned = 20
killed = 7
cloned = 18
killed = 5
cloned = 19
killed = 10
cloned = 14
killed = 0
cloned = 9
killed = 17
cloned = 21
killed = 4
cloned = 15
killed = 13
cloned = 2
killed = 16
cloned = 12
killed = 1
cloned = 11
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 6, 2, 5, 4, 9, 12, 13, 20, 18, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 11, 14, 21, 0, 3, 8, 17, 16, 15, 10, 22]
====================================
cloned = 1
killed = 7
cloned = 11
killed = 6
cloned = 14
killed = 2
cloned = 21
killed = 5
cloned = 0
killed = 4
cloned = 3
killed = 9
cloned = 8
killed = 12
cloned = 17
killed = 13
cloned = 16
killed = 20
cloned = 15
killed = 18
cloned = 10
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 10, 7, 13, 14, 18, 17, 21, 11, 9, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 20, 8, 19, 6, 12, 0, 5, 15, 16, 22]
====================================
cloned = 1
killed = 3
cloned = 4
killed = 10
cloned = 20
killed = 7
cloned = 8
killed = 13
cloned = 19
killed = 14
cloned = 6
killed = 18
cloned = 12
killed = 17
cloned = 0
killed = 21
cloned = 5
killed = 11
cloned = 15
killed = 9
cloned = 16
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [5, 17, 12, 16, 0, 3, 15, 6, 1, 21, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 18, 13, 4, 8, 9, 7, 14, 19, 10, 11, 22]
====================================
cloned = 20
killed = 5
cloned = 18
killed = 17
cloned = 13
killed = 12
cloned = 4
killed = 16
cloned = 8
killed = 0
cloned = 9
killed = 3
cloned = 7
killed = 15
cloned = 14
killed = 6
cloned = 19
killed = 1
cloned = 10
killed = 21
cloned = 11
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [16, 13, 18, 5, 2, 0, 9, 17, 15, 8, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 12, 14, 4, 21, 6, 20, 19, 3, 10, 1, 22]
====================================
cloned = 7
killed = 16
cloned = 12
killed = 13
cloned = 14
killed = 18
cloned = 4
killed = 5
cloned = 21
killed = 2
cloned = 6
killed = 0
cloned = 20
killed = 9
cloned = 19
killed = 17
cloned = 3
killed = 15
cloned = 10
killed = 8
cloned = 1
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 12, 3, 5, 16, 14, 13, 2, 11, 18, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 10, 9, 4, 15, 20, 7, 0, 21, 1, 8, 22]
====================================
cloned = 17
killed = 19
cloned = 10
killed = 12
cloned = 9
killed = 3
cloned = 4
killed = 5
cloned = 15
killed = 16
cloned = 20
killed = 14
cloned = 7
killed = 13
cloned = 0
killed = 2
cloned = 21
killed = 11
cloned = 1
killed = 18
cloned = 8
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [11, 12, 1, 21, 17, 15, 13, 3, 2, 14, 8]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 6, 4, 7, 16, 10, 19, 5, 9, 20, 0, 22]
====================================
cloned = 18
killed = 11
cloned = 6
killed = 12
cloned = 4
killed = 1
cloned = 7
killed = 21
cloned = 16
killed = 17
cloned = 10
killed = 15
cloned = 19
killed = 13
cloned = 5
killed = 3
cloned = 9
killed = 2
cloned = 20
killed = 14
cloned = 0
killed = 8
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [15, 18, 10, 2, 20, 3, 19, 6, 14, 0, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 4, 8, 16, 21, 7, 17, 13, 9, 12, 11, 22]
====================================
cloned = 1
killed = 15
cloned = 4
killed = 18
cloned = 8
killed = 10
cloned = 16
killed = 2
cloned = 21
killed = 20
cloned = 7
killed = 3
cloned = 17
killed = 19
cloned = 13
killed = 6
cloned = 9
killed = 14
cloned = 12
killed = 0
cloned = 11
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [7, 2, 15, 8, 0, 5, 1, 16, 3, 11, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 20, 13, 21, 9, 17, 6, 18, 12, 19, 14, 22]
====================================
cloned = 10
killed = 7
cloned = 20
killed = 2
cloned = 13
killed = 15
cloned = 21
killed = 8
cloned = 9
killed = 0
cloned = 17
killed = 5
cloned = 6
killed = 1
cloned = 18
killed = 16
cloned = 12
killed = 3
cloned = 19
killed = 11
cloned = 14
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 13, 6, 9, 15, 20, 0, 11, 16, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [7, 12, 4, 3, 2, 18, 14, 21, 19, 17, 10, 22]
====================================
cloned = 7
killed = 8
cloned = 12
killed = 1
cloned = 4
killed = 13
cloned = 3
killed = 6
cloned = 2
killed = 9
cloned = 18
killed = 15
cloned = 14
killed = 20
cloned = 21
killed = 0
cloned = 19
killed = 11
cloned = 17
killed = 16
cloned = 10
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 18, 19, 1, 13, 0, 16, 3, 2, 21, 20]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 12, 7, 8, 17, 5, 15, 11, 9, 6, 4, 22]
====================================
cloned = 14
killed = 10
cloned = 12
killed = 18
cloned = 7
killed = 19
cloned = 8
killed = 1
cloned = 17
killed = 13
cloned = 5
killed = 0
cloned = 15
killed = 16
cloned = 11
killed = 3
cloned = 9
killed = 2
cloned = 6
killed = 21
cloned = 4
killed = 20
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 16, 8, 19, 9, 12, 1, 5, 14, 10, 0]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [2, 17, 15, 3, 21, 11, 18, 20, 4, 6, 7, 22]
====================================
cloned = 2
killed = 13
cloned = 17
killed = 16
cloned = 15
killed = 8
cloned = 3
killed = 19
cloned = 21
killed = 9
cloned = 11
killed = 12
cloned = 18
killed = 1
cloned = 20
killed = 5
cloned = 4
killed = 14
cloned = 6
killed = 10
cloned = 7
killed = 0
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 0, 9, 18, 3, 19, 5, 6, 20, 2, 7]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [10, 4, 14, 16, 17, 11, 15, 21, 8, 1, 12, 22]
====================================
cloned = 10
killed = 13
cloned = 4
killed = 0
cloned = 14
killed = 9
cloned = 16
killed = 18
cloned = 17
killed = 3
cloned = 11
killed = 19
cloned = 15
killed = 5
cloned = 21
killed = 6
cloned = 8
killed = 20
cloned = 1
killed = 2
cloned = 12
killed = 7
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [9, 19, 4, 11, 10, 20, 17, 18, 16, 0, 21]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 3, 1, 7, 15, 2, 6, 8, 13, 5, 14, 22]
====================================
cloned = 12
killed = 9
cloned = 3
killed = 19
cloned = 1
killed = 4
cloned = 7
killed = 11
cloned = 15
killed = 10
cloned = 2
killed = 20
cloned = 6
killed = 17
cloned = 8
killed = 18
cloned = 13
killed = 16
cloned = 5
killed = 0
cloned = 14
killed = 21
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [19, 13, 20, 14, 6, 18, 7, 15, 11, 5, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 16, 17, 1, 8, 9, 4, 10, 12, 0, 21, 22]
====================================
cloned = 3
killed = 19
cloned = 16
killed = 13
cloned = 17
killed = 20
cloned = 1
killed = 14
cloned = 8
killed = 6
cloned = 9
killed = 18
cloned = 4
killed = 7
cloned = 10
killed = 15
cloned = 12
killed = 11
cloned = 0
killed = 5
cloned = 21
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [1, 0, 21, 5, 9, 8, 19, 11, 18, 14, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 20, 13, 17, 4, 15, 2, 12, 7, 16, 10, 22]
====================================
cloned = 3
killed = 1
cloned = 20
killed = 0
cloned = 13
killed = 21
cloned = 17
killed = 5
cloned = 4
killed = 9
cloned = 15
killed = 8
cloned = 2
killed = 19
cloned = 12
killed = 11
cloned = 7
killed = 18
cloned = 16
killed = 14
cloned = 10
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 19, 20, 17, 15, 5, 18, 8, 12, 2, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 10, 1, 3, 6, 16, 14, 9, 21, 7, 4, 22]
====================================
cloned = 11
killed = 0
cloned = 10
killed = 19
cloned = 1
killed = 20
cloned = 3
killed = 17
cloned = 6
killed = 15
cloned = 16
killed = 5
cloned = 14
killed = 18
cloned = 9
killed = 8
cloned = 21
killed = 12
cloned = 7
killed = 2
cloned = 4
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 17, 21, 18, 4, 5, 0, 20, 7, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 11, 19, 12, 9, 2, 16, 14, 15, 13, 10, 22]
====================================
cloned = 3
killed = 8
cloned = 11
killed = 1
cloned = 19
killed = 17
cloned = 12
killed = 21
cloned = 9
killed = 18
cloned = 2
killed = 4
cloned = 16
killed = 5
cloned = 14
killed = 0
cloned = 15
killed = 20
cloned = 13
killed = 7
cloned = 10
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [0, 11, 6, 9, 16, 13, 18, 5, 4, 21, 19]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 14, 10, 8, 2, 3, 15, 7, 12, 17, 1, 22]
====================================
cloned = 20
killed = 0
cloned = 14
killed = 11
cloned = 10
killed = 6
cloned = 8
killed = 9
cloned = 2
killed = 16
cloned = 3
killed = 13
cloned = 15
killed = 18
cloned = 7
killed = 5
cloned = 12
killed = 4
cloned = 17
killed = 21
cloned = 1
killed = 19
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [3, 12, 16, 11, 15, 6, 19, 21, 20, 14, 4]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [9, 5, 13, 2, 10, 0, 7, 17, 1, 8, 18, 22]
====================================
cloned = 9
killed = 3
cloned = 5
killed = 12
cloned = 13
killed = 16
cloned = 2
killed = 11
cloned = 10
killed = 15
cloned = 0
killed = 6
cloned = 7
killed = 19
cloned = 17
killed = 21
cloned = 1
killed = 20
cloned = 8
killed = 14
cloned = 18
killed = 4
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 8, 5, 9, 10, 16, 1, 13, 7, 12, 17]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 2, 11, 6, 4, 0, 14, 3, 18, 19, 15, 22]
====================================
cloned = 21
killed = 20
cloned = 2
killed = 8
cloned = 11
killed = 5
cloned = 6
killed = 9
cloned = 4
killed = 10
cloned = 0
killed = 16
cloned = 14
killed = 1
cloned = 3
killed = 13
cloned = 18
killed = 7
cloned = 19
killed = 12
cloned = 15
killed = 17
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [2, 9, 3, 18, 10, 7, 17, 0, 13, 12, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [1, 8, 6, 16, 20, 5, 21, 15, 4, 19, 14, 22]
====================================
cloned = 1
killed = 2
cloned = 8
killed = 9
cloned = 6
killed = 3
cloned = 16
killed = 18
cloned = 20
killed = 10
cloned = 5
killed = 7
cloned = 21
killed = 17
cloned = 15
killed = 0
cloned = 4
killed = 13
cloned = 19
killed = 12
cloned = 14
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [4, 8, 17, 5, 19, 21, 9, 13, 11, 2, 12]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [14, 20, 7, 1, 16, 10, 15, 18, 6, 0, 3, 22]
====================================
cloned = 14
killed = 4
cloned = 20
killed = 8
cloned = 7
killed = 17
cloned = 1
killed = 5
cloned = 16
killed = 19
cloned = 10
killed = 21
cloned = 15
killed = 9
cloned = 18
killed = 13
cloned = 6
killed = 11
cloned = 0
killed = 2
cloned = 3
killed = 12
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 16, 15, 10, 20, 4, 17, 14, 0, 13, 2]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [3, 21, 11, 9, 7, 19, 5, 6, 18, 12, 1, 22]
====================================
cloned = 3
killed = 8
cloned = 21
killed = 16
cloned = 11
killed = 15
cloned = 9
killed = 10
cloned = 7
killed = 20
cloned = 19
killed = 4
cloned = 5
killed = 17
cloned = 6
killed = 14
cloned = 18
killed = 0
cloned = 12
killed = 13
cloned = 1
killed = 2
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [13, 15, 14, 20, 10, 18, 1, 5, 17, 3, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [21, 0, 7, 19, 8, 9, 11, 12, 4, 2, 16, 22]
====================================
cloned = 21
killed = 13
cloned = 0
killed = 15
cloned = 7
killed = 14
cloned = 19
killed = 20
cloned = 8
killed = 10
cloned = 9
killed = 18
cloned = 11
killed = 1
cloned = 12
killed = 5
cloned = 4
killed = 17
cloned = 2
killed = 3
cloned = 16
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [17, 4, 2, 8, 19, 18, 10, 12, 9, 6, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [11, 20, 21, 7, 0, 14, 1, 16, 3, 13, 15, 22]
====================================
cloned = 11
killed = 17
cloned = 20
killed = 4
cloned = 21
killed = 2
cloned = 7
killed = 8
cloned = 0
killed = 19
cloned = 14
killed = 18
cloned = 1
killed = 10
cloned = 16
killed = 12
cloned = 3
killed = 9
cloned = 13
killed = 6
cloned = 15
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [12, 20, 13, 1, 15, 9, 10, 3, 17, 19, 6]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [18, 0, 4, 11, 16, 2, 5, 21, 8, 7, 14, 22]
====================================
cloned = 18
killed = 12
cloned = 0
killed = 20
cloned = 4
killed = 13
cloned = 11
killed = 1
cloned = 16
killed = 15
cloned = 2
killed = 9
cloned = 5
killed = 10
cloned = 21
killed = 3
cloned = 8
killed = 17
cloned = 7
killed = 19
cloned = 14
killed = 6
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [10, 17, 16, 9, 7, 13, 6, 15, 5, 1, 11]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [20, 4, 14, 8, 18, 12, 3, 2, 21, 19, 0, 22]
====================================
cloned = 20
killed = 10
cloned = 4
killed = 17
cloned = 14
killed = 16
cloned = 8
killed = 9
cloned = 18
killed = 7
cloned = 12
killed = 13
cloned = 3
killed = 6
cloned = 2
killed = 15
cloned = 21
killed = 5
cloned = 19
killed = 1
cloned = 0
killed = 11
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [20, 3, 18, 19, 0, 17, 1, 16, 9, 21, 5]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [12, 8, 2, 4, 14, 6, 11, 13, 10, 15, 7, 22]
====================================
cloned = 12
killed = 20
cloned = 8
killed = 3
cloned = 2
killed = 18
cloned = 4
killed = 19
cloned = 14
killed = 0
cloned = 6
killed = 17
cloned = 11
killed = 1
cloned = 13
killed = 16
cloned = 10
killed = 9
cloned = 15
killed = 21
cloned = 7
killed = 5
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [14, 8, 18, 20, 9, 7, 10, 6, 2, 5, 13]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [15, 4, 3, 0, 1, 16, 11, 19, 21, 17, 12, 22]
====================================
cloned = 15
killed = 14
cloned = 4
killed = 8
cloned = 3
killed = 18
cloned = 0
killed = 20
cloned = 1
killed = 9
cloned = 16
killed = 7
cloned = 11
killed = 10
cloned = 19
killed = 6
cloned = 21
killed = 2
cloned = 17
killed = 5
cloned = 12
killed = 13
######################################
~~~ Scores: ~~~
[66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0,
 66.0]
====================================
+++ Thresholds: +++
Percentile: 50%
Lower: 66.0
Upper: 66.0
====================================
lower list size: 0
upper list size: 0
====================================
*** Split into lower and upper lists: ***
lower:           [8, 1, 18, 0, 14, 20, 16, 4, 9, 5, 10]
lower threshold: []
....................................
upper threshold: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
upper:           [17, 19, 21, 2, 13, 12, 15, 3, 6, 11, 7, 22]
====================================
cloned = 17
killed = 8
cloned = 19
killed = 1
cloned = 21
killed = 18
cloned = 2
killed = 0
cloned = 13
killed = 14
cloned = 12
killed = 20
cloned = 15
killed = 16
cloned = 3
killed = 4
cloned = 6
killed = 9
cloned = 11
killed = 5
cloned = 7
killed = 10
Trial run 20/seed 875:
..................................................
winner: {'Tit For Tat', 'Evolved FSM 6'}
==================================================
List of players:
Evolved FSM 6
Second by RichardHufford
Tit For Tat
Evolved FSM 16
Evolved HMM 5
EvolvedLookerUp2_2_2
Michaelos: (D,)
Defector
Cooperator
Random: 0.5
Win-Stay Lose-Shift
Grudger
Prober
Tit For 2 Tats
Evolved ANN 5 Noise 05
Aggravater
Revised Downing
Raider
Prober 3
First by Downing
Fortress3
Evolved ANN 5
DBS: 0.75, 3, 4, 3, 5
==================================================
Results:
[Counter({'Evolved FSM 6': 1,
          'Second by RichardHufford': 1,
          'Tit For Tat': 1,
          'Evolved FSM 16': 1,
          'Evolved HMM 5': 1,
          'EvolvedLookerUp2_2_2': 1,
          'Michaelos: (D,)': 1,
          'Defector': 1,
          'Cooperator': 1,
          'Random: 0.5': 1,
          'Win-Stay Lose-Shift': 1,
          'Grudger': 1,
          'Prober': 1,
          'Tit For 2 Tats': 1,
          'Evolved ANN 5 Noise 05': 1,
          'Aggravater': 1,
          'Revised Downing': 1,
          'Raider': 1,
          'Prober 3': 1,
          'First by Downing': 1,
          'Fortress3': 1,
          'Evolved ANN 5': 1,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Evolved FSM 6': 2,
          'Second by RichardHufford': 2,
          'Tit For Tat': 2,
          'Evolved FSM 16': 2,
          'Evolved HMM 5': 2,
          'EvolvedLookerUp2_2_2': 2,
          'Michaelos: (D,)': 2,
          'Tit For 2 Tats': 2,
          'Evolved ANN 5 Noise 05': 2,
          'Evolved ANN 5': 2,
          'DBS: 0.75, 3, 4, 3, 5': 2,
          'Revised Downing': 1}),
 Counter({'Evolved FSM 6': 4,
          'Second by RichardHufford': 4,
          'Tit For Tat': 4,
          'Evolved FSM 16': 4,
          'Tit For 2 Tats': 4,
          'Revised Downing': 2,
          'DBS: 0.75, 3, 4, 3, 5': 1}),
 Counter({'Second by RichardHufford': 8, 'Tit For Tat': 8, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 21, 'Tit For Tat': 2}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 15, 'Tit For Tat': 8}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 19, 'Tit For Tat': 4}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 17, 'Tit For Tat': 6}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Evolved FSM 6': 13, 'Tit For Tat': 10}),
 Counter({'Tit For Tat': 12, 'Evolved FSM 6': 11}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 14, 'Evolved FSM 6': 9}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 16, 'Evolved FSM 6': 7}),
 Counter({'Tit For Tat': 18, 'Evolved FSM 6': 5}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 20, 'Evolved FSM 6': 3}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1}),
 Counter({'Tit For Tat': 22, 'Evolved FSM 6': 1})]
--------------------------------------------------
Score:
[[61.335,
  56.010000000000005,
  59.23,
  54.805,
  52.35,
  54.175000000000004,
  52.974999999999994,
  36.940000000000005,
  45.00000000000001,
  28.290000000000003,
  48.050000000000004,
  50.67999999999999,
  48.425,
  52.41,
  56.46499999999999,
  37.04,
  51.655,
  47.07,
  45.724999999999994,
  41.900000000000006,
  34.955000000000005,
  55.44499999999999,
  53.31999999999999],
 [65.7,
  64.915,
  65.75,
  62.870000000000005,
  62.309999999999995,
  62.16,
  61.795,
  65.7,
  64.31,
  65.75,
  62.870000000000005,
  62.475,
  62.160000000000004,
  63.540000000000006,
  58.389999999999986,
  61.370000000000005,
  62.58,
  63.540000000000006,
  58.50999999999999,
  62.47,
  62.58,
  62.47,
  62.58],
 [65.84,
  68.91,
  65.91999999999999,
  57.72,
  65.84,
  68.91,
  65.91999999999999,
  65.84,
  68.91,
  65.91999999999999,
  57.72,
  57.72,
  65.84,
  64.14,
  68.91,
  65.91999999999999,
  64.13999999999999,
  64.14,
  57.72,
  64.14,
  64.13999999999999,
  64.14,
  64.14],
 [65.68,
  65.0,
  65.83999999999999,
  65.0,
  65.68,
  65.0,
  65.83999999999999,
  65.68,
  65.0,
  65.83999999999999,
  65.83999999999997,
  64.99999999999999,
  65.68,
  65.83999999999999,
  65.0,
  65.84,
  65.0,
  65.83999999999999,
  65.0,
  65.84,
  65.68,
  65.68,
  65.68],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0],
 [66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0,
  66.0]]
***************************************************
***************************************************
Agent that won the most often: {'Tit For Tat', 'Evolved FSM 6'} (11 times)
List of winners and how many times they won:
[["{'Tit For Tat', 'Evolved FSM 6'}", 11],
 ['Evolved FSM 6', 4],
 ["{'Tit For Tat', 'DBS: 0.75, 3, 4, 3, 5'}", 0],
 ['Tit For Tat', 0],
 ["{'DBS: 0.75, 3, 4, 3, 5', 'Tit For 2 Tats'}", 0]]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
********** End of Experiment *************
>>> Experiment number 123 <<<
------------------------------------------------------------
Experiment parameters:
1. Player Agents: 5
ShortMemDynamicThreshold: 0, False
ShortMemFuzzy
ShortMemProbabilistic: 50
ShortMemProbPreferences: 10, 5
Tit For Tat
2. newFileNameNumber for plot:           123
3. (Number of) turns:                    200
4. Starting seed (firstSeed):            856
5. iterations:                           20
6. splitThresholdPercentile:             50%
7. ConvergeScoreGenLimit:                100
8. displayOutput:                        True
9. createPlot:                           2
10.PlotFileType:                         PNG
11.(use) csv (as output's file format):  False
12.testing (mode):                       False
13.experimentBatchNum(ber):              123
14.(Does) playerKnowsTurnLim(it):        False
------------------------------------------------------------
